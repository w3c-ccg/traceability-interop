{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "66658c9d-3326-48ec-8d37-e259b9537ad0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc44c20a-0086-44c6-be4b-50fbda6f98a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67f38853-5c68-4b68-8940-257e98510ae0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5be8bb5-bc81-4eb2-a025-32f58df10e94"
                }
              }
            ]
          },
          {
            "id": "501512b1-ebaf-4b0d-b31b-17c8aa91973d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eacb4d35-2a48-474c-9155-32daf71c60a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f46c3fb2-7c7a-4359-9145-c48b56fe354b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "49fe92de-4c44-44a3-b3d6-1d9e8d657b32",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f935bc5-d1fd-4305-ae41-9ecea7bfd77b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2a03adf-83d7-43cd-b45f-76fee6dfe902",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0c5540-6f45-4ffa-a514-13dfbadebc9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0528a452-781a-4ce3-9802-314713bab1aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a63ab10d-0953-4169-957d-876fd54cfcbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "678e7d42-1c44-40a6-8831-b7a3066dc071"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d1abc5e-126e-4a16-943e-ed384ff9bdcb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e11029ca-623b-48db-9fb4-bdcb72b18aa6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71515b2f-85d6-4611-9735-b653eac5a5ca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "17b49a43-4991-4ded-b609-578d9686ae0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a518a075-e4a4-40c2-942b-3e78a2b77499",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75cacc39-cc03-46bf-91c4-48f1023e6317"
            }
          }
        ]
      },
      {
        "id": "3ee89086-85da-4c97-a93c-6ccae788a4cb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4fa156e2-7104-4185-9f17-9d33afc7cfb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d12ca40a-ae61-4009-a0a7-100a95bdac4b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ee08a5c-b890-4b9e-bcce-073c8de072f1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0278110-ecc0-48f8-af65-469de18c9728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "353cb30b-405a-451e-936b-e178d1d96556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d162a3d-caf7-4d08-a055-e9ddbb1233d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b6de3c-f50c-458b-897b-1873a432bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b81917-9823-4f48-b513-df49e35d1c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec48c5-ff60-44e6-a2be-07428791ea45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a5bb99-1ef7-4f51-b818-928c5b8e3abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79f61330-b5a8-4b4e-bcaa-5e5c9d2bcad4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d86802a-f9ee-480b-8cf8-0fdccd7c9c19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fa5cbf4-0db4-4706-be88-30d875fb73cc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bfc916-3634-4921-bd6b-2a922a5bd85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22e0f842-9f98-44c1-9e43-dd4b046dbbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6458775-9d78-474f-9a1d-ba73bcae6957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab0c8cd-d02f-4b34-8fa4-9143354be51a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb2efd8d-f78e-4054-b14d-4399a428d013",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c9d1e36-a016-41d1-b2c5-effdf24ef743",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea3aa1e0-0d43-400c-8de1-d8f793d9417f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5174c273-0cb8-4d0f-a9c2-ff31671b8503"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f176418a-8bbb-4c16-85c0-ed63eec0c920",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2b607341-5bca-4c33-888d-fa8a2bc6248f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80e543fb-220f-489b-87bb-11f6c2dfb8af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd643d45-50e7-4581-976f-beddd9c500e4"
            }
          }
        ]
      },
      {
        "id": "79305f03-6ccf-45cb-ad1b-d4cd2f477196",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce916e8f-9c49-48d7-a70d-47c1d707dbc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d8c8a1a-c9c1-446d-9a2c-992a8aa86b03",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c872e7dc-fdcf-4b8a-a055-0dd8e8aca749",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a6d64d-5d89-4d76-93d9-aed35e87518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60c8aa1-decf-4796-acb0-9d799b65d5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842a0ff2-ca75-4304-a76c-4476cce267d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d858b98a-f3c6-4b97-912d-35356b83bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87010dd-31e7-41c4-9d0d-14612fffa80c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf9d88f-a7d7-4691-85ea-39839c752e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df227ec-4786-407d-b107-bca7622fd744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ae95a3-0835-4ea5-8196-b8c9d3440dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9b0c9e-b8a2-4511-ad96-c2c65eb3700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce30f73b-c550-480a-943b-91dd7e57133d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2eef08-f0b9-4319-a49e-2bcbc12a6625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4fa086-90e0-4d89-aad8-49d39163a55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc990a-2733-4bba-b3f1-d2a30cd7d3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55b35e88-72f1-4cc5-93ab-d3a00083c19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b71da2f-9a90-43eb-9264-b8e981a8e1b1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0398ef20-075b-41bc-8a1a-c9a9193e1c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cb56c2-9c86-4b90-a7cf-0896b05bc0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576c6c10-2ffa-48d5-b347-3a0252635abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e57f092-3d18-49ed-971c-9c6551e92ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d695a51-a706-461e-a179-8eae8cb3e22d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9ae728-b2df-461d-9ab6-2e552ccc1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba245e0-8eb8-48a6-b5a5-d9ad2b03d586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc5471c-5cf7-451a-a549-641441383dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54fc2214-f741-44d2-a478-64ddc2bc5c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5999a2d-ba19-418b-b674-60cc2f502417",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa27a9-13c5-4e51-86c7-15ca7b5fde99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c778e60-5194-4e6f-8393-12742b39eb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99885281-9514-4811-9dc4-ec2ec6346917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b1a92b-968d-41d6-82cf-085d75e2393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bead99ec-d262-4ab8-8c04-d991c1dece05",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a6c307-14a9-4a4d-bf34-58eb218966a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746f2191-9dab-430e-9f82-ee3720cc96f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08e5d67-5bdf-4fdc-9010-1c8d9e1391ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fda3e9bb-ab55-405e-8802-13b7904232b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38060265-54e5-4da5-b931-22a4a7314154",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847a07f-7120-44f3-a55e-e3258cd8eaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1d6973-8bfd-4622-9fee-8259215c2293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dcb977-d706-4e97-b48d-8c4169515a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2cdd6f2-402d-481d-a082-f6b7d6334af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7980ae4-0dcc-480d-a51d-a5a284a00456",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe4f06e-565d-40c6-bbf2-748ff351f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8222a6b8-c0e2-46a4-961d-31c66db4e9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bd4f3e-122d-4d59-b8fd-99617829b6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2afc82bd-04d7-452f-9996-2958648862e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609e2fc8-2897-4e22-a509-26a65492dd1a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890611b9-ba7a-4529-b5cd-e3b85fce219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9bd25b-e654-47f6-82a7-27969171eda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a94fdc-59ec-490a-97a5-2870733f96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a74ec3ea-6e4c-47f9-8f9c-b74da53d4489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339826e4-2c33-46f4-a534-1d8cc90107a4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689e7232-e394-4a32-bf74-265c39419bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a48302-062c-4605-ae81-398cfb766d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc37bd9e-81d6-4013-953f-a2e43b7b5626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23b40fd7-efeb-4cc5-af59-6682984d2246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38090fcc-c86f-4496-a336-2c2b6f80ef07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c905b1-e2a3-4701-888b-ad5d33dc76fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c236698-c7f7-44ce-a0eb-4b459f728aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecbc391-e298-4598-84a8-cdbd604f4b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce73aa23-8516-41ed-b628-985e0f050712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825f5cb3-b6f4-47a5-be95-0ae34c9821ae",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026e0cfe-8d17-48f6-bb0c-fa0c382728bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4262703-f93b-4cab-8c0f-06fd8db8cffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da953f47-c7dd-4f38-8ced-0824a89dda9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65d8c5dd-d92c-4d80-9b8d-83a62e1494ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c9e872-812b-4539-aeed-ce6e0a7bf1b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a33958-86dd-4d8d-a2c1-13f756925633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09451346-f72b-4a7e-b717-40248e89c8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38435374-c387-4f04-9941-03cf94c9301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072ab66d-994c-4a96-9109-d22cd20de6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d958b-2360-4687-b8f7-fe0109801ea5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7158712a-16e7-4391-8e71-9566e543888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9133e5-82c8-455b-a6e8-a01084548777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84ba07a-0ab7-49f3-992d-038a3173f46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b26fe62e-9b2b-4425-a6e0-e26dc30ea76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ac15e-fb86-4cf2-88c7-de6b0c85a071",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dee6433-8953-4269-96cc-daa71038c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fac8e37-3fe8-44ee-a94f-be414b1dfa94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9c122-41b2-49e9-8d8a-65425c82d27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad75dbb6-1ef4-48df-9bba-168ea62c8836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e94b2-cd0b-4a2b-88f9-27c60e8dad2f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8aa71-60a2-4af8-9709-8f2290516840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc336fa-2b4d-4f32-813d-32b9cd620719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ad63eb-43be-4550-9770-002fc4319650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7a7edb-a851-4ea7-ab36-38120f3cc8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e560ac08-cff8-4cfe-873f-f17c02d172da",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc5f6c0-ddcd-4457-9ca6-fa1cc8b0d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deebd055-0701-4c5e-9e2b-0a86dedfa394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4b1b5d-84ff-4622-b169-d0609bba8eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf7a5c1-37b5-4193-85d9-2ea9da5c1ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c97d4f-a0ef-4cb2-86e9-5775411cd843",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd35e502-d4f2-4fa8-93ac-220ee79eb6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850820bf-a330-47cb-ac84-167fbdf5a4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e24069-9cdf-4228-8980-ea15240af7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb001936-0ffe-4900-b9d6-e5e33918584b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c952625a-249b-4a9a-b986-81d77f29bc90",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddda51f-006f-47c3-b530-9694caf42952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231d1a4c-f4ed-44d8-9086-9ede5fe09a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f067395-8ce2-4b17-b606-e3764f6bbb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7a236a-7fda-45ee-9886-5b39262e0c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62420469-cd45-4d1c-8d4d-4fe01b5f3193",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867caf54-442e-48db-894a-1988f5a04516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8935bb88-fb05-4b68-ac98-7ec9c6e70fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee5273-d415-4375-be04-3dd83d38d227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca5b384-2310-4141-8ca8-c53b70d96034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d5115-d1ab-4156-8704-0635b5f6357f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb19e44-2387-47b6-9ed0-0c038afe3980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aec19ec-0bf2-495c-a1c0-f3eb42e2c15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a075c1a-a7b8-4ae5-9e71-7e136ddce7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32d7e990-561c-47bd-b887-27ede57ee8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8a52e4-9a65-40fb-b336-90a0e0caf388",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76d2a24-5c12-470b-8276-d47706886f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d610048-55ce-4b3a-952b-0c28d00364cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0729b240-b763-42d2-bd73-711e89e11a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77ae6de3-269d-422f-82f5-d1b138d243ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213f973a-5d04-402e-8acf-499f3608a21e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfedeb6-667b-4d29-8285-f9a437f2a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaa164e-e974-4d3a-9504-1f62fa3b9eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f90ef07-fb46-4d42-b6a3-0b3a96701538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "793ff3d7-0a9c-48aa-93c7-65575a04ce70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01235aa9-a158-4753-86b9-e413b4585372",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0308cd-9414-4088-b8c8-1039527ceeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9498fc-78e1-4366-a51d-a905cadfdcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d789320-d008-4c20-988e-938ba2895127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de893d94-5d7b-4854-b756-4160c3c23e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639617c-0694-4def-885f-4f59d3a60de9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa70f44-2661-4d3f-a0d7-bba83bdace5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22ba6c4-6fcd-4a19-86a3-6470fa82c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e387043e-6ed6-468e-9a95-eaa02a977b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9204a3-afc2-4291-90a9-36c18e8379a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877291e9-349c-4d78-a7e0-9a7d4253f66a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab17aeb3-e83e-4c4e-b8ac-b4f460dc5469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8ebdce-ae2e-4b2e-a60e-71f3fe73fee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78bb6c5-648d-4fef-90d5-6509ab7ffb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ea3510-d48e-4ba9-b424-c43d74413eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b025ee7-74a9-469c-a706-a2d3403a3158",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081f84f9-f31e-4113-a324-9c3203848c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9b4325-3d17-4f52-94a0-9d41b3436df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff95c7e3-ff51-496a-a5e9-9b809e6a0f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2f7d64-3084-4476-aa42-50e19315d924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b49c87-5c5a-4da7-a826-6eac1594a786",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e43fc15-4fcf-4c96-9391-21b7b96c9d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab341a7-bb5a-4f72-920d-aea0c6099862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c0246b-2281-4ac2-aa3b-3e0c98d23fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6f2395-26f4-416a-89df-839b79620f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c75ec0d-f2d6-4974-b4d6-d9ba89fbdca1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cb108b-6eb8-416c-8ade-3288893cb1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72814f2a-7e9b-47d7-9a88-5de7bd5daa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ada956-ea8f-4782-9868-1490c9e7b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b2e31a-c03a-41da-8e50-1aad60a34b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefbff50-fe29-4bfc-aa95-4d1a04771fa6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbaa051-a252-4d85-8b48-e35f349875c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ffd7e-4596-477e-8e77-fbdfb7138be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eddc32-35d1-4c6c-9897-b6ab183ca588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce78e39-3104-40bf-b262-59c581f6639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb846c1-1e84-4b8d-b2de-01e9091b271b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf12b9b3-2b16-41d2-8c3b-20923dbe061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0c036e-166c-4aaf-b8a5-a627914d7d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529991f6-7584-4ea1-a053-0f6059a64a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0989b63c-2ea4-444c-8fee-06faf8111923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b269a3ec-e8d9-4f03-a769-4f9e9d7b537d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8417aa-5b26-40f3-bf4b-fc4e57c55232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a668ab-bfe5-466d-9d91-7a307560675c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7718a864-25f8-47ca-b1c6-2d900874090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e6dee3-0de5-43ad-9ca9-08a97257d33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baae0892-a956-4df8-a8e0-a5ba6f327258",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f96ba-b4f7-4784-b62a-e8c08d51c011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df058ad2-13e0-483a-bab4-079e87011ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a3a08-3ce2-464a-9208-daf04b8ab5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d06b83-a78d-4870-b40e-b0ff773c9d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419799bd-7ea8-4e38-800b-447f937aa1ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0024368-0c64-4472-a275-1ed2b61e561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3acb03-c61b-418b-b8b8-82cc26aa466f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6a8d4-9cb0-4b07-8b6b-5558c15d829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f14f531a-59f5-4a6b-989a-1d7203202af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee1b31-256f-4815-86d0-1f43ba6f8bb6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c369fc-df70-4163-8ca9-6e3adf1582dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e6a2b18-1847-40f8-8aad-310b4d10ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3d9dc-99dd-49c8-8514-41253fbe9239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b33c236-86b4-42f7-b57a-f92baaa9a16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58d241a-7a28-4445-8702-d80a60b24f8e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f93b8-361c-4aa3-82fa-ff9278fbf3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a16ca9-d263-41b5-a39d-43622abbeb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06399bf-5200-4102-83a5-2144aa90000f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "923bfc58-61e9-4e6b-9f82-703d5d39b414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af684b-5764-4ecf-9bba-20ec8324bd0e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c1ebc-2020-4a67-8f0e-8e4e99563485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda8bd16-6763-4097-9447-209f28ec2ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105435b0-732b-49cb-8c4f-4027c152abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d735fa8a-ab76-4950-b347-e3b3c7e2d89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def6071c-2afd-45e5-b469-664e86d69de4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd4f54-d67c-4b9f-a8da-38805b68c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eb606c-ddd4-4337-940f-1f9a6df46d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfaf563-0efa-4e41-9893-4248156878d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e55618-634d-43bd-ad51-8d051b86a585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1e9c7-7acb-47d3-886c-9ef5be1b031e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e240c8-6c15-425d-9f1d-f7f9ecbe1ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243290f9-ddef-441d-8a9e-35b199611492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab73190-3408-4c32-ab04-f4990d80a3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9941a879-618a-43de-86dd-ae5af422d242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7731ac57-37e9-4ab4-b2b6-c5a65ab82570",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c542f5-8651-49aa-9469-75d971d5c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14334595-ef6b-41e3-874b-a4fdde2b01ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9f1809-be54-437d-8cca-357bea5f4396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83bf5b7-39d7-4dec-b0cf-c15161ceb481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda24330-5183-4684-99d3-cdb81a71427e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f1e45-d92c-4837-8d0c-18b7a3d60b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a14931-24fc-49f3-8ed2-756038d490bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58371953-f812-45e8-b8fd-e50802e8e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad34dd9-5fd0-4968-a5a6-12fec2450f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884ce2c-9b06-40af-8f81-c6d1d3b45a1e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099fef0e-f53f-4ca5-a75a-62721efad2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893222b5-23f0-4b92-9a0e-e594f3f6f04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeba387-9398-4803-b5c9-87995e220a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37708eaf-914a-486a-ba39-211140863247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc80df1-684c-48de-b3b9-822c3d37a0bd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abfb473-5fe1-48e0-85fc-4db5b12f819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768d3bf7-fc82-4210-b31a-f03a4eac7f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf607ca3-60a5-437f-b8a4-c968b83c3b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b105ec2-2174-461f-9703-52293a3a22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87176689-cb00-4413-bd89-4ef3af9540e1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd87817d-b966-4d56-bc43-067709c31f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5eb571-490f-46a0-bee6-e578f4f842fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af348a0-c6d0-487d-bcd5-b06e4a4b3df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5b5b64-f7a1-4a09-8fc8-e313e423598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b97733e-99c1-4e28-a0b9-1d3f9577176f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9377aa7-cbda-4176-b14d-3fc0ec11ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fa9466-4f56-4a3c-b818-68b632264fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f900745-2cd1-4896-8afc-aba1918ba921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7175642-3fca-4d94-9d16-c348628456f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc025b3-95d8-4e6f-b5a8-4e5d3feeb380",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23422068-874a-4199-95d9-7372b1da824e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf35d7-835c-4503-a9ec-7ab04719f62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66890d31-1af5-4de3-927e-7432a33b67be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee05ad74-4fe5-4c18-8163-72e5facded94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d74b69-ab47-4ddd-93b3-6285e40d2510",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0810f7a-af80-45c8-a69b-cc9210ffbb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5a5341-299d-41e4-9c0f-1fb4f77ed265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5a6eed-947c-431d-aaa1-8a6e8f31e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "115bf5ae-709a-4f33-9d96-b4fb264eebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31796a03-a0ec-46e9-86e3-2d9204c44461",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054da41b-9919-46cb-a63c-a1e00cb36d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ddf87-2397-4f1a-bd23-8222359f8b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a009ef-e2e6-43a4-9774-437058da468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfdaf84-e974-4466-bd19-f44c9646ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ab5577-4a1d-4e93-b352-613a81a6e82b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ded495-8aff-4d81-9c5b-4ff2c92d867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a2fb00-99ec-4f5d-8b2a-d7d0684da4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d7453b-a3f5-4a7e-8d1b-c483e1025296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17abe62d-d567-46f0-bfc5-00bcce1325ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f18afe-a762-4b55-a757-96cb0940e115",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2124a37-5d0d-447f-84b0-c98fe1946dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9acd04e-020f-4c06-9117-5244963f06ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3769cb76-9ee9-4435-a46b-edb1658b19e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de7319c-4395-42f1-8a60-7ad053e1bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc2bd82-8b72-42a1-aed9-aa989bbea750",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273bf32a-2caf-41db-ba15-31f36e58430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2851a0-8773-4e1e-a63d-cb4f00688701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87327267-5499-4edc-818d-a29d38ff83d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a606cf0d-ea79-4b37-b480-be85f4d18163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c9798c-c23e-42c7-ae36-d306cdeaf69c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08315d-d733-4dc2-88b3-ac389ba0ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb489ceb-7216-4a10-a836-e2262cdaa9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd38a45-1105-4364-ae2f-ca4515fe6dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0819284e-b976-4f0a-9047-96e26128e1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba363d9f-c92f-4b5d-a02e-f30f7c40dcef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9b9a7-1c60-4ab3-b61d-7aaf5d7d2467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a3c7a3-81e7-4dd4-afe6-a7755e7939de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9273244c-27d3-44ef-a3a3-6800b5420f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb073a34-aa06-4367-a62e-7bcfe02f8453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d08c7c-be1e-47cc-97c2-329cdaa1ba9d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f38073-c7a2-4745-81ab-ebb22a9b2cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a794796c-0f2a-42f4-b870-2671236932de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade18287-0ec3-42f8-afae-7a5f7a37a591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20ba337-b399-486f-a4c9-a39448d553d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135165a-d6b7-4207-b322-d32a19f26558",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f021de50-f64e-485a-8ebd-30d1b83e2050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c845a00e-2a85-4950-8b47-7f59cb30eaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4682b46c-03e1-4df2-b3c2-fa251aef5336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c226d550-2383-471e-ae95-33ca7500104e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0d3659-6064-4669-b9fe-20556eff7e60",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38303547-3ed2-4453-9266-d2bde411bd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f570d0af-6019-4105-90b8-3bdd994139bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9788c4f4-a686-41e1-8ecb-de1bc1264b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41f97803-564d-43ad-83ce-d7545c5c2522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb0c84f-365f-4643-bf34-3698ad05c4ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae1f0a-23b1-4f42-ba48-8006809338e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e811c5-1010-45ac-9307-865cbc1a39b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae18d5bf-bd73-4002-a728-770d04a9fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb26143-8a70-41c3-b167-8936dea9ee10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b90366c-c899-4b65-8a86-0a52d469afa5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9564ade8-a9db-46fa-bc4d-17cace29e08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bc4950-432a-4051-9822-a2307215d0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e008f46f-7074-4e65-b5bb-7e646eaf7210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c642f37c-700f-43a1-ac6f-309abc6bcc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1f9a33-3b14-4862-be54-f4609f7e4add",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71bba27-b9b7-4e86-9937-895a809e98f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe9a8ac-c79b-4486-963d-8886035d18bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5019f49a-8ba0-42a5-be55-f97dc8b197ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17653eaa-4df7-44df-bcba-c3912fc1a535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b83fe1b-c862-4dad-b80b-a5c764c7f1e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dda23d-32ec-4cb8-a5a3-da3c0e95af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fb7e59-760f-444d-9542-b85c0a834600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73545d1d-1aef-40e4-88ea-d39eba7fc530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "359c7773-4e41-4e64-9fac-9a1fd37c5ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07517596-3b96-4ed9-8891-06cae6b84a31",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fd9111-9a8f-4501-a7f7-dad8801c81f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33cecf2-011d-4008-9b19-32dd1257fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2644b6-8dca-494c-92d1-d42d7b85a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "273df669-03ed-4b1a-95ae-721ede73ef49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955d85c9-6ffb-4c14-9026-0839443c0526",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814407b1-c67b-4764-8aae-820589cd2247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e78f03-63f5-48c4-b002-317a0851411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f97e550-a627-4531-b2ae-d05bc2c7b616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df70d417-6725-48c4-9c8b-f377cd7c52ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5302e9-51f7-4254-a45d-b2eda47337ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c4678-3b7e-4974-9865-56a89e22b007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec55cef-2f79-48c0-9c35-2a84626bb6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3f414-de1c-4c95-9879-b86588827b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "175593df-d909-4221-a44e-43c8c252042f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6d9f6e-0694-4377-8e7a-d25e1742594a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562c24a8-71e4-4bba-ade3-6a5e8d503bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91f6747-517d-4f43-a0ef-18e74e9ebc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022f520f-a37d-4179-bff2-8e3162e291d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8232e6fd-3f97-43a6-8c45-72c71d4e4b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6a023b-86e3-4588-b340-0dada090271e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b325c8-088e-4077-b2f5-337c130b8372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b68f8fc-01d3-4b1a-ba61-a7c473c502e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b1604c-4b85-41f1-9e52-a162c4038a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "087f57e5-c5a8-46f5-9cb6-4f5abbc2fd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965745c0-5b81-4815-a2fe-abd4fde40b12",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7349e3-aa5b-41d6-9705-a684ae9499cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db88b712-844f-4b2d-8f0b-8e5c696a0195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5774380-b960-427e-b526-c9d3dc00f02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccc6eb6-9b8b-431f-8261-f76a9e56746f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9153d48-e724-42ef-af17-d1ef1d18750b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9660597f-3432-47c1-b51f-525d8128eb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0c63b8-879f-42eb-9f00-a6af12ec6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc6ead4-3345-41dc-b002-0600329275de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bef3668-9116-4fb8-b5a8-efe620a6448c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f7fadf-4cfb-42f0-a2de-ff680d4cda57",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310712e-e4b9-4c4e-97d8-10f433411a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf932b0b-bd13-4e17-b072-d4bf08eacd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e210fa0-0b4f-4812-9b6e-d78ffca79421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e44c1e5-a490-4454-a7d6-3e4cc30c790a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bc8925-0dcb-4f89-bc6e-486f99d94671",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e006eb76-c77c-45aa-ba94-6b06f5673334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28040975-4ebc-48ec-b09e-a52f027902ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eda791-9bed-4341-af6c-1c971b960c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "342f1c81-d463-4a41-b7ee-408209002a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137471e-f834-4c22-956e-bfcea28d58d7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e6c06-8d67-4dec-a15d-d20b864691c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d35106-707a-45c4-bb4c-017ebd75a80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f2dd14-509f-4cf9-b1ea-693c58b3b240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec7423a-8708-4db6-abe3-225eba70f6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ea614b-95b9-411b-8756-64a81ad5f6ea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef29414-10e6-49a6-a00c-3b99cbc72d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1185be7-b0cd-4d52-a6ed-73dd87097a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09e2e62-a4bb-451c-aeed-dcded00501c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c86f04-dd2d-444e-a5ec-37ab4e1313e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367ff1b0-70a7-49f7-b134-8fd61c871657",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce083f8-fe79-4fbb-a679-1c5a8c32e1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb8a964-fda6-4034-9d50-1dec49eb6fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef3d97c-ea49-4fac-b37f-4d6639f04106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5acf82bf-2354-4c41-afea-955ce0535590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c936c73-219d-4624-a08f-253edf6f840a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1921f00-0010-4a6e-b0b8-02266e631638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439709a2-5831-4082-868f-db2c8cb5c5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95c3cb6-dd7c-49f8-8120-17f4eac484a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f40d03d-fb97-4c4a-a123-da9f582d787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0334ed1-eaed-426e-80e8-8450121602ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb51242-05ea-496c-a1c5-a0f58b958683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f436d-5ef9-4b4a-8071-48d36a421844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa28d0b-b7c0-4bf8-a80a-01239c1cc7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e409344a-4702-413e-8f89-71e9fd567171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541e4937-0dbb-4f4b-b041-29bcb79d0bf5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b934fbe3-70b9-4f3b-b610-3518261dd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62cabe1-b666-458b-a578-3c67b258d73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1d2456-fefc-4f2d-8efb-0ed9713079a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e70a13d3-1140-4833-bcb0-9b1121119601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f571fc-22db-4f33-8fd1-c173bfbfe5b1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52c559b-7956-41be-89ad-29cefaf1c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5995d12f-172a-46ef-8933-5ef524b24b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d4e8b2-edc1-4812-84a2-3c48d558e8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a6bf3c-5d0b-4f6a-9e5a-4e6f042ba36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44b5789-909a-4c08-9d46-a6e0da1cde1c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31873e72-d30f-46af-a2bb-e18b59d239e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d4cc0f-e140-4f8b-b91e-d2b85250f770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e02cc43-0c34-47b6-95b9-cd1915f05a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10783606-4634-4b52-9f30-004eb815b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166fe4a0-187f-418d-bec7-fcfb559b7409",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9381caa7-3025-4206-aaa8-073185a7f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0ee98a-9b30-4659-8ef4-b357df2735b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74365399-9c99-4b7e-ae19-2d6bbc1ff553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5524155-cb17-47b0-8639-771217caab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79730fff-3539-43c2-8ac2-273e0441635c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498daf5d-d45f-4cb6-a827-12f7b1a193be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32858510-9f28-48f3-8b33-213617d4c085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd89ed52-13db-41da-84ac-3f0b3a6c8ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58e40c5c-910b-4fa9-a19b-3d4bdea43dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220db6c4-71eb-4f6f-bac3-38c5aa9e4f42",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8b6f8f-e517-4caa-9481-85f56d1fa156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de67a82-08e7-4d21-8fbd-5a69c2c09aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5a0e90-a6f6-4c5f-94d7-33bcb4ea3099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb51f047-9443-4cd3-bb89-2f86132650c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b614dc-a2ff-482b-b940-7fe811be8c64",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd9803-2017-4cec-8679-9d3fa8a1dcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b13882-0ca0-4229-87dd-acd3761fbf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799da4c5-fc09-4a1a-9c6b-59412b51566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6bff8d-7861-406b-bdd5-0a81e466d848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc381238-3875-4bc0-a21f-93bb7f162062",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c047bf35-421a-44cc-9b18-cafd7642b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdbd81a-f49d-44d6-96ec-ff588bc73fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50a8464-0277-4e3f-8cd1-fe401011a84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb43ad2-a65b-4130-95b9-4d105b5159dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3f2a7-ead8-4401-8ec9-3a47a88acb5b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6302ef-6a61-4cc2-baf5-6b438044c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c600bb66-9641-4d60-bd27-7c3d69df7ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2bf0ef-8c36-452c-960b-66f86b9d8be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d99626-a26c-4141-bd39-cdfb034e086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96db13ac-5513-40be-a93e-647e052b73dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e4755d-fc5a-46e6-918a-9cf1421c22db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed19e9e8-df06-4b78-b2b6-111f40074c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff539355-7e1b-4738-874c-8e9aa3bfa519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb623b45-497c-45b9-b9ba-683f211a686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782272b-2da0-4c50-af73-88852dc470ed",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03250b-40bf-449f-8774-ea08794b3042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfea32b-a3e3-42af-a7d3-6186fe70fc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40dfe76-326a-4419-a28f-53c3bf41ab5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "550ffa09-e3d3-4cd6-8e8c-d207a00a9ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a261b71-5d16-45e9-868f-42398b586cd9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb0e23f-a8b7-42ed-a9a9-b5a0e38a3cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0353ff4a-37c5-47f8-8635-8d4e646a9a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2550379-0a24-4dab-9e9e-da9e8cc0bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ecb668-4062-40fd-9342-f13ca69d10d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a391dbb-2b7b-4dd7-94fe-01313e4f3c9b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7920d0-80fb-4db3-9ade-509e14ae08b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63c8090-9585-4e56-8354-19007916ae2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afb2310-9f1f-4209-89f8-f04e770721b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97824fe5-2f49-4455-998b-14dd11ee87e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8fead4-63ab-4303-8b37-2c4e103f1e7b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fb5b92-24c2-4937-b62c-f6de5f26ea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68af94d8-e5b8-403c-a9c5-8604da7cf436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cb0589-0076-40ef-a386-8e6b6e341de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b25df46b-6e6a-4fb2-8d77-dd89d44dd2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86a375c-4af4-477c-a349-41d7e3e08744",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb54882-7de1-4f5f-864a-1d40e1d9783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7685170-0734-46ea-a88f-e1936696f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1da52e3-5beb-4440-9144-797e61eee6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd032ae-9fb6-473a-872b-2013b899dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88575ae9-b9c1-4ec7-8ad6-44a5740daa18",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001b9482-748c-4f86-954c-ffb2c4592eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfcb793-9008-4ae6-9531-7c635de24df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c607ea-4709-4fd8-94bc-05c92e61ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1baa849e-1dc8-486f-893c-3de7a7606f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a0bb9-acd8-486d-873d-cd8f6dc03c0b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d1039a-d1c4-4b27-bb29-d9a478bbb0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb863b9e-6fac-4564-8cf8-286fe70206f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb9a9a0-cf05-4758-ae6c-86edf1024900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb3f400-a9a4-4bb4-93c4-6409acfa6093"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "feac3f53-2327-47e8-942d-048dd40fdd24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ea9021b-78e6-4d64-a920-f2b02c427bc2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8158c604-ee94-4e93-b0b3-eac5bc22806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8431426-f069-4404-9f17-395168062a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d6543e-632d-47da-8594-e4bb3a933779",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a039f9-da99-47de-8e49-d35f35449f1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "845d15dc-cdef-4c37-a4a8-d94a1f8495a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88eda7a8-3d88-4460-843c-1e4a749c43f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "995b910a-7ad5-40b5-bb7e-56567a04861c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f580da90-5fd8-4c81-8a8a-83df4ee58056"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c8e1da5-9afc-49c0-909e-ac5cb9ab60e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4541bc93-3750-488a-85d7-efaaa4a62a07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5144c909-11d6-45a3-8f60-b22c3189c192",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26f55f07-83b8-417a-93f3-65b46e5796d7"
                }
              }
            ]
          },
          {
            "id": "791fd2b7-584a-4752-ad77-494fc397ad2f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2ec2279-bbe8-469d-8c9f-4b35ffb5f1e5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8e0c22-be4f-4fb6-8dda-f621ef8ce9e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79dcdcf6-2077-4aaa-9fa1-da6f717ed719"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e941a555-847f-4742-bcd5-e24911b460e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34e1df66-5417-49c1-a0c2-54b31ee4d814"
                    }
                  }
                ]
              },
              {
                "id": "7776d9e9-bf84-4d5d-9886-614a7538ae59",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0ba3ef-739e-439c-bb9a-2652c6c09edf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38599930-2214-44be-b5e1-a34dc01fbcf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7751ccc1-dac1-4fab-880e-9de38c5e07cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a9d3060-4edd-41d0-8084-700679ccdfce"
                    }
                  }
                ]
              },
              {
                "id": "7663153e-72b0-4204-bd0b-89189e92c2da",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ecc78d4-7253-412e-bebd-7739cfccfe87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ab764e0-745d-4875-a497-9d443cace9a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf989af1-0439-4310-bce5-e4ebf5a305aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "977d84b2-3a69-4b7c-9e48-081325e12631"
                    }
                  }
                ]
              },
              {
                "id": "f8807024-3b73-4a60-9dab-1fa04ba18a99",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f861da5-a6f7-49c5-819d-ed59674c2321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80e8d89f-5725-473f-80c6-7a364df89ddb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da411919-aaf0-418e-b82e-08c79b6835df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d463c07-fcd8-493c-91a4-854180422af6"
                    }
                  }
                ]
              },
              {
                "id": "2258837f-509c-4846-ad68-4e019386aab3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09383065-8804-49cc-bd38-ab5189e959dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "734f75f6-d45a-4dee-a873-5dab6a98ca9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9749ba2-6c75-42b3-ae43-d212789e95d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "05c33f2f-2ded-40d5-8550-14cd2b0595f6"
                    }
                  }
                ]
              },
              {
                "id": "0c4b15fd-a1a6-47e3-a182-d0ec7b1cdf62",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3107aa44-ca74-42e9-afcd-fa086a276b75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb49386-20ab-4a7f-9c80-17aefa028e70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5eae5db-c11e-4d1d-b379-99680a7effab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4a8229a-61ca-4a52-b199-9a7a3205641d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edb52ca7-ee56-428b-ae6f-595c041d326b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4aaa2a5-3ede-4eb0-b9c0-0bb54e7cf6b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da821866-5bdd-4dc4-9fe5-0c6bf15da8c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eb712b0-254a-43b7-804a-287884d7f67c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c44d3656-6ba1-43a1-b4d9-45534e402675",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ef574766-f8ec-4671-aefd-e6681788fbb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e10db5c1-1588-4c40-bc64-3b35a53db782",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eba29fb7-669b-4b7f-9250-e4e4a5eb5673"
            }
          }
        ]
      },
      {
        "id": "b52b2d35-d034-49dd-a369-8de83aa3e146",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "80928cd5-3a15-401f-b34a-6dbdf39bd6f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "214bdf63-27d7-465f-a8fa-74c96b93f6d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "495843df-860d-4121-9764-ce43b8701659",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3d616-48a1-4c04-8af9-fbb497f2a90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f7d20f-a459-4b40-86eb-a479715a4ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de4914d-b680-41aa-83c5-73ff5d0e3bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1b780a-e910-4c75-a52b-fe941ec95b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43ec433-1422-4acf-b223-f79b7c3085fd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e18b7e-e515-459d-8efc-d4421225c96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710a661f-fff7-4ef9-afea-56b97aa303d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21028931-c062-4c7f-b394-147f5a7d605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a694c4-96b6-437e-8c77-72485ef23fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52af1e58-5831-4676-a3ca-cf13ca154c2c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff74d6c-4424-4e50-a007-015885b0acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d3e230-af6d-4261-b7b7-6edafb2c1a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc76e5f5-6fac-4b76-b7c4-ac02e404b0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d07b300-6b7a-401d-b7c1-86372217aa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71484fe-2d32-49b0-bd59-f73fdea0e500",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a1747-8a09-4f39-87b2-fdfc6eba4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9499b4-cd15-4e47-8606-7f1fe18b096e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f160204-fd3f-418a-857e-c14667e5d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb55d1f-78fa-4051-bcdf-bd4dd769c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c0ed6-af5c-4f8b-9d4e-edf86722fb0b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c7409f-fd56-4422-8bfa-7dd16c227ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0dddf3-26d2-4d66-8e4c-384325f8ad9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54735764-0064-4429-93ba-bff34b6555a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2680b171-4990-4640-924e-45a2ba041987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890340c3-dcc4-47f8-82fc-a6d892c2eb34",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719da633-945b-45ee-be8d-171476fdc1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c928869-186c-4316-856d-5d2104138847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916f128f-4ce7-463d-a226-f64c81aeead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1c0e65-c095-4b2d-a61e-31c00afad69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea942e5-a98b-4679-8e0a-e46402383c6d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb78eee-93e0-4fc7-9894-67a65367e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fa82e0-5a9e-47b5-8765-cdead37d9c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87385b15-4ca1-4064-b3f0-46d7f7614ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6b19ea-9ef6-4894-8c8e-4d50d67298f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef4ac48-ea41-4510-9ee7-9a247278a568",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78cc016-3188-4b52-ae3f-09db4b3aa6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3eed33-4d46-4466-967d-530c7ca62a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8584d020-8d23-4af5-9848-54ebe4b6c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99e066f-7b22-43c6-97ce-dff97b91f58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2916a1-a92e-42f1-abc6-cd1abb200b1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000f1b57-105f-4699-aac2-63bb9f686972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e126e1-e8ef-4dd3-af79-23e714259760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c633a82e-d7b3-4390-b758-c25cf6a767b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03dd06a-db50-4dc0-a56f-3c7c9e6d1a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0629b-0faf-4715-abc0-e064af4a358c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e58aba-217d-44d9-a3e9-1bd639c54a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0a4f68-d76c-48db-b282-73f1a1d87366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493da7c2-cc69-46f4-8a42-254dd2f7cac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e2468a-919f-452a-8401-cce21c0daff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7ab8e2-f40c-45ad-b57a-316e94b038a5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e82f11-ddff-4fdf-985e-30315529c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1b1c2b-6843-4d2c-b6d9-efc431d654bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4a969-09c6-41b8-875d-e2d149decf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64f2492b-5865-4b3f-826d-2aae86c13a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb1022-7f14-45ad-8deb-ea28e6419bd7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac140f89-02d8-4717-a96a-4da6b06a42fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b0ca1b-b319-4b12-a95e-21e0e63c2321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54b323e-944b-40c0-bc8a-4ac530ce392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec81253c-f7ae-4c2f-86f8-8d29f85a5be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7e5cd2-24c0-4291-b688-c95870514531",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434e18d9-a9b9-45f1-aa83-51d9c395c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31055fa4-a349-45a1-8e5e-3f20b447d629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913738c1-eb2e-428e-bde1-95e5b414fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "312370c3-beb9-4016-a85f-884bbc2a8bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65b39a5-4017-4614-9c89-b748a06c9498",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a46a54-d97a-40bb-843f-31648ed46c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26317c2f-e20d-425f-a796-c6718b264cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b94cae-951f-4add-b683-c09412cb2af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2528a3b1-3978-4416-bc52-a11f1ab8873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b6128b-aa0b-4bc2-a41a-239bfd4c5d89",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1c87e0-1a8a-47a1-a844-6d0cdfb3e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0508bd73-be98-4735-972c-4a1acb7c3782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab4dd9d-5945-4ceb-a3ff-9a2234d7163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1555f77d-a3bd-46f7-88f1-e4fd557976de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee14a15-645a-4852-8a4d-3022d9b91ebf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619df178-e28c-402b-9df2-4ee74e4817dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24d9b3d-6bcc-4356-b171-d025ef5927d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f40ae-b3f8-4821-a7c4-059aca5dcdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5756311-ca83-4667-878b-a71eece70325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99783d6e-29aa-42f1-8fe2-c590ac029dee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a73cd93-14a1-4164-8f4d-db2a42f5ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3b359c-73a8-464e-a92a-943e262b9c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9736e9-faff-40a0-ae06-9ad4fe86125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad9d7bd-fbe5-435c-87b3-f484085bc694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea576c7-f427-413b-8630-897fcfa5fae3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e7a93-6f8c-417b-a5cb-5154407aa2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59c7c0a-a237-4d5a-8e1e-068cdfea79ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6426666-a039-4a11-9b80-a14bcc4e1229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0e465b-064b-411f-b90b-2c9d170f3e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae4c08e-f77c-4892-99ec-67b23ec5763a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a2ef8c-4355-4962-a55a-2859821df00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b699b3a-6947-4eab-8f2b-31206b65f708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c5dffe-5e9b-4787-a059-4e682d6475c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf5e741-d8f4-49dd-bd55-671dde4958d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b297c87e-541e-4f1e-b0e2-bca910fa1b92",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a6709f-6106-489f-b492-417aa45a5c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb4acd2-7876-4059-be21-2ca5b77c25b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d001bd5c-d5b5-45c9-896f-f4a3ebf773c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a043b33-4d11-4a0e-a8ac-ae1fc57afbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a68d43b-a0f1-4591-ba43-a745e09a1fc1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41700c04-3694-4342-98d2-b63b021bd393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc9908c-1f42-47a7-8794-c222635485ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb16095c-7307-44bd-87d5-50136a117f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f5c742-b8fa-4446-873a-65a60b1235f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc905e13-2230-40b3-9c46-328b84168b08",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3746c3f2-7b13-4fc0-a643-14b975b67451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5fc898-c6bb-4262-bdb7-d1e5277f7c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117103f7-3b42-41ed-a65c-fbe326162bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "711f2d95-3bd4-4fa2-ab4a-19c0065bb463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b98a05-c349-41af-b6ae-a5018db2fb23",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f95c5c-ada4-46ed-90c3-72c007e70aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c02ce42-2875-4d11-8917-dc7f17245e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8660ca89-749c-4a28-823e-b07da5de801f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a3c084-953d-4dd3-a187-6a2d455d4f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c640e2-d239-4d5d-a92d-0620a9f83d48",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd31a7b-8e3b-4a04-9406-7a4e5dda372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4ced1f-05b7-42bf-b2d6-c8c24efeaf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c291fc-7738-449b-bfed-5922333c1777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8673731b-b4aa-4fdc-9e1e-6bb465fe1245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a7bf9e-c86c-4646-8166-a51b18abf9ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9d66ad-cd7e-4fb2-b1b4-fcaad159ed56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044b7de4-17f7-4665-bca4-10529a4516ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd91367e-f19c-4356-a30c-4a64b0d9ab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce1705b-e2cb-4201-8de1-302fdeda297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e550d12-385c-49bc-9afa-bbcb0602a44e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0226484-100a-4d8b-a232-c95499ad9149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bab3571-bc87-437f-a2fd-9e98d89eb25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb8b1ad-b51e-4eb8-bad5-12826b9143e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdd6119-b583-48f0-bf27-6bdb896cf94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fd71f6-9bc5-4f89-b14a-da5b8e855958",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9615513-76ce-4cec-9409-96bc218e178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d31bb16-445b-4ba3-91c1-81e382092780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c08ecfe-ab12-411b-8969-4996ab3b0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac657d1e-279e-4e02-8e6b-2a0db1a9ae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f37737-c8f8-4f24-bdd6-0463e7decc0d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354ed012-a22d-487c-a83e-b765075670d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abd2c0c-8e8f-47f6-bb77-eb81ad62e08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f4a1b3-7cf3-404e-9569-051c7cea484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a52352b-3b23-4352-bd96-89e20bbcd933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd765cc-7ebd-48ed-883b-eb413c94ec11",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f0c4e6-32c3-40c4-98c4-502157257b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6489846-64f3-43bf-b521-58c9e3fd58cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684f8733-4bc4-41fa-a731-8890abfd5d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a23e40e-eec7-4a25-91ed-5d0c4674477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ba44c9-b6e5-4462-9f9e-27519e97d650",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e0d627-c11a-49e1-bda9-f58c20e2c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89a352f-668e-4591-b73f-4380b8c8e0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964edc4f-6234-494f-83b1-8a33598154f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc18401d-a327-4d7b-ab1b-4d37ca47f25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af42c8-2422-4af9-bce8-3c49cb5a820b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd613bd-f389-4451-8f5e-b840d1e653be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd65c671-7a14-4b6b-aa71-fcbf9bca2c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c4bbc6-a6a2-4513-85c0-59963211d45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d217112b-5966-477e-9940-146dbe3677b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf650be-fc81-48c7-a5a8-50636db774d2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90c5cc-51b4-4f3e-8972-4a5a2d7ce385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab33f8f-e719-4652-8312-44133e8da998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27078a-390f-40cf-8927-5b07e9c39a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1b5cc6-474d-4998-8291-a6c372af93f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6dd787c3-162b-4597-a638-7217d5c7d587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6e73987-56cc-493e-8890-f511f8fcf995",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe26b755-8bad-492d-94f6-2130ae069623",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb0315e-4376-460a-9a25-bd2ec2db00cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f6ae93-9614-4ed8-932c-ce6fb7639162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "394e591a-7674-4be1-9918-268476f8c160"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5873932b-3c2e-49de-a082-4a279ea2f5c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07368ec6-6885-4691-bf1f-054c70bb1185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01ca7f98-a7ee-4882-b845-e89862a14448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f00650f-8164-44b4-aa49-123676d44164"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eee2a44-7a90-4aa6-abf4-c38b4913cd88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8ed33d3-ac71-4c6a-8fe4-698a02a592bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e74fbbec-4f8c-4ceb-8a0c-b06b2c8418e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61a9b378-084c-4a42-aadb-7448aff37221"
            }
          }
        ]
      },
      {
        "id": "6b3b5619-c2a3-4578-8542-eef9d467154c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "21f2fea8-f385-443c-9354-fef86d420665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05b63b3f-e4b5-482e-b433-682abe39d809",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2611323e-95fe-4f75-b075-6bf0021f4618",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a639fa2e-ce26-4aff-9bd8-042087b51ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d0513d-6611-41c6-a531-ac89fc637351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cecf475-8f9d-4097-b399-8778e87c4c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c3a1cd-0a3a-4afc-b926-189cfc602125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39737300-e209-4abf-a3e9-0bf7f949ef3a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02b5cef-a8f1-4274-9870-45ba305fcc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e31245-d082-42ef-8c65-b9c24d5a1994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0002e8-c97d-479d-a406-91dc7b922134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "758fd66f-0530-49f7-89f0-b15a9a1724b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81111375-74df-4eab-a805-0b07681bfb64",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968fcc20-ed31-4ca6-8ba8-7ffa4a6fc6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a9239d-2d74-4608-b3ee-0b48f480be79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffc599b-866b-4043-805d-264e5f0b7b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44fd8f5d-fcec-4862-bb35-ffa308d4b891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b7848-cf8c-409a-9efa-fcfe48e92a67",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be05557c-7b99-4b81-8d36-2adab7f22426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58de9977-50dc-4d67-9449-d6b99c4464dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70406f5d-a5a0-40fa-a4f6-f41a7da8d852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ecaba5-674b-4f72-80ed-7605f6bb4c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14272a08-666a-4eff-b852-96f0938756ae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96b8f16-e6a8-4022-b383-0f95367f818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd7166a-1c1d-43a0-8643-046357ac72b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292fa8d-a8f3-4f32-b2a5-225cb75f14f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b620ce70-10f0-4773-bb30-2f8c06aa40df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae8dffe-b031-4f01-81eb-d8afad05cc3f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22632f3b-add5-4fdd-a145-d3762cb56996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a67b5a9-04e3-427b-b7ed-d2c08675f0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488a0395-ca83-4e19-8047-647a200d6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ff7e84-5469-45c2-92ea-d7f538c91af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eaa229-3153-4551-a1b9-4c9aa9df4d50",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be19fdb-0a92-4a6c-b56f-906cb9401671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e1d5c3-bba0-4381-87a2-77dd543a6507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c35826b-bd04-4818-a808-675b3fe2a31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c72a19-a636-47b3-83b9-d5b9c2ab801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17a6fff-5cad-4554-b912-974b58980853",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571aa2f8-8a74-4fb7-9453-42e4b111b294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442fc37c-9056-43da-a59c-cf41ffcbffe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa613785-d81b-4de1-9db7-c16acf63e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff42534-190b-4d6d-b298-5126014a9a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44780a3f-5008-420b-b7e4-41db64953116",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448443b9-24f4-443f-a2f6-59cd10326f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924d080d-cca4-46e3-abb2-cf3609b99ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a46f85-37b0-4516-bce9-1c12241b24c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0b11d8-1615-4821-be95-02d4ddb32f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ceff0e-9f77-4560-905f-6013d32b99e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c7c3cb-428b-4c1f-af56-fd86ad13bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57002b5-8fdb-415f-b540-a1d73633fcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede43e82-0a3b-4d5d-bee3-3394fd43173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b06e103-0fa9-4bdf-9626-ba24787f6d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12e9877-0475-457f-96c9-eb84d4182618",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae53f9-ef1a-4c8e-a4de-c5b4310ebe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57877147-175a-4c69-8dbe-1fa4ce4d76f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4932d14f-a01d-4c60-a094-ec9171eee4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "080f9bf1-2399-4fd1-9a3c-e268a30a2e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e3ba6-cad6-4644-b0db-c4f320871c54",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bedd69-55fa-46dd-b0c4-bc1528b7e6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba927408-69f2-4ac4-955b-7717e0fb6564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6a4e8b-d445-4697-925b-bb3601541fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa32f2e-7eca-4808-ad99-76a64cf2f014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d938d1-1a2b-4efa-851e-304d9ce6d4de",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186dd478-8e71-4eaf-96ed-7ee03c533bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4a762f-5a23-40f1-8f34-d1f41f44e06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5997939d-8bac-4ed5-96c3-8036864d937f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f01be2-e02a-442d-bdc4-d37d3d6ae451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7daa0db-f747-49b5-8c07-d93b6a55ac12",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46205772-b8df-4432-a017-a52ec70abcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18195ac4-8ecf-4883-a5db-937716dafb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb73e90-7936-480b-88d3-825686470fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "85aa2c4c-fe9e-4ba7-8526-bf84e0da0848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a9f1ab-3857-4cf8-be92-c55faeaa728a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8160aa8-b369-4b17-87e2-d320560e06c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcd7695-ef3f-4682-8739-3d1f07ea02e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb06cfb1-bebb-47b2-9d04-d57d8413befe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47958cb4-a05b-4fe7-9d05-437b6e71f9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7fc693-5a12-4122-aa29-806b5d01c765",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c364c2dc-a13d-4153-bbbf-e74716d32782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eb63a6-d0d0-4f99-a68a-8fdddf61b2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcdf928-c5be-4a28-9157-df24ab5ea6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b8a215-fc9f-4a5b-b197-6051f4256a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4a7279-4e05-41ec-a0de-a6616e353dcf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f2f602-76b5-414a-981e-c49349a02a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef534d2a-895b-47df-8782-066c04489ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dc7cad-930f-4ef5-ba82-07ae67b98d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21e5caa-b34a-4f2b-ba28-138af4bf6870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631de557-fe9b-4a05-8931-f4f302fcc9ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132c7931-877b-401e-aec2-b26d3ee1780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8d23ca-da03-45a7-9282-edb237a0961b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108e87bc-f87d-4e35-8d38-7ae48c6cd98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e7effe-84ef-4a67-b15e-fe1e9a60eb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5d6804-7061-41c6-bc44-0450b30bb001",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3704096b-c5cb-4699-8daa-46494eaf7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3901cf1-534c-47a0-b61f-1b42c46756b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073c3cf0-5c1e-42ab-bf45-dea356f276eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41553e7c-3760-424e-80d3-fbd2c202350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83853dcb-fd52-42a5-bff5-30ba3e15912a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b5431-3205-4bae-8903-c2edc3e0e044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2ac60d-7894-4622-aa34-11e766d1dff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b90d5-0d9a-4fe5-8bb0-1b3c370dfde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0586fb-79af-4526-88ac-dcd90605c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f245b811-ee5a-4a1a-8f8e-666cdcf3ea04",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ac8984-45e2-4122-b99c-5af7532d9a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca3e7a9-d276-4b26-91d9-e3d1c82f8a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9d3493-bc3d-42c0-bf05-6e12bafc9f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12592567-6088-40af-8f3b-d9337d0c5f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd8f03e-0280-4c73-948f-a05072518eec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e27ad6-b231-46fb-a6f1-46bdd45c0e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e041f046-bef9-4188-acdc-aa4ec01e45c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c799f3d4-6399-4e1b-92d9-750f9570ff3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eafb23-3f3f-4075-a835-f802d77909fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fddb461-2614-43bb-ba7f-7b2baaff498d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1848fd-1802-4726-889a-949d815e7d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b8f334-231d-47a0-ab20-25a7824b7738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646b47d-1db0-4a32-9bb9-7840322d87cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af729e25-3c68-4be7-9bdb-1fbfa383f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a01c041-d3bf-481a-88f2-4edefc712785",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb37157f-526a-4a23-82b6-2052d6190e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61be5cf-e197-4dd6-bcc0-fa7b6c964e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed18fcb-0594-40a7-860c-8e1033e7d937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc577bcf-be71-438b-af49-2dda4b310e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53521dd7-8c8e-4fe2-a2f3-65a8f1d0959c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b24c4cb-2ace-4714-adc6-7499393fdcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191ca089-4c05-4829-9b03-a6ca416a9395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b35a6f-7d5f-41b3-83a0-2260d972824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb1e876-b8c2-43aa-9dba-57b945ccd099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b42ac-5a61-4aba-b057-71f4079b236d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eadf7b0-c456-44d7-8a5c-d1d9aee38136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28d5a97-7761-4625-906c-7c1b2c9cef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1625f934-d8a1-4eda-a6cf-4f61e357e925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8183fb3c-732e-4c4d-b089-9f7924a3828b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07840c2-6b97-4c49-8a03-5b46625bbd82",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9098c0c-21d4-49e8-bc0c-7ac4a41d4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba4001a-8e77-4b50-8d20-0d30dd94c1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70dd211-36ca-472a-9a42-cc368820d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94028d2b-d8dc-41ab-961b-53d941de405e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2592416a-d723-4e74-95b6-1903d3aabfb0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f10b1da-3762-45b6-94e9-8e5e55d6ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add5d68f-2f4e-4ca6-9f2b-3e89fd153087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e2f35c-d391-4cb2-90f3-5aafd9ef5444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe03326-c37c-4826-b38f-61f4e3f6c4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88ff884-6900-4c5e-8784-af64aca8f2b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea5d6a1-8987-4a60-b3a2-96b865c3a4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfab81a-18e9-4f84-934e-6000cffd1ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00654717-0d45-4c1d-9f5a-f8c818fdb811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70a0b57-1cc3-4d73-8a76-df015205f53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec87502-1234-4914-90ff-1563b9e109cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ddfaa-0cde-4524-b5e1-5ddd03fa029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609d6db5-a4d4-470d-a00f-ea02b8a44fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd75c1-b948-440f-93e0-26e7ce05c03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e071440-cd04-4589-aabd-f0d45cbfb749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deacbfb-e173-4896-805b-54cd34380647",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dd80be-2fb1-4f00-a26b-cf7a388444f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5967042-2cb5-40a2-bd2a-6054209dd443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70449856-5aae-4701-8b67-598127cbd5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33516057-630f-49d8-b3b1-d88568c319c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b725b42a-4777-4546-8834-e35c47bf2711",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52936db9-80e8-45c3-9c90-91b790af1c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d45747-b38d-4303-bdd3-3e8000668cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00572d54-8cf4-4b3d-a12d-b52286b12025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "593da071-3628-4348-ad60-3d613f58a709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31916dfb-f5ee-4569-90dd-7182e407c68a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48b134-c42d-42e7-b5bb-2c2219d73488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a2efa4-82da-4bbe-8717-8e2f57720f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642bcb61-4210-486d-83c0-ce1989488ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "822938c6-1062-4eba-bf8f-604fbaa82321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a05a4b9-5f79-436b-b876-0a7abafc66e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a57cb61-8629-41f2-977a-d4de4cbc9551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e664badc-c0ca-4eda-af47-a97d8b1538ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e81ed-460c-4583-bfc8-eb19fae517e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc85a57-a167-4f6d-9351-54bc1c87998d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c91354-d7c5-4e85-975c-1a4619f12626",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67afd2eb-76fd-41ed-87cc-2b3172a38f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5616de8-4894-42ad-b4a8-d6fcf6fc0163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa9e9f7-26cd-4614-af6b-752c4d43e4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29663dfc-bf50-4a6e-a715-252a87afc0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f057c40-edeb-412a-97fa-90fcfa16fbe7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f149c20c-2700-41cd-824e-d8cdd4e8f23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b603ccbf-a507-4f65-ad24-1a0694294b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6701a4d-cdf1-483d-b6e3-58d23cd8fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "088a5e69-38d9-4572-961d-2b50202467d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af15da97-ddcf-4078-9c7b-4ed6d01357ab",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5537570c-0fdb-417d-a0b4-a28b7aeba56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1545752b-9792-4608-997f-24289f6a21b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d005e3-ef8f-46ac-adf6-e82e96af65d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d71d80-7fd2-4acc-870f-b173b5c2a66b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60c29bb2-6bc9-48ca-a6c6-8d23cbd2cd8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb1dde04-d216-4045-9746-360c0ff1b560",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e113a31d-b01f-4dca-87c3-2fb376e4bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61bb88f2-df56-45ed-8932-28a68cb273aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa06775-94d4-4578-8e2a-edb58d4337bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db742f97-bcc9-4a2c-bcb7-707af554e1a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98fb719d-9b85-4d97-9bca-5b4d3aa4c3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d2bbf06-8457-4733-ab7d-4f33f42065e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca88f4d0-6fa2-4af3-b01f-d505d822e168",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "174262a5-4b5c-4f20-9fd0-a0fb2100b420"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9fc555c-a850-4d55-987c-27d2ff580826",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fcb2bad5-aaa4-44d8-8631-0f97c8b4fd4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5885095b-d5b8-4b75-9240-65957e88847a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8b643d0-4724-47d5-9b5e-574029b67a7e"
            }
          }
        ]
      },
      {
        "id": "227710c4-69ea-47f5-b5e3-ecd36cf25e25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9eea77aa-060f-4fc5-9478-522112fa3131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56f52311-f850-423f-ac34-f499ff288da1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "993f943a-b15a-475f-8a74-780e5703549c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a500234c-7b70-4930-b949-0c23a3d81b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a378303-86b7-4c3d-810b-79472d6df9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641bd999-ea80-4483-a609-5bba5ce869e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2839a50-5729-4e2d-accb-9e36224173be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8927ac7e-3a56-43ae-8e91-fd72f5fc3acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08273d39-1fe4-4928-aeb3-30b7d7987626",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedfd9fc-5cae-434e-8c6c-d7619cebf2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4733df-2fe0-4bfd-b0c5-30f7742fc61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a6f700-0d69-44e1-a662-683aceebb5b0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba8613d-b701-4cb5-8cdf-37748687efe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95489036-92a8-4358-aff7-db38755c403e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512980d9-3002-4b92-8c8f-4e50662fb338",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb720fed-de49-46bf-a493-1e4a8506c1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58b9851-62c7-4fe0-a1d4-9ddaf1a64645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d34329b-94ea-4cbb-9876-25c9ab6ec1db",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b585ff5-2651-4bb1-9f1a-c637b21977a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe82489-da4a-43cb-9431-3af2509bc0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f96ea82-2030-4eff-8eba-82707411cf01",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cd408b-b389-4db0-8fee-3728e8fb16f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6d7008-5aba-4229-8963-13a159ee6776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0bd007-c506-4f02-833a-09eaefe391fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038723a2-02a7-4bb6-bf30-d98ce26f504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09cfd4e-7485-40e5-bdc9-d6912170edff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b428a77d-c373-4d9e-bde3-b875bb163743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59208095-f039-453c-a914-13f29bf21c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29715a88-bd7d-41aa-99ec-413f7c412fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f12fed5-4b87-4341-a6f3-f556288bec60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71a588-098f-4d1c-acea-51b3d80b8e06",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13ea9b-6f68-4fa9-a2d9-3f7db3048e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2736708d-06e3-40ec-925a-52569648e817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b699d4cc-7e41-494c-a29c-b5636155a32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a48e76-acbd-48a0-aa1f-6ecde4ec3144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e953715-4b93-48b4-9f93-c767a80429ff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea38d3e-0198-4c21-984c-f555fc9f4506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8fba39b-0f30-467f-a6e7-7b9b527f40ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4a657a-9271-43a0-8df6-9127341b3340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a99586-b5de-4ecb-a20b-fbe68951f897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c45ff6e-8c6f-4753-bd21-5bed8535071d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f10cc3-5200-41c3-938e-06751c42cce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82e10c7-c127-4604-a931-b1259a3509c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bd7c92-c5d6-46b1-aba2-b13b75784911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4fde1c-0ac7-4a1b-8b6b-62e73843d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd62bc0-8484-4e97-b1f3-affff074489c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2318ab1-2c33-4706-95fe-f7c1c175d1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652bb6e8-0f0d-43c5-95d8-4f4639a491dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9049da7f-7614-427b-8493-6dfbfd46950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a54941-7d07-4813-a391-bd000b05f8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f0bbc-139b-4b0b-99d4-9ecf188b3a65",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48953d47-3a6e-4246-a588-af50563c9f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7146dbdb-62ad-4216-84e7-fbbd148f2c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1f9d9-45e5-4dcb-a58c-2ea93dda324a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f927c1-fa2c-4c1e-83be-78c746f2562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e55cc70-be2d-4de9-9bde-97bcc19651db",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b95d72-cce5-435a-b184-43a5e853c738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade013ea-18f5-45d8-92c1-b17a482a86ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274c6a57-c6bd-4783-8e26-a94f9cd9d58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c554bf-8143-467a-aa60-935200fb309f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b67aa6-4be2-4abc-8cab-b3963a4a363b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2957d09-23ad-45d0-b90d-0bc43885b03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe1fe53-c3d1-403f-b071-d508bc6563b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b0da0-f022-48c2-b6d3-5c63bb24fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06b8575-05ac-4536-b7b7-b9a6b226314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a16de0b-ef33-4cca-9c19-270403747181",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac7d4a1-02a9-4403-a7d1-0cc75526caf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd59bd12-9f7e-43a2-ae28-e74572e64db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47f1d2-def3-4ec7-ba0f-3d1ef4b25cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f5e877-e03f-4462-92e0-3c4fad6bc0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169fdf49-e50f-4727-a4c0-c5d03bce245e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0855d15-497d-4577-8b70-1472347b528d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39d27d4-7264-4896-a8b8-38900720a96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d7a1bc-302b-49ad-b5d3-8602fe106c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af1a92c-23f7-479b-8713-741944f6b2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8be6d8-1236-4647-ba0e-518b56994482",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdaaea3-7e3f-441d-a546-e5824a1cdc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1d74f7-6258-40b2-9c5d-ecca84d6e5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e94ae58-e3f1-4f4e-acb0-aa35c452099c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ecec74-2ebf-4bd7-95e8-bbc53cbea0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c136b-c105-43a7-88fc-81db7fc595a1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8290a881-ba4a-4adf-a1de-6fa2038702da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cad927-f06c-46c8-a6df-983938714781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dffb633-3d12-417f-a345-0e99cb46290b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6993945d-1edc-466b-81a2-34a860760035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86922563-ab41-430f-9a7e-e5e8a7c2c440",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4867b9ce-1ecd-4a5e-83c6-3ef81691296a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eaa35b-2358-454d-bd32-ddae16f2f379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2226e25f-f0bb-414c-9b21-dfa4edf78729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f262447-039c-453f-a2b8-c2c25fca1df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d5e46a-754e-45bf-80c2-2344ac0324bc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813ed2be-44e7-4ab4-928f-08fb4384a1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cee83cd-bab6-4e4b-bb52-c42c3e94f4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f12c432-0064-4c10-ba8c-56416e5d3815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c33a92c-29f1-4203-8de6-6ab2764c7f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7c284-0825-4fa7-9803-81df8c57c40f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41474a1e-30f1-4502-99ba-c36b6548c88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0892ee-9940-469c-ac0e-3d4fab58c4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb16616-6ec7-4f67-a474-b29f56329820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93b8933-a11a-40d7-a7c2-358a6dea93a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc952d20-1e1d-407b-aaf8-6c17241273f4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01604c03-ac4b-41de-a513-ed61c14c4d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adf7da0-97ec-4a62-983d-0cd5418b776c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f058a6-e61e-42e8-afc4-60bda50f4b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b20222-6d03-4aad-8576-e715dd5b8cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffcc033-456e-4163-9832-1604d3dd3729",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcaacc9-fcd6-4337-a7f5-94e68c850540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e332cec-f2d6-4c25-aa02-a4cc8a519817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5315a65c-834e-4785-a8e4-f2c8634405bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69ea211-1d7d-4322-9bff-6936f4ddca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a757a1e2-b47e-4066-935d-e042f7f6295d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8220cb-91d2-4b28-9f27-cd0e1ccd92e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc760f37-ca4a-4584-abda-214bd4b31052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a11276b-7735-4bde-853e-f522857fc18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c316897a-9ea3-4b42-a247-b4e6a177abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c05b90-fa1a-4e49-a533-95a1d883b187",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61088669-1fee-4975-879e-4b16ce3e4303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170f33b1-ca12-4f27-8289-b7209c52bf07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865652d-7f0a-4b79-b965-ebdcb6744406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea099bb-aeca-48cf-8710-b19bfc40c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da278a9e-5fc6-4320-bef6-b8aa843b9310",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3efe0-670b-4aee-b0fa-f4a1c3098675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6884b68-93ee-42a8-a348-5b4e2e6c6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13f057e-d284-46e0-8643-f3838a7c14f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab91ebd-2ba3-4175-9046-c63a6cc8df35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbacc1d8-5b50-4334-9ec6-92d91dfce23a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e6032f-228b-4a6a-af86-1ea13d4e03ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd768bb4-ca94-4997-93b8-afa7ad8f2c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fcd36b-7066-46fb-9be1-c8d013544da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedb8af9-cf4e-4d44-ae1a-71eb55c497bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bbb220-f5c2-47c4-8b03-f821026511f2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56bdd4c-5e10-4e96-a545-9bc00b1920d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b18f0c-d7e0-4af4-91a6-2750788fa99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7af1eea-db4b-414b-9a37-9316c1ee0435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff15ee86-ea19-4229-8547-320a331fcdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc85c8-23e7-4033-92cb-ffbb113e12b5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707da676-2716-430e-97bd-bbe19389701a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a41607-ee84-433b-a6e0-c8f66adfb91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3773520b-80f7-4643-bded-59c5b90a4e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be206c96-6998-4164-b562-eb42031abbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59b4990-e873-428e-b472-812e0f134d2f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7217da-c584-491c-aab5-dc2ad4708470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420f6c11-007f-4233-8a65-bc1334990cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab05b33-61a8-41d8-9592-59b0983b1ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320079b0-c07d-48aa-9f88-d3d5938bd2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884cd328-58b6-469e-8cc1-1fea727f81fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4466e-c809-4207-bdc5-340579678d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4cf8eb-a93c-4ccf-956d-d64491d29539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0e8d90-baab-4f94-99b2-1def8bedda39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d84af8-c47b-4889-8aa1-8d8efdd55d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de24f075-a99c-40cb-8ca1-9e62c29ca88c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bce8cbe-4c50-4fb8-9573-4f12d2fd7ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416b9ffa-e4e0-472f-b4a3-ee57f5da48f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487f4f7d-1862-4f8a-a200-a2d4242ed824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f89662-f889-4d28-9ab2-a46cd1ea4d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5977e1c3-12ec-4b42-bb83-b358fd6e32cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e279abe2-4651-4fc9-b9e8-1cb43170a545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09036bed-9d78-46ae-8176-2a1940a9b654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b36e5e-c259-41cd-b8c6-4b5bc2c1c40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152b3238-1aa2-49cd-a785-be4f7fbd1412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c68be-3597-42ef-84e6-a4cbb71fe42f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f99d300-4499-4a2a-91dc-6459f14ad376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195cc884-e6a0-416f-b7d4-dc1f60bb45f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bdb2fd-3e62-444b-a3c5-b0918e7ca26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff374a59-90f4-4d1d-8039-96fce061fbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b78caa-2f9e-4e7b-80b1-55c30047d8ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feb13fc-09e2-455c-b1ad-3cb8c9aeb5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e733f8b0-c363-44e7-9174-2014979580b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005bde0a-5f0d-44df-8e59-601c28ec594c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54034fe5-c932-443b-b962-9c78e974c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12b44e8-8d3c-44f0-8b11-4ea0cf336e5a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e911bdde-0e6d-4773-9c85-65a3d2bacb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93e786a-e16c-4b26-9ec9-f9ba1bce19dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f8f3f8-7df6-455b-863f-17c3aa685776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ac6d67-6ffa-4055-8078-b7bb3c6604bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53e9f3d-842d-473c-8ca7-c4e7e7e2c56e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96756db6-96e2-4d32-bb2e-294e7a700fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc8651b-ffb4-4a5c-9db3-08fd362acd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6fd884-f0b1-4b28-99f2-c55c03c6580b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1581a597-3dca-4564-a1f6-94872db83ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e4d311-3cfc-49ba-9ba6-611f2c8487cd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef944f6b-74f9-4f7d-955e-6fd77c2f457a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbb1d1d-e06e-4aca-b0e8-11357feb0b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1a40b9-8b95-4350-800e-e52bfbf76fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44a080-88b5-4a73-8aff-1b81c4bc0346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9313c400-0f16-435a-bfc3-cf0dde8290a0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b30750-07b0-4c54-bc4b-7ece44629dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa6e33-77e5-4059-859e-10f495909bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86aab37-eee2-4cf5-963f-b0ffbd386ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fef00c-78d5-47f1-b071-ee7b4bba0d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5624c3b-4c31-48c6-8a77-87041e7c5995",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd7b368-9163-43fc-b9cd-df06141551b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb661154-4c86-4a75-a6bd-9a3afb59fa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fe51a0-9fed-4039-93ba-2331b4e28a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de6cfcb-413a-49b3-9ae7-63da7fec9a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4b354d-ee3f-4292-b41f-2790ff536051",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a43ff-fae7-40b5-9b70-50ccda6178b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60b1472-6550-4778-967f-c04572463460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01114c1-1764-4933-835d-8074c62ff475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349b5c70-f2ea-4722-85fa-93d268d5accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfc4049-9afc-42ed-8cae-dfe7ddba8ea7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257914dc-c582-4207-8391-2579c97a3f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c179b7f0-fa99-475f-ab59-dc1e949b58d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d4e3ec-a356-4762-9a98-074cece09646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c956f9-ca18-4daf-b932-8f33dd3b0792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ecf52d-0068-4f83-a15d-50241abb2e29",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01daa1d4-2f05-46ef-b7b2-23cca44bad00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb97600-4501-455e-b50a-4a6d90ceade1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab0987d-1118-49bf-aae3-de69749430e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c4ca80-a3f7-40b1-87f0-7c7419005d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9065a797-ce26-47a8-b406-33b424d91d13",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ae9e63-18ad-4a51-a6a1-3d2fa88d8e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3c28c0-32e7-4131-b253-8f511c4da86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac287e5d-071e-464a-a523-9831708bdd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413329cb-4418-4f67-9515-221e446d6be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb49a2b-b2fd-4cdc-8bb6-d04f8ffbfdd7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610526ef-4a23-4e80-ae21-fef1664dc377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013fef5d-9b87-46cb-9565-1e12d50958c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b1ecb-849f-4648-9c51-3a4f416289a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f8f7c5-db48-44ca-ae6c-e4d9ccfc418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b86a8-b7c9-473e-859e-11776527d483",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521cf794-d30c-4b2b-ae2a-be56c40ca617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655fb128-ea23-49f5-91da-abdf178aeaaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d05c992-b6ab-4917-a09f-be51088326c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455aff73-7159-406c-ae50-2e67f8c0cd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddf8ff4-54bf-4fd4-91b9-5ea29f6b0f10",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39945c3-5d17-4097-9ff5-0a8456f9a62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b10a692-94bf-4dd2-91b3-eafd3434e711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7ceb26-80d9-4e86-aecf-eabe436017d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3830cb-5aeb-460b-9367-0429e5aa3b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb121660-d506-4c04-aeff-507ae8de0da6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78d0f31-6b98-4ef3-b40f-9a8b02098566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a38ee8-7fba-42bb-a0b2-62a150ba8df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf23de-9fbe-445c-bf38-d89f18e80c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3517e494-8143-4af1-9838-5a9ea965c418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16793360-2679-4460-9ca5-cc9c9562634f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02add4b-36d2-4922-9ec5-1f0cc32ac717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e51a1f-fbb4-49f7-ac7b-aae7afa27415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b66d43-1de7-4d29-8bfd-c55484117dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200978eb-5a98-4f25-b0a2-9c6185b9beca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c387c99e-995f-468b-94ad-4d37e566b381",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0963b52f-0bcc-4bc0-87f4-46a7e9e4c90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a1cc04-498a-4b3e-9e61-a0c36020d37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651a5974-137a-4c03-b83b-ce4f7ba5dba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ffc186-b2e1-4a7f-9750-3aded6f5e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba5c2dd-7aa3-420c-bfa4-474b8ba98ac4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc673cb8-2ef2-4e20-b67a-6a2a924245c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c7b5f6-b459-4f2a-88fa-e06102acf524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d7d1da-8224-4ad1-9187-09fdd101303f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad42c65-29f7-4d6e-80a8-8b280f59b5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8634e0e8-82cc-4cbc-af16-cbb98677a141",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c60c01-4a98-4ac7-a5cd-9acca041daa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6587c041-62e5-4152-9f3b-a6cd9a8bd0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408df5e8-07b8-4060-9c6d-d08b06231134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b709407-2ada-4cb5-937a-c9118064b645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0184d847-48ee-41bc-bb37-9619b3923edb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a332affb-29f4-4447-be3b-75c1632b02ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c95f48a-2767-49fd-bccb-27b58a849718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687148a-22c4-4e63-a386-6f5e48900693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada3f3a7-b41f-4a36-977e-217f97e46ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26b40a7-3c42-47cf-9247-a2a9f8910ea7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41eee4-008d-4bbf-8a2f-662ad9e21439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a401d85-6991-44eb-9d4f-d8c4706477e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b7fbc3-bb54-4b02-9f22-9ac1520410fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154482b8-7649-481e-92f2-4b7e1611f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d6a66d-4041-4c15-825a-4911ab1836b2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7f1d3a-407c-4d5f-bb6f-2b12a878b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bd0ace-94c5-4e9c-acd7-02e6df68d05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06db4d-d1e2-42c3-be60-e31421e3dff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8555ddd-53d2-4bdb-b0ae-ff2b617388a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3e5fa9-9d05-48f7-bef3-608907aad2c7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50006a1b-5951-4224-b326-702e2a1d8661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134500e5-9c1d-4d5e-ac98-b7c0be714882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18117435-4680-45cd-aa03-1453d81792a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3235afe-ec57-45ea-bc39-a1f6c951dcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d129743f-9394-4b4d-917e-7a7d04c63f63",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4a3018-9bde-47c0-9fd3-b4ea9a9be518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54464ecc-783f-4ace-b008-712f862ae383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eea5542-2db6-4e1a-ae85-052a6dfa24c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0092f032-0db7-4f04-a123-a0c25766d063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26039e0-47f0-4c49-9c45-a0be3b5c7288",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ce298f-2ee7-4f72-a89c-8e80e6fce487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e98342-9d70-41a0-b38d-c5918feb7a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a553c8-9661-4a0c-bff0-9953557d08ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac6e1cc-dea8-4ceb-8d06-28e2adc9961b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143ded37-c9f3-479f-b166-5b5e737edade",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f131d3-17f1-42ec-9e8d-fdc29e563e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ab4093-24f1-4d24-99a7-6260e494b316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01de7fa-44a8-46d9-b91c-128d3bf14374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af144f7-1d2b-414b-8eac-af1c1b1c89e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ec1125-f4aa-42f3-947e-4c6fba590efa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11e30c1-5bce-4a1c-8d3a-7c8a7a1ea207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24434c3d-afaa-42b9-91c4-431ba447bc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46edcb1-6e04-46d2-a812-96b6c9dacc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2e6127-7f76-44a0-b448-8d2ec408f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c4ff4c-687f-4bea-9c3e-fa8e90ac6fae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf2a66-3b34-4a3a-b905-a630ce487f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6879041b-7aa6-4b13-842f-9d8174a7e01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf73ae36-9383-4ce4-adf7-55717da4d355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73f1b28-256e-4f52-84bc-d013f0a313a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c20c50-3259-4b9f-bca7-6ce36f651219",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bacf69-0274-49a4-9da0-7fd343d63489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633dcea2-6f2b-4247-86e4-55ed06f3bd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682cfded-b65a-4ed0-b2bb-ec351d22fa47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb4902f-f14b-4077-8abc-9c7c4c027032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba34a54-343d-4271-aabd-cba0ddfc9a28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcd66a3-52ef-454e-8838-9f41672960fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e851dc47-9909-4671-9dc0-56feb93a4c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad9bbbf-e5ef-44f3-bb4e-d20e304f282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f348ecf-b993-4b5d-a372-4a6b214cbe98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b29d6a-214e-49d9-bfe8-8d6e2518e08b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e57cd-13de-4cf6-a9d0-ac95a7f5a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293e77e1-d4d8-4a7b-b28d-61b9e01338bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d068bd-3802-4b26-a6cc-480441c7b89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99774fc9-b892-43ff-a95d-cd31f353ab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4861bec0-030d-44fd-9e7a-e4728862befa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9653a9-f928-4d4b-9b07-47ba66854a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d6ca32-cea5-4a7a-b05d-b74be14bf4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4bada3-8a3e-4ca8-b87c-3c8434edd53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a43bb5-573f-46cc-aca4-512167ad2b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51d2643-c43d-41c0-8928-fa352a01f25f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc85dee7-1b54-4542-bf68-a6a75f4165db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa39fb3-51ce-4d80-bc4a-1da02d78e382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b99cf89-b2af-4d05-8226-96adcb8d5cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cdb784-6d5d-4abb-b0fd-55747ba265cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0923d-e102-4df4-b6d2-02c9c2ed0429",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1baa4-e2d1-4be2-9afe-c24cbff3ac70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2189b27-9a1d-4563-98bd-2e6b32de3ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c67dd4-0821-45b8-8981-fd1ad257433f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c772d1c7-96c4-4dcc-8b0b-3336f13fb444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122d8d24-ced4-49b4-b949-1abacb8f29f7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca2b601-436e-4b77-a62d-1b29f81d43af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c68d5b3-107d-41e0-9b90-a25d76751c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdc856a-0cf9-43d6-b67a-023ee4785a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c8d5b9-9b00-4a9d-9887-4a29493d1b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0d2181-62b5-4304-a87b-cda4db852695",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c3048d-f9b7-4644-abc5-2967cbd40518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2cd3f7-e928-4b7e-a508-a614172cf5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf74a9bb-0947-4f77-af51-cced974b96d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53dfa24-c030-4b45-a232-b3ea88068f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595c5656-4d78-4795-892b-b7b87ff3202b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2693e73-bee1-4301-aa82-cf8b0f0b5d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57d41eb-6e9d-4df0-87c1-9e9267de0612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7323ed-8c15-4dba-8412-ce777dafbdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e0fcf2-b58f-4912-bf82-ca1e98653a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad76d778-f9e5-4807-ab9e-de5bbb65dfb2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2288de9-2823-4b86-8452-5c901e2a1e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf9cd32c-77fc-467b-a733-469fda808bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77a49c-cad4-41db-9107-a786bbcd0b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ee82d8-e874-44e9-9120-4dfd887eb78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bb8b8d-3b3a-4e35-b05b-e644cd13e037",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a259bb4-5130-47ef-87fa-5752fa7c8b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f34c901-b5d1-4de6-b239-9f5eaaebd3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716a0bf6-7948-4a98-affa-ebeb67487043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56482407-da48-4ca3-a403-1d03997e92b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df1b923-b092-419b-a708-096067bd7031",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c98857a-627f-441a-9855-6771872defe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2949dcf6-245a-4a60-9f66-01cc9c832d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d781683-553f-4b41-b3c2-42185b4fd9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824129d2-bd94-444f-b1d4-fd948a387ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839e8c8d-0cb7-4678-ba6c-a6bdf0712a31",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6659b3b-eebc-4f48-8ea3-e51b3d36e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185ce3ce-3815-47c4-b6ed-fa8c0c7ce0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a799c21b-77a9-4276-b1e7-0ba42e0dd7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058acb6c-6e18-4a2d-9915-b913ef4d019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cddab1-94d2-4f2c-8365-85091cbecc4a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f22123-1041-4380-be4e-acce233846b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927ac8e8-af77-4333-aab2-3646e9527347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbe674-214c-4c5c-bcb1-2a2c876475f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61f1719-3414-4964-a166-b9cd11eb61c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09499603-8404-4ca4-b7ab-9f18cdbe2c52",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33fcc9d-1c8c-49a1-93e6-c4c056fbd2e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace44a40-ecb6-4056-af26-bd64405468b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097bea61-2b21-4351-8bac-288c26cfca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c8a8e9-6429-4970-ac01-0de593aa6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745e749-93ff-456c-8afa-37349ad4ca7e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550b203-8cd4-4748-a4c3-2da74d871c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50a6135-fe4f-499e-bb8e-1e142d263028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b071a90-6b81-419b-9e90-105690af108a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78f2d4b-c76e-4979-9454-4f1e606c1aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a040428a-d05a-4a2c-8442-515e8cd87140",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d069ba5-7c77-4c63-8cfc-83250de77479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a38853c-c401-4135-9dad-f817ff49c272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19800623-46aa-4a0e-8f63-ac343fb719a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a2ab00-038e-4c5c-8098-6d0ec80c7b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abd38ca-6911-47e4-bb94-834124d4cfcb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b072a618-be07-4493-bcf4-3dc5baff283f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993d711a-c38a-421b-9af4-c7e94efcaddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a71ac9-d251-4e25-8441-d131c230a3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319c7001-227b-4eb1-89b8-247678715a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2c6eb7-4e3c-42c4-9fdd-91e176b44ccf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa989d-8542-4b40-90d1-36c71e2e64d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5299edbb-ab91-426d-97db-6e94862868d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50077fd4-bae4-4fca-8612-467f2610e039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f83f2b-7106-48d3-ba53-a73c632ffac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced8fe04-50bb-4a4e-aa9d-3d5e53351023",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8404d188-5a73-48b2-987d-2fbc7ef3beb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f9fb16-e301-40e5-a636-d2d20fac369f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e25a501-8ebd-44f7-9077-307d60f88db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40db8bf-213f-4b72-b4ee-3494c54107f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffbe367-0e92-4b6c-87b7-52daa398e6bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28478e4-11f2-45c8-90f9-3f38a7b8614c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f534ef4-6aeb-4254-9049-bed5a02db70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7822dab5-7d91-4d9f-a6f2-0b9c49735a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267668c9-1def-4265-aa4a-4d3522743181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbab74bb-70e1-44b8-b1db-ed20a4e8fad2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962d358f-1afa-43b9-8ee9-d6e413806b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce86ae4-22a6-414f-83e3-75452c4fead0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8d51c1-9cdc-4307-9b62-0fdec7b92237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e441553-3eb5-47f1-8d0d-79dcea2d9dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8ef1b1-ba9e-425d-87d2-72df0f27fbc6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70094943-d339-4bd0-ac0a-1e5066e30d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929c6fad-0411-4ab4-a6ab-0db4daf5bd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e9bcc-1c8e-44d5-b713-eec864ac77d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff71ff8-8524-4125-987f-84ad2b0d001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ef86d2-c2ad-48b4-8363-486ed4d4e625",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fe9664-5d41-472b-b2ab-1789908dccf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f7bc6a-8899-4014-8833-4d6b36853979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8064b72b-6e3f-4b10-94cc-85ae855bf5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c050414-5714-4c74-94ab-79799d0cbedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a09beae-f624-4e13-91f1-90b9536f6b26",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b499462-0331-4a2c-98fc-7f9000b6e793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad21f6a2-95f3-4253-b8e1-43697b774da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e567aa6c-3303-46fe-b6d7-db95f7c19eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea04d47-9d0d-4439-9518-a66a3f90ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70e659c-1416-46f6-8ac8-8a81bfb9c790",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf041018-c92f-4d5a-946b-aadf7b7ac9a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a9c41a-9cb3-4b0c-8293-f29e121a0fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0105123b-dd70-49a7-81f9-eeedbb1a869c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab841e5-1419-4f3b-915e-011e1637bf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6947f0b4-9864-42f8-b26e-3c968093acbf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f158397-08de-49d1-9753-5afa621a8ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623a9654-697b-4b16-af0c-b6b235f2a333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154be7d8-671d-4093-b3a1-54f7ecb0b755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2aed98-08fa-4e31-ad07-18f0918f987c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824444cf-cf96-41b6-96cd-ea97931dc327",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a76773a-1374-45c9-a09b-e36685292cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431d5e48-08b0-49fc-b313-60b7f693b5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48f15f3-696a-4346-8434-a408eb2b00c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b0200c-e939-41bc-8980-efdaef7008c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad70ae49-9228-499f-8a36-5f78e160197a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e0e55e-3c7c-4aec-8f54-6e41981ef0a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167fd108-dcdf-4865-bd3a-36b394adcc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7525a57b-afa1-4742-ba39-db762dce0d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba9bc10-1003-49f5-ab0d-c26637d7ae7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651ed24b-39c1-4c43-95fd-81269c63170f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dba903-3da5-4445-8c61-c8e3f0c577e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4893b263-1d1d-4d2a-bacb-b0839af4bc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d48601-fdb0-4143-bbae-7a89c7322b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8111c41-fd9e-472c-963d-89eb6f692841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a53e14-4402-4a3b-bc81-82c4d79fc970",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea50d1b-5f71-463b-890d-c702de8d8f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdafa8c-85ee-4521-be79-918aa2df223f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf97e83-4570-43d3-9c5c-60edf3494eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339dbe16-38e9-4d24-9eb1-29a6925a7df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc4d958-59d3-4ab5-91e3-9f3d69a5a1c9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3afd4f-56bd-4cb8-813a-e20972d55388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cac2509-1464-44e8-b714-93129cb535fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec75040-3a49-4a8e-88fb-92a264761367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799eff54-83b1-45c5-a468-82e426d0c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9602d81a-2463-434c-bf2b-c4e743df0d2a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26787a22-0d07-45f8-b0fe-0a4841f6a818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d272a529-15fb-435c-a9ff-bdb6fca9ca9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74ea6f6-f72b-4982-b453-d5c43ab79d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae6165a-26dd-46e7-80c2-4f7bee1e04fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57460092-ab9c-46d6-81b1-2237d5d1d523",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fc0d91-f204-4c52-876e-1e763a61605e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336ff770-94a3-4726-ba10-148f0aa67d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d2400b-8dcb-4730-8294-db9e466054ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9729bfe3-6ed7-4e67-a2c7-801e9f446fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c52f252-db13-4602-b120-f253d019ae13",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192db3b7-b764-49ea-b28f-bb46d8915572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658b5a7d-6a06-4f79-851e-d61c8f66ba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a38b9fc-cd67-4f9c-b78e-8abaf93e2b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc36e10-6fe4-4dea-ba81-c9ab43104e6b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb9f92b7-3991-4fe3-a4ac-0b39c8b52008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e219e2a-8940-4151-bb23-534902184cfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "668e5f88-bb5e-4159-a1bd-d757c1dbce2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29cde0b5-ac81-4f01-b091-e08cbb50fe15"
                    }
                  }
                ]
              },
              {
                "id": "b6f31a10-ba1f-4d91-815f-9003c75fb23b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d7b5520-af7d-4860-8cb6-5d5b717880ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2afaa7-e77c-40cc-bb91-2bafebd0a9ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "75056a71-9a18-43e1-9d7f-48e5db7a16c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e520c9-43be-42c6-ba09-eeae790ac584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d9254fc-1f1f-4ad3-8130-2b3d6fc4ea13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72a953fd-37a6-438e-bc2c-16f5ddc8daa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed7621d7-ded4-49da-acc9-807563166d37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeef531e-b8c1-45d9-9d2a-433debfa533e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab3d3581-9b2a-435c-be7c-6ede9ad9a3d1"
                    }
                  }
                ]
              },
              {
                "id": "6134e159-7219-4e98-8309-78a3fcbb1444",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9f6464f-0686-44b2-b728-5d28b646278b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b42fb4f-55b0-4e9c-8ccd-19a5aaa121ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1dcca20f-c5be-4af7-b672-eabdc2f72b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f192574-3436-442f-9df9-a58a48866937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1709309-8dd6-4c68-af91-12b819994324"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff46919b-e36c-4944-a1d9-e7afe5d80253",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b26d125c-6467-4b04-90a8-3961d5f095d1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c3dbf84-d403-467f-b172-d5f2ecf5afa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcc5fb23-6d89-49a0-8c62-9cf7b96993c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67c27f15-7c7a-4ebc-a05f-c0916fb3016c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e91c7399-cbde-4439-9ad8-b599c53c35da"
                    }
                  }
                ]
              },
              {
                "id": "b13fad1a-f339-4789-9fec-087a84889439",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33f192b9-b857-46b6-bba6-af7139a38a31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "890de76e-a1e4-4a3c-940e-df2dc163ed76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "972badee-77a6-4b0d-b8ac-0b8b02a7d020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c48155b9-abc0-427a-b5f5-624b6472b075"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "162a90d5-5614-4d5f-b253-31b7f14070eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4064f255-5979-4cf8-bebe-23274e7297a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "370f1c8e-0292-4642-8ee9-868fd61dac83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9eff80b4-733f-4aaf-a7b9-8a752a4b79d3"
            }
          }
        ]
      },
      {
        "id": "8dd5e91b-aee0-45bc-af66-3c0d3a178788",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a29681f-46a0-4f53-8a4b-4a9087360e11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28d03317-7762-4010-9047-4bbbab498051",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c71e173b-55aa-4361-9eca-6b1a187f4f91",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb7f0f2-db42-4424-8f05-fab0f8b43f62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9682d314-067d-4115-a3d3-d2afd0333cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088dbda8-87e3-4fbc-a429-7c51c6bdaeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25ce3d94-da61-4682-a99c-c123d336cddd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e7cedb2-1993-4c91-9904-097da6cab535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65b34713-6cff-435a-a06f-2ac7bae56783"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f1e70a-2579-47fe-a31b-f61a540f9414",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8b90184-4524-4b65-a94d-9dbbf19847ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23e17703-7c3d-428a-ae94-0e2ba26c4818",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4209335e-07d3-472b-98dc-943ad3736477"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58b86f85-c21e-43d0-9d26-ef4d87bc3132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d085460-0911-4628-bd8f-9207f33325fb"
            }
          }
        ]
      },
      {
        "id": "570643be-947d-46d0-82f7-edfa2d979f1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7d5ab4b-d243-42d4-b17e-302076894c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a9162ff-f720-4dc5-9230-930b0907fc76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbc5586c-f5b6-47f3-8cc0-03640072fb87",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab79f275-eacf-411c-ad29-4bd2474b1403",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9b3ef85-1c44-49e5-87af-db5648fb48e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b54104-d209-4255-ba35-8c8e1ab0232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8af53f4e-1855-4abf-8d7c-b804606b13e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07661977-ad5b-46d5-a7da-7eba38a2f3b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afc15745-4c8f-426c-ae9a-dffada6d6c48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28d8fbf9-7321-42df-8a8e-7699f0f8de0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50c22cee-cd88-4400-922f-5c72ff2be940"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a9d6d32-8de9-4dfb-b53e-857942292889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c60201dd-4138-4056-bc2f-832074a03d6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3581c60-6c26-4f5f-8110-613ba5f37795",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8331ff1b-834f-425c-b262-56c6e3fb7e1c"
            }
          }
        ]
      },
      {
        "id": "00fb9551-8134-47c7-aa45-093864b3787b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8238a863-80ff-4d6e-b9c7-799008515584",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c97a6f0-65b3-4bc6-86bc-6c2f111a7aaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32308945-fb4c-4f4e-8540-b09837c554e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952156c8-9caf-4246-9728-28acd5e873f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a1ca47b-6f37-4ce5-80a0-0c44c1ea9a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0998f469-d0a1-420f-b853-5f8715cd710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "453b0c39-9091-4980-a669-ca3be9f24444"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "271d067a-5a01-4a1e-8f1b-75b158c65b64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a27d977-00c7-4a6c-95aa-58fcd38490f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf3782c-c8ad-4bf2-b27a-80349025ec96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43fec0fc-2f61-492e-bbb8-3272778ecb34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "951c0116-564b-4922-9216-b7d4f35d8a83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88dfe99b-00eb-446e-b5e4-2128de3cb44a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a75a00d4-3497-49a4-814f-a43ed1814997",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "235fa98e-4d74-4383-8276-ffa4611da08f"
            }
          }
        ]
      },
      {
        "id": "c7242ad5-83ae-4651-8762-94a82e8908b4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bd13a90-09d7-4e06-8b02-3f08880167b4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "956b4fd6-016d-48ee-a83b-f4a9bea65d14",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "75379a98-5eca-4dca-80c7-9a0440577cd6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e4ed71d-2ec6-44ae-8968-69af07cc357a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa47c97a-1c8c-4a8a-a0f4-db307449a0e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.633802816901408,
      "responseMin": 3,
      "responseMax": 262,
      "responseSd": 19.731464425011225,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688863923557,
      "completed": 1688863937260
    },
    "executions": [
      {
        "id": "dc44c20a-0086-44c6-be4b-50fbda6f98a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e209de94-6182-43e5-9c2a-b21b4eaff0ae",
          "httpRequestId": "33f6c761-23b8-4e62-8e3c-fa4c6e3d751a"
        },
        "item": {
          "id": "dc44c20a-0086-44c6-be4b-50fbda6f98a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "67c64662-f052-44a0-b8d5-877ad52a0e96",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "501512b1-ebaf-4b0d-b31b-17c8aa91973d",
        "cursor": {
          "ref": "f3612c44-af9e-425f-8ac7-fbff2c0a092d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0569c75a-eca2-497f-99ca-6d4341961676"
        },
        "item": {
          "id": "501512b1-ebaf-4b0d-b31b-17c8aa91973d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc91ec11-4f51-49cd-a724-777c07508c12",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e2a03adf-83d7-43cd-b45f-76fee6dfe902",
        "cursor": {
          "ref": "fd2bd5e9-26aa-476d-be08-98c337f44adb",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d250576-ae9f-4441-8dda-7704cc16ef10"
        },
        "item": {
          "id": "e2a03adf-83d7-43cd-b45f-76fee6dfe902",
          "name": "did_json"
        },
        "response": {
          "id": "734dc6b7-ba08-45a6-8dfb-2ca998fba4a8",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee08a5c-b890-4b9e-bcce-073c8de072f1",
        "cursor": {
          "ref": "b28e9bf2-c6f8-4e3d-a572-1e6cdaa69e3c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6a25b82-3c85-4100-8165-332f4cf7eb0d"
        },
        "item": {
          "id": "3ee08a5c-b890-4b9e-bcce-073c8de072f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ad2ace5-2b1c-4198-92ea-2acdc358e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee08a5c-b890-4b9e-bcce-073c8de072f1",
        "cursor": {
          "ref": "b28e9bf2-c6f8-4e3d-a572-1e6cdaa69e3c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6a25b82-3c85-4100-8165-332f4cf7eb0d"
        },
        "item": {
          "id": "3ee08a5c-b890-4b9e-bcce-073c8de072f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ad2ace5-2b1c-4198-92ea-2acdc358e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d162a3d-caf7-4d08-a055-e9ddbb1233d2",
        "cursor": {
          "ref": "87ec49ce-c33f-4fe5-a588-7ce147883b4a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e21f164f-56f5-49fa-a364-bb367536963c"
        },
        "item": {
          "id": "0d162a3d-caf7-4d08-a055-e9ddbb1233d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "26fc3f6e-965e-444b-aa17-0ab1750f72db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec48c5-ff60-44e6-a2be-07428791ea45",
        "cursor": {
          "ref": "23b89ae2-d4f1-4026-b995-6e949c1d08f6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b03f8468-46d2-4044-adbb-12d95d76a388"
        },
        "item": {
          "id": "62ec48c5-ff60-44e6-a2be-07428791ea45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a4298f95-03ed-4216-9347-6d0d578022a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa5cbf4-0db4-4706-be88-30d875fb73cc",
        "cursor": {
          "ref": "c2bd732a-6c84-4dff-a885-2f9ed75922c0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2b1f6f39-2653-4aed-8e7c-643238c6f1c7"
        },
        "item": {
          "id": "4fa5cbf4-0db4-4706-be88-30d875fb73cc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bb57e0d2-c1f7-4895-9d45-ba4aec5d8a76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9d1e36-a016-41d1-b2c5-effdf24ef743",
        "cursor": {
          "ref": "232520db-e2ca-46a0-a5ba-7ff316928489",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5c0b1d7-7b89-4a46-b7de-7842593931a4"
        },
        "item": {
          "id": "7c9d1e36-a016-41d1-b2c5-effdf24ef743",
          "name": "identifiers"
        },
        "response": {
          "id": "35177fca-1f77-4d03-ba32-67b8ad4c3b40",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c872e7dc-fdcf-4b8a-a055-0dd8e8aca749",
        "cursor": {
          "ref": "d2487c8f-eaa7-4663-8518-41c3199b6aba",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3764e972-9b80-4253-92b3-dc213cc9c178"
        },
        "item": {
          "id": "c872e7dc-fdcf-4b8a-a055-0dd8e8aca749",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "20ab699e-75d7-4612-81a6-7bd62e8f463f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87010dd-31e7-41c4-9d0d-14612fffa80c",
        "cursor": {
          "ref": "58999588-0b09-4418-873a-ec24d04d2468",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f356370-a70a-4957-aef5-cebcf1cbe71e"
        },
        "item": {
          "id": "a87010dd-31e7-41c4-9d0d-14612fffa80c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c3fd36e5-5539-40d4-936e-0c03ea9cf143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce30f73b-c550-480a-943b-91dd7e57133d",
        "cursor": {
          "ref": "0f42437b-af7d-4f04-b785-24a67a7ebd23",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5e790512-7d7e-43a2-90af-4ffdb242a66e"
        },
        "item": {
          "id": "ce30f73b-c550-480a-943b-91dd7e57133d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "72076f7e-ab0b-451f-9a6f-dc2cf9e369d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b71da2f-9a90-43eb-9264-b8e981a8e1b1",
        "cursor": {
          "ref": "a3da8686-700e-42d8-ad53-3cf9e6503341",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5908326-a066-4f64-bc6a-9c0ec6816f4e"
        },
        "item": {
          "id": "6b71da2f-9a90-43eb-9264-b8e981a8e1b1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8a7f9403-5a5a-42dd-b3f4-df87aa6e4377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d695a51-a706-461e-a179-8eae8cb3e22d",
        "cursor": {
          "ref": "ef6b55d1-39cb-41aa-903f-314f94a21f28",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e896d6e1-4e25-4750-81d2-ee6f43df2a1f"
        },
        "item": {
          "id": "5d695a51-a706-461e-a179-8eae8cb3e22d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4919ab6a-9d9a-401b-9733-156bea25b1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5999a2d-ba19-418b-b674-60cc2f502417",
        "cursor": {
          "ref": "74ed9eb5-3092-4599-b970-fd154b548a59",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "50679458-be17-4ae2-a3a5-7ff4dc8e88fa"
        },
        "item": {
          "id": "f5999a2d-ba19-418b-b674-60cc2f502417",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "59c7a605-b564-4bde-bcba-46414b42346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bead99ec-d262-4ab8-8c04-d991c1dece05",
        "cursor": {
          "ref": "1808b24e-0b13-4ad3-ae1c-682133fc79c0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "196fe3ea-9b0d-4749-92e0-9ae63e63b716"
        },
        "item": {
          "id": "bead99ec-d262-4ab8-8c04-d991c1dece05",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "658b4d01-c553-47a5-9594-44a4b17c6686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38060265-54e5-4da5-b931-22a4a7314154",
        "cursor": {
          "ref": "0b11743a-ca42-451e-9c75-851bf6914e26",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "90ed620e-27e8-4f15-982d-d53393645406"
        },
        "item": {
          "id": "38060265-54e5-4da5-b931-22a4a7314154",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "685fe823-1113-41d4-9cf3-c6dcd463419e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7980ae4-0dcc-480d-a51d-a5a284a00456",
        "cursor": {
          "ref": "0cca1e7c-cff9-4a81-920a-64b51e79f368",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5dcee761-20b9-466e-b285-2ac6309eca15"
        },
        "item": {
          "id": "e7980ae4-0dcc-480d-a51d-a5a284a00456",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0542b2c-73b9-455f-af7a-e173ed4feb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609e2fc8-2897-4e22-a509-26a65492dd1a",
        "cursor": {
          "ref": "ae6eb1c3-20c4-4b6a-9ca2-f6cb6cba3ff9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "587695a6-843b-49ab-9ce2-360e41345d92"
        },
        "item": {
          "id": "609e2fc8-2897-4e22-a509-26a65492dd1a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af84e187-6e28-461e-8d14-804294012c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339826e4-2c33-46f4-a534-1d8cc90107a4",
        "cursor": {
          "ref": "0e98e6fa-6f8f-43a2-bbab-13d1e8efefb0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b4da5c65-b730-4574-95fc-89290e3e59a5"
        },
        "item": {
          "id": "339826e4-2c33-46f4-a534-1d8cc90107a4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "242d665a-bb10-4281-852b-d968160c7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38090fcc-c86f-4496-a336-2c2b6f80ef07",
        "cursor": {
          "ref": "aec69767-147a-4b24-be34-5b4de29e2818",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "282040de-3365-4728-b359-f9e7c6fbf4f9"
        },
        "item": {
          "id": "38090fcc-c86f-4496-a336-2c2b6f80ef07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "65951824-e759-4645-a5ec-0715257bdaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825f5cb3-b6f4-47a5-be95-0ae34c9821ae",
        "cursor": {
          "ref": "42c48ee5-a398-4e3f-a8de-b7982c78f2bf",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ad041b6-a8ae-4f91-b12c-46d3652e81fd"
        },
        "item": {
          "id": "825f5cb3-b6f4-47a5-be95-0ae34c9821ae",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c56c8855-8770-4e5a-926e-6fe3b84fcd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c9e872-812b-4539-aeed-ce6e0a7bf1b8",
        "cursor": {
          "ref": "c0b9f653-c72a-46d1-bbc6-51f94915edbb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8d2e6973-eecb-439d-85cd-631861b88c8e"
        },
        "item": {
          "id": "c6c9e872-812b-4539-aeed-ce6e0a7bf1b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8ca209da-63b8-426d-aff0-8ecc8d0a80f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d958b-2360-4687-b8f7-fe0109801ea5",
        "cursor": {
          "ref": "6291dcd3-7683-417f-a98b-812c20ae251f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6dad8ba0-17ab-4aac-8512-076acb5c74e1"
        },
        "item": {
          "id": "069d958b-2360-4687-b8f7-fe0109801ea5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5740b4c2-dabd-4167-8c0d-5e5aa16a9036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ac15e-fb86-4cf2-88c7-de6b0c85a071",
        "cursor": {
          "ref": "55b84eac-7914-4023-a8a3-fe8894b1f117",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0f58125b-9035-4414-bac0-f7262d121be1"
        },
        "item": {
          "id": "ee0ac15e-fb86-4cf2-88c7-de6b0c85a071",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "416d7b19-35c2-4ffd-9a70-cbc3c97cad2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e94b2-cd0b-4a2b-88f9-27c60e8dad2f",
        "cursor": {
          "ref": "28014c38-818d-483f-8dc7-b2f647802713",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c51d117b-b658-4e81-9a4b-06f27aebb8dd"
        },
        "item": {
          "id": "a54e94b2-cd0b-4a2b-88f9-27c60e8dad2f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3823c919-e995-498f-b3f6-a545fe816e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e560ac08-cff8-4cfe-873f-f17c02d172da",
        "cursor": {
          "ref": "c598f37d-174d-4b59-b0d2-86bec9c882de",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5c3ea849-fdf5-481f-ae47-636c09c8fc50"
        },
        "item": {
          "id": "e560ac08-cff8-4cfe-873f-f17c02d172da",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b0abdb83-5673-444b-a57a-051886f8ddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c97d4f-a0ef-4cb2-86e9-5775411cd843",
        "cursor": {
          "ref": "4636046b-0e73-4f89-8036-2e7585fa2443",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "59becb2a-32e6-4106-942c-8f440006dd82"
        },
        "item": {
          "id": "80c97d4f-a0ef-4cb2-86e9-5775411cd843",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8712f6c5-9845-4986-b1bb-9f2773029db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952625a-249b-4a9a-b986-81d77f29bc90",
        "cursor": {
          "ref": "179d0d54-b3dd-427f-ba7f-9f477fdf66fa",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7936232d-3037-431b-b637-efc91a1f89b0"
        },
        "item": {
          "id": "c952625a-249b-4a9a-b986-81d77f29bc90",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1ea1f944-453a-4c75-adef-71a4ef5378d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62420469-cd45-4d1c-8d4d-4fe01b5f3193",
        "cursor": {
          "ref": "f4ac3ee3-09ea-4159-a6ac-b99d46d7fed2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0caaf96d-e3cf-46b0-9e33-1a86a53790c8"
        },
        "item": {
          "id": "62420469-cd45-4d1c-8d4d-4fe01b5f3193",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3292e00b-0f5b-4f1e-8f24-55434575604a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d5115-d1ab-4156-8704-0635b5f6357f",
        "cursor": {
          "ref": "2502e51f-985c-4482-aca2-4210969fa0b4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "23393316-ba15-4509-8a9d-a36919c5b24a"
        },
        "item": {
          "id": "992d5115-d1ab-4156-8704-0635b5f6357f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5bf9f590-d600-4576-8ecc-0ae3e9b2fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8a52e4-9a65-40fb-b336-90a0e0caf388",
        "cursor": {
          "ref": "bc708e13-95f7-461f-a54d-e17252b85e31",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b300507b-cdc6-49f7-bdc2-c43e24944f05"
        },
        "item": {
          "id": "7e8a52e4-9a65-40fb-b336-90a0e0caf388",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7f0caa5b-7152-4634-8ea6-6c96eaed464a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213f973a-5d04-402e-8acf-499f3608a21e",
        "cursor": {
          "ref": "ea0be469-ea67-443e-8ba4-8671df7df58d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b9cc95c4-ac5e-48d8-a24d-96021e6edc4b"
        },
        "item": {
          "id": "213f973a-5d04-402e-8acf-499f3608a21e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "813456d5-40f0-45cf-8a87-af01bde69d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01235aa9-a158-4753-86b9-e413b4585372",
        "cursor": {
          "ref": "f17b3629-476f-45db-91d5-bf27f8ebe49c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "606a99ba-e039-48bc-9d51-706d44dfa0cc"
        },
        "item": {
          "id": "01235aa9-a158-4753-86b9-e413b4585372",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9640773d-17bc-4951-b369-7ad37530de52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639617c-0694-4def-885f-4f59d3a60de9",
        "cursor": {
          "ref": "2b66e173-19d3-4ba9-b6f9-39d1fab19484",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab800576-103b-4cfb-b815-f2fd2d0df2c3"
        },
        "item": {
          "id": "4639617c-0694-4def-885f-4f59d3a60de9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b3054e51-a0fa-48bf-8bce-4152dd5879d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877291e9-349c-4d78-a7e0-9a7d4253f66a",
        "cursor": {
          "ref": "188903e7-a494-47a1-aa2a-9212f42c4f4b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7fa3e68e-dc72-4abe-bd74-cce5b1d2995c"
        },
        "item": {
          "id": "877291e9-349c-4d78-a7e0-9a7d4253f66a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "600805d0-e5c1-492c-8a18-510f145d710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b025ee7-74a9-469c-a706-a2d3403a3158",
        "cursor": {
          "ref": "9857cc41-5c55-4f66-a869-06fad59949e5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5aaf06b-b9ca-4b5d-a38e-bfbc7f3ccb20"
        },
        "item": {
          "id": "0b025ee7-74a9-469c-a706-a2d3403a3158",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7b4d4e8c-196d-44be-9d29-b3d704b9f2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b49c87-5c5a-4da7-a826-6eac1594a786",
        "cursor": {
          "ref": "26b1d6b1-4763-4ded-8755-ec547e042d1f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "694aa4f7-649a-4fc0-9f11-a3cbe272b4ce"
        },
        "item": {
          "id": "52b49c87-5c5a-4da7-a826-6eac1594a786",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "01785efd-3ce7-42a5-aa32-52128cda7175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c75ec0d-f2d6-4974-b4d6-d9ba89fbdca1",
        "cursor": {
          "ref": "4317e01c-0331-4302-91b9-56daf0546aa3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd1eb4f6-e2b5-4dcf-826d-9babd5a9420a"
        },
        "item": {
          "id": "1c75ec0d-f2d6-4974-b4d6-d9ba89fbdca1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e5739b6b-efb2-4d31-962c-357ed5a9dac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefbff50-fe29-4bfc-aa95-4d1a04771fa6",
        "cursor": {
          "ref": "25c35711-7017-4850-a532-249bd92fd65e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d69005cb-fd12-4dab-a99a-da213b2aeda2"
        },
        "item": {
          "id": "eefbff50-fe29-4bfc-aa95-4d1a04771fa6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b51f9e83-8c86-48d4-87b8-be3829781575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb846c1-1e84-4b8d-b2de-01e9091b271b",
        "cursor": {
          "ref": "d9f46073-36e2-4bf5-aba3-f3bc9f3e25ca",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8bbd7414-e2ed-4b2c-886d-c474e1dc0644"
        },
        "item": {
          "id": "8eb846c1-1e84-4b8d-b2de-01e9091b271b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9429b32-41b7-4f97-98bd-d533e6aa483c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b269a3ec-e8d9-4f03-a769-4f9e9d7b537d",
        "cursor": {
          "ref": "9fe48dca-5aa5-49b0-9376-de12dae450ee",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bada477f-2b20-4a3d-8263-b227698d2985"
        },
        "item": {
          "id": "b269a3ec-e8d9-4f03-a769-4f9e9d7b537d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5634fe6d-8b9b-4a9c-89ce-acf04ddbacca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baae0892-a956-4df8-a8e0-a5ba6f327258",
        "cursor": {
          "ref": "8e81919d-ad65-4cda-802f-e7ce0c5878d7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "23498cad-4aed-446d-9646-87025e23480e"
        },
        "item": {
          "id": "baae0892-a956-4df8-a8e0-a5ba6f327258",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b93f5109-3ddc-4620-bb9b-c7afc7293102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419799bd-7ea8-4e38-800b-447f937aa1ff",
        "cursor": {
          "ref": "8b17e994-a07a-4d52-977b-689cc20ead9d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "120c8ffc-df13-41e1-aec6-33d0374246f5"
        },
        "item": {
          "id": "419799bd-7ea8-4e38-800b-447f937aa1ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ee6e719-cf1f-451e-99c0-00895e8357b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee1b31-256f-4815-86d0-1f43ba6f8bb6",
        "cursor": {
          "ref": "7183e22b-d7b6-430e-b339-b4cef0646269",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4d4145d-6f0f-49a6-9c79-0c374c2566cc"
        },
        "item": {
          "id": "aaee1b31-256f-4815-86d0-1f43ba6f8bb6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "63f28d88-3461-485d-a55e-db8ab54e4595",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58d241a-7a28-4445-8702-d80a60b24f8e",
        "cursor": {
          "ref": "cfb01375-8d35-4493-8e22-161e8641e60f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a169e58-4411-47bd-9c0d-6d0e22d9f2c5"
        },
        "item": {
          "id": "a58d241a-7a28-4445-8702-d80a60b24f8e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a84643ed-4996-4ea4-a2b7-03feb30975ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af684b-5764-4ecf-9bba-20ec8324bd0e",
        "cursor": {
          "ref": "5332921e-42a9-4ccf-b806-a5c688687b66",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f675e9ea-925e-48e1-91a6-f93d216e8434"
        },
        "item": {
          "id": "13af684b-5764-4ecf-9bba-20ec8324bd0e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "347b27e5-324e-4381-b609-c52160cb3391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def6071c-2afd-45e5-b469-664e86d69de4",
        "cursor": {
          "ref": "ee98aca6-b338-4fb4-86aa-a069c35f367c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc9a6ad3-def9-4700-9500-dc93efbfe18e"
        },
        "item": {
          "id": "def6071c-2afd-45e5-b469-664e86d69de4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "193c6d16-aa13-429a-948a-6dd2fba27b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1e9c7-7acb-47d3-886c-9ef5be1b031e",
        "cursor": {
          "ref": "a0ed7f4c-bb87-4044-afc0-64f2542b8e48",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a6157dd4-2177-4e8d-a44e-2c62f2962e73"
        },
        "item": {
          "id": "76c1e9c7-7acb-47d3-886c-9ef5be1b031e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4515e592-2cf1-45f5-9cbd-14b3f8150a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7731ac57-37e9-4ab4-b2b6-c5a65ab82570",
        "cursor": {
          "ref": "ae96bcc1-1b49-4dfa-90ba-fb91709acd8c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1a6c9743-e0bf-4193-af3c-3145e83bbc87"
        },
        "item": {
          "id": "7731ac57-37e9-4ab4-b2b6-c5a65ab82570",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "71929cb0-d8d9-450a-8f71-ffc73b42b33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda24330-5183-4684-99d3-cdb81a71427e",
        "cursor": {
          "ref": "ab0f2f6f-30a8-4cbd-8090-d014999e6062",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bff4c4ee-d30b-470b-86f7-8833ddbdae71"
        },
        "item": {
          "id": "eda24330-5183-4684-99d3-cdb81a71427e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1f39e98b-a5e9-441d-9951-620b01b118ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884ce2c-9b06-40af-8f81-c6d1d3b45a1e",
        "cursor": {
          "ref": "b193530f-8399-4d2d-8ff2-e16544d25848",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98de0c54-72e5-4121-9464-8c45bde4ee4a"
        },
        "item": {
          "id": "7884ce2c-9b06-40af-8f81-c6d1d3b45a1e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a7d7dc77-8e62-4266-9bf7-febd70fcf198",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc80df1-684c-48de-b3b9-822c3d37a0bd",
        "cursor": {
          "ref": "d9a7cf84-15d4-451f-a538-a0c29556cd6d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9e756d49-78e1-4abd-ba8b-7ffe20c2c5d2"
        },
        "item": {
          "id": "fbc80df1-684c-48de-b3b9-822c3d37a0bd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "771ffdaa-da13-493b-a3e6-c2ebb61074cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87176689-cb00-4413-bd89-4ef3af9540e1",
        "cursor": {
          "ref": "9557bf08-fd0e-4e13-8564-f1296de7c3ba",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1dd34a00-270f-41f8-b2b8-b06a715b500f"
        },
        "item": {
          "id": "87176689-cb00-4413-bd89-4ef3af9540e1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d9c5aaa-20a6-4572-b186-b80f60c4cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b97733e-99c1-4e28-a0b9-1d3f9577176f",
        "cursor": {
          "ref": "6eb72cb9-0a67-463a-a200-7e0a3d92fdfe",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "83ab5d6f-4715-4dcf-9b10-be8d7b2e23eb"
        },
        "item": {
          "id": "3b97733e-99c1-4e28-a0b9-1d3f9577176f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e0d2c923-cf93-459f-b790-1ea2e064fb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc025b3-95d8-4e6f-b5a8-4e5d3feeb380",
        "cursor": {
          "ref": "529cd423-da71-4ae5-9a25-7e2a536f006a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dadf1a89-b9f7-4f37-8db1-581ea3759fa2"
        },
        "item": {
          "id": "cfc025b3-95d8-4e6f-b5a8-4e5d3feeb380",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9ae7e4c6-be41-42e7-939a-f9d2c7d9b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d74b69-ab47-4ddd-93b3-6285e40d2510",
        "cursor": {
          "ref": "0b9e4d0f-4592-4dae-8e54-52d210ca42f9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0c5acaf-258e-420f-a6b0-b5f641c1463e"
        },
        "item": {
          "id": "72d74b69-ab47-4ddd-93b3-6285e40d2510",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8becf92e-3368-4aa6-a536-22e9ae73ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31796a03-a0ec-46e9-86e3-2d9204c44461",
        "cursor": {
          "ref": "5c056601-3c7c-42ed-9450-5bb038433a49",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f2810606-96c0-4c70-9b39-332ee9022d0f"
        },
        "item": {
          "id": "31796a03-a0ec-46e9-86e3-2d9204c44461",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "88829483-8981-4ba6-bbf8-cc9ef4166f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ab5577-4a1d-4e93-b352-613a81a6e82b",
        "cursor": {
          "ref": "2e3fdfd3-72e2-4074-a95f-c0428106bdbc",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5868555f-378e-42a7-9411-b6f9947d2e18"
        },
        "item": {
          "id": "66ab5577-4a1d-4e93-b352-613a81a6e82b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4140f263-68e0-4278-83c2-4430d2b94031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f18afe-a762-4b55-a757-96cb0940e115",
        "cursor": {
          "ref": "ca3ccb5d-f36b-41cd-845b-8456d4fd44b4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7fbd03f3-3ed8-4378-b75b-69a3bbc160e4"
        },
        "item": {
          "id": "72f18afe-a762-4b55-a757-96cb0940e115",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b661e0df-3131-4143-b9ed-fb7ef273a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc2bd82-8b72-42a1-aed9-aa989bbea750",
        "cursor": {
          "ref": "542e16aa-5ea7-4f3c-a7cb-6277113b88d8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c1448405-d1ea-493d-a386-c7cf21a43d93"
        },
        "item": {
          "id": "8dc2bd82-8b72-42a1-aed9-aa989bbea750",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "95b84ef5-a326-4330-88cd-f783cfcecfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c9798c-c23e-42c7-ae36-d306cdeaf69c",
        "cursor": {
          "ref": "09d03433-cad8-45b5-a043-bed5cfcd69eb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9082d136-4df3-433c-af1a-2d334f7511c3"
        },
        "item": {
          "id": "46c9798c-c23e-42c7-ae36-d306cdeaf69c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6184df30-5b89-4a33-8a1b-79afbb7f2215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba363d9f-c92f-4b5d-a02e-f30f7c40dcef",
        "cursor": {
          "ref": "a02594a0-96ac-420c-ab63-23e779548804",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5ae102dd-3cb9-4ce3-a84b-6064237d34d6"
        },
        "item": {
          "id": "ba363d9f-c92f-4b5d-a02e-f30f7c40dcef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f5a5a9b-b53b-434b-a1ab-143a1d0b9950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d08c7c-be1e-47cc-97c2-329cdaa1ba9d",
        "cursor": {
          "ref": "e6eda606-db31-40ee-94b7-05cfa0cdee3e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d71a4374-886e-4bf0-b8f6-a132f4798c92"
        },
        "item": {
          "id": "77d08c7c-be1e-47cc-97c2-329cdaa1ba9d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "49f2ceb0-4a5e-4a2b-9574-b5dd89639d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135165a-d6b7-4207-b322-d32a19f26558",
        "cursor": {
          "ref": "1982b3e6-0b88-4698-b5ec-aefacde9f83c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "552dbffd-00fd-4439-94fc-8830ae87d0b6"
        },
        "item": {
          "id": "5135165a-d6b7-4207-b322-d32a19f26558",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ce7f21a-d3b8-4202-9cd0-bb1c8dd23ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0d3659-6064-4669-b9fe-20556eff7e60",
        "cursor": {
          "ref": "ec05c111-1e9b-4f1d-80be-49e328dd5627",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4f12286a-6f15-4c9d-9049-80f4a10c75ec"
        },
        "item": {
          "id": "4b0d3659-6064-4669-b9fe-20556eff7e60",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0c7a8b8e-32bb-43ee-b368-4aec1f44e5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb0c84f-365f-4643-bf34-3698ad05c4ae",
        "cursor": {
          "ref": "2f0a596a-b635-4d96-9911-292cf8b568c2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "16ba93c5-78ab-4564-b505-47e003a9d7ff"
        },
        "item": {
          "id": "bfb0c84f-365f-4643-bf34-3698ad05c4ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0c0f55f0-138e-4779-bc87-9a05667ad9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b90366c-c899-4b65-8a86-0a52d469afa5",
        "cursor": {
          "ref": "d761f686-8ab3-432e-9249-02eb5a3f26e4",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "97a52358-e711-4792-81cd-e87406fe7f79"
        },
        "item": {
          "id": "0b90366c-c899-4b65-8a86-0a52d469afa5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e061aeb9-96f8-47aa-a7fe-0086e480fc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1f9a33-3b14-4862-be54-f4609f7e4add",
        "cursor": {
          "ref": "1118976b-649c-4b46-8d62-8bec66909d47",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "77794133-9498-4cf7-a4dc-75cc0172005b"
        },
        "item": {
          "id": "9d1f9a33-3b14-4862-be54-f4609f7e4add",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "efbd0736-cbfa-49e4-a831-0ce7a99df378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b83fe1b-c862-4dad-b80b-a5c764c7f1e1",
        "cursor": {
          "ref": "b39949df-45c0-4f14-8700-c7beb3832f14",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "aa4103ee-9bcc-4027-8002-4ec7c9717522"
        },
        "item": {
          "id": "8b83fe1b-c862-4dad-b80b-a5c764c7f1e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b4447c59-b864-4730-b2da-7f9a5b44b16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07517596-3b96-4ed9-8891-06cae6b84a31",
        "cursor": {
          "ref": "ec80b2c6-61e2-48da-a42c-042b8176ad0b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "487b31d0-f759-420a-8325-1c900a2fb85e"
        },
        "item": {
          "id": "07517596-3b96-4ed9-8891-06cae6b84a31",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "58ccf092-5e6a-4a58-b80c-05aca60d368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955d85c9-6ffb-4c14-9026-0839443c0526",
        "cursor": {
          "ref": "af2f223a-a11b-4848-abd1-7bcc325f9c94",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "872983e6-3d6f-4424-bb31-b457f9a0c6cd"
        },
        "item": {
          "id": "955d85c9-6ffb-4c14-9026-0839443c0526",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "af21b082-df4f-4fe0-b01c-ba29c5113664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5302e9-51f7-4254-a45d-b2eda47337ff",
        "cursor": {
          "ref": "67f94109-b14c-4277-9793-026abc4b6d74",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2eebfbfb-6e52-41c8-a97e-b9b0a1e1ad96"
        },
        "item": {
          "id": "3d5302e9-51f7-4254-a45d-b2eda47337ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "258a48fe-397c-4d7c-8e93-939c74d3d0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6d9f6e-0694-4377-8e7a-d25e1742594a",
        "cursor": {
          "ref": "896de6cf-5912-4098-a63e-5093034cc0c0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9bce2901-909b-4d9f-a395-7c0ae73e15d5"
        },
        "item": {
          "id": "5f6d9f6e-0694-4377-8e7a-d25e1742594a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cd7cc831-20ad-4289-9490-e656ca927735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6a023b-86e3-4588-b340-0dada090271e",
        "cursor": {
          "ref": "55241c12-e822-4763-9e18-c23c7eb99475",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "029fce91-f6f1-40cd-bed3-8b95a5e21998"
        },
        "item": {
          "id": "8b6a023b-86e3-4588-b340-0dada090271e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "93ac42a5-428e-42f0-a1ca-f4067489ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965745c0-5b81-4815-a2fe-abd4fde40b12",
        "cursor": {
          "ref": "ae8c9b8d-be92-4727-89a5-a9b3d3f5fec8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8d75c3e-c283-4ef1-bc21-6e07e08cd808"
        },
        "item": {
          "id": "965745c0-5b81-4815-a2fe-abd4fde40b12",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "62f39238-c99d-4ade-a827-c20445b94e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9153d48-e724-42ef-af17-d1ef1d18750b",
        "cursor": {
          "ref": "326f6c85-ebc4-452d-96ed-8d3b974f2cc8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "21224976-a37f-45df-91b7-d4f6b3fb9559"
        },
        "item": {
          "id": "d9153d48-e724-42ef-af17-d1ef1d18750b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e56b4c0-2815-415c-82fd-4d6c1e7b379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f7fadf-4cfb-42f0-a2de-ff680d4cda57",
        "cursor": {
          "ref": "ea4cf630-0c5c-4ed3-b996-9a1677662e82",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "068cb523-2368-45c0-8788-7b17c57547c1"
        },
        "item": {
          "id": "b6f7fadf-4cfb-42f0-a2de-ff680d4cda57",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4bde1073-e797-4177-9976-4cf176f739cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bc8925-0dcb-4f89-bc6e-486f99d94671",
        "cursor": {
          "ref": "1d1d9c1e-d199-4620-8e68-54c6c77ea6df",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1dff8fd0-2d36-460c-9e46-1e0bacfd50fe"
        },
        "item": {
          "id": "46bc8925-0dcb-4f89-bc6e-486f99d94671",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "823058bc-d40b-4402-8503-235924f24bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137471e-f834-4c22-956e-bfcea28d58d7",
        "cursor": {
          "ref": "5d5e82bf-77a2-414f-a8e0-4f0af63ba43b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "98a1e04b-255a-40ae-919a-01cd54f70cb4"
        },
        "item": {
          "id": "6137471e-f834-4c22-956e-bfcea28d58d7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2cf99f9b-f3da-4ea8-ab3a-17cae5e2b7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ea614b-95b9-411b-8756-64a81ad5f6ea",
        "cursor": {
          "ref": "cebcc554-5791-4d13-a9ec-9a113688a038",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c2fe34fb-f47a-4206-93b7-ecaba9841abc"
        },
        "item": {
          "id": "47ea614b-95b9-411b-8756-64a81ad5f6ea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "75430907-46ce-4385-b919-89115f58d893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367ff1b0-70a7-49f7-b134-8fd61c871657",
        "cursor": {
          "ref": "daaaa37a-7913-4d7b-8721-7151a7e9ac66",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "03a9d275-6106-42dd-9bf5-ff0b65589d65"
        },
        "item": {
          "id": "367ff1b0-70a7-49f7-b134-8fd61c871657",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a18553f6-7ef1-4605-a566-db33fe093c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c936c73-219d-4624-a08f-253edf6f840a",
        "cursor": {
          "ref": "fcc113b9-6ff1-47d0-a295-7fc0007bd1bf",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "05606a2f-b463-4214-924c-4b17c19f7cbc"
        },
        "item": {
          "id": "9c936c73-219d-4624-a08f-253edf6f840a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "97ffcfb2-3572-4f79-ab09-80fd0376d00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0334ed1-eaed-426e-80e8-8450121602ec",
        "cursor": {
          "ref": "f08e533c-4b26-4449-bffb-d6e6df870218",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95df3d4f-09a5-496b-abf2-e90ac0b0d9fe"
        },
        "item": {
          "id": "d0334ed1-eaed-426e-80e8-8450121602ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0568ec9c-f795-4176-af56-86f06a45f914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541e4937-0dbb-4f4b-b041-29bcb79d0bf5",
        "cursor": {
          "ref": "961cf396-9dc4-45ee-be76-6151d8fa506b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3cb5667f-fbb5-4309-a933-a3ac2d76eac1"
        },
        "item": {
          "id": "541e4937-0dbb-4f4b-b041-29bcb79d0bf5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2db44d72-47fb-4231-b382-300296a554e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f571fc-22db-4f33-8fd1-c173bfbfe5b1",
        "cursor": {
          "ref": "23e27ee3-eee7-4b69-b074-08544d089179",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a81e3273-64b9-44b3-a5f8-c13ae983c488"
        },
        "item": {
          "id": "b2f571fc-22db-4f33-8fd1-c173bfbfe5b1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ca5c7a99-db2f-4810-8341-3a74054b2e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44b5789-909a-4c08-9d46-a6e0da1cde1c",
        "cursor": {
          "ref": "bcf14026-8746-4b1a-954d-36fa2f9fa2bb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00e27962-cbe1-4103-a0f9-317d647882ac"
        },
        "item": {
          "id": "a44b5789-909a-4c08-9d46-a6e0da1cde1c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d23c3026-70a8-4abd-9ead-558732b7c2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166fe4a0-187f-418d-bec7-fcfb559b7409",
        "cursor": {
          "ref": "d65b43ac-ab4d-446a-9e8a-c6d082e018e4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fbae1f01-40bf-4b3d-9354-69b89cce78ee"
        },
        "item": {
          "id": "166fe4a0-187f-418d-bec7-fcfb559b7409",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "861cd7d6-2491-467e-a312-62fc095e8f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79730fff-3539-43c2-8ac2-273e0441635c",
        "cursor": {
          "ref": "f2965e26-b726-46f4-b2e3-1828b83b6251",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5f7e071d-3311-4ab5-8e61-da659afac146"
        },
        "item": {
          "id": "79730fff-3539-43c2-8ac2-273e0441635c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "73bed477-3a44-4f70-9c35-10de63b8aa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220db6c4-71eb-4f6f-bac3-38c5aa9e4f42",
        "cursor": {
          "ref": "c72a3f7e-75af-4152-815b-b5b0b991bfaa",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "61c0add8-415e-46c4-80a4-850a3a4b53a2"
        },
        "item": {
          "id": "220db6c4-71eb-4f6f-bac3-38c5aa9e4f42",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc0321a5-bb2f-4258-89c1-35aed2bb279e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b614dc-a2ff-482b-b940-7fe811be8c64",
        "cursor": {
          "ref": "fd682ef1-ce8c-455f-98f4-95e999bc6ab0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e49d909a-b16a-4321-9801-1b8f25f2aaab"
        },
        "item": {
          "id": "83b614dc-a2ff-482b-b940-7fe811be8c64",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d976d52f-723f-45b2-8c72-f13813a74624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc381238-3875-4bc0-a21f-93bb7f162062",
        "cursor": {
          "ref": "36c28fee-f944-46e5-b688-f29ac8ff0138",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c55e28cd-432b-428b-a697-f8314fe896fc"
        },
        "item": {
          "id": "bc381238-3875-4bc0-a21f-93bb7f162062",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "20b3b277-103e-4c25-9c24-10e8196b5df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3f2a7-ead8-4401-8ec9-3a47a88acb5b",
        "cursor": {
          "ref": "f6c5954a-3bab-4b2d-810e-69f42df0d859",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "05d55bbb-872e-432d-9c0b-de7492ca1d18"
        },
        "item": {
          "id": "a2d3f2a7-ead8-4401-8ec9-3a47a88acb5b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac7ce4ab-95b7-4af4-8632-e609406bfd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96db13ac-5513-40be-a93e-647e052b73dd",
        "cursor": {
          "ref": "86fcc183-f1c2-4c64-9e82-e9ac248e4d63",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fdbc28ac-15db-435b-a8f1-c9c03e7c436f"
        },
        "item": {
          "id": "96db13ac-5513-40be-a93e-647e052b73dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fdf32d59-029d-42af-b2c1-b111fa113978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782272b-2da0-4c50-af73-88852dc470ed",
        "cursor": {
          "ref": "faaed215-bd82-4d77-b514-184005eb41c6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b77c1ffe-3b95-4ae4-8457-8ef9516242cd"
        },
        "item": {
          "id": "3782272b-2da0-4c50-af73-88852dc470ed",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5784008e-68d0-4733-a104-6e2f2bd4489a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a261b71-5d16-45e9-868f-42398b586cd9",
        "cursor": {
          "ref": "e7df4104-429e-47f1-a13c-770aa2dbcaaa",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a9074b5e-ddf8-40f0-8dc6-b5035c520e6f"
        },
        "item": {
          "id": "2a261b71-5d16-45e9-868f-42398b586cd9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "74370731-9022-4e01-a31c-ef3c4f17ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a391dbb-2b7b-4dd7-94fe-01313e4f3c9b",
        "cursor": {
          "ref": "ca0e1d10-7374-44f5-a9ce-032f4407d2d4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "52fde890-b6af-4fb6-b90d-2fc7815c95f4"
        },
        "item": {
          "id": "0a391dbb-2b7b-4dd7-94fe-01313e4f3c9b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cae979f6-c88d-4c29-a421-bd61fb5cd647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8fead4-63ab-4303-8b37-2c4e103f1e7b",
        "cursor": {
          "ref": "ba750da1-6f94-4ca4-bb17-be7b6ad89d21",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d503afba-aa36-4bd4-bb3e-cea08dc7d047"
        },
        "item": {
          "id": "1f8fead4-63ab-4303-8b37-2c4e103f1e7b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0afd96d8-4178-4a23-a893-6d6551031e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86a375c-4af4-477c-a349-41d7e3e08744",
        "cursor": {
          "ref": "3069ac17-6aff-4cc4-ab73-916230e04fa6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77001321-92aa-4e39-a918-a14b375c8286"
        },
        "item": {
          "id": "c86a375c-4af4-477c-a349-41d7e3e08744",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5b57f11b-f9e4-4c15-8351-8da25b1fadd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88575ae9-b9c1-4ec7-8ad6-44a5740daa18",
        "cursor": {
          "ref": "3646682f-2586-4dc8-97cc-009129cfebca",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f8f6e2e5-0a92-4cf0-bcee-0da6bddb7873"
        },
        "item": {
          "id": "88575ae9-b9c1-4ec7-8ad6-44a5740daa18",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "695b7b24-d6c6-4049-abfb-036908a1c3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251a0bb9-acd8-486d-873d-cd8f6dc03c0b",
        "cursor": {
          "ref": "8b30aa05-c1ce-4cf8-9b2a-0704daad0058",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7e523c94-b75a-4ae0-8751-6975b1c6df36"
        },
        "item": {
          "id": "251a0bb9-acd8-486d-873d-cd8f6dc03c0b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "123db8ca-0729-47a3-bedb-e426b2cad7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea9021b-78e6-4d64-a920-f2b02c427bc2",
        "cursor": {
          "ref": "13930c2c-5738-4147-9cfd-61668b72d3df",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3e7b9f05-6c39-4c8d-bd28-b43afd0911c8"
        },
        "item": {
          "id": "2ea9021b-78e6-4d64-a920-f2b02c427bc2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d25f76a3-40ea-491f-af36-3b153e9eccd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ec2279-bbe8-469d-8c9f-4b35ffb5f1e5",
        "cursor": {
          "ref": "30ee1632-690e-4f6f-83cc-1d4c8a726e7f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ec4c03b-9e3e-4048-be45-95f33adf2d61"
        },
        "item": {
          "id": "f2ec2279-bbe8-469d-8c9f-4b35ffb5f1e5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df41cbf9-1464-4f4d-9d62-99be98ab3bbc",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7776d9e9-bf84-4d5d-9886-614a7538ae59",
        "cursor": {
          "ref": "45f1c858-cdd5-4b80-bcdb-d061542a00b4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3bdc16a-657b-4b93-ad0a-1296911a55fb"
        },
        "item": {
          "id": "7776d9e9-bf84-4d5d-9886-614a7538ae59",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02a9732e-395b-4047-8765-4578d937808b",
          "status": "Created",
          "code": 201,
          "responseTime": 174,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7663153e-72b0-4204-bd0b-89189e92c2da",
        "cursor": {
          "ref": "427dff32-19a0-4225-bcb5-e6c0af884b2f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "161305eb-182a-448a-8e8a-043c6d9a04c6"
        },
        "item": {
          "id": "7663153e-72b0-4204-bd0b-89189e92c2da",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ddf831d2-e0e4-4796-8cda-c31bb543f3d9",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8807024-3b73-4a60-9dab-1fa04ba18a99",
        "cursor": {
          "ref": "478e56bf-9cc6-4e33-91fc-92eb0db2da5a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1680010c-47b6-4585-84f2-9f5117b78b7d"
        },
        "item": {
          "id": "f8807024-3b73-4a60-9dab-1fa04ba18a99",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b69316bc-cb1c-4950-8369-dedb22355611",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2258837f-509c-4846-ad68-4e019386aab3",
        "cursor": {
          "ref": "e419f067-0164-4dba-9bc4-9ea04be99f8d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "13ba79f2-d6bf-46bb-a9df-66f4ff1633b1"
        },
        "item": {
          "id": "2258837f-509c-4846-ad68-4e019386aab3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2759d9e5-614e-4daf-92cd-e70743afbda2",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4b15fd-a1a6-47e3-a182-d0ec7b1cdf62",
        "cursor": {
          "ref": "17570e80-16e0-40ee-814e-8904fb068b9e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c63ace2e-3703-4862-bf3f-5e15a808439c"
        },
        "item": {
          "id": "0c4b15fd-a1a6-47e3-a182-d0ec7b1cdf62",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "384ab769-0925-41a2-9732-56341856f058",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495843df-860d-4121-9764-ce43b8701659",
        "cursor": {
          "ref": "49a5e100-dece-447d-bab5-616cf606ecf1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "647b435d-f1ef-403b-97f1-3ee731096e59"
        },
        "item": {
          "id": "495843df-860d-4121-9764-ce43b8701659",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "825fdadf-e214-4a19-b72a-7765ca07894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43ec433-1422-4acf-b223-f79b7c3085fd",
        "cursor": {
          "ref": "d994924f-f5d1-40e6-be07-666252f37379",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5e8d3e39-2d36-4a9c-b9b7-ce909b4756bc"
        },
        "item": {
          "id": "d43ec433-1422-4acf-b223-f79b7c3085fd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "045f7ecf-ec60-4acd-a591-8cd09cbc747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52af1e58-5831-4676-a3ca-cf13ca154c2c",
        "cursor": {
          "ref": "e118e287-4816-4570-9bf1-cc1c9746cf29",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e299f827-0e6c-4efd-a5d5-4afbadb5750f"
        },
        "item": {
          "id": "52af1e58-5831-4676-a3ca-cf13ca154c2c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7c8ad9d6-c62f-4ec2-88cf-0a6a7a5e0177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71484fe-2d32-49b0-bd59-f73fdea0e500",
        "cursor": {
          "ref": "14855316-9c0f-496d-a01a-cf4b9b8fab32",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b868e8c-2c93-4b58-b762-8dd619c955ac"
        },
        "item": {
          "id": "e71484fe-2d32-49b0-bd59-f73fdea0e500",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "581ee599-50e7-4b8f-82eb-bc19335f48d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c0ed6-af5c-4f8b-9d4e-edf86722fb0b",
        "cursor": {
          "ref": "5b4e91ad-66b2-44c9-a02f-04e9c4ec55ab",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "80617837-490c-4f09-8f1b-2deff881bd26"
        },
        "item": {
          "id": "ff7c0ed6-af5c-4f8b-9d4e-edf86722fb0b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb2ff0c8-4ec9-452d-8c20-33f03ddb8708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890340c3-dcc4-47f8-82fc-a6d892c2eb34",
        "cursor": {
          "ref": "4e696cca-856c-458f-9f96-db26cc4526ba",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "603bb4e7-eced-47d0-94a9-686ff304ba94"
        },
        "item": {
          "id": "890340c3-dcc4-47f8-82fc-a6d892c2eb34",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eac2009c-4359-40db-9fee-8875c49ed588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea942e5-a98b-4679-8e0a-e46402383c6d",
        "cursor": {
          "ref": "35250648-d821-485e-80ab-c9d646a48ba2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ac0f634-23c5-4b1d-bbea-a6a3dc4497d1"
        },
        "item": {
          "id": "2ea942e5-a98b-4679-8e0a-e46402383c6d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "89fb9556-ed31-47b5-898d-ff3cc06818b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef4ac48-ea41-4510-9ee7-9a247278a568",
        "cursor": {
          "ref": "1f7114d0-a420-494c-a7a8-9c597c2bb183",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b5f483e5-59cb-421e-9c18-6db229643568"
        },
        "item": {
          "id": "bef4ac48-ea41-4510-9ee7-9a247278a568",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b057dc96-4876-4af1-8489-a20f012a1605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2916a1-a92e-42f1-abc6-cd1abb200b1b",
        "cursor": {
          "ref": "2ab3b512-81c9-463c-801d-b1a993ac785c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c8c2a966-f663-4702-8ef5-033e7552dd55"
        },
        "item": {
          "id": "5d2916a1-a92e-42f1-abc6-cd1abb200b1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c0290d5-ec30-42be-883b-a4fa9be4b205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0629b-0faf-4715-abc0-e064af4a358c",
        "cursor": {
          "ref": "61471989-7096-40e4-8aaa-f287882aa872",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9b9033c2-dca9-410e-b4fb-0e989024fcb7"
        },
        "item": {
          "id": "abf0629b-0faf-4715-abc0-e064af4a358c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e825816a-2f1a-4852-b547-8b04a68bd7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7ab8e2-f40c-45ad-b57a-316e94b038a5",
        "cursor": {
          "ref": "e3859407-2980-466e-8484-21c40ab30969",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "60b4b26b-c131-4c6b-b3e7-8314c63627d5"
        },
        "item": {
          "id": "ec7ab8e2-f40c-45ad-b57a-316e94b038a5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a799f611-3a2d-444f-aaef-6e9877f1b8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb1022-7f14-45ad-8deb-ea28e6419bd7",
        "cursor": {
          "ref": "09f59e0a-f2b8-465f-895e-832dedcfc40d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e327b81d-7efe-40c6-bd65-a70e7640b8ab"
        },
        "item": {
          "id": "95eb1022-7f14-45ad-8deb-ea28e6419bd7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e9bd6646-929c-47c2-9c64-1686f67e48d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7e5cd2-24c0-4291-b688-c95870514531",
        "cursor": {
          "ref": "027d887e-9248-467a-81c6-5fc269f4825b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "88f39d45-009f-4441-b791-8cc2d8b03d78"
        },
        "item": {
          "id": "ca7e5cd2-24c0-4291-b688-c95870514531",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f1939be-0fda-4491-9f19-6be1c7357ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65b39a5-4017-4614-9c89-b748a06c9498",
        "cursor": {
          "ref": "73b764a8-8b6f-4937-875e-38199bb6a898",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2ab568c5-dda7-4527-91d4-c0dd5ed83e00"
        },
        "item": {
          "id": "d65b39a5-4017-4614-9c89-b748a06c9498",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dbd56d05-578e-459c-93be-62bcc3383c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b6128b-aa0b-4bc2-a41a-239bfd4c5d89",
        "cursor": {
          "ref": "695f1138-2f49-46fe-98b7-2c291dcdff72",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6ae5817-8ab1-449f-8a78-ee58054d4ac6"
        },
        "item": {
          "id": "d3b6128b-aa0b-4bc2-a41a-239bfd4c5d89",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8e5186eb-0198-4de7-95f2-e033cb50b4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee14a15-645a-4852-8a4d-3022d9b91ebf",
        "cursor": {
          "ref": "c60eff4d-f808-4b4d-ad82-b58482184783",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6cf7eff0-da81-43c6-9d84-1a196593f698"
        },
        "item": {
          "id": "bee14a15-645a-4852-8a4d-3022d9b91ebf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d0cfad1-a925-4c24-bc75-513c2b0e1a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99783d6e-29aa-42f1-8fe2-c590ac029dee",
        "cursor": {
          "ref": "e712cc03-543c-4f2b-b457-7bf04b719a42",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b73ccd25-c2e3-487d-8b35-696d2df7df36"
        },
        "item": {
          "id": "99783d6e-29aa-42f1-8fe2-c590ac029dee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eae00b90-3c7b-403c-8c4c-4e105dd6c458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea576c7-f427-413b-8630-897fcfa5fae3",
        "cursor": {
          "ref": "984573c5-fe6b-4007-9d84-bb2be52bd1b1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "be9e1003-b4be-4b51-9e7e-ed6b9474c048"
        },
        "item": {
          "id": "3ea576c7-f427-413b-8630-897fcfa5fae3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6fd22fd-7686-44ca-95c7-5f500363686e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae4c08e-f77c-4892-99ec-67b23ec5763a",
        "cursor": {
          "ref": "c73eee04-1af8-4fd1-9b9b-f8efc4595f10",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "208b9e1c-8776-49fd-bfbc-54bfa5e9bdb7"
        },
        "item": {
          "id": "bae4c08e-f77c-4892-99ec-67b23ec5763a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "70b441cd-9d2c-4fc5-947c-280f4e8806e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b297c87e-541e-4f1e-b0e2-bca910fa1b92",
        "cursor": {
          "ref": "c8cb997a-366e-40e1-a4a6-5392eb5d7ba5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4210088a-ba5c-4c9a-bd5f-1ffa43bc01cb"
        },
        "item": {
          "id": "b297c87e-541e-4f1e-b0e2-bca910fa1b92",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0aabe2db-a5d9-4b37-abc6-6d89e2ee1612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68d43b-a0f1-4591-ba43-a745e09a1fc1",
        "cursor": {
          "ref": "b87b7255-957c-4d43-8770-ac33916752d4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8cd4eed5-7590-4cfa-9d18-f1a1ade788eb"
        },
        "item": {
          "id": "5a68d43b-a0f1-4591-ba43-a745e09a1fc1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0b77bbbf-4f28-467b-aacf-a7717e0855a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc905e13-2230-40b3-9c46-328b84168b08",
        "cursor": {
          "ref": "7e5a8007-180b-432f-bef1-481bca40041d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1dc03ff-30e1-4824-aff7-2b7dd24bb0c7"
        },
        "item": {
          "id": "cc905e13-2230-40b3-9c46-328b84168b08",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d7516a4-d4d9-4156-a619-225c7156f489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b98a05-c349-41af-b6ae-a5018db2fb23",
        "cursor": {
          "ref": "d9987b44-fc9e-4198-b4bc-43e89488eae5",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f9c6a76c-a599-497a-9b4d-f1b64894e5ff"
        },
        "item": {
          "id": "a9b98a05-c349-41af-b6ae-a5018db2fb23",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b4d7cf9c-60bb-4c22-8dda-e5917629ba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c640e2-d239-4d5d-a92d-0620a9f83d48",
        "cursor": {
          "ref": "fd1d78f5-f7ed-41ea-b983-01d0abc8f536",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b4457b58-4191-4e39-bbee-bde1ecc3d013"
        },
        "item": {
          "id": "69c640e2-d239-4d5d-a92d-0620a9f83d48",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78121547-b68e-465f-b0ea-014a64ac2607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a7bf9e-c86c-4646-8166-a51b18abf9ff",
        "cursor": {
          "ref": "e41bf9e4-018f-4dc1-93b5-198ccf34960b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4dda7371-a267-418d-b489-dfcba4d7f000"
        },
        "item": {
          "id": "a1a7bf9e-c86c-4646-8166-a51b18abf9ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a7086004-f08d-49da-bdc4-e64ad3d124c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e550d12-385c-49bc-9afa-bbcb0602a44e",
        "cursor": {
          "ref": "a2f2c0d8-cadd-4bf0-8cbe-774c229e5c36",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1326064b-14f9-4fcc-8d10-bb95d2130aab"
        },
        "item": {
          "id": "2e550d12-385c-49bc-9afa-bbcb0602a44e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5443231-a5f7-4d1f-aa41-6877e744d11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fd71f6-9bc5-4f89-b14a-da5b8e855958",
        "cursor": {
          "ref": "964cd706-56b0-4510-b848-1a7541fac468",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0b5f67da-545f-4af2-be73-4b8d546185d8"
        },
        "item": {
          "id": "42fd71f6-9bc5-4f89-b14a-da5b8e855958",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "160f5a60-9f44-459e-bd17-bb1e3b1068ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f37737-c8f8-4f24-bdd6-0463e7decc0d",
        "cursor": {
          "ref": "a4b93e82-97d6-478b-8ff8-2117214dc431",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db460baa-4664-40b0-be80-eeaba1355caf"
        },
        "item": {
          "id": "a9f37737-c8f8-4f24-bdd6-0463e7decc0d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ed3d51e3-8a6f-4534-90fc-9a014cebdea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd765cc-7ebd-48ed-883b-eb413c94ec11",
        "cursor": {
          "ref": "c810f907-2559-404d-9b1c-054ee0a2f223",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3bf6ce35-a31a-4548-bad1-adfe71f1e979"
        },
        "item": {
          "id": "6dd765cc-7ebd-48ed-883b-eb413c94ec11",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "611e50dd-617e-42d3-881a-d73763d8595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ba44c9-b6e5-4462-9f9e-27519e97d650",
        "cursor": {
          "ref": "c41124c7-fa34-453c-8fc8-249ce0fe212a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "902a9621-ccaa-4299-a139-acc637d815de"
        },
        "item": {
          "id": "58ba44c9-b6e5-4462-9f9e-27519e97d650",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "720a4028-3374-4234-9f0f-3797fb816829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af42c8-2422-4af9-bce8-3c49cb5a820b",
        "cursor": {
          "ref": "d76f9deb-0900-45c3-bf53-3333f62df5b7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0f3970f5-b45a-44a4-9ceb-fff9cd8adade"
        },
        "item": {
          "id": "d7af42c8-2422-4af9-bce8-3c49cb5a820b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b8ac786-a042-466b-9895-b99c3fd41c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf650be-fc81-48c7-a5a8-50636db774d2",
        "cursor": {
          "ref": "c59394b0-8cf2-450d-8359-f35e97184178",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5454fefb-efdb-409b-bc18-6628bd464b71"
        },
        "item": {
          "id": "fcf650be-fc81-48c7-a5a8-50636db774d2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "11983652-32c4-4d23-8342-7878a356cac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e73987-56cc-493e-8890-f511f8fcf995",
        "cursor": {
          "ref": "8ac72dde-2949-4bfd-b7d0-851343bc28b8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e688916b-84c8-4dbb-92a7-31675ec40b47"
        },
        "item": {
          "id": "e6e73987-56cc-493e-8890-f511f8fcf995",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "47355091-bab1-4a62-a076-adbf1fdcbb07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611323e-95fe-4f75-b075-6bf0021f4618",
        "cursor": {
          "ref": "45463a3b-09b2-4d67-842c-a8a3c4a98041",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47737660-1e1f-465f-886e-a5634a4a7624"
        },
        "item": {
          "id": "2611323e-95fe-4f75-b075-6bf0021f4618",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b3568d6-791a-43af-b002-744c18e47da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39737300-e209-4abf-a3e9-0bf7f949ef3a",
        "cursor": {
          "ref": "225b00a6-1551-43a2-8dfd-4c6ec0192da9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1c94be2b-bb11-450c-85b0-2338ce0cd1f5"
        },
        "item": {
          "id": "39737300-e209-4abf-a3e9-0bf7f949ef3a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f843b33f-d460-4bc2-95c4-f913f23dc531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81111375-74df-4eab-a805-0b07681bfb64",
        "cursor": {
          "ref": "0132c0de-dd13-4ab4-ac0d-790825bb3a09",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97bc59d6-a7df-41b5-9cf7-6b7a5cbc9e6c"
        },
        "item": {
          "id": "81111375-74df-4eab-a805-0b07681bfb64",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "004525f5-d8ba-438e-9a3a-26cb13cbcca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b7848-cf8c-409a-9efa-fcfe48e92a67",
        "cursor": {
          "ref": "54086868-844a-44a1-8169-8b7284963a59",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4182b497-c96f-4f49-91b3-8a94b4ba2cbb"
        },
        "item": {
          "id": "260b7848-cf8c-409a-9efa-fcfe48e92a67",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f11503f8-0255-4416-9de9-9153613692c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14272a08-666a-4eff-b852-96f0938756ae",
        "cursor": {
          "ref": "c702b47e-db22-4f73-83df-82e28f7c8e60",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b6e10068-4e7d-4dd6-8e07-a4f7b2e012b5"
        },
        "item": {
          "id": "14272a08-666a-4eff-b852-96f0938756ae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4a0af34-e83f-45c6-9ff2-1da62a47576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae8dffe-b031-4f01-81eb-d8afad05cc3f",
        "cursor": {
          "ref": "0d806148-dd85-443d-b5df-3798a89dfb9c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5122ee81-7120-4f23-9036-1d4db920423e"
        },
        "item": {
          "id": "4ae8dffe-b031-4f01-81eb-d8afad05cc3f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "40728485-1205-485e-875b-f8f51bad2e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eaa229-3153-4551-a1b9-4c9aa9df4d50",
        "cursor": {
          "ref": "ddd569be-8bf4-4c49-b120-25ba890fefd2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d3813f12-e19b-40a0-b46d-256a24bad611"
        },
        "item": {
          "id": "d3eaa229-3153-4551-a1b9-4c9aa9df4d50",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6aa579f3-28b3-4788-9af0-1862ef55962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17a6fff-5cad-4554-b912-974b58980853",
        "cursor": {
          "ref": "c49d0165-36c5-4560-84bd-c62ee90c66a3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a7cb294-a88c-4ba7-ab9e-df8f517728a4"
        },
        "item": {
          "id": "a17a6fff-5cad-4554-b912-974b58980853",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f104d6e9-d9d7-424c-8995-b67d640d9396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44780a3f-5008-420b-b7e4-41db64953116",
        "cursor": {
          "ref": "bcc1e745-c081-4ed5-8292-c6f0b56057a1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "742a0334-0635-4c7a-abac-0091f61b426f"
        },
        "item": {
          "id": "44780a3f-5008-420b-b7e4-41db64953116",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c8b969d2-4ab0-49e0-be29-99b833953b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ceff0e-9f77-4560-905f-6013d32b99e9",
        "cursor": {
          "ref": "63d9254d-50a6-407f-a262-6b12390c8391",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6be0e046-06a3-46b0-bf95-e4ec7fe0ab83"
        },
        "item": {
          "id": "f7ceff0e-9f77-4560-905f-6013d32b99e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ae80292-1269-4379-b52e-4c254df623b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12e9877-0475-457f-96c9-eb84d4182618",
        "cursor": {
          "ref": "73d13a5a-627f-4589-a22c-3b45df057f1f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7f4aa35e-2f61-4c9b-b212-9ec8925948b7"
        },
        "item": {
          "id": "f12e9877-0475-457f-96c9-eb84d4182618",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "193728f7-fc7b-4c3a-bcbf-98bf8526001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e3ba6-cad6-4644-b0db-c4f320871c54",
        "cursor": {
          "ref": "b1dea1ac-5901-4a03-9043-172a39da3b15",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41a2c57a-b112-4035-a9e2-c960f2fc6b32"
        },
        "item": {
          "id": "af8e3ba6-cad6-4644-b0db-c4f320871c54",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "418fe00d-8f9d-4463-9d65-aad62d8f33dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d938d1-1a2b-4efa-851e-304d9ce6d4de",
        "cursor": {
          "ref": "33d6d684-711c-4b91-9dfc-e134e34f7d69",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a53d06bd-7a6b-4d7f-ac9a-5a666c8e63d1"
        },
        "item": {
          "id": "28d938d1-1a2b-4efa-851e-304d9ce6d4de",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2afa364-822c-4e7d-8fe7-6c44e32bf2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7daa0db-f747-49b5-8c07-d93b6a55ac12",
        "cursor": {
          "ref": "d25409b9-df63-4041-965d-dddea9942a61",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad3511b4-6dd0-4f8d-b959-8fd9d17931e3"
        },
        "item": {
          "id": "c7daa0db-f747-49b5-8c07-d93b6a55ac12",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fbedd6f6-daf4-4760-b1c5-d4e3a06d94b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a9f1ab-3857-4cf8-be92-c55faeaa728a",
        "cursor": {
          "ref": "1eb626c9-3fc3-46a6-b8fa-f8bbbf57d824",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9f8fde5-b01c-412c-a32b-3cb250307d5c"
        },
        "item": {
          "id": "89a9f1ab-3857-4cf8-be92-c55faeaa728a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "048ad1b9-fb31-4abe-97ad-c951f4074125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7fc693-5a12-4122-aa29-806b5d01c765",
        "cursor": {
          "ref": "75897dc3-6121-40a4-bf8f-888299718239",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0fb93061-c0f0-4f79-b301-b6e5f0695079"
        },
        "item": {
          "id": "db7fc693-5a12-4122-aa29-806b5d01c765",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3c0a73e5-1b1b-4651-9c4b-e381d69c5844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4a7279-4e05-41ec-a0de-a6616e353dcf",
        "cursor": {
          "ref": "00910d2b-6daa-40b7-be32-e59d71c7a377",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0e205dc1-4149-4221-8e73-61fb603ffe44"
        },
        "item": {
          "id": "1e4a7279-4e05-41ec-a0de-a6616e353dcf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e3db901-0c24-4def-b29b-6738d27e2b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631de557-fe9b-4a05-8931-f4f302fcc9ee",
        "cursor": {
          "ref": "10f48aee-57d0-4534-927a-a3773b032868",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "41fc3bba-d845-48cc-89f4-54bbecb7f359"
        },
        "item": {
          "id": "631de557-fe9b-4a05-8931-f4f302fcc9ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9beb1f9c-dd1c-41f5-989c-8d1cb12b6215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5d6804-7061-41c6-bc44-0450b30bb001",
        "cursor": {
          "ref": "fbb5e4d2-f67e-4fa5-8b8c-10b71606df21",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c558f76e-af29-4994-9076-542510742304"
        },
        "item": {
          "id": "bd5d6804-7061-41c6-bc44-0450b30bb001",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3a0eca4b-d2b2-45da-a55f-ea290e380883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83853dcb-fd52-42a5-bff5-30ba3e15912a",
        "cursor": {
          "ref": "93e39845-3967-4015-9e67-51b3653c29dd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "83277f3d-77fc-4857-ac7d-58b93a8e1c91"
        },
        "item": {
          "id": "83853dcb-fd52-42a5-bff5-30ba3e15912a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8e21e22a-3b04-4c33-972a-38ac37d2f146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245b811-ee5a-4a1a-8f8e-666cdcf3ea04",
        "cursor": {
          "ref": "b4f6e615-4881-4f0d-9f86-569aaa5c25f6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ce8e92b6-9e02-4c5f-a7a2-0325b7dbd9f9"
        },
        "item": {
          "id": "f245b811-ee5a-4a1a-8f8e-666cdcf3ea04",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c8fcb551-51cb-411e-b856-fd36ed253ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8f03e-0280-4c73-948f-a05072518eec",
        "cursor": {
          "ref": "16ce974e-a007-4d33-a8d8-8f694c991f67",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "10836fd5-7744-4f66-ae9b-82dca2325079"
        },
        "item": {
          "id": "8dd8f03e-0280-4c73-948f-a05072518eec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f514696-f0df-4f82-b6d4-b315d01fbf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fddb461-2614-43bb-ba7f-7b2baaff498d",
        "cursor": {
          "ref": "e2e50b3e-bdb2-4573-a974-99fc1a0379c6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ddac53cb-e281-45f2-a396-5cd66e3defc0"
        },
        "item": {
          "id": "5fddb461-2614-43bb-ba7f-7b2baaff498d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a58919d6-fa4b-499a-945f-7e562e44ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a01c041-d3bf-481a-88f2-4edefc712785",
        "cursor": {
          "ref": "9b387f18-796f-4101-81d4-32127a254024",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a4590a42-2994-4ee8-95be-f012f9541a67"
        },
        "item": {
          "id": "1a01c041-d3bf-481a-88f2-4edefc712785",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3001b9ea-2a5c-4c1e-929d-c79632fd0cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53521dd7-8c8e-4fe2-a2f3-65a8f1d0959c",
        "cursor": {
          "ref": "5c53926b-4bea-4493-9889-27138ac4005c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f566cd0c-35d4-4936-a805-189dcb564fad"
        },
        "item": {
          "id": "53521dd7-8c8e-4fe2-a2f3-65a8f1d0959c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27d15dda-c839-45bb-a1b3-74aea36d7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b42ac-5a61-4aba-b057-71f4079b236d",
        "cursor": {
          "ref": "fd23482d-b4ac-4df4-85b1-e2f383f7f926",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "528fa68b-70f0-4602-a82e-ba42fe2a5d63"
        },
        "item": {
          "id": "a67b42ac-5a61-4aba-b057-71f4079b236d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8cbead59-cee4-4c07-b724-cdf0d70fdd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07840c2-6b97-4c49-8a03-5b46625bbd82",
        "cursor": {
          "ref": "7cdca3e0-d15a-48cc-b16d-00c50c7b2d96",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f76cffee-86f8-484c-9d19-6daef42a7d7d"
        },
        "item": {
          "id": "c07840c2-6b97-4c49-8a03-5b46625bbd82",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d890b452-878f-4184-8858-6e8f3c64465c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2592416a-d723-4e74-95b6-1903d3aabfb0",
        "cursor": {
          "ref": "31857d1b-45a5-4ada-a043-b5adc88c2ad8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "58919c63-4c5b-4197-8523-9b3638590670"
        },
        "item": {
          "id": "2592416a-d723-4e74-95b6-1903d3aabfb0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c33cd89b-8b7f-4dd1-b248-ec509d171926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88ff884-6900-4c5e-8784-af64aca8f2b0",
        "cursor": {
          "ref": "ea1b4eb3-9ef9-4c91-8bcc-a6276c76079b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5dad9809-289c-45d2-bbda-52a8f2f8910b"
        },
        "item": {
          "id": "a88ff884-6900-4c5e-8784-af64aca8f2b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34a15c80-895b-4de4-b1dc-c3111f6128f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec87502-1234-4914-90ff-1563b9e109cb",
        "cursor": {
          "ref": "094f57ae-fce8-45e6-9573-e1ba5d744649",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "570a1932-64a0-4514-b4d3-d7176b2b7d2b"
        },
        "item": {
          "id": "bec87502-1234-4914-90ff-1563b9e109cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "526864a1-4110-48ad-b2a7-fc3ab2137705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deacbfb-e173-4896-805b-54cd34380647",
        "cursor": {
          "ref": "5eda89f3-af7d-448b-bbcb-c4a0509e2d7c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c916a630-982d-4b92-8c7d-d3f4d43690ec"
        },
        "item": {
          "id": "0deacbfb-e173-4896-805b-54cd34380647",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4724c6b1-f97d-4bc0-8c0f-e07a313e54f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725b42a-4777-4546-8834-e35c47bf2711",
        "cursor": {
          "ref": "f3e311f2-a640-4055-a7ae-f452a7158494",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "81aa9bfe-ea58-4b58-b103-bc50ce8de42b"
        },
        "item": {
          "id": "b725b42a-4777-4546-8834-e35c47bf2711",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f8d6ce58-8610-4447-b4c8-dd7bff50f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31916dfb-f5ee-4569-90dd-7182e407c68a",
        "cursor": {
          "ref": "1f9a1f7d-cee0-4aab-a93c-4952ae0e7d9e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "57056dde-d0f8-4a16-9b26-6ba92b003f6d"
        },
        "item": {
          "id": "31916dfb-f5ee-4569-90dd-7182e407c68a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1b65b391-749e-4791-a641-551317f1bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a05a4b9-5f79-436b-b876-0a7abafc66e7",
        "cursor": {
          "ref": "a2df1053-f74f-42c6-8421-9baa6c1f7826",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "20de8eea-a41c-458a-8370-66672cd08091"
        },
        "item": {
          "id": "8a05a4b9-5f79-436b-b876-0a7abafc66e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ed256988-8c91-4ef8-a63e-edb02a3920d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c91354-d7c5-4e85-975c-1a4619f12626",
        "cursor": {
          "ref": "b7c4f882-508f-4dd4-921b-d343f33f1513",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d21bf8ad-77b2-452f-b569-a471d4db04b7"
        },
        "item": {
          "id": "d2c91354-d7c5-4e85-975c-1a4619f12626",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3771c793-a95d-475b-9339-005b15f221e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f057c40-edeb-412a-97fa-90fcfa16fbe7",
        "cursor": {
          "ref": "7947583d-3d75-462a-87fd-e08b494326c3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6bdca392-e027-4e83-97f9-f60711c2adb3"
        },
        "item": {
          "id": "5f057c40-edeb-412a-97fa-90fcfa16fbe7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fcc55de8-11f0-43e2-b40f-956f832f5625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af15da97-ddcf-4078-9c7b-4ed6d01357ab",
        "cursor": {
          "ref": "5e3a7488-bf82-4d9a-83fe-2cfc95531a88",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "edf50679-a8a1-4073-803a-560be3c37f70"
        },
        "item": {
          "id": "af15da97-ddcf-4078-9c7b-4ed6d01357ab",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9df264f9-4377-4d95-8ff6-197141669bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1dde04-d216-4045-9746-360c0ff1b560",
        "cursor": {
          "ref": "80b2b2b9-3778-4fad-99b5-b548b690f691",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9768ed43-b2c9-4c35-9ffc-943c36ada328"
        },
        "item": {
          "id": "eb1dde04-d216-4045-9746-360c0ff1b560",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f27759e-e800-47af-9f22-a9d87c5f1a1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993f943a-b15a-475f-8a74-780e5703549c",
        "cursor": {
          "ref": "4cbf8d12-a479-48d1-a566-466b7a53c2c5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e92824bc-01dc-40e6-9e90-94e2212b5692"
        },
        "item": {
          "id": "993f943a-b15a-475f-8a74-780e5703549c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6d279a1d-fba2-42b9-ba91-4cc143021698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641bd999-ea80-4483-a609-5bba5ce869e7",
        "cursor": {
          "ref": "b4162cf4-cd02-4b44-93f0-6f9dacb90133",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d8fe01fe-d2aa-4b68-80be-161338f4fb76"
        },
        "item": {
          "id": "641bd999-ea80-4483-a609-5bba5ce869e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9effd32d-627e-419a-9b8c-80295adec5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08273d39-1fe4-4928-aeb3-30b7d7987626",
        "cursor": {
          "ref": "a8e09830-265e-40bb-8929-b3bd670deceb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b34eacf9-7c05-45af-9f38-9b8cbfa25f0d"
        },
        "item": {
          "id": "08273d39-1fe4-4928-aeb3-30b7d7987626",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "13889637-8b6c-4231-ba62-9711db325f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a6f700-0d69-44e1-a662-683aceebb5b0",
        "cursor": {
          "ref": "2f04708b-ee03-4f5c-b2e3-f0c59ba96d83",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "985da0e8-f7ac-401f-948c-e6f2f9de1b36"
        },
        "item": {
          "id": "b8a6f700-0d69-44e1-a662-683aceebb5b0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2fe5fede-995d-4ff9-9790-4ba7c0ab7742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512980d9-3002-4b92-8c8f-4e50662fb338",
        "cursor": {
          "ref": "1b509f0a-bc78-4e9f-8368-9eab1edfca4a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b76c1d08-f6ae-4f11-bd1d-105fcbe824d1"
        },
        "item": {
          "id": "512980d9-3002-4b92-8c8f-4e50662fb338",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c1146bc-9705-4b96-a4fc-72a48c2d82c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d34329b-94ea-4cbb-9876-25c9ab6ec1db",
        "cursor": {
          "ref": "0adc9183-73b3-4436-8ea2-6885967cb6ea",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a49a0e14-f4ce-4027-a883-5270974bc729"
        },
        "item": {
          "id": "5d34329b-94ea-4cbb-9876-25c9ab6ec1db",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "28dee420-5648-4c23-8c36-c11aba6624af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f96ea82-2030-4eff-8eba-82707411cf01",
        "cursor": {
          "ref": "52dcfcdc-c574-4db3-89b5-2634f056f352",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8784048-53d9-4067-92a2-bc8f7d6a6e91"
        },
        "item": {
          "id": "9f96ea82-2030-4eff-8eba-82707411cf01",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b9b5b6d3-09fe-4908-9e8a-2eb1028a01ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09cfd4e-7485-40e5-bdc9-d6912170edff",
        "cursor": {
          "ref": "9f465a17-b5c3-4ae2-a12f-f6708e5c5a74",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "31d9156e-9214-4438-aa96-aa8fc8973a65"
        },
        "item": {
          "id": "a09cfd4e-7485-40e5-bdc9-d6912170edff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "88804fd4-43dd-45c8-9ec6-7e871108313d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71a588-098f-4d1c-acea-51b3d80b8e06",
        "cursor": {
          "ref": "68872ed2-77c0-44c3-b60a-bab21e6f0a5a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "380271fb-4fc6-43a0-a619-458b1f8d4e47"
        },
        "item": {
          "id": "4d71a588-098f-4d1c-acea-51b3d80b8e06",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a0aa1eb0-4aa6-413e-be55-1284386e67c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e953715-4b93-48b4-9f93-c767a80429ff",
        "cursor": {
          "ref": "c23f312d-b7d7-4a8b-b8f8-216ecdd922c8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "30df177a-565b-43c8-8513-7084c255a9ae"
        },
        "item": {
          "id": "1e953715-4b93-48b4-9f93-c767a80429ff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5757cf0-cfbd-4ce1-a2e9-c7ff08f3564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c45ff6e-8c6f-4753-bd21-5bed8535071d",
        "cursor": {
          "ref": "521dcf3e-6937-44e2-80f2-f8826f8e58d8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "87348f81-aad9-453e-8b75-1d9fa0045d10"
        },
        "item": {
          "id": "9c45ff6e-8c6f-4753-bd21-5bed8535071d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3f24499c-7a52-41dc-8f65-d76490a2993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd62bc0-8484-4e97-b1f3-affff074489c",
        "cursor": {
          "ref": "24b3141c-5187-43d7-8e26-d3b6f8a7f349",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "08304c39-3146-4205-9c01-e6ee4e880a83"
        },
        "item": {
          "id": "0fd62bc0-8484-4e97-b1f3-affff074489c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9a5dfae5-70bd-483c-91be-2fec773e027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f0bbc-139b-4b0b-99d4-9ecf188b3a65",
        "cursor": {
          "ref": "b7f2aa17-0bf1-4040-8fb9-37629c76bf43",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "922da035-1891-4ddc-8b6b-5608f1d5b890"
        },
        "item": {
          "id": "fb8f0bbc-139b-4b0b-99d4-9ecf188b3a65",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "57479dd5-fcb1-4c68-b1f0-c248f885a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e55cc70-be2d-4de9-9bde-97bcc19651db",
        "cursor": {
          "ref": "5e9dfc2b-13db-418d-9c7f-17546e801bc4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82a2372b-e046-4db0-8653-c7789dbf91e7"
        },
        "item": {
          "id": "2e55cc70-be2d-4de9-9bde-97bcc19651db",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eb65811b-e2d3-4fcd-b205-36d413af928f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b67aa6-4be2-4abc-8cab-b3963a4a363b",
        "cursor": {
          "ref": "84a8895e-6f61-4069-a9ed-9998f0fbf6b8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5c396058-db7f-4b98-a83f-6372719f25d9"
        },
        "item": {
          "id": "14b67aa6-4be2-4abc-8cab-b3963a4a363b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30562b61-9eba-489b-8f36-4de6c98e8bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a16de0b-ef33-4cca-9c19-270403747181",
        "cursor": {
          "ref": "5b26f001-919f-4edd-a50a-c7b9712ced0b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aed91262-0484-4c85-b31b-8f8168bc73fe"
        },
        "item": {
          "id": "7a16de0b-ef33-4cca-9c19-270403747181",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73b833cd-e433-4766-869f-c008413fa7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169fdf49-e50f-4727-a4c0-c5d03bce245e",
        "cursor": {
          "ref": "435a179a-23b7-4e5a-9774-3b0da31e6e0e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8e307989-e05a-459c-b3cb-6c3a0bb016e9"
        },
        "item": {
          "id": "169fdf49-e50f-4727-a4c0-c5d03bce245e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fc51059d-3ea9-461a-9e46-6352fa4d11d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8be6d8-1236-4647-ba0e-518b56994482",
        "cursor": {
          "ref": "a7155768-f0db-4294-aa32-0bb3620e17d2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e2a88dc9-4113-4f20-a04f-d62749cafca7"
        },
        "item": {
          "id": "1c8be6d8-1236-4647-ba0e-518b56994482",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e58de37a-1de3-4550-aa03-985bd3cc9fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c136b-c105-43a7-88fc-81db7fc595a1",
        "cursor": {
          "ref": "33d6600b-bd8c-4102-a2b7-4277b5df2718",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3958d145-98d1-4dd9-a3c3-3b6a6d713a4b"
        },
        "item": {
          "id": "8a1c136b-c105-43a7-88fc-81db7fc595a1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1f602566-ec5c-48e1-a732-4b94eadbf2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86922563-ab41-430f-9a7e-e5e8a7c2c440",
        "cursor": {
          "ref": "6816aeba-22ac-4b89-9774-9ebd29819323",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "43bc89d6-baed-4c89-a21d-6de99a5de7d0"
        },
        "item": {
          "id": "86922563-ab41-430f-9a7e-e5e8a7c2c440",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9935b6c4-6115-46cf-acdd-55895a6f05f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d5e46a-754e-45bf-80c2-2344ac0324bc",
        "cursor": {
          "ref": "c3f880bc-2fb3-4169-bdf1-7d6a4843a28e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ae01aa91-7c24-4fab-b278-602384b1bd6e"
        },
        "item": {
          "id": "b4d5e46a-754e-45bf-80c2-2344ac0324bc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "494676d3-51e2-48cf-9989-7f2fd955b46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7c284-0825-4fa7-9803-81df8c57c40f",
        "cursor": {
          "ref": "9ae013b8-7220-44dc-9788-a2aabdc5a3e6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bfd823db-1095-48da-9cda-7e2a5cd996df"
        },
        "item": {
          "id": "69d7c284-0825-4fa7-9803-81df8c57c40f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca2d51e3-05bb-44fa-b848-2143b8e117cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc952d20-1e1d-407b-aaf8-6c17241273f4",
        "cursor": {
          "ref": "c13e4295-b0c7-4fab-9dc7-73ae17d3938b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "062fafe5-60f7-4750-9cf6-48ed705fd118"
        },
        "item": {
          "id": "dc952d20-1e1d-407b-aaf8-6c17241273f4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3e90d521-6e78-47db-8545-327dcb2baa6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffcc033-456e-4163-9832-1604d3dd3729",
        "cursor": {
          "ref": "3755a011-1ee0-4306-9de2-9658301317e9",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a449b95f-a98c-4db4-9cab-18d1c4a7f3de"
        },
        "item": {
          "id": "bffcc033-456e-4163-9832-1604d3dd3729",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ea18baf4-2dac-477a-ab1f-bfb7fe056b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a757a1e2-b47e-4066-935d-e042f7f6295d",
        "cursor": {
          "ref": "7218a2bf-8844-441c-a7c9-99ce58239036",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4474c26-5c6c-4fbe-b164-69a251497adb"
        },
        "item": {
          "id": "a757a1e2-b47e-4066-935d-e042f7f6295d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "15acfd43-e15c-4055-bf37-128c70e4e2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c05b90-fa1a-4e49-a533-95a1d883b187",
        "cursor": {
          "ref": "3b424138-6a2b-4757-9c64-6daa6e319a56",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0a87ff3e-1d03-4718-a430-66c2133a3f47"
        },
        "item": {
          "id": "01c05b90-fa1a-4e49-a533-95a1d883b187",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ee460f6b-9abe-46a3-83c1-ed6f3df9017b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da278a9e-5fc6-4320-bef6-b8aa843b9310",
        "cursor": {
          "ref": "ce3f3b7a-a70e-44d7-8471-048b54535011",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "34454ad2-cb2b-4392-8de6-9361eddce529"
        },
        "item": {
          "id": "da278a9e-5fc6-4320-bef6-b8aa843b9310",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a932ba4-d46c-4854-9801-0404e50dcdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbacc1d8-5b50-4334-9ec6-92d91dfce23a",
        "cursor": {
          "ref": "83513e99-697c-424c-b654-b15da951d50a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b0b40bae-3b28-4208-95b5-aac372e41342"
        },
        "item": {
          "id": "fbacc1d8-5b50-4334-9ec6-92d91dfce23a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "52cd6e15-476a-4000-a7b0-84791fc629d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bbb220-f5c2-47c4-8b03-f821026511f2",
        "cursor": {
          "ref": "1ec3e600-26dc-4768-a3ba-ed9040cd6bb5",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "56f1b6c3-b60c-4fc9-9157-400d7383e3f4"
        },
        "item": {
          "id": "b7bbb220-f5c2-47c4-8b03-f821026511f2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "50d4a6de-3685-466a-821f-9e1a0f82ad23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc85c8-23e7-4033-92cb-ffbb113e12b5",
        "cursor": {
          "ref": "8282686f-70c7-4a54-99ba-279e48d80a85",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "02f94d66-a52d-4f03-ad82-3b8334ea86ec"
        },
        "item": {
          "id": "8fbc85c8-23e7-4033-92cb-ffbb113e12b5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a56755c-c1e9-473b-85bb-21c5bba3c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59b4990-e873-428e-b472-812e0f134d2f",
        "cursor": {
          "ref": "09212ea6-fbbc-4259-ac1e-9ac5e6b1a2ff",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0ade966b-22c6-4727-a659-4a7d0e69af2a"
        },
        "item": {
          "id": "f59b4990-e873-428e-b472-812e0f134d2f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e96a2704-f3d9-4b43-b88c-c5dbca117e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884cd328-58b6-469e-8cc1-1fea727f81fd",
        "cursor": {
          "ref": "f3b06ac7-418b-41b3-b9a2-80e7ad2f8245",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "38d912c7-9b07-4451-a47b-c905d336d585"
        },
        "item": {
          "id": "884cd328-58b6-469e-8cc1-1fea727f81fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d3f59649-e61b-4c02-a7b6-007128c6dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de24f075-a99c-40cb-8ca1-9e62c29ca88c",
        "cursor": {
          "ref": "b6caeb08-7a29-425f-b6f6-2389d2bfaac7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2b8ea760-20a2-4650-97ea-021fb5a4d0c8"
        },
        "item": {
          "id": "de24f075-a99c-40cb-8ca1-9e62c29ca88c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "65d87176-676d-4d06-bb4e-796b2d0daf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5977e1c3-12ec-4b42-bb83-b358fd6e32cb",
        "cursor": {
          "ref": "34b45cfb-8c78-4bfe-8d82-6652c7299c78",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "92b2a9df-b60f-4557-8b9d-e4338a763d24"
        },
        "item": {
          "id": "5977e1c3-12ec-4b42-bb83-b358fd6e32cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28a31422-9dc3-42aa-ac28-d0420a8d662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c68be-3597-42ef-84e6-a4cbb71fe42f",
        "cursor": {
          "ref": "82fd9ea4-4c7c-4c89-a25b-de344fe8128c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "819e66d5-2f8b-43c6-a488-0527b8eb4f89"
        },
        "item": {
          "id": "ff4c68be-3597-42ef-84e6-a4cbb71fe42f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d882914b-643a-449d-9c97-54c5ca7e5f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b78caa-2f9e-4e7b-80b1-55c30047d8ab",
        "cursor": {
          "ref": "22aa139f-d034-48ee-b93f-a26a9106d524",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4bc18fee-56ad-44d2-a8d6-c237d818bd80"
        },
        "item": {
          "id": "83b78caa-2f9e-4e7b-80b1-55c30047d8ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb74374d-29de-497d-b233-7d9c4bcdc9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12b44e8-8d3c-44f0-8b11-4ea0cf336e5a",
        "cursor": {
          "ref": "251b05b3-c191-4d1b-a1c5-3ec1918ccf25",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a826a552-1e00-44b1-b07d-6488b4b703ee"
        },
        "item": {
          "id": "a12b44e8-8d3c-44f0-8b11-4ea0cf336e5a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1fda1634-b22b-47f9-a51a-147dab6e43d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53e9f3d-842d-473c-8ca7-c4e7e7e2c56e",
        "cursor": {
          "ref": "75c41b08-e7f7-4d46-a5cb-1517cf1ceade",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e39cb37-6248-4941-a36e-6d73264f4ca4"
        },
        "item": {
          "id": "c53e9f3d-842d-473c-8ca7-c4e7e7e2c56e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0eedc7d8-ae2d-4eb9-92a2-b98e3f9cbd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e4d311-3cfc-49ba-9ba6-611f2c8487cd",
        "cursor": {
          "ref": "90217d2b-7396-4c9d-ab70-3d8110db0c11",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0bc4f08e-5b37-41bf-8c48-0640c1371cc1"
        },
        "item": {
          "id": "a9e4d311-3cfc-49ba-9ba6-611f2c8487cd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db91261d-18dd-4a29-a6b0-7907d87680d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9313c400-0f16-435a-bfc3-cf0dde8290a0",
        "cursor": {
          "ref": "a538e656-037e-4816-9821-c39600f23364",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b6468f2c-d7d1-4adf-97a3-694f17b1f171"
        },
        "item": {
          "id": "9313c400-0f16-435a-bfc3-cf0dde8290a0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c4a5ea1-ee53-4565-808e-511675b8c020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5624c3b-4c31-48c6-8a77-87041e7c5995",
        "cursor": {
          "ref": "6a8f8dcf-8abb-42b7-a9bd-e1a13d1fbd42",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a74384e-f37a-4271-bf81-c9e01e6bdc24"
        },
        "item": {
          "id": "f5624c3b-4c31-48c6-8a77-87041e7c5995",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f11b481f-28b6-4158-99d3-023a33d5c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4b354d-ee3f-4292-b41f-2790ff536051",
        "cursor": {
          "ref": "9e04941e-ab85-4027-99a0-7701d1a02260",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cce0c84-bfaa-4c23-be26-3223973bd741"
        },
        "item": {
          "id": "6c4b354d-ee3f-4292-b41f-2790ff536051",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcae2c87-efc9-4b06-80c9-3ca6d9ae2224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfc4049-9afc-42ed-8cae-dfe7ddba8ea7",
        "cursor": {
          "ref": "ee4f5c0f-069a-4727-8e41-9adac60c94a5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "490d1bbb-15a8-4a4e-a346-58beb103abd0"
        },
        "item": {
          "id": "3cfc4049-9afc-42ed-8cae-dfe7ddba8ea7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c4c9ed53-fe63-4183-b9c6-624dbae1a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ecf52d-0068-4f83-a15d-50241abb2e29",
        "cursor": {
          "ref": "e1528636-ef1f-4fdf-9810-15e2692dc714",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a00bf837-9eb3-4394-8350-29ff6dcd2c4c"
        },
        "item": {
          "id": "95ecf52d-0068-4f83-a15d-50241abb2e29",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "915917e8-1569-4e23-bafa-a499e4efed4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9065a797-ce26-47a8-b406-33b424d91d13",
        "cursor": {
          "ref": "63ab7ffa-cf61-42b7-b3e9-77ff893d8c5f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6bf402b8-b127-4ce7-ac8c-7c9b46ef0672"
        },
        "item": {
          "id": "9065a797-ce26-47a8-b406-33b424d91d13",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33549bca-058d-4752-b748-e72c7ca58b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb49a2b-b2fd-4cdc-8bb6-d04f8ffbfdd7",
        "cursor": {
          "ref": "a4a5fd22-6ef6-447d-bc91-6b9c49358528",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0eb2a8c2-db26-4c85-9ec4-6500b71dda96"
        },
        "item": {
          "id": "2eb49a2b-b2fd-4cdc-8bb6-d04f8ffbfdd7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "840ec7ef-3a1a-44fd-81ce-835e3c980829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b86a8-b7c9-473e-859e-11776527d483",
        "cursor": {
          "ref": "4800bdda-1c18-4c85-91df-10a7d651d2e3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c4fd8547-97b8-458d-b81f-8e904f2949f1"
        },
        "item": {
          "id": "438b86a8-b7c9-473e-859e-11776527d483",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e0fe7b89-dd1d-4bac-8672-9b673a55133d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddf8ff4-54bf-4fd4-91b9-5ea29f6b0f10",
        "cursor": {
          "ref": "952827d4-20d3-4d9b-b3bb-6b47b7a275e2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3c4e5d4b-858b-4767-b1fc-3f7a8afcb038"
        },
        "item": {
          "id": "2ddf8ff4-54bf-4fd4-91b9-5ea29f6b0f10",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7107119e-0234-4d65-ae48-0844c0da0840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb121660-d506-4c04-aeff-507ae8de0da6",
        "cursor": {
          "ref": "2c9c95b0-25e4-4fac-831b-58d2185848c4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cffaf4c7-ee4a-4ab6-b6cb-59b68d1d7c37"
        },
        "item": {
          "id": "eb121660-d506-4c04-aeff-507ae8de0da6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "513701a0-0dbb-4f9c-8969-56ef112b8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16793360-2679-4460-9ca5-cc9c9562634f",
        "cursor": {
          "ref": "3a043f5e-6370-4903-96ec-06bb5069059e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aeb14d93-8391-4b3b-9e08-b07902faf573"
        },
        "item": {
          "id": "16793360-2679-4460-9ca5-cc9c9562634f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "247145fd-b89a-487e-8b5b-c6015e314f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c387c99e-995f-468b-94ad-4d37e566b381",
        "cursor": {
          "ref": "51ac5ef9-4680-4ee4-9e59-bf9340bcf009",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e99c7d8-c59c-423f-adae-76380d268e98"
        },
        "item": {
          "id": "c387c99e-995f-468b-94ad-4d37e566b381",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "133931da-d9aa-480b-8008-79f08503da48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba5c2dd-7aa3-420c-bfa4-474b8ba98ac4",
        "cursor": {
          "ref": "904f4df8-0ca1-4b5e-9288-4bb5cbc7b0ce",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "668e7b84-f032-4515-9723-df2de82b64af"
        },
        "item": {
          "id": "3ba5c2dd-7aa3-420c-bfa4-474b8ba98ac4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "56d3dd3c-6f63-4468-8131-b5a0a4266448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8634e0e8-82cc-4cbc-af16-cbb98677a141",
        "cursor": {
          "ref": "133fc1e0-99be-4816-b194-dbde8956d96c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "20d86709-0c97-4bfe-a2f9-5dbae4e649a4"
        },
        "item": {
          "id": "8634e0e8-82cc-4cbc-af16-cbb98677a141",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "06253571-8add-4ce9-b4a6-7780e6ab2e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0184d847-48ee-41bc-bb37-9619b3923edb",
        "cursor": {
          "ref": "fd368971-3ca8-4ac5-818f-3196b352ee1a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd621cae-789b-4fad-8242-8d96f58a1054"
        },
        "item": {
          "id": "0184d847-48ee-41bc-bb37-9619b3923edb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1771b038-cab0-4a6f-94d9-761de5fcaf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b40a7-3c42-47cf-9247-a2a9f8910ea7",
        "cursor": {
          "ref": "0285ff19-ab18-41ce-945f-5e6c4df150b9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "208fda41-3a7e-4d47-9f01-ef499cbdc147"
        },
        "item": {
          "id": "f26b40a7-3c42-47cf-9247-a2a9f8910ea7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3940ac3-bb8d-4a23-a646-a5ca0b019d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d6a66d-4041-4c15-825a-4911ab1836b2",
        "cursor": {
          "ref": "b4fdcb43-2066-4de4-b8e6-e7594860260e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cf441daa-c2b2-4f36-92fd-0e94b76c304b"
        },
        "item": {
          "id": "d6d6a66d-4041-4c15-825a-4911ab1836b2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3641428d-b330-4936-9f84-03644fd48bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3e5fa9-9d05-48f7-bef3-608907aad2c7",
        "cursor": {
          "ref": "651e7821-ba61-4734-85df-249ce74a9210",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d91a0233-4491-4745-bc7c-85b5921e4ec9"
        },
        "item": {
          "id": "df3e5fa9-9d05-48f7-bef3-608907aad2c7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fe345737-b992-49f6-b22e-0ffbdbd4b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d129743f-9394-4b4d-917e-7a7d04c63f63",
        "cursor": {
          "ref": "88874964-c48e-4c65-8b74-5aa8f0d1c2f6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "08e5eb0b-c944-48cf-ac34-38edc1e14b2b"
        },
        "item": {
          "id": "d129743f-9394-4b4d-917e-7a7d04c63f63",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "80edb4da-3253-4a76-82f6-a6ccf4a61736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26039e0-47f0-4c49-9c45-a0be3b5c7288",
        "cursor": {
          "ref": "c856c385-d473-452a-b86b-6e3516490c9d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b70d8c6-a0cb-4764-af46-ce58b6ecf9ff"
        },
        "item": {
          "id": "d26039e0-47f0-4c49-9c45-a0be3b5c7288",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "051e56ee-905e-45d4-9480-dd580497b4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143ded37-c9f3-479f-b166-5b5e737edade",
        "cursor": {
          "ref": "189202c9-0db5-4918-afd6-45af41341367",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dccd0b66-3847-4bd5-a17c-6a03faf23fd0"
        },
        "item": {
          "id": "143ded37-c9f3-479f-b166-5b5e737edade",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "086415c7-5b3e-4b01-8f8c-0b50a9a14a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ec1125-f4aa-42f3-947e-4c6fba590efa",
        "cursor": {
          "ref": "30515f2e-2c9b-415a-bcf5-413b7cf7a2ab",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8ffb96b3-e107-4fdf-8870-dd3287be87dd"
        },
        "item": {
          "id": "90ec1125-f4aa-42f3-947e-4c6fba590efa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "863e98c3-0810-45dc-8b32-417d008de97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c4ff4c-687f-4bea-9c3e-fa8e90ac6fae",
        "cursor": {
          "ref": "ba627fe5-af5e-40a9-a9ae-eb8feef61a5e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b3253ab0-da2b-4ac8-bcf6-0c922cca3be4"
        },
        "item": {
          "id": "e5c4ff4c-687f-4bea-9c3e-fa8e90ac6fae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f557aa7-8fe0-416f-a356-b919a14a1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c20c50-3259-4b9f-bca7-6ce36f651219",
        "cursor": {
          "ref": "620bd4ce-7b97-4abb-bdbf-5982cb3b8d82",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7313866-8510-4a12-b298-f54feaf8b45d"
        },
        "item": {
          "id": "f3c20c50-3259-4b9f-bca7-6ce36f651219",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04fa5c08-f52f-49d4-8d93-7880bc1ba491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba34a54-343d-4271-aabd-cba0ddfc9a28",
        "cursor": {
          "ref": "ada5edfb-de65-4897-ada1-5a5b4a02c290",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ddc92393-9167-4119-a9bf-6e5652c71c31"
        },
        "item": {
          "id": "fba34a54-343d-4271-aabd-cba0ddfc9a28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eb0907a6-aecd-4f63-a05d-b2766fb33c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b29d6a-214e-49d9-bfe8-8d6e2518e08b",
        "cursor": {
          "ref": "ea44190c-1694-4d47-990d-002076f4a2c5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "03c23f80-c96b-4a2b-a535-1dfc2bdd5a46"
        },
        "item": {
          "id": "57b29d6a-214e-49d9-bfe8-8d6e2518e08b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "875b4855-3c35-42ae-9b3c-93f74ef06547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4861bec0-030d-44fd-9e7a-e4728862befa",
        "cursor": {
          "ref": "5099e361-d19a-41da-814b-badcf6391d23",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "23e5bd3a-2f35-4cb6-81ad-07c16f6791d9"
        },
        "item": {
          "id": "4861bec0-030d-44fd-9e7a-e4728862befa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "277f6377-bb57-4fb6-80a7-dbe69c3daa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51d2643-c43d-41c0-8928-fa352a01f25f",
        "cursor": {
          "ref": "a5067aac-ca68-4981-a469-1ae9cfa22fba",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "16818044-0b3c-4e65-af47-49dea2076bbc"
        },
        "item": {
          "id": "c51d2643-c43d-41c0-8928-fa352a01f25f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c6390efa-7412-4533-92e9-aeca308b93a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0923d-e102-4df4-b6d2-02c9c2ed0429",
        "cursor": {
          "ref": "72614e9a-7b76-4cbb-8f32-de23292986bf",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b75f68bf-e120-4bdc-adf1-38181992dbb7"
        },
        "item": {
          "id": "f7f0923d-e102-4df4-b6d2-02c9c2ed0429",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8f360c3e-38ba-48fd-92c2-2473fe3ea89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122d8d24-ced4-49b4-b949-1abacb8f29f7",
        "cursor": {
          "ref": "0c319f3d-8637-43a6-8b28-8c33ed0a9442",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f2e6539e-6c3b-47d3-9941-899a8de2b160"
        },
        "item": {
          "id": "122d8d24-ced4-49b4-b949-1abacb8f29f7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9ab8cf1c-7aca-4316-8180-301280b38e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0d2181-62b5-4304-a87b-cda4db852695",
        "cursor": {
          "ref": "0df9d869-5ab2-4480-84aa-285982aef3bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1fb5745-d1cc-4645-ab11-04ae49336c16"
        },
        "item": {
          "id": "5a0d2181-62b5-4304-a87b-cda4db852695",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cfceb2a5-2b87-4abf-9f2f-d0959cb18a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595c5656-4d78-4795-892b-b7b87ff3202b",
        "cursor": {
          "ref": "d0f9f04e-96c3-4ca3-a4ab-a9098963aa3b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0c303b08-850a-45ff-bfc7-64134c5ceadf"
        },
        "item": {
          "id": "595c5656-4d78-4795-892b-b7b87ff3202b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "53539556-9292-46b1-a54f-c31a9be73d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76d778-f9e5-4807-ab9e-de5bbb65dfb2",
        "cursor": {
          "ref": "d5fd5eee-caec-4cd0-a2aa-f62241fb4a20",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "796d26d8-cd54-4f8b-9e7b-556d4a3270dd"
        },
        "item": {
          "id": "ad76d778-f9e5-4807-ab9e-de5bbb65dfb2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3f51c56f-21fc-4eaf-8ced-ceef1ca9e647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bb8b8d-3b3a-4e35-b05b-e644cd13e037",
        "cursor": {
          "ref": "060b226a-d34a-451e-8f16-a70977485464",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4223e492-0475-46e3-bd34-17a049168746"
        },
        "item": {
          "id": "10bb8b8d-3b3a-4e35-b05b-e644cd13e037",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a355ac67-baf9-4d12-8902-8b07fc8a2db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df1b923-b092-419b-a708-096067bd7031",
        "cursor": {
          "ref": "04c52314-4449-45e9-a7e1-35c142e8e4cc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "26cc9097-321b-4f5d-b3fc-1fbf8b50874c"
        },
        "item": {
          "id": "5df1b923-b092-419b-a708-096067bd7031",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5c6484ae-a0e0-4a68-8f39-8975e8795115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839e8c8d-0cb7-4678-ba6c-a6bdf0712a31",
        "cursor": {
          "ref": "7db573fc-688a-489f-81bf-81a5b1433f03",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b0bc0e77-c1b6-4a60-a80f-e4237fa31684"
        },
        "item": {
          "id": "839e8c8d-0cb7-4678-ba6c-a6bdf0712a31",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c91667c1-62b2-4542-94a3-dc1e1334fbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cddab1-94d2-4f2c-8365-85091cbecc4a",
        "cursor": {
          "ref": "91d8eac6-651a-41b7-ad82-0fe336d04152",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "81c620d2-2ddf-42b2-ab27-b432e6c543b8"
        },
        "item": {
          "id": "c7cddab1-94d2-4f2c-8365-85091cbecc4a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5bc42ea6-d31b-4718-84f9-f1a7a74d8b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09499603-8404-4ca4-b7ab-9f18cdbe2c52",
        "cursor": {
          "ref": "63aa8c7b-f9d2-40db-9598-4bec6d208b6b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c96e10d9-f348-49e1-b00b-a08c2cb2d9e1"
        },
        "item": {
          "id": "09499603-8404-4ca4-b7ab-9f18cdbe2c52",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49c7cac0-8994-413b-92f0-ee0c71514660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745e749-93ff-456c-8afa-37349ad4ca7e",
        "cursor": {
          "ref": "32645193-c7ab-40d7-9001-b7ab89c16f51",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "635fb19e-8975-474e-9fb7-e4e9b9272883"
        },
        "item": {
          "id": "0745e749-93ff-456c-8afa-37349ad4ca7e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8dd6584-aeca-43ab-84c8-81ac9827f044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a040428a-d05a-4a2c-8442-515e8cd87140",
        "cursor": {
          "ref": "36001149-a6f9-43df-bec5-972d09335e13",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eb884cf1-040e-4d96-82d9-64ddb4681c2d"
        },
        "item": {
          "id": "a040428a-d05a-4a2c-8442-515e8cd87140",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "55c22265-f085-4d13-8e19-45c62e7fe126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abd38ca-6911-47e4-bb94-834124d4cfcb",
        "cursor": {
          "ref": "b367540f-696d-4e00-9970-a44e42f5b0ae",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c4d72ad9-3acf-4246-97a0-96186a43b32a"
        },
        "item": {
          "id": "8abd38ca-6911-47e4-bb94-834124d4cfcb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24f5f1fa-9f1a-435d-995b-fdfc801a1d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2c6eb7-4e3c-42c4-9fdd-91e176b44ccf",
        "cursor": {
          "ref": "761ac95e-e476-425f-a66d-443735d7a9d6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2f831a59-5425-4a7f-9473-cf90d6f99f39"
        },
        "item": {
          "id": "6c2c6eb7-4e3c-42c4-9fdd-91e176b44ccf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c2f9668c-4540-42dd-af32-aea219ea7f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced8fe04-50bb-4a4e-aa9d-3d5e53351023",
        "cursor": {
          "ref": "6d0116a3-488e-4a01-8706-8702ff7e0187",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "94dc2ce8-f3ca-44d3-8aa8-79e96c2fa087"
        },
        "item": {
          "id": "ced8fe04-50bb-4a4e-aa9d-3d5e53351023",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d582fdaf-a509-45dc-9427-839123005122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffbe367-0e92-4b6c-87b7-52daa398e6bd",
        "cursor": {
          "ref": "d0821815-a318-468c-a7a3-d66286d756de",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "139092c3-0bc5-46a0-96bb-31b47677c400"
        },
        "item": {
          "id": "bffbe367-0e92-4b6c-87b7-52daa398e6bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "69a38561-a94c-476e-9000-b0c51b7ce0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbab74bb-70e1-44b8-b1db-ed20a4e8fad2",
        "cursor": {
          "ref": "f5180300-2333-435b-a3d0-0c8c260569fd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fd531d71-2a00-4432-ab36-4cad35a9a362"
        },
        "item": {
          "id": "cbab74bb-70e1-44b8-b1db-ed20a4e8fad2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "94e3715e-3e04-4aac-bfea-223fa56e4698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8ef1b1-ba9e-425d-87d2-72df0f27fbc6",
        "cursor": {
          "ref": "2d9512b6-05cc-4453-9aa2-4f74f440ebc1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7c1d7b78-26d0-4952-bddb-0c5c7b233916"
        },
        "item": {
          "id": "ed8ef1b1-ba9e-425d-87d2-72df0f27fbc6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2cd2f971-83f1-40e6-bb60-16a1d6c61312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ef86d2-c2ad-48b4-8363-486ed4d4e625",
        "cursor": {
          "ref": "203e4f42-0817-4ba8-b8bc-00dd25b91880",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b9b64719-133e-4e63-ae20-26bbf672df74"
        },
        "item": {
          "id": "f5ef86d2-c2ad-48b4-8363-486ed4d4e625",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "551abce3-2577-4a07-99d0-cf9517bcf475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a09beae-f624-4e13-91f1-90b9536f6b26",
        "cursor": {
          "ref": "28ca6838-8db4-4055-87cb-a0a3fd9540bd",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ce6e29d1-4e76-47d1-81a5-ea49b9044b4b"
        },
        "item": {
          "id": "2a09beae-f624-4e13-91f1-90b9536f6b26",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fadc2e6f-ca9f-4230-b7ad-ce5ce170dfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70e659c-1416-46f6-8ac8-8a81bfb9c790",
        "cursor": {
          "ref": "7afecfa3-815e-4a36-989e-43dd7da4f32b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "72352a08-418e-40bf-a1e5-8643daab4a33"
        },
        "item": {
          "id": "d70e659c-1416-46f6-8ac8-8a81bfb9c790",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8a20368b-7a5b-49f5-85f0-788e68f0eeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6947f0b4-9864-42f8-b26e-3c968093acbf",
        "cursor": {
          "ref": "18aec2d3-9220-4a0c-bf71-c16062707b76",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cb737784-87b0-43bd-9101-4d1c27e00030"
        },
        "item": {
          "id": "6947f0b4-9864-42f8-b26e-3c968093acbf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ada3d0cb-ded2-4d19-8fc2-b5e32da0d528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824444cf-cf96-41b6-96cd-ea97931dc327",
        "cursor": {
          "ref": "4fd051ee-e377-4881-a1fe-cb4e095b7d06",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d294eff9-5d7f-45a1-a4bf-c416908554c0"
        },
        "item": {
          "id": "824444cf-cf96-41b6-96cd-ea97931dc327",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "05a0763a-9807-43b8-ba82-53e6190f7a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad70ae49-9228-499f-8a36-5f78e160197a",
        "cursor": {
          "ref": "c8c1afa4-b19a-4d1b-aceb-f996475b1f0e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "116eefc4-38ee-49a2-9963-be89780f21c0"
        },
        "item": {
          "id": "ad70ae49-9228-499f-8a36-5f78e160197a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9b6abf1d-8c60-429c-a698-b18c8cdc589f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651ed24b-39c1-4c43-95fd-81269c63170f",
        "cursor": {
          "ref": "f7366709-864a-49b0-a7ff-bd590cf00452",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eb4493b2-6760-40ed-9e31-bf3d5f0ec2d4"
        },
        "item": {
          "id": "651ed24b-39c1-4c43-95fd-81269c63170f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d5e91a8d-cd2e-4672-96b6-baa257d73fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a53e14-4402-4a3b-bc81-82c4d79fc970",
        "cursor": {
          "ref": "f686af3f-034d-48b1-b719-34c2ace19dbd",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5dd1defe-fc1a-44ca-b790-38f479015c29"
        },
        "item": {
          "id": "03a53e14-4402-4a3b-bc81-82c4d79fc970",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1d85df81-debf-4ea0-973c-fa3214e4a43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc4d958-59d3-4ab5-91e3-9f3d69a5a1c9",
        "cursor": {
          "ref": "d908f9d1-c603-4d45-ab48-78dae6ba93f1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c8190b06-4470-43e4-9a66-4938a2c5d532"
        },
        "item": {
          "id": "dcc4d958-59d3-4ab5-91e3-9f3d69a5a1c9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5571f6af-0bd3-4f74-b811-bb5b5be11e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9602d81a-2463-434c-bf2b-c4e743df0d2a",
        "cursor": {
          "ref": "5fa396e5-e19a-4744-b9a4-f536b9ab6c61",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5bd6551f-319c-4f40-8e9f-b61aa9e454d8"
        },
        "item": {
          "id": "9602d81a-2463-434c-bf2b-c4e743df0d2a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7211a13b-0767-494b-a29e-19ae646e91b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57460092-ab9c-46d6-81b1-2237d5d1d523",
        "cursor": {
          "ref": "99105f2f-becd-4cfc-99c4-299864aee6bd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5ea75f0d-7828-4dcb-982a-fe054cea784f"
        },
        "item": {
          "id": "57460092-ab9c-46d6-81b1-2237d5d1d523",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b689972c-de6b-49d6-9acb-eeafdfc144f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c52f252-db13-4602-b120-f253d019ae13",
        "cursor": {
          "ref": "63caa14c-79e8-49ad-82f0-f8204b6f9f05",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "86753ffc-2d81-48c5-ad6d-d8f809f66398"
        },
        "item": {
          "id": "0c52f252-db13-4602-b120-f253d019ae13",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f241cf62-ee48-42f6-b5ac-90f0208e88eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7b5520-af7d-4860-8cb6-5d5b717880ca",
        "cursor": {
          "ref": "5c873ef3-1e88-4cfb-8b09-cbd580340f93",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fdabdd86-f4d7-40a5-8899-c39c216a7751"
        },
        "item": {
          "id": "9d7b5520-af7d-4860-8cb6-5d5b717880ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "660c9e7a-dcab-4f6c-bacf-5a2354b3b6f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f6464f-0686-44b2-b728-5d28b646278b",
        "cursor": {
          "ref": "edb64cc2-fd92-4ee8-9eb5-ea9e4001c26a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "74d5faa1-7aa9-4551-b586-f60f3360d54c"
        },
        "item": {
          "id": "f9f6464f-0686-44b2-b728-5d28b646278b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fcf213da-2fc8-46a8-82c1-f25b16bc3fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d125c-6467-4b04-90a8-3961d5f095d1",
        "cursor": {
          "ref": "1811df6a-a98f-4068-a855-c9f2794459c1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "36cedfc4-56ed-4785-9467-a686b5b27f27"
        },
        "item": {
          "id": "b26d125c-6467-4b04-90a8-3961d5f095d1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a050cd82-49c5-4bbf-9a57-d8cd3c56d365",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13fad1a-f339-4789-9fec-087a84889439",
        "cursor": {
          "ref": "7e0ae596-de88-497c-ba1d-22b06d14d250",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3b6d2bcd-4907-400a-9ea0-98b2a03a5632"
        },
        "item": {
          "id": "b13fad1a-f339-4789-9fec-087a84889439",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba408465-e232-47ab-9dcb-3e3da5ce12d7",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e173b-55aa-4361-9eca-6b1a187f4f91",
        "cursor": {
          "ref": "9a0b6e30-374c-4cc7-9e1b-352945ee193c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "53875809-6c68-41a0-b0ed-c8f1d0105474"
        },
        "item": {
          "id": "c71e173b-55aa-4361-9eca-6b1a187f4f91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42181534-f27f-40d6-9ca3-23fc7470febf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e173b-55aa-4361-9eca-6b1a187f4f91",
        "cursor": {
          "ref": "9a0b6e30-374c-4cc7-9e1b-352945ee193c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "53875809-6c68-41a0-b0ed-c8f1d0105474"
        },
        "item": {
          "id": "c71e173b-55aa-4361-9eca-6b1a187f4f91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42181534-f27f-40d6-9ca3-23fc7470febf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5586c-f5b6-47f3-8cc0-03640072fb87",
        "cursor": {
          "ref": "e25009ab-cfb5-4de6-9ec2-bcb7da7b839e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1f2abc04-27ff-473a-abe2-fc6bcdffffcc"
        },
        "item": {
          "id": "bbc5586c-f5b6-47f3-8cc0-03640072fb87",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a8910428-86fb-457b-8d19-47ff2aa7327c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32308945-fb4c-4f4e-8540-b09837c554e9",
        "cursor": {
          "ref": "98c8cdfb-b43e-4c29-8849-05e6376e5d1c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7545c1a0-a6ce-4ea3-a568-86c1e59bd217"
        },
        "item": {
          "id": "32308945-fb4c-4f4e-8540-b09837c554e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66a75d53-bdad-460a-a081-12ba2f895212",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}