{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "00fd10ed-4fde-4a70-ac1a-d90854f5ac69",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9d1a02cf-846c-4c3d-b58d-1483d29c1bbb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78b71829-0563-45c2-9aa1-0e041f66593c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc934a09-67d0-412d-9315-0a26323d86e6"
                }
              }
            ]
          },
          {
            "id": "6544e72f-4375-45bf-93ca-b9ddcc20e45d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85ff64e1-d077-4603-8cd7-fb9d9e99d24e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ecd509a-5222-4654-a867-08ea93bc67ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "707ba500-5d29-4211-8f54-524bbd015a91",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c3741753-26cd-4208-ac76-3728cf396e17",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49ec73c1-5c17-4455-954a-da74b1f1aa8b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd432fd5-f195-417c-a3cf-d6851eda145e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7ef0a36-1bee-4f6d-864b-1ed05b8150d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c795ff4a-1a21-4c90-8461-c94b4f140e09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "678a5c33-a524-4144-8e1a-1676f3e912ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09b71e77-e379-4a03-9a7e-4d86a3b77031",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a3d8411-34da-4a39-990b-2170e0a8c3d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98757289-b64b-46da-8b67-d2cd1cdf1fed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6efc9c0d-17bf-4a90-b48a-604f4764fd3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd85869f-fa66-4d04-9428-b0bae7c359ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e4d1ae-5a61-436a-9a24-17bd60de464c"
            }
          }
        ]
      },
      {
        "id": "8b17936b-336a-41c2-a820-078023146d71",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f7772ca7-853a-4db7-b542-4fbf0837baaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27978951-0637-4baf-89b2-26608eb43870",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7c6c61d-d103-40ab-811a-4ce77f715356",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b579db5-0628-40d9-b7f4-66c99d4878a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8a76cbc-11e7-46c3-8e02-d488d432390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360667af-3b28-4f46-98b5-08b7259facfa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8203cdf-c490-42f1-b6f3-7493356d9ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "552b08f9-8680-4d53-bf37-ff926d88e04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e2f51f-c9ad-42b8-8ac6-9bfef20b5a16",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51985470-c813-4f55-823f-70d70d315e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b177fa70-6ee1-47ee-9e1c-a2921078cb2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "816a7ebd-ce3c-4d2c-bc50-5a316a29aee7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "221a8b82-fcf8-4962-814b-528e0b5536a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d098ac-85bd-40de-8e12-a6d97adf37ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58c8ee9d-5d48-41bb-9a1f-ad92b2c7260c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcb16b7-30e8-4f9e-8b2c-d6c6612675d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2f5c93-3f47-4268-9e85-de4d4078a294"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9682bda3-2b18-4164-abab-7b8b7dc9e073",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bc8bf79-fc33-423e-bb18-24b817353d25",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "496dfc18-d752-4208-a2d9-df1a19a7dfde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fd10982a-9363-4019-b19d-ac39c9f4acaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "855bb235-737e-4389-b3f7-826c49c79a91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a3cfad35-bf06-4766-a5ee-6639d29a627b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eebea0c1-5d2b-4860-8dfb-87875e29be91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d476a1cb-0baa-4bfd-bfbc-e6c09ceef203"
            }
          }
        ]
      },
      {
        "id": "d403fdeb-ac6a-4e85-a050-37b437f016d5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6703a6c8-43e1-46c8-8bd8-3481d6836969",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2df0dedd-e367-4956-a0f4-3e258b4f8ebb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0970461c-d66b-4aac-8470-bbab0e5138ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cde7728-f70f-4a3b-91a4-1e0506b87489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66cd35c-f5b5-4453-a549-9beefd0fff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f2b22a-77ef-4dd7-852e-1c3fdea2bc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd006e4-770f-4a9f-b118-0e1953077f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db655a-84d6-4d94-9ef3-e6b1f01ea8a0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04044f01-2e44-4847-b840-a25db386c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f895498b-517b-48a2-add7-a518fb54bea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a99f85-815f-40d6-a5be-8948bfe8ae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "934fb152-3461-401c-8562-d70ef447fbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207f7744-1245-4004-a702-f2895378ad4d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ac239a-6073-4853-b76d-4790f2888670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d2b9ea-ea7d-4a32-82b2-a5ac85a26102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14060d9-4ec9-4557-82bf-6e108eb8f2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0b909a-eff6-4a20-922f-5a9f862745b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc706130-a8fa-4684-81ea-fe9f7e41d1e1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b50945-53ae-4c26-9d7e-a09dc721db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a88b2cd-ec22-42a7-8c5a-74265368a83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a9cc1-f83b-4166-ac7a-854085756c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33324cd3-59de-456d-990f-5515b220ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c3f79c-205f-4680-9673-4201115004be",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200f8ab-86e6-4f64-85a9-5cc4c211532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d946ce4-bd28-429b-b209-8c0a58a1b06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4654c73-b2c4-4f91-abdb-8c2c665b373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "829cbd7e-77c2-48c3-915a-732a093e035f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c0178e-3fe4-4cd9-908a-9a579e3db0fc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df3ebe9-74e6-4bb9-ab52-83d16c413749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ae5997-9de2-4764-9650-a355e0895dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7ac53a-fb13-4946-bceb-4d60ed841901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f3342df-fe88-4975-821a-1864865888cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254395b0-db80-4417-ae7c-ba3b32cbd0d8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417c4493-e628-4807-9c3e-48b5e0e1ddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e1f8f1-b60a-4f33-9e24-ce7add6ed09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005d0d2-f283-4d94-ac54-6283c8e73387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6f2d64c-82e7-4dc5-a222-bd7180faf98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e5c6d6-91d6-4b75-9798-e01444c47669",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9accd-7505-463f-9951-9cbca54a0f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e1b162-a1b9-449b-b915-6556463b6a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd980e8-ba4f-4e6f-b19c-c879ed51255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04cf5476-9823-4e89-9f31-4d80422bb798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2bd9f5-d09a-49ae-8e15-b8c05ec05642",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cf88a4-eb3d-4a10-bae3-31114a2d52b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e70030-ff87-4007-8ce1-46268bed0d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc8e6be-acde-4979-bad5-fd7932e0a82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aca54cd-2fc9-4295-9fb0-66b91a17f1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28855f-015e-4d47-ae74-53dde9345be5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374ffdf6-0353-497b-9e8e-b7d8271fa1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781059f0-7ccb-4b13-bb28-5a5c05d6c1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64bde37-1068-4b6f-abd8-9b6ab1056087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b4f01a9-518e-4f7d-b2b6-59cf9d1dd97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de84fab8-e22b-461e-8fe5-8b5b59e537d6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50863dd-56f8-4518-8aa5-a1d15c80384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019ac7dd-a472-46fe-9d65-043f4df58100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab669f1-7409-444e-8366-6b182c9a2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db15579-112d-4cec-be6f-2ad3793840f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a203db-0d15-4e64-8e2c-39012df15e19",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25494409-07b2-4c4f-b0d6-0763dfa0aff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eeeff29-e359-4c93-8c3f-6dd437f7ede3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7875d153-de5d-41a1-9181-fab348cc41fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9180aa58-8118-4adc-bc82-6b34cb9134e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd0f5bb-7be3-4802-bddd-ae7e25656568",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc2b663-aca8-4539-a834-03446b419b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9345965d-5337-4fa5-8077-5106bfb04b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7351dde9-e406-450b-b03e-09392e9a1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd21fbc-50df-43bf-bb4d-1ef70f7abbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31ce1d4-a61b-4740-b754-53a10fd88d42",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c856373-7c30-41a6-84d6-af3f315a307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4a26a4-f5fb-4823-866f-493be4b9f815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28292dfc-0d05-4627-945f-37aa8aeaa840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ef475c1-077b-48d3-8ba2-c6cf79744f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a6384-56a9-423e-9972-7e4b12f477c2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5ac0f-d6ba-4a96-89a0-fb0cd2d411e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8645d9fc-c125-4a33-8e27-37297ba061f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce13cbd-2156-4460-a891-fff523a9fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dbc6e1b-3a41-41c3-80d5-b83e10892bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6ed062-ac84-40cd-b7f0-7d30e6c92535",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607e70a2-4eff-41ba-9e4d-86cf6132abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc4e240-67a6-4a36-9977-2889630665bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52c50f7-1e7f-43be-a250-e9e883d47574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ff31f1-538c-4396-8e05-f03718bd4499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8450f8f-f1f7-44c3-9d1c-7a65491a4770",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7538ac98-00c5-4025-a393-e03e9085ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475242b9-d462-47bb-af5c-9d8e5534bd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92592020-c96b-4960-8fae-f32a5c309834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d310ad53-1c39-41a4-8678-7d4bb2c68127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75850fc7-48ab-4950-ad1c-296708368bf3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71eb690-4445-464f-bb17-2096c34c5dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0062b36f-4d11-4a30-a51e-ce1d4f68f902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd80aa06-82ce-4a66-bfac-54354858ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13711fab-490b-48f8-bd09-6f6ce24f963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b209f5-accb-46b6-ae3d-f712da642a4f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59a4c86-b828-471c-8ee4-23ad8d648551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0479a70e-b0fe-41f7-bec9-9bdec5dc8d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3c7bfd-af84-47e6-853b-fa0e3bca814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2925a4f0-5820-4eff-88f3-47d715779b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26f6d13-7132-4af5-8687-eacdb5d4896e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f1e5c-0393-4d6c-925a-14f184ad2448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae8b67d-c6b7-4e9b-b66d-63f368ddc75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc8e9b-6cad-4142-9dc5-a6df8c60a648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccdfb96-83d0-4d97-86d6-481a1be266ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b844221f-176f-4669-98db-c181af703be0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd7a5e1-2684-43dd-9e05-75d380c49e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017fe823-a4b4-41e1-9a29-1676d5e81110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435cb15a-40bd-4bfc-b900-700fde70dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f21e09d-3132-4321-aa3d-272a766feb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b74855a-263a-4688-a9cf-9cf2b9a89ab5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55288aa-12dd-4caa-949a-4d3950e78f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff33ec8-90db-4d17-bd03-8f06c73e78e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dce899-d1e6-4a20-99b3-a7b99f4da20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1711157-d717-4337-b4c1-57e8c7115795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248b57da-5ad8-4459-ab82-9599ebf6955c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5391f1c-f00a-456c-a171-b947cc81c82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4a127e-cade-46b6-b064-05028d00e8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad0867b-2391-48e9-8bac-1f7c71ff067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5775be16-e763-4e17-94ac-ee81ffcedd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeaf52a-bc99-45ac-87a6-a2319f2e5188",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440bcff1-0251-44b4-a988-c3f02461f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fdf022-f45a-4246-851b-cd266d9f01f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c5b4e1-bde0-4612-b5e3-9b4679c92989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7f7cc3-75e4-4123-ba8b-5bf2bd43c6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd1b33e-ac9c-423a-a2d9-a3d844ee9e68",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62318a5b-ea28-4c7f-996e-c47cdfe2c526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6198a87-5ba2-4d03-8511-91a5463a7736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8020baaf-c6e0-48df-a652-763d43cee6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3eaf0e-9ba4-43d8-b09c-44d2cad8ae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09971677-01d3-45b8-a211-d987461c55dc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb1f82b-2231-46d0-8897-4428623ec12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f32b0e-a42e-47a3-91c6-5c5cdc44cdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccb0233-758e-4759-9aac-3122928c6ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc185205-7fb3-4eb1-8a72-417cb0df047a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14f6963-c419-468c-b8a1-148536005fab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aa9988-ae98-42fe-8b13-b2f87930e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81718c4-4c8a-4da0-bef0-8d812f6dd7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e7c1c-a4e0-44d2-8711-fb5343dd973f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e58505-924d-45b3-921b-2a39deb515db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f41d81d-4235-4d0e-9248-42c527df7375",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3560874-17ba-4352-a5f0-12d97928503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f35d87-c118-4db3-a0ab-31fbcaa35861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f29cd9-5018-4bea-843e-1b3659586049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df2eb09-608e-447f-a2da-55eacdce0cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb362913-98c4-41e2-901e-b5260ce2bd62",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93eba80-8038-4e1f-81cd-87158ecc3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c16f687-f545-4c1b-a353-7140d6e70d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d958a46e-2b7e-4e9a-b680-740756b3f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61d5ab8-35d8-48a6-8a9f-2655d6136117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361ef1d-c836-46cd-ba83-88beb22113fb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeec437-1f64-46e9-9b61-550ee8da203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d30b1f3-4014-4679-8a50-298282dbb4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f7f569-38f4-4445-a85a-b22ddb16076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6eac7c-d3dd-44b3-9002-fc1a7c70cba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c57520b-f945-4923-98c4-d031a9b1f60a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a40ef34-7710-4815-85c3-448182faa4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc275bb-295f-473f-815a-f70d109eadf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c135b7cd-fb7b-42c6-9645-cf6683b26ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1215a8-8ad8-4373-98ad-3de4a7daa4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f88acb-86e7-438b-a493-e511a5da2d91",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50593bdc-98aa-4256-99f7-7307d033dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c4c882-b517-4fb7-ab88-dee6b8afe16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5120eb-1853-4a6d-a324-ad4300043338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d6cecf-3da3-4e65-bca2-e95efd2c992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85343fa-7dc3-41e0-b772-cd5666f312df",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807eb541-a3c6-448e-ba8d-a40e55623c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa6857d-e1b0-4580-a073-12071b253e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241e4e98-85bd-4e5f-bcc1-34538df51cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38759091-3cf3-4879-b258-e0ba5cc2ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c30ad2c-1dbd-4a28-a464-672223f1f19b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d9fd19-1c8f-45a0-9721-3b68a6671927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4641894-029d-4159-8388-01830bea8999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01470d-1320-427f-bb7a-728cf7fc34ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8d998c-c77e-4da2-ac70-811751c92a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636187e-9d25-4de3-b43a-08b4ad8258a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d87ef-dbe3-475c-8142-5db324c64b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf594927-d603-4e96-bf75-54f43041ee49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183159db-b78c-42cc-aee6-89424a93fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c28b55f3-faa6-4304-8202-1258c1cd8961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341cdacc-5e2f-43a2-b1e3-dd0bd596aa74",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfab32d-8b6b-4ba7-9b5f-997358b70ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdd4a961-983f-445c-b60c-f33104154590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd0558-2f0d-4f0d-9153-3dc38f651d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "accbcb09-6c61-4bd5-ba2c-969652e4d7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeb840c-3682-4fe8-b8a4-b2f9e251d1c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6b702-d2b1-4ad2-af1b-926ff2f08f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0fa1bc-c18a-489c-9e4c-f609f1d0619d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a4a311-eac7-4817-819f-8e3a2b29340f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96176ab6-3d41-4869-bd27-4cc34f576a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a835774d-1219-44c9-bb0f-f8afc9c13fbb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373f6987-e4db-42a2-b52e-196e06c333aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dd6ad7-6953-4d3e-99d5-76a1602c252f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf2532d-5b8f-403e-8c44-f4c17dcbe04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9612fcc-a122-4711-b8ee-292072402f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2893a4-8f93-4d40-971a-152b9a712b65",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0658388d-2972-4fe2-9fa7-24e433389366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80af8e8-59ac-49f4-9fd7-b3f5c28ed241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228fa4e0-ec3d-44e8-8814-372f5627f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c163bf4-1acd-4aa2-b642-00280d32d316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28ed343-0d5a-45a5-a9b9-8257e55a946b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e12567-2238-4a51-98de-056eaf08698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79bd304-c138-454a-96ee-74bb0880d92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad1050e-bece-4b77-9fe6-53868690954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "544a0c77-605d-4756-b720-420953ba4c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63de1a9-b357-495e-bff5-bc11eb96468a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e953cf-0a37-401b-86d0-7e8d4db2c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28c04cd-130d-4eea-95b7-99ad20b7b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9538c3c7-f78d-4c8c-a817-04a20c094a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1bcbb7-c614-4587-b289-be3015db8230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff66184-a81b-49bc-a72a-663e5bf22815",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d4a5e0-a370-42a0-82e3-2ad0c4069aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d531714-926c-4d8c-a406-df57a9dfedb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf5533e-efc7-42f1-8f41-0359b02dfb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfa16d9-0729-47a2-96d6-398dcadf315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ede5b62-8bea-4d10-9257-23f6cb54e9b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e341f7-064d-44b9-98e3-80dfc97d70c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7823bc82-8feb-4245-939e-8328fbdb0a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa3be9f-86ad-4c37-9c82-17cf00070c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9af430c-9437-4f4a-85ca-4348791f8370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac04684a-2506-49fe-9a8f-7ef3a3fb6ccf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a738bb14-06e0-4b8c-b183-23dc9411a645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242f5c3f-504b-42e1-a74b-476c1c5ccc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbd580b-4964-4cb8-b7f0-f43715a33bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e926173c-66c4-4dab-83f0-25dec658b98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0347f8d-fd2f-4e41-8b17-4e4e3ba7e952",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2350fd-714c-4b02-aa36-d392d6183615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c1626-f3ed-4b7e-b853-87bfed909d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59ec325-389a-4001-a121-8413633ea881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf70a89-5154-4d52-a6cb-41bf760e8cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50fe4b2-6532-48ac-b0ac-db814d00552c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435c498f-1319-4df2-88d0-27181f4016a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf970cb-e1d4-47e3-b647-eaccac2ce6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161adaa5-0c74-4147-8d16-9825485ee763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64ea5e4-30c8-431d-b02c-bc56282a69e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea37a4af-a14d-486d-a1b2-4e47197608c3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f00826-634b-4cea-907c-c5617d86d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027c28aa-54eb-4ee7-8690-a9eda66201e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18acbf-33da-439a-9158-72a0b89cb72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d535ec8-590c-439b-9215-511e5489bf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47935992-846b-4861-ba4d-0a8d9eb4054c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84734579-6655-4e13-95a3-33e1d5741485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ec5093-1937-4059-8dd2-8ca28b4627a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f26f438-81f8-4fa2-b0ca-e6bce76e2a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca7b3d2-3fdd-4aa3-acbf-f63be60c9c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b44e4-d207-47d8-b6cf-bed6177d04a6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc6e6d-71e7-46d2-a5b7-808c8dd39963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02f0cfd-59d5-4bfd-8fc7-a47f06d24088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5719398d-8573-41b1-bb44-ece5dcc7875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd129e6-b7fc-4cdb-afcb-252584a29242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12e759f-4874-413e-903a-260dc04b1c63",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5387a9-e456-43c9-b12e-85f600ce7880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41b6c44-1591-4ba4-9523-dddb6a8acead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f86b7a-23f4-4955-aa9d-f93fe241d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a58a81c-2484-4cc5-b095-0902605d2964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a278bc-4a7c-4aa3-ae0b-80859b49adb2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5727c6bd-ae18-481c-958d-cce9b57d6c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973a049e-6ec0-4689-8466-233f094f982b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf761e1-c9d2-45fc-8330-d4e3b93787a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad694ca-c9c2-482d-a3a7-4717c661a751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ebfebf-7205-48ba-a896-df942db6aa7c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cac992a-0407-4a8d-9e99-29d3e067d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac390279-a055-4ebd-9ec7-63c85bb95e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ce24b-f159-46ac-a87e-0b3e026e539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1214d3b-daae-46ae-a70e-5fe425488a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aae943d-3a3c-4cd2-9bc2-a93b7df579a5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bf3b8c-4f04-4e06-98b2-1a2f3b319e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf85cc58-0acf-4d01-8d09-98a678bb5ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314b7c4b-fe1b-4623-9fa3-c7bc2359c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ace2d5-f46b-45b8-b684-4b333b4b5282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95758fba-b11c-461a-bc25-08a14eab0c35",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ba3650-9b9c-4f16-9a84-d8c27072cb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd3b1aa-e3c3-4e4a-bca4-4d2000ea4e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c34b4b-0147-4883-8c3f-d82a5e14f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c130d7cf-4701-48e3-bf2d-a255e0f2107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e704a2-4e4a-4d37-bc53-34f74fd4594e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fe0df6-a514-4e8e-bce2-bd0cfd55fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a0a39-d76d-4bf7-acef-485c3aa22c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994b2a0d-2251-4ea3-a315-379cdd86f33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2637ae9e-0d6c-45b4-9bcf-ba53c4f7c648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cff9225-2bc8-4e8d-b058-4f739ebf553e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88092b4a-a81f-4575-9d0b-a8ca0ab8af25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e362099-a4eb-41ce-9049-f34bb178e42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02657927-dda8-4163-a19c-cad8cb749380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a1aeac-5b7c-4765-8247-2d0d7cb6d314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576bee7c-c5dd-4b87-98ef-da6588fe9f42",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8635bbd-84fc-4387-8375-c0a901816198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6709ebad-b4ed-44ea-80c3-b30f233f7dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4680b8c-2146-41b5-86de-0f28f2ac4294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6a11c2-0477-4c2a-9576-fa9608e6cfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9908aea-7fac-4563-943e-7e1fdd1dcd28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb009ae-c430-4104-9fe8-304b2384cca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9185ee-65c9-435e-8bcd-da0ce29a8197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa8a9e8-2bf8-4ead-ba0f-b6e13bb42fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "175d6658-e0d5-417c-852c-6ec70abc3d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e486c6e-6dc7-4419-90fe-f1a9433b6432",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528d1765-2451-4416-b710-d41c0e7c8241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ce123c-0a1e-4e10-9851-7e0becac548a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612612fa-b059-4c57-8562-5653aa8018ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d06beb-a79f-4c79-844d-3e2c2cdb7242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f10e4-5082-40df-a09e-52094b4ccf4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e706901e-aa01-4da4-90d8-d66881a19a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f92940-1527-4435-a2b9-c2cb41ae2c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d11234-3b6c-4d13-81f0-be41d4b286c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adad7a95-cb0a-4199-b1cb-ae8917698dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d443fc9-762a-495d-b7ef-144c5a4e5c99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b1467c-bf98-402b-a709-c01d2b2daad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c3cfe7-9a2b-4193-b15d-712b2584fc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96149d57-b266-492b-b8b1-291b0f72aa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4d2ec2-623e-4f59-84ee-d864433dd6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa35ea9-67b3-4bd2-9072-14f45bbaf56b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15109473-f32f-407b-807e-05a6c5f96ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b35e57f-6ed0-4515-a911-a43950d8df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579be4d1-1be8-4718-bbe8-5aac8439be11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3232cf4a-c187-4798-bef4-3c2a21b1ed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b21f3b4-5e2c-4dbb-95dc-88e948fc77e9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96475e7e-13a3-4252-8eda-94c9826b592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de65ebe4-6349-410d-9bf2-415ac4075c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2067005a-9a17-47a9-9933-ff34e2ac5958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6519e6ce-6e27-4fba-861e-27679c6de0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e897ba-ba98-4f48-96d2-fd527b78cb14",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0baf992-0313-4cf5-958d-d766381ae8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c33a60c-e58d-4d11-a573-60b1e930a4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7723427-799c-467c-a9a9-d9d2d26cadf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1702f1-fbd9-482d-82a9-00b23833fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1350e10c-67ef-4dd5-a533-c135a857447a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf196d2-fe28-4690-8f81-6330815efdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb90c2d-5e9d-4681-a5e7-12fae7825fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f50677e-3d2f-47ad-b94c-85db4650b4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cbdc2c-a425-4c4c-ba37-e068470af10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee347fca-a8cd-4bc6-b80a-0eff6ce55c67",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af49bf5-2083-405e-9493-af2699606a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dc4eeb-7c78-4c28-9d5c-fa161d559792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d734111-80de-4bc1-a12d-dce76e5a6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b278b8-d17d-4adc-a05c-8c7727940a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5224c2e-abea-4837-9acf-17c9cd112a22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02180da6-c8ec-4a08-a12c-55a65b8bf5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3671583d-5621-41ec-ba61-be440ada2a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8519fbc6-f757-4229-98c3-f9a93974f0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e597c43-6816-400f-9c6d-c0cfeb9907b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9084bc28-896b-476d-b141-bae32028db3b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e73835-ca2f-4658-a120-2cc4eb8e78b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c57392-55fc-4fbc-90e1-dd5abcf86003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4c23f0-1e61-4ef2-8e22-c1139be04977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cae1530-ced1-4c30-8398-9f4da3346d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ea00a3-2c2e-45df-bf88-7804402979fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113aba46-75b3-41c9-b533-d97ed5b5e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f733a70e-2d16-49ab-ba79-b762aa7a16ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687a653-acf1-4e8c-86da-ba1855e5fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8d33dd-bd2b-4b52-856f-342ce001833e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0678b4d7-9ae0-4928-833b-a553224c32d0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e362a6-5ff3-44fe-a363-03725ac1fccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868e0f95-e026-41e3-b06f-0f24108f911f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd9f719-0535-475c-9380-baa7e08f6c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bb7fae-4ec6-4aaf-914f-1a100ad20c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a2137-81b0-46ef-831c-c294453422d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e74f53-e0e9-44e4-96d2-de74f38cecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f182fe64-fe08-4f2b-a881-e29ebd74c83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de98b0e-e8d2-4997-9495-b0b87ff2543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def4afb2-e8ca-41f4-bdcd-553b6358b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23418453-4c12-4502-b36d-8c660c247eea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ba4fa7-37cb-4528-b849-303986de9ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f47109-a731-4a5f-a3f8-b1c349c60c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b73de4-abbd-40fb-b904-a6f5a035daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57ea5bb-a0f3-44c7-acda-ded8cc8834c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc4f502-a954-4851-a109-c7d05c55510d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3163d098-6479-480f-8d9e-0d018f2d7aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554962e4-10f5-4091-b202-7b6b3cc25ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13892306-48d9-4ddb-9bb1-67b874d468d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed53d923-868b-485a-9848-c47e5dab1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864197c5-daef-4b11-84e2-edbfede070b9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6727d5ca-1ce3-45d8-929d-b02672e67c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44d4d7c-3323-437c-9a73-e321dbd5523a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4846ea-e9da-4168-9841-54a0ef7b2fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65d2f3bb-e01c-4011-a39f-c1ddba15a993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58831f9b-4f09-42bf-8f21-8ef2edc086e1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e85e29-5322-48cd-92fb-6976032eabfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d16ea64-6ad0-4513-897a-25fcd7486432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b29da1a-3448-4e38-945d-b4c00fb4803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa28c9d3-15c8-4d7a-b564-2d302db34453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ee1be9-1a77-4592-aaa0-9591ce0c1c5d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f599c0-fe80-45b6-b3c8-2baaba8bba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d04e27a-60d7-4b71-be72-5c6accdcc72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441042f5-bbfb-443b-8c45-2fa7636eef4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c2c61d-cbda-451d-b510-30a55c5f2770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f938e0a1-d18a-42cf-b256-3f596f766045",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcbd1a8-b766-4f22-a7ed-67bfe19e5b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df0f8d2-b4f2-4dcf-8671-66be03766af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44892f-5dbd-4919-bb2e-c280a8e98204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fa5488-5d5b-4005-ac48-5a7f7d773dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7216afc-34c1-4cd7-85ff-26ed8036ad0a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd7144-9a12-4d06-89ea-4bca2f671934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c793ec-fcea-4ea6-8627-866d0d26cdd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aea20c-5bb2-499e-8849-87c2f6c0d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2ebc3b-f28e-46c3-994d-7d6769ee67fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136f9736-a9a9-4946-a874-4ef42f4a70ae",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e53957-b82f-41f9-b2dd-3bace35aef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5cd969-e154-48ea-84bf-1bc4ccb1c9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7c756-877d-458e-a8df-9b0898716ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46bcdf9e-b796-4b83-a314-8bbd91d1c351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f49618-57ad-42e8-8593-7b33d54c851f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9661f17c-b4b7-430e-9a59-9929bd3b5fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b76afaa-f8fc-4085-87a9-364d37f25fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1282b8-63e0-473d-abe9-cb08be50d45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3e1f7b-24e6-4fa9-a71a-d5bb7e4e8f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec72c32-6b9b-4edc-964c-6d6a342bebf5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19317dc-f0f0-4fa9-990b-d9a249f50eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c800b4-08da-4911-8a2b-21cdfc369a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f6ff5d-71f0-4db6-b2b6-bb3cb815cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "100ad259-9828-42f0-a1b0-335a0c80d7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f812b1-3d27-4681-aba6-e001964ef9bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72240fae-d9d6-45a6-aa11-285cc76939a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32eeb05-f748-4003-8574-154409f94b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c6d0d-da78-44a9-a8e1-5b70027409bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e392093-c0bf-4efb-b8a3-8e7ee8cac31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f22f99-11b5-4649-9216-9f74707be6bd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d9f369-d23f-4f78-bd15-6fceabd42764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82033fa-e91c-4ee6-9c58-2f73d9873b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ac3e24-81b9-4c57-a779-d6eb97643c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7e2a65-3a86-4374-9182-96da8ce72584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56033a2f-ddbe-4929-a81b-287bae50dd7a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f2e06a-1fa7-4fe7-9ed8-7ebda27fcbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224328aa-1a2a-418c-9dec-03dcd5c7ff58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db37b64-ec8a-475e-8c11-7b70a964b574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d216b70-a587-4b03-a1fd-b8a61b1ed19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c75327-c6a3-4af3-ab03-52918212a3c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb2135c-d7d1-48db-8432-e011001457f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2615232e-099d-4757-9b0e-08bf8fb30034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034c8f0-4967-46df-accd-72fd19196ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13eeae39-d945-47b7-8040-c53cb595a09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b92f999-e937-4b52-9d07-4bea877c88e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428aa517-cbc0-4f82-b484-f6847105184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3683b9-b208-43b6-8db4-374c0a0ccd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a248a00-6bfe-4e48-b070-9e1a9a3d8283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7caa1fbd-6f6d-4236-a674-1880cfd7d690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da38eb90-73c2-4673-995c-85cfed3ce0c3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b390fa-3ebd-4b8e-b92c-33f26420e795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acdfcab-99b1-46ae-b35e-95b4441e3c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0e64b-14ef-4358-9968-9ccebec46394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcf953c-1f9a-483a-a250-1e2a6fc644de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace5ce4-3c03-43be-86a6-f86ac908cd59",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8e4729-125b-4d17-9285-86f266af20ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bd0cb0-cb94-44b3-95f2-d0257b0198dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094eb212-7a42-4ef1-9a6d-ebffbd2f8604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98938557-87da-4f74-9fca-15abc2862157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d473b3de-397a-4b4b-8cb3-3babec0cbd7a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448569ca-5bdc-4ade-a69a-8ba5029dcf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f49c12f-299e-4b0b-9803-09d397218034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d04e5-e858-4f78-940e-da41ab76f831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca5b754-ea23-451b-afff-d552e0d9c846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ed1f63-262f-4b64-a39a-69dd3f1924cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfce25f-e1d3-4be6-9064-7450cff7f8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c82ac3-758d-49be-b672-f43bd24769c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b267f7-e2b9-441d-a4cf-ab8b8d49cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c2a6a9-7ca0-418b-a85d-a22f6caf42f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b062e59d-24e0-4ae7-bddc-339483b17c34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da5abb-33f8-4d32-8445-8b2a3054bc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd6fce9-c882-4e5a-a364-23467f252485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814d8be-b6fe-4bc5-a8b7-b19c17bc267d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b95c57-b5e7-4205-a76a-896cc1b792a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826556dc-7fcb-43ec-a19e-084a2879d3ee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b32f70-623a-423b-9173-cc3b44b80984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ffa4a9b-c8c1-4678-8903-4c054041e717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e9a601-8ffa-45d5-8052-610ab361152b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "609f1939-32d1-442c-a89b-6315d80d072e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d017327-59e9-4b66-b7a9-47c273127120",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1951db74-3189-4a76-b487-c8f4351dd05f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f562b1-708e-4d9c-86c8-c9ba2a4cf6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35cbbc22-458a-41c7-a07f-1f3c9cefc073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f819d68a-7215-4433-ac34-3499d323ebac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c6dd60-b0df-49f8-9fc9-7c01033dc5a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c23a585a-7a15-4658-8e0c-51c0c7ff36e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "255b30bf-5de6-4415-9a31-477155c12196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea98ba00-c0bf-4df3-a240-d16832d800ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "403aaa5a-d216-4eed-84c8-c9a7ccdbab42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7465459-a5b9-4055-b7f2-44b6b2da79f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbfec89a-e0ae-4c65-89ce-077db727929f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5a66273-0bfa-47cf-a0a4-917b0d845e71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff2beacc-7181-4d15-9308-16eb594e6a95"
                }
              }
            ]
          },
          {
            "id": "691d364e-30fb-4a3d-884d-b3e085d595b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7604743e-20c7-4761-80d9-0fc50d4fc553",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "29fa5a0f-6565-4e54-a8f6-76689bc49a40",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe270ba-1fd5-4b3b-bc36-fb69e34ce3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "539f8b01-f419-4115-b81c-3cf682c9cf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f21309-307f-4cd6-bd1a-23270a84efb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df9d8f0-aec0-4267-baf0-0958689f7489"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20fc81c3-668f-4ef3-9a52-9534a0980c94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d9fd54b-c184-4e79-9a75-74b0ae968655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dead34b-135a-45ac-ac63-24fee9fd4948"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f48306ca-f64a-4bcd-a76d-fc52a7e0a61e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a02fd38-842b-469b-ab1b-5c855b026b91"
                    }
                  }
                ]
              },
              {
                "id": "fe876fa0-4768-4f0d-af13-6f3be6237ed2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9d9d272-ff3e-420f-8c05-a7206f63703d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70c2cb73-e247-40ec-bd4d-b57cd1f876e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8eff02a-d317-4928-846c-7de525b63644",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3724329f-b0c6-4726-80f1-8045e147343d"
                    }
                  }
                ]
              },
              {
                "id": "38a97754-5016-4778-a4b7-6c15d92a8747",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc2eecc7-9d8c-4e85-95ef-9eb8b96fa424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b973f87f-dc2f-425b-8125-7057397ad50f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c76c8f53-e019-4012-912e-2f43d24449d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0f1afdf-ca67-4c88-a8e5-b53e4307acee"
                    }
                  }
                ]
              },
              {
                "id": "826d2a1b-13f9-407f-b2a9-bb818b216b50",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efefe4fb-880c-4dd4-8108-5f9c0b6415ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29a46846-3896-4a05-b153-c849356cebf3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6eeaa2e1-345a-4826-96f2-bc83b21489fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "289e9b35-4d25-4074-bfb0-e8596561a4bc"
                    }
                  }
                ]
              },
              {
                "id": "e669b10b-a995-4529-aae5-cfd4de72d86e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e5ca89b-9256-4e8f-a161-c4dc7c8b1b7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "544a1add-ed35-4a9d-aa80-d88cd8d32727"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e4b43a6-90d5-4a6a-a290-bf31e917b78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7e2e1f86-dfb7-4958-a6e6-78025a5a7f14"
                    }
                  }
                ]
              },
              {
                "id": "089515db-df84-482d-8b68-7d7a522e6af2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965c2b1f-fede-4574-8866-1aacdb43ddfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "722d8b45-f811-4d50-8b42-549a4497280c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34139891-76ce-4461-96d8-488e29943260",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed49a250-9749-4672-b893-78862ee1692a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b36540ad-5cd2-4f2e-8cf7-2dc7fb7febab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbcc7784-e3d8-4302-917f-51c17e0e3127"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "726b4d52-6742-4eb9-a0af-52c77b775b31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90ebc52e-a21c-402a-8b01-2b1d565c6831"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "984e4378-591a-4092-afe7-9ef0dd8c0639",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3bac03af-ef0f-4ef5-a788-dd9cdb3cb98e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec6f9898-0616-4584-af39-7b93488dd143",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15ae9d1c-8062-425d-9d59-7066d925fec6"
            }
          }
        ]
      },
      {
        "id": "74168e4b-3e7e-466b-9d12-4cecc024b513",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "725e501c-b269-40d5-9509-3d99bd560113",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02c35769-6786-4524-aff7-819337f40979",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21273190-031f-48a8-b060-820425a1801f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289fceff-8493-4b1a-90a7-3cbd4f0adba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadc51c0-b9f7-4b21-8820-bdd895bf1f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2728aba2-89de-403b-a693-688f50177338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e839c798-db65-4d3f-ae2a-0323473219c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2a3311-56b4-48ff-8eb9-475acc9638d0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ff12c4-83d3-420a-9d53-a685682b2b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf99fb8-6bd6-4346-8d14-9d1d31cac1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3690b96e-7ca0-4139-b9f6-698c8b83c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad3fea9-83e0-43b3-a640-e7f441f5622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2250f14c-5159-4d4a-a28f-dea82fca0425",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1864e819-4e0a-415b-8a4e-c95424d9b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69617b50-d6e2-4d22-9630-8cec5795975b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117c22c3-e64b-448b-95b6-e06b98f7ab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed14cbbc-c473-4ff9-9238-af3fe59f9b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12fd0bd-6fa1-4512-95de-e58eee687b79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd487b8-4c83-400a-aa08-165f135bf672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117dbf51-ac3e-497d-abb8-f182be2b47e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5092a9-07e3-49a8-aaa3-830a1eecb2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd05fe33-9046-4b68-ba78-a537eb36c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9887544-bad3-41ae-a6b0-d6b43adbcd90",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b480273-3cca-413e-844d-42cf265865c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f651da04-8ed8-44ef-8885-8ec03bf09265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbaa398-d722-4d1b-bea5-8c67950a53d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffd3c56-66cc-4d46-b6ca-b18237990af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819fc12a-ec96-469c-a3e5-5907cfe4985d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2e2955-fdd2-4582-af6b-7c67e038d693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966dbb3c-1cba-4f8d-9873-ff08d5ba5af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8c830-db9d-4992-9e3b-5095db7b4504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe176e7a-4e2e-4aa6-8e50-1fec49a0184d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b5d921-fdf3-4bbb-a80b-b364d1107431",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6913efc2-5d20-4ee8-bc80-7b8c896133d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1280b1-bdfd-4ca7-afe9-114dabf14603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7639fd39-6566-4753-854d-8ec944951222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4efb78-a127-45af-8e55-533cc0b4a436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853c7c62-1f92-4c18-93f2-081eabd7f2e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07da1811-34d9-4869-a822-edbbdc399ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76873248-a908-4991-8240-17e3bb63f8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3922f0dc-7bb9-468b-b9ec-8ed9e0eb27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be9f9481-5af2-4b52-bc97-33152203bd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0e4dd9-4b56-4788-8304-71f667dc066c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926b4b4-788f-4c91-8d89-98795ccfd13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60293326-a9cc-4646-a7b4-71349313e296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af864b96-a7de-4712-a3a4-cdad40e6c1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2528ab8c-84d3-4c26-a969-0279d856b1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c93391e-472c-423f-81c0-614c22bf3745",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce14c174-4eb6-4bdc-b727-3ad3f02da1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e2046a-bea2-43ab-9291-82f9c0f8ef35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a1fcf5-73e7-4432-a7b8-f5aaba6c3459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e6506f-0674-43d8-8fa0-2cf3841a7ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15427182-f2d8-433d-82f6-e635db564c54",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843374de-ba5b-4c0b-bae5-e4014ce511b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac0af11-fff3-42b7-9f87-11358e4f9131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cc6de7-5b32-4bbd-b69f-4916c0b114ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "63887428-ff02-4e79-9ab5-ea5d3ecb3a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08105a8d-dd0b-4353-8024-be401c05eeba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85421d02-c186-4e07-ab29-fa1427825c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88790801-c559-4692-a29f-74553bb0aa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465fcf9b-2785-4144-9b7e-ef586e6c0a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4f0567-1266-4193-a952-0fdde9bdc9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafd3b2c-f2a5-4e0d-ab00-d5b8dcaa9a9a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be30a6c-3a3b-479f-80ca-cd709c266dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd80d4b-cf17-4d37-b9d5-1e7457ca1386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8385b43a-1a0b-4174-a6d0-6685cbb9f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a6fa87-ddb1-45be-a644-a44593976366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939ec80d-c41f-42df-8560-5b4b2a3fd8c2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefd45af-6850-4184-b62a-cc15ee99121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2615d746-4e6d-4f48-aa64-7a30259ea3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acacab6-e8bd-45af-8ad1-cdf225b7678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ac8e28-c6b3-48c3-8f5b-19953634de9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce50f2-65c6-4d12-a1fc-75420e1c478b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232a9d5a-2347-4464-8464-094e0dd3e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955622cb-0e8a-4cc0-8c70-70e0ab493c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619abf0c-beca-48ec-b744-e13fed52272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8051524-c841-4dd8-a1e5-1e8e4096035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fbf222-20a7-4aba-b476-f071b095a214",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f41bd3-e889-4249-865a-442f17d2f70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d94dea5-ceef-40be-860a-19a08aabb07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5346a-e833-4bf3-a784-d7f747cb81ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c5b713-a2ab-4120-9b4c-2dcce1661507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951d68ad-d859-4076-8074-764c6b140a2c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a58984-45be-434c-9342-c6e4c0ef6121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c0d05a-9041-4a6e-80ee-4b78490adbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7950b5cf-e24b-4512-a396-5e970945b482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ac0639-0209-4c26-a5f9-757c2f5dfb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897e9da8-aa95-4ecc-99b8-d9adaa89bd7a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51209b23-9f6b-47f6-8482-805c59632ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b5693e-bc12-468d-90c3-5aa24a1d61b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3fd6e4-6eaf-4b84-abe7-53c70b47dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac97a17-c12c-4756-8de2-828e73a7c016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed2a25f-1e39-4d24-a956-2fd687bb2b44",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8551ea-0ea1-4ced-88f3-78585a9fe56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cdc009-385d-4c95-89ca-43d4fae2bf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d417bad-ec5b-4bb1-866c-b998181f9225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c7d3b3-310b-4c09-aae4-9f366dcec687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1374be01-ff9c-4d49-843a-9d1ce6cab029",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5369de60-ed10-4245-900e-105d300d61af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26004fba-7288-4791-b24c-a29445a73269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf77180-103a-4380-8723-50f5ccfc0816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6121d50-994e-4d69-90f1-e5d41f474f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce47c3-f560-4647-8c10-6fd122bafa5d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c2d8c9-ee42-4c4d-9132-056252ac5e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106456ba-f438-4f88-9f04-b123d269c6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9b4273-6624-4410-9cc4-4bbe84603702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cd4880-a540-4395-b79b-27bfceb6822e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c5ebaf-e671-4148-9eed-f8bf6d939032",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079b68cf-bd04-4b68-8788-4a3f3375d3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b08b24-f798-436b-9072-5278c7f1e745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74c34d9-5cb6-4f6c-866b-8c33205293e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eab98d1-23cb-47ac-9df0-9a3257f977d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2188f3de-2ad9-4e7c-9507-6718aa0a0add",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b4367a-fd21-4d1a-9b45-fdb112a59fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5710db03-7694-4b3f-b16c-3d1c3d171119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd206504-60e6-4e82-bf7a-410fa8f76f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde1ca7c-1d0b-48d0-b2f8-6f4cea594d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17c3aee-161f-4d31-a309-263f7e17e617",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72c879c-38e1-44e3-b180-cd72b40b4cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632806c3-0927-4a9b-8059-2f8b6a1eafb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9610a25f-94da-4bc1-9023-bd3a0d3247c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9567f2a6-22ff-4597-8a56-e7d59afb41c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637da654-64b0-4ff9-a053-548542190029",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b42195-5680-4d7c-b999-bbea73b76b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91b2e1f-d642-4ad7-9a23-0b73362e1621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177dae39-acb1-47fa-83c1-570998ffe228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091ecf36-2df2-4904-b4f4-27ddde8c8e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e716bb3-69b3-4783-a519-46c8cc6d79b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6011a6-a1ce-452e-8a66-e80f8c0a5ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b186f35-2082-4f54-af5b-d3fa055ae296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8975f0d-20b2-4687-98cd-8c529eaf8ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049239b4-5b86-4e56-ab47-11709e1c91cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abc8d22-33c1-4aad-bd99-efaf90f58ea7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc9b0eb-ab68-4d93-92d2-ae60720bb64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4a1167-4472-4c80-90f7-375b4da5717c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d807df-e52f-4c77-952b-4a014dfbe69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cb2810-8ac4-4ddc-b58f-743ae98d30a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d822eca-22b1-44e4-9981-6f661ba0f2bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a88a097-8eb9-4d5e-9e94-20b39f181ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9288829-3fc8-4901-a07f-0dac0a84a34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dc7bf6-0b1b-4e27-9440-d8c33a1723e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba11cd46-ef94-4509-b263-e1e69898de6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8fc3cd-9ada-4bbc-be97-74064057b557",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3833dfc-a076-47fd-8a93-8f9c4a09a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c874003-22b6-46a4-bef4-e9db0ba1c35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74996c62-8820-4fc3-9efb-40f44f74bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac69f205-c1fe-4378-9fbf-57173949d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58e01a-850e-4ba8-ba39-25afad33eb42",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f29beb9-7e06-4be3-b6ea-fd1f672577da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74750ca-61b9-4189-bfd3-39966fafd0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ec7ddd-dac6-4d78-8d02-7087c29a288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d3938a-2d90-4ab8-9d53-31887c241ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a558bed-d380-4d25-88ba-6129489d84c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5396ec6-e6fc-4541-8f1e-4b176fd1a758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6a74f4-99fd-408f-bae5-ef1725cb399c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b86df6-d7fa-43e7-a442-dc0bd650e2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762af257-efd6-4f59-9e8e-43705659a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3065c8-3d81-427c-b93d-a0d434b5464c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2290c8-925a-49cd-9ce6-803eeb945285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b94830b-1d34-408b-9de1-722893a01465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9054c71-694b-4149-b3b9-722762e4cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bcd93f-990a-4804-bcb5-4561ad853cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5535e02-eb2f-4f54-b4dd-3481b796b2c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f45e0e-7507-47bc-8a9e-d534ba194044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e38f65-89aa-4726-9637-0d649d342ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2778cba7-7241-43a9-af20-5135330925fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a17510-c00b-40e5-b3ed-050fc920aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb55c37-ae48-4c1c-b395-1df8aec35831",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fb5fdd-13f9-4764-a340-3c551c981781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396446fd-ccf8-4e26-b51c-7b949aa9e0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7318ae-3bbe-44e3-b6e3-d998834ab607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27fa4d29-3975-4da8-81e6-4cc06f734026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39b147e-f107-4856-94e4-6d52c641ccec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a62808-b3ce-47d0-8ca5-cafb238f95c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c441123e-bdbd-4e81-824b-bb8865c89e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecb790b-0abe-4f76-808a-7d8a1b557c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b78fc99-466f-4765-98a5-fe2df9e16c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf12e51-8b5a-4076-8b13-0480ad6d001f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1759fa0-85d2-4992-986f-678b53a2580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ece3010-1276-455e-968d-c9d7496243e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744e2ad0-9a0b-4ed4-a27a-723af8494770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad751c9-d52b-4c6f-8b18-e3dcd15ee682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a446fe71-fb7c-46f9-8cb1-dab6541f0c6a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95082a5b-625c-4ced-b7b4-884f13cdbc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c19e1-dc2b-4f20-a268-2833c40cca67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696088cb-3ebd-4efd-8f96-5ff2cfd53a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dac6dde-cf2e-4dcc-b4ed-7e5718239dbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3ecdf59-cce7-4630-9e53-b53342330f8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f9ed020-72cc-41e9-b783-f888f5f14bb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d1f668-ca65-49a3-8331-7814fd601220",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4868c8eb-dfd3-44d3-b539-94ef5748c5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f77d3-8ac9-4b22-af14-0bb2c67d5150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74056947-0ade-416b-9146-d5e96444d628"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a1a4485-c200-453c-aaf9-8e5121ef130a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3f6084-f308-468a-a536-6c8566228a7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d5770e1-9dc2-496e-adb1-6c2eff01a72e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24ec4f08-598f-47a3-bf28-28ab6d820fff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e97fb6f-a30b-4fb8-b138-7c06f9d2caee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f785b602-07c3-40ce-8b78-e663b0a62f93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71d46357-71b1-4a58-9234-25a4ba0cd69f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37497622-9c4a-4fa7-943e-f5dce233cb6f"
            }
          }
        ]
      },
      {
        "id": "f6bc8ca2-7f96-400d-bfef-bb1242354f67",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "929c2681-ade3-414d-a73f-3fa147f6b583",
            "name": "Negative Testing",
            "item": [
              {
                "id": "376aa7f7-a239-4e26-a140-82baf41e3ec9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90cc892b-b9fb-45f2-bc31-5f3668d8b7c5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc2b3b-6295-42ef-bcd7-71f9c7cd5e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6117d0-1b78-4ca9-80d3-d611efb65e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a56490-a0dd-44e4-9722-0b19e08413c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ba2e6f-c293-4a43-b7ee-1f9a5579bf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffadfad8-8ffa-4013-8d33-e9949e07db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be96a85-0852-4a1c-ada3-1876ea33d3fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381c2d68-0189-45c7-9e29-7c40849c071c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad9381d-b7e7-4d0f-b1ce-ba9630a2a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65363652-51cf-4d2a-998e-aeae079065a8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b50716-3f90-4e0f-af08-6999620bc43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32410cf2-1156-44a5-a787-1427c4e101ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92db7d58-05df-43c5-9890-23310104b74b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad510884-0172-4164-90ae-c5963d3a26b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac179d7-e268-428f-bfb9-029497ba49e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ad46d6-5265-4296-91ba-82f3ee01f94d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4b052-fd0a-4e84-804a-884c2208fb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7a8800-fc90-4576-8eb2-3ce7838c7620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25d363f-39ad-469c-ac75-981d4fd4869e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dc837f-7a29-4c65-9365-3996fb3de03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d14184-c98c-4546-aae6-cbbe8decc281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773264c8-5655-47b9-9b4f-bed2312e703a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7bdf32-2ee1-43f4-b8ed-c8e274f127e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880ab7a9-50c5-4d4b-abd4-a1af29ce1afa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d79fa2-4ecd-4385-9177-6eb1a1c08429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b13eafe-9ebd-4e5e-91ad-230f4329674f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ee8fa8-04ce-42b1-9549-6a57925d6509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a555fa-88a4-4ce8-97d1-31e1389ab8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8926d78b-d7b6-4662-a33c-51e450150570",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f7a027-4673-4ae0-9209-cd9d9cdf06d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651ff32f-9911-42df-b20e-933600895eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5831b4-6914-4cc2-9494-42a0027db84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef7ff2b-fece-4666-a1f0-bdbd751f7ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7483b106-f6ab-48fa-9b53-15971793ab87",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69976bbe-113b-4f13-9f6c-9126be1600d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb11ad6-ecdf-4922-b9cc-85da0bad63f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6593eb09-4267-4eb8-ac88-32f6840314d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b63ffe2-d966-40fa-bf64-c177ebcfa252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c648941a-1321-4fe7-9fd4-dfbdf5c2b962",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86447979-f3f0-4a21-9c89-bc66536e7f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e8cae8-0b93-4f76-a7a9-d2426682fc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450e0cf-b778-40cc-b193-2581a243c3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822252fb-4ddc-4a6a-9188-385ec2056de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bd626a-806c-40e2-837d-79a4d2fbb45b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc8392a-192e-4f5a-83c5-734a0812333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f505224-9cfb-4044-8b71-a9743f8a9c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008af573-7381-4844-bd4e-332e8bc2cf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcd37ab-b37d-4e2b-bb25-e89953da8f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a04ca7b-879e-405b-9ad5-5be0fa5098f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fbae5a-231f-4a0e-8228-6ed9ea8aeea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b8cdda-0833-4323-b6b4-cdbc0cf0620a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82083ccb-dac8-47f0-8ba8-de042ec87cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25a6d93-af8e-490b-b18a-1d442643f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eff540-e8b1-48e7-b955-64d01f706604",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05df58f6-0f7f-4aad-a031-91abfa758760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4256063-6da2-4e28-a38c-3d3a886536e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa90d8-4521-419b-89f0-a3a67db39dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58433bb7-36da-4284-9346-619b662522db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270068f8-3848-4d7f-b47d-0674f45e802b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73db83df-eab9-4693-bd3e-7696cf89a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b05dc8-7062-4e4e-82de-810a826898d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbb0e03-6b3b-43c6-ae81-c366e624f754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476faf17-fc26-4533-8529-b867d7795e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847fc83a-8983-4e6c-a760-eda2d0042735",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e361f28-831e-469a-a77f-83e82e1a68af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c9e71d-67d5-419e-b22b-448874edd919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d872f3e6-a0e6-4ca8-a5dc-a0954acbe84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a283cf67-131d-4ec3-a0da-4183095c0fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbf3bb6-2a27-4e9a-8be8-1ca842807917",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87120f66-2f9f-41ca-8261-06a9d27cb437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30db5910-f922-412e-b0e3-1c81b43fa92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d7e8e6-8ae4-499e-82fc-87559d325889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1fbb43-c568-48f0-beb7-508ca7f481c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fed440-3bc3-4843-9259-a07fe7ca1bef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d418e1f-caf9-4631-8ee4-56767a3a0555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652e16c4-a897-41f4-bae2-8be6abab6424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c561371-8e24-4e33-b78f-fdeff1eb61ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730aca8f-e84f-48f7-b085-9d5f4c993216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbaf4fb-f5ab-4a3a-9f30-e283458f9b1c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb3eb3a-955e-4ae7-bb67-f174d33d98e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b528470c-b5ad-491e-81e4-d0d640863f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0224de-4050-4e3f-ba1d-41830e290a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57410a63-0e4b-4f28-8e08-209eecd6cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9795173d-395a-4aa3-9bc5-66ce6eedd529",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d353b4d-675e-457a-a98e-1f7dd87f2b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5a287e-e2c8-4cbe-b59d-192aaa2f022f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a17cbe-15a5-4b3e-8deb-3b25dc754106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb2ecb-3df0-45e3-8679-d69a605a2169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d7b4d5-7ee4-4d2a-87f3-75e40928acab",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637870ba-0a4a-4319-b54e-6f07a9f6f75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4350c9c2-0fc9-436c-9966-4bf7aa766ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f42222a-e43c-445f-b75f-4233eef67f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e339c0-a24b-40de-b6ad-7e55800945ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17160c4e-ef10-4e84-a926-d4dad12ebef1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fbc34e-b13c-4171-822e-23c6416cc456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a70bca1-4aeb-47b5-9a0e-ba48398a2488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199945e2-8064-4b0d-8026-e42cf7ae03bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78060dc5-2e22-4699-924a-2e8ffb7964f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dc9f46-5a4b-4fe4-9dda-612e3d1658d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd222c9-81d6-4413-b276-b317f12c73e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c2125f-7d98-426c-86e7-bbf9fc36cac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5c5490-63b4-4784-ae63-f47e544b5cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67adcd7-8dea-40eb-9daf-58ba6af2087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab70932-3f08-43d6-8512-29bcbf59075d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e832b78-21a7-4a50-a4e8-c6e55348acdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee97a49-b524-41c5-b17d-33121e86f015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2cc758-a475-4d5f-a61c-94b16bb3450b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62d6f08-2160-4bfd-94ef-9e5d97b43d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9465338-35a5-4c5d-adda-654930517039",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd252aab-6f4b-4e1f-98dc-1c6c68036ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1394755d-9b50-475d-812f-e64ec299d7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a9fcb-a2db-45a4-9eac-7bfcbd6eee68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a22bb3-583f-45ca-a4da-422e866e41fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334e78d8-dab1-4998-bbb6-057b99e3b02d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3b527e-c101-491b-b485-fc63d20ff887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4196d82b-7947-47df-97b0-fee357498893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531600bc-2369-4bc6-ab09-93886a5e5768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15eee9e1-e4e7-4411-8065-19dddcb06cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bfd0f0-d6b8-4b9a-8603-785ab1d9dd65",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29dcbf8-1c70-417a-8807-e03bd216b35c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b15f72-5994-4182-b63f-e77460d7827c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ded4447-a440-4868-99e2-6b38e12501f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd13e7e-72db-4000-8ff7-46723c3663b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2036f8-e05d-4931-84fa-9e3209446c25",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c15aa3-7e43-49c8-bf94-b159045f5d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca8f32c-8c4e-491a-8b75-cc5e71c926c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af117ba-1e13-495e-a85b-3a40416fb14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc51f4f1-431f-453a-9389-39a1bc0d459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1669a208-b0f9-4c8a-af85-81af8fbec4ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1f1f8e-04e3-44ec-a74f-b68ed2e00378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ff9a8a-3367-4e04-bc2c-564245f42fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81ebf9-87ac-47f1-89d1-5f709db310c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed81a46b-7397-4d50-83a0-6c51def08a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55629d43-87db-4630-9558-020f183dbe25",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cdc316-e921-4d6c-adbd-9fedfd64e90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4a8910-7f0f-4b3c-bb3f-9dbb9515ba8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8df4b-066f-48b7-9e53-886a970d6e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dd3f25-9d96-4858-9ff9-a4ac02cf6020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5865ccc-efb9-4cea-81a2-f29ab46fdc1b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960d490d-938c-4f2c-97c1-27eeb9902c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b622abc6-2144-4b9e-bca2-4760f9503dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a355a-4b93-4eea-afe1-fc486a925d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea85b15-0e23-491a-a8fd-c59c6a81df80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6735f92c-959d-42ec-beb2-cbe565d65141",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c65d4-0589-48a9-8726-7b19afeb9752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e34dde0-2171-4eed-b44d-7ed8cf7b9cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f09a7a-b64d-4e94-aaa8-c938852476f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0db265-cc89-41e6-b87a-35474fc21e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6594cd66-2aa8-4061-a7c8-d3428d4c02cb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1dee34-e0d8-4c38-afd9-cc3ebc142efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c656f60-73ba-482b-b61d-0862b5db3d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301982f7-d41e-4f86-9e16-4b7eed342483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254395a0-1f83-476f-ae19-c12932e3f9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668ffff8-89c5-4dca-a28b-6d7b28d36707",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058d08a1-a84e-4547-b65f-9fc774ad9751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b0e866-5c23-45b6-acab-9209151a00e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de535a9-0e90-4464-ba83-d61b47a2647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4334b56a-2214-40d3-83d8-dffc82f001e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e9b0c-e154-43b2-b93b-f27e915caba6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c765516b-05ea-40b3-a2e0-98bdd864ec27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f78b6-8865-4d5d-914a-5432b713d53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cfc1a0-6d3d-4c8b-a2d7-853dba65e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c94150d-f975-44b9-b1e1-d99f6fb61995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ed244a-7f8b-4657-9efd-2f2379e308ba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a5d80e-8538-4868-aaf3-61b0f5453d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe6a42d-8435-4ee4-8b47-e9aa996aec01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5485adbe-5885-4f8f-8e01-88e99c99d820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c10aae-1308-4785-a38e-731290bbc095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d1896d-1ee4-4c27-86a0-811deae0e0e9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc61e144-45f6-4b0f-b7ac-751928d72409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51174237-1c31-403f-ad90-c82d1c2ffd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35307220-e739-41cf-bb0c-02c7b1a42d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef0de78-b604-494d-86d7-1171b7ac188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1943c4e-d0bb-40b6-83c2-240c64c5797b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353fd951-932e-4634-9fbf-c2d726632609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fca922e-6af5-4a87-9e48-1e64d4e4cc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2329e9bd-508c-4e10-a6fe-2715faf1c53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e45f6ac-aae2-44fe-8a33-1b8c1b6533c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a678872-c599-4551-817b-97666cceb59d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc9c7c-429b-4f2e-91e1-e1709874d7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34d26ed-a2fb-40a6-8043-90d340e9a138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c9320-38d4-48c5-84bc-d711a2364b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43633677-8d9e-4a88-ab90-ebf3481e2342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a99064-c19f-44e1-bcfd-7f694f30e43d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e3bff3-a48e-445f-b34a-32531afb15d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd89857-854f-4076-a4d4-642c50dc4d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee08db8-e5a2-4198-9f52-097be3660321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526f1eab-200c-44f1-8e64-31984f045599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8ee7fd-4ecc-4733-893b-ba5d2d610837",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfc899-b29c-46de-b19d-ec513c4f263d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb4721c-302f-4b7c-96ae-73bd2f660e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2552a0a-04ad-46a6-acb0-8895bbc2c09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb0119e-9ff0-4a4b-af42-af6437c687bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d01c17-d226-4743-b022-65d2379690e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e75d39-ce4f-4d59-93ba-1057702b0893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3954a328-b825-4985-b269-a4709b070730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d32a85-ec6f-469a-bf81-beed8682b9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637a1515-ba63-4052-8a2d-855c83608a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61ec56-0a64-4fcd-8bd5-db90adfbaf9f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb32d8a-82cd-42b7-b367-61b71c388960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41c23ec-7f7a-4f2c-9155-ff7fa95655af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e0cced-5416-48e4-9956-7a7b032f4351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f3ac42-a428-4215-9668-0614fe1aa711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683d59a1-37d8-48cd-bcbc-354f45a2ab95",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7d6aca-46d1-46c3-9946-db667cca72f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e441ceb0-5f2f-400a-bc4e-b8f05b189516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079dd08f-349c-4efc-a163-ab9d48d710c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81a6e61-0022-44fa-a2e5-79034f05bae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf6a988-253c-4642-bcec-b6376b02450d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134407ee-e9a8-45de-8bc6-f4ec4daaba7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dadfbda-4f8d-4e95-a477-9aba05b0ce38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040731d9-88e3-41cf-85e1-9eef6d1d90c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24ab124-fe6d-4942-a2db-7b3c7f30a952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c79c7-153a-4d1c-94ef-d4f346a4f1d0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac86e93-25ae-431b-94cd-5a9a564e00eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1ebe8f-f286-4d8e-8d88-69f44de9ab38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017504d4-b028-4735-97ff-f118bc2391e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d4fc22-c422-477e-98bd-8be5c7a45234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408d1cae-01d2-4e22-bc35-6ec9478f387f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1af624-5aca-4a3d-93e3-419869d09d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c1f05d-7e08-41cb-8860-42b503773fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe2da98-2867-49c7-ad5d-a60c4de88f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2861207c-0ccb-492f-87d8-5c298a41f9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b59cb6-dd4e-47f0-9445-bd27f5a0ac28",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6acf7c-bde3-464f-b514-4ce8a92f1aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32d6807-b008-4bc4-a19f-f800e39ea9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7434fdbf-8392-4425-a9c3-337d22fbd1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77318f99-f9ab-44bc-a9a0-a2154e36082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd3714d-7553-45c5-93ab-0aa573b0e69f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5d8a07-aef0-45bc-8a11-20ceadf644ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe82110-9404-488b-b1ea-d42a0393ea48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248d542d-a5e9-441f-ade4-49c8e274ffe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fde0399-5506-42e9-8969-5410211b57a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f25cbaa-84dc-4937-a2c2-c0319f4a6432",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954b934-f4ae-48c1-b658-962b1d656907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4735e9-3288-42c5-a48b-a8d20739db0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ed9fdc-edca-413f-a1ff-e1aa62b3d204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c4810c-cc47-4bdd-9e5f-b73cf6cc91b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90307f26-cee6-4876-a566-835a0c25c538",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8019b719-496a-4f78-8457-6526f08ed9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f240ce88-103e-4e80-b892-3dc7a172650d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c6a425-9a82-4f27-93cb-37fdf5fe2aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055fafa2-e848-490b-8d40-5db0ca533ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74305dc6-ee09-48ab-ac9a-3df4482e569b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a5c34-0765-4b64-9945-6801bb86de88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418afa52-caa4-4c43-a8e0-bba0100752a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dafe8d0-dee8-454a-abbf-cbb2a8e8f440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8289813e-1f8e-48b1-914d-e28f0f36bbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25671393-81a7-4744-982f-97a4c5029aca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85493870-c1ea-4ad2-93ee-fd07f6987b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212238bb-7bcf-4af9-806a-7d393c0db064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea075f04-3901-46f6-a3bb-5234a59d58e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fe34f7-fafe-4c2a-9e1a-baf88c08ab98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ee9160-037b-4611-b218-95d89de024f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4280d7c3-f213-4ba3-a1ca-b42eb3ed33f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7736d21c-5d22-4e92-bcea-b4ae7ed258ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b38872-6e3d-4d70-8e1c-bd8f3eb50e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9c5c30-8f88-4db6-81f3-241c885721d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c87678-1219-4345-95d2-e1b41739bf79",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dc7140-52db-4e88-abe3-e2c983d62378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92f0850-6ca2-42e5-ac9f-409f985d6aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad29216e-7da5-4e89-ac12-60129fec22aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54c7160-f3e7-4584-b113-2353ee0f2e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e6735-29c6-4c27-ba36-b1473a9f6d44",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fcc309-984d-4aea-8c92-edc36301e525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc8fcc7-c021-4a6b-9eb3-79cc537ee968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c00135-3a0a-42ee-809b-747e34a74e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a12aa7-9960-4e2c-b7ff-05036016ff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245ac28e-b65d-479c-ba51-e5fd91d181e5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e569cbf0-a7bf-4566-aaca-0d140969c575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc3e744-38dc-4ff6-81e1-836e6dd18ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ad4cf-1295-4dc1-a29c-11f2581e6f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4313384c-fb22-4782-9fc1-6d32ca4b3b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1a486-186a-4b62-bc74-7fc2ae5b2ba3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9c1f1f-9e8b-491d-865c-e757c66009d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a1e63a-f639-46c7-9495-4ad34f1a131a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd871d49-214f-4fd9-ab37-2b77ee267c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb41469-34b7-417c-8633-9255e2cc781e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654ed1a6-db3d-48f1-9883-daf89aca7d82",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263b75a-7bdd-4167-a75c-7bb3d169b28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb67e92-2edd-43fe-944b-89d8e99e69f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5447d-cc6f-4d88-9fb6-627a458d1f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab730f6-1687-4c8b-87a6-2ac315d543c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570ab29b-ff9e-49dd-973a-1af9d6f6bfda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0a008-9e59-484a-b9e9-dd81c35da496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3631694e-0cfa-4bb8-8e4a-f9ba73a03161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc6607-58b6-4b9d-8b57-0e9d13c13276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b9773c-2963-4c1e-af4c-a5b52ab74d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cdf33d-435b-48f6-bd8e-3045cd424283",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75648511-9fe9-4109-829b-bae741aaaa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b8b67c-d93b-419b-a199-ba98a700d0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd10aa9a-73d8-4514-8566-8193c9a52d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e90c79d-4aab-40ea-99ee-7b0e1cc13e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba3859f-457f-4368-b18a-6ebed3f5fd42",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae037f-acc8-481e-ba56-9c71cfec874f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfc9902-3ae9-4270-9467-cf5e69eed040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa34da76-a38c-4b28-b709-835440a18806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07b8360-4649-42c5-b48f-6277502d6c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129ab0dd-84d4-440e-be88-2532bae0209d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47c3622-c2cc-4056-98ae-ae2e91d82d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10b9fde-9d57-4985-82d7-3a2ace6939ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b757af-d6e1-47e2-8ded-279d791dd652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1b7652-0a5f-45af-9d9c-b13f00f413dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976a440-b673-46f3-91ad-10a144a2bafb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e88e97a-1854-45dd-8fbc-1c5cb760e1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd9ffc8d-deca-4081-8043-a693700ac9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5d07b-7656-4178-a31d-7d0e74e6a790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dafdd4f-23c0-4d7a-b59e-e7811ac19aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d719915-4021-4523-86a7-c82ca813152c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a0e9cf-c304-4f4d-b6cf-4a705f9bf5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03365e23-9abe-42bc-ae75-2ee80e6b08f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a08b15-d89e-4abd-89ce-abd85ce2eca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ddae7f-fefa-4830-afb3-2ecebbb07082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55672ad4-c761-4cc6-a2dd-a98a3e9d343e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25565dc-d33b-4542-ae7d-58d64f2e9b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0defe5e5-89c3-4476-a464-ebcf9e97de3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9d785e-b9b8-4478-ae01-a1ca07b42b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a3183-d64d-469b-ad2d-562186bbc197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fe4f9-c5ea-4ad1-adf4-6942e5dc1380",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db5703-7a79-4c77-976e-d491311debfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c8b711-53af-4824-9965-fdc0a7051993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502ca1c5-e1d5-47ef-9f13-d4cef01c2623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a538246b-bbc3-4427-9d3d-42c62d9f5e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f67b3f-00d8-4e58-a078-888cb6953688",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77db5d-0f1f-4ff4-972f-ba9cfb54e50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec07ce3e-255b-4f2c-b60d-96bf8f89a9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fb41c2-f633-4744-bae9-60a5d4de3c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43c2517-680e-4f12-9875-a0f2df90f1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c18404c-1b5a-472e-88a9-9963efe8639f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabbfdb3-6117-48d5-92ed-eafd971a19a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c42bf16-d00d-466c-bd88-70e94d74de87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dffd0b-e5e1-4843-ac8f-be16e39ebbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f306dfb1-67cf-47ae-b930-cfb147fd87d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cfc4b6-de13-40bd-b7a2-ff86024685a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e0037c-2656-4d40-bce9-e3d159e462d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbdef61-d152-4e95-9ece-c6ecf66256ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56576215-c48d-4a81-8ea6-be2580fd6179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859aa08b-9d2b-4430-b506-f7d9f50c6506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b36a94-7c9b-4d9d-9932-087f9f4a42a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bba3eb-2614-4ebc-94ab-1f60580952f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0ced81-7d53-41b9-ab6c-752a6122eace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee17d30b-efac-4782-a655-28da6660912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4f13a2-2166-4b2c-a1a4-ed0fa4e7621d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac83cdf0-4e4d-40c7-a390-436107566641",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1dbfaa-e4e5-4e7d-b773-7541d9fce75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "567324cb-4239-4e1d-8942-9fc7e2749f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9949c325-d3c3-41d7-bdd3-038f5afddc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f76888-e5f4-478f-b03c-f7c1842cf267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f0e7b2-161b-4f66-8f06-07ebdc67e79c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb3205-6112-4891-bea4-83cff1bdcc84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64940cb8-6a09-4210-bc89-43979f746d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee14d3bb-6aff-4796-856a-2134e5d33a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dad34be-e4ce-4c4b-95c8-014c7ac1f61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b58be5-c0eb-4557-872f-0e86c09dfcd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113375e7-d785-4418-80bb-d4acc6ae26a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67008344-3baf-4fa7-b56f-dab0b83cc040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ecdbc-eee9-4da8-89d9-002fc23bba75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8e4ce1-744d-4278-b7c5-6cb75b328bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f127c9-3117-4a8e-8c13-3414b0173b3d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f3c75-6a77-44e1-ae08-d2e7637aa2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e83573-62d6-4d45-9a85-8186b1283247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bcba03-0332-4a88-b9a8-cb1fe34ad6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99861778-6adf-49cc-b161-7033d064fb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e551f-ab5d-4d80-9cdd-70db0ab59f69",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af776640-90f2-4437-a199-f39bf29d00a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332ed83d-dd3d-46f9-9b1e-a1e639488d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d7606-ef20-45af-8892-c8b2718cf826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbc2158-4926-4dc1-a151-764e8d67577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd1b1c3-a774-454c-9b58-fa7f69c8db5a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00999f1-b2df-452a-9bc8-68a2eca811d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5255e5-27f7-47ee-8cff-ef2ec6cb7130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b85713-6baf-4a40-bf3a-d6b1b1126367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0871dc-9d1b-4d27-a0de-dd8e55ccb4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467e571-ebb4-4903-a53f-c19911b77650",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae79f66-79de-4a0f-b643-ab681c193124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "784e33ce-b601-4e28-b5c5-90ecba1fe8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5137cce4-388b-4f9d-87ea-80af9c9765df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f180010-27b7-4b58-a5b5-188235f05e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f328fcb-8a76-4231-9fa9-ddb58df1f420",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e7e8cd-e14a-4b3b-a407-b98a6cfc2400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff0dd36-2fc8-4b28-b3e3-103bb9ea969a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1332fe60-74f7-4f2f-8dbc-4a32581c75f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df3592e-85df-4ed3-b276-0238e14c0de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df26404d-6a21-46df-b5ec-e68760a9a210",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448d8d40-3e23-46a9-999a-491d84002eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aaae04b-50da-4503-a8bf-42b5662db281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23805b09-b83b-4e24-afb2-da96df6ddf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b37ac7-3371-4de7-ac91-f4741f534466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cb55fd-3be2-4b0c-938f-0bd376e7c3a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d62f041-53f9-44e7-9879-9292e3e2e37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29ee312-d375-4e4f-859c-44c825717285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31604b43-db0e-4afe-9767-40062399ee19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6677144-89b2-4163-9c1f-4f72044c86bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb58345-643c-449f-849d-2dd69d2a4a4f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eca54d-9952-4d8b-889e-2d92800763b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aba3db3-ed4e-46b7-a5bf-d000c96ccca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cfef23-4763-443f-8a56-b5141381f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e9001c-5233-4e3e-b2b0-aacd675ed691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358bb616-e527-4412-9194-d9f61c8338f6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a491c08-41ac-449a-9a9e-24f9122cfca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd57bc5-cf4a-4eb9-82ea-31434c133cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b24d4b-6b6f-44e7-9b78-d8eadabd108f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf1e56d-52c6-4019-9dec-92a8cd22f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb679c8-322b-4737-aff3-e2cc68b70146",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd38f2d4-3ea9-423a-87d6-c3b8bc054993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d555e454-1aa8-49d1-8ec0-645f236083b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c5cf05-3318-4960-adea-0827e13f4583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e46210b-9a93-440a-b061-443e116cea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c251a03-9d1d-408a-9464-85f1ba93219e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3c69e-0da4-4427-a061-cc772d0b975a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9955dd-af68-495e-84ea-a66748511cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2b0945-1309-4bb3-ac5b-23e22583b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a1ac1e-2096-4cb9-90d5-bec717096d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fddf991-5a54-4b17-99bc-f5bb5f751de9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c692e145-7754-462d-8b49-7a4bc5a89a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea842c49-57a8-447e-8da6-ea90aaa0561e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccb31de-4c5f-4373-9124-33aea235d15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bedec6c-6ec6-485d-89ab-e841b9f23004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1bd03a-4e5d-4274-a056-3bce6edd2214",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042ee0ef-5cfa-4114-b0da-62f7e433b4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef4e3db-e04f-4842-80d6-5f565e66f8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c5853d-afc1-44f1-bc96-c34858df4d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3859405-a205-42d1-b267-709cc532f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61041d8f-5a04-4f76-a97a-057f368036c1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadcc33b-fad7-4608-a35b-79c9e460ef72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c460e433-7219-4199-8348-3b65a6842d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ae01c4-2917-4262-a4f5-2aa88adee6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8774e59c-5ca1-4ff2-bc33-3768aeab6210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740802b7-0502-4d26-9f74-97d4f5b6cc8c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dd7704-1ba8-4358-9b71-5d68665f0b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5434d4f2-901e-43f7-9e49-0307e6d84045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3506f4e-296f-415b-b347-4bba032fcadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e768f4-10cd-4a21-bd06-f98f2f7275d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c81d487-a91c-4723-bb14-b82758758a28",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52317018-8d7e-4a49-b64e-c985cb42efcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78fdc4b-21f4-493d-aaca-e99c856c8dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a75aa5b-8736-4ede-9af4-949867039756",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46140d4f-94e8-4478-84c7-4d1291456568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a9c8e8-877b-44fc-8ebc-d47b13f49ecf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ea3a25-891d-4dbe-95e2-c594563c162c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1043588-4b71-444e-8be5-53d70351a005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1c55bc-1c82-42a8-bea2-95a490709d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a701440c-3136-41fd-aecb-661a8489d867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd1b588-f3d7-4457-8c5a-d4d58668d715",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd06761-fa67-4b63-9e4f-1c144787104f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e52c67-038e-4119-b014-530d3c527d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bae601-70a2-4bdf-b8d0-88395fefdc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e97a8a-17dd-4309-8f72-b260193c2b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2153a906-b3f7-48d0-92c9-4250e2888c2c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1874f13-158a-4243-853c-2806b69eccc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02dd1233-5232-4972-a145-43885475277c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cde3f5-3e53-4d28-9307-45b1c2890d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046b1e9d-6b7c-4154-9a30-0e26caaab250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a8e1e8-1be4-477e-9b7b-03d0f34a2a24",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298758f0-0560-478e-bf3c-6c22902c488b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79f4821-39ba-49c8-a42c-291e9ea08b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846c5d8-b7b5-4ffe-b1e1-e2633043964a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13483a7d-7e3d-4b83-83c2-f2b96eb92a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5bcbb-5f4b-4c9c-ae93-969a7a08185b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba352d-d8e2-4154-97cd-6e732d5a6bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c1167c-b8ae-4cf5-ae7a-729aa7a60c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b309621-b836-4c79-92e2-6ad43196001e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d82a6d-912f-4ee2-a3c8-4920a31de4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c96253c-a3ea-42da-b47b-4ceeadeb41ec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c38bb3d-e792-4b56-a5b7-f13f5bf08ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf68d2b5-fcaf-4e3c-a4ae-00c23c537c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7563ac81-fd70-4783-94b8-05e677a8a795",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e9086e-c40a-4043-b8bd-2b8d5f8e4308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64501bb6-3bf8-4421-8469-5bc35aefa169",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4067cdb-3353-4c3e-bf61-f715bc36e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7896acaa-e6b1-4a0c-b1af-2c5dc4c262bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabc9b17-612e-49f1-ab23-ca8a4a1e2c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7e063f-ebfe-419c-a586-c5bcbb3a08e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95ecbfb0-6d45-46b9-b8aa-bf9ffb20f030",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c63390-8fba-4e60-b3c6-c03beadeddd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "886b65f5-f213-4694-8c2b-b85708a9473a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79c534e8-13aa-4b8c-af23-c542e39d0384"
                    }
                  }
                ]
              },
              {
                "id": "f7212f28-5296-4b56-8dce-a504d082b621",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd659905-dc40-49ba-9ea9-5d56b7317e7e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e37207-df5c-4390-ab32-4fa67d7fbe90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "19d7c33a-109e-4d55-ade4-c41387d348bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf83bb58-7539-4d13-acde-08adac5261f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbd25db-98d3-4117-b8a9-51848f3b3c0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac0ee4cd-02d6-463a-93a6-f6ad8a0a0ac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "495663e2-5431-45be-bb98-79c2dda4980e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4aea10-b95f-441f-8f65-251ee6a64fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fe2e7d6-2bf1-49ea-aa17-663fefe63165"
                    }
                  }
                ]
              },
              {
                "id": "4df072af-3645-40dd-90f8-00faa32d3867",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a674bbed-1825-4990-802a-2d326620c453",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bc5d36-11a0-4be4-a8d8-32e096b83ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d9ef14fb-88ec-4298-a4af-0b2c3d9904d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aff441-9047-4fc5-864e-31a79836e928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319eb094-1a2e-4618-81e7-2021da2d95ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7b9cfc42-8b6f-4437-be22-2f4e9267e63f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba1cd0c8-c84c-4ee3-8ff2-13a66eaa9f3e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da3d67a5-c1b0-4b06-b3e9-ac76ac734fb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb4e671a-86af-402c-9fb2-7e7a12b9e8c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4d88db2-d9d2-45c6-bf2c-ea59414a0850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cbf9533-2ce1-4323-bef8-f59b06b48e24"
                    }
                  }
                ]
              },
              {
                "id": "88865cf7-2bb9-463f-a39b-a1d73813e0a6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a38a59f2-bb43-4691-8871-0964836ca9a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d35ea04-b86e-4e54-be69-58e567a13d59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "572a4bc9-c930-459e-b118-d14346c26070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37906a6a-c739-4cfe-a7fe-22332b9e6364"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70f84a60-f2d5-499b-9027-f544bca44130",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "37658645-8c8b-44da-a416-1e0cf5ad3fc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc7c0a33-0721-4878-8377-cd8e090c200b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5b0c1ad-f814-4084-8a9b-07961c749357"
            }
          }
        ]
      },
      {
        "id": "fecf00c6-6151-4b3f-8fd5-8b057776cc85",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "416f5ffd-024b-46c9-a8cc-959bc88db014",
            "name": "Negative Testing",
            "item": [
              {
                "id": "991f4503-97d0-4752-9e1f-b2dfe20d896b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1fe604a-419d-426d-8da5-fb0499ae64be",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265f6b34-b0ec-4d5a-9662-9fe511204d8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44e2c812-ead1-4f2d-b871-1e1b020d6b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efee4927-cd43-4139-bc5a-9f689dde9d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0a417ec-60e2-4217-bd7a-863d2b39c466"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92759f3d-2087-4640-8c2c-ee5df7a635b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4169e23-a82d-48c9-8775-9097271a3d5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbfadaab-1807-46a0-b328-871253091528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a69b93b-a04d-4572-8e34-e63dda1681f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae553151-20eb-41c8-b09f-9d8995e1b859",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "15b53d27-3115-4fee-8d0e-a64cf44f6a34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64fc2f72-7bac-4d7a-a02a-730702c2b0bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d81d221f-6250-4780-bd6e-1a3ff74b153f"
            }
          }
        ]
      },
      {
        "id": "7ed5ba9c-3439-41f9-bbd4-941bdd2bae79",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a5987b32-552d-4d0e-9582-26b9c7efc66b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2d9ff6b-f684-443c-8021-b71f050cdec3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5038e1d3-b293-4e97-a532-c5c8970698f6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3303823-78da-4fb4-b342-9eb74f1ff2d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc5ae5d-7da9-4384-8089-f9b4e96be4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa7b76d-2ae6-4d2e-82aa-5e699b2c689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "833c08ec-0003-43ce-9ca9-e48aec04fa3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45d38f1d-46c0-4b71-bbf7-a09129f85d9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76631a91-a885-428a-8c84-ea3e39c7d7b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca4a8b7-b463-422d-a740-9846c2e2ecfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8648d79-a670-4c7d-a22e-a83d20c57780"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8511032-a7b2-415a-9b1f-f1e4fc921342",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f85b15b-d61d-4305-a13c-2d5cf6483796"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a436616-fec8-4ecc-9cf3-0313ef599952",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56007cb1-e808-4f4a-80d0-a71468f27abe"
            }
          }
        ]
      },
      {
        "id": "40157e1d-e757-4b8f-8830-12681ba2fd21",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "353c461b-9839-4068-9748-d2a300e84fdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "194f3782-6c8b-4a1d-b47c-fdc5bb1a1db8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09614b0b-fb80-4e1d-a719-566fb403a9bf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ba757-3c23-446b-aca9-3e0f7df6cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7769fe9-4665-43d9-8531-4ad215e53d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e57646c-e544-4856-b65d-2e0a15331b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a42550c-9e4f-4581-9263-f2a25030df56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba68aecd-6509-4bf3-a567-c4cae40f1835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6006e6d-8408-42cf-a85b-510fb7548e70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "610f4023-e8a6-478d-82d2-8d0d1c277ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a68c8cd5-34ab-4f09-aed4-970d856d806d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e916b76-8f52-4481-9295-1358d17a6902",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e57f28a-bdf4-46ac-8961-356d9d98c050"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84322455-a5c2-48de-a2f1-2f838692138a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c104511-6cd6-476c-b91d-0c4ab3f3591a"
            }
          }
        ]
      },
      {
        "id": "0c07e833-6644-4e27-a447-94e719357ac3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b401671-b716-4dfa-a7ca-f5f282781b5b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "049982c5-d475-4e53-ac6a-3d72effbca61",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cba36239-6cb8-44c1-b63f-ea73808206b9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c07e0418-3a42-4aa5-b86a-e80a2553e25c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a98c112b-ff74-485b-a1de-707627e36834",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 188.4801587301588,
      "responseMin": 6,
      "responseMax": 12953,
      "responseSd": 1015.8202505130298,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724719293029,
      "completed": 1724719348680
    },
    "executions": [
      {
        "id": "9d1a02cf-846c-4c3d-b58d-1483d29c1bbb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8fbe8bda-549f-45f5-af56-cebfe9c425f7",
          "httpRequestId": "023cf49e-8ae6-488e-8e3b-d401434c266b"
        },
        "item": {
          "id": "9d1a02cf-846c-4c3d-b58d-1483d29c1bbb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e21d8324-49f2-4e17-87cf-7f6f41ed89e3",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "6544e72f-4375-45bf-93ca-b9ddcc20e45d",
        "cursor": {
          "ref": "9e63fceb-1b4c-4152-97c9-f469cd7bd1fc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba2a4ddd-8b32-4a77-b437-9f0868e64663"
        },
        "item": {
          "id": "6544e72f-4375-45bf-93ca-b9ddcc20e45d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "622ee42c-bc6f-41d7-8c31-1c75b9fec680",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "49ec73c1-5c17-4455-954a-da74b1f1aa8b",
        "cursor": {
          "ref": "fe302b63-e152-402d-ae22-e55e2d0bc01d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e65c8bc8-6d4c-481e-89bf-b0fdb941cc2a"
        },
        "item": {
          "id": "49ec73c1-5c17-4455-954a-da74b1f1aa8b",
          "name": "did_json"
        },
        "response": {
          "id": "9e2719b5-1b23-47b9-9202-7ffc46e57358",
          "status": "OK",
          "code": 200,
          "responseTime": 378,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6c61d-d103-40ab-811a-4ce77f715356",
        "cursor": {
          "ref": "b0fa8e10-cd4b-41c2-84d0-6783d5c0d4c8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "771756df-bf61-482b-9202-52c6056fef7a"
        },
        "item": {
          "id": "a7c6c61d-d103-40ab-811a-4ce77f715356",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bb806cf-5b8f-4a82-ab7b-e0acbe73fabf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 276,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6c61d-d103-40ab-811a-4ce77f715356",
        "cursor": {
          "ref": "b0fa8e10-cd4b-41c2-84d0-6783d5c0d4c8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "771756df-bf61-482b-9202-52c6056fef7a"
        },
        "item": {
          "id": "a7c6c61d-d103-40ab-811a-4ce77f715356",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bb806cf-5b8f-4a82-ab7b-e0acbe73fabf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 276,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360667af-3b28-4f46-98b5-08b7259facfa",
        "cursor": {
          "ref": "39f747fa-62a2-4ff3-ac43-d55b3c3cd4c7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c1d3d3bf-e6b6-4f0a-a2fd-9d23a637a6c9"
        },
        "item": {
          "id": "360667af-3b28-4f46-98b5-08b7259facfa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c883ec97-bc5f-4446-93ac-5f69b015b9ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e2f51f-c9ad-42b8-8ac6-9bfef20b5a16",
        "cursor": {
          "ref": "9d3d44ab-a117-434b-911f-91078d2118f1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9964b1d0-d3b8-40bc-addf-815ff09628fd"
        },
        "item": {
          "id": "a5e2f51f-c9ad-42b8-8ac6-9bfef20b5a16",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "93f8e64a-ab64-4610-ab3a-4aba429cf809",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221a8b82-fcf8-4962-814b-528e0b5536a5",
        "cursor": {
          "ref": "ed83d7df-1192-47f7-931b-826ad5b2ad7b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc13e778-33ed-44f9-99fc-6f3c89e4dd73"
        },
        "item": {
          "id": "221a8b82-fcf8-4962-814b-528e0b5536a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4b0dd064-472a-4c52-810d-2511cd31bf95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc8bf79-fc33-423e-bb18-24b817353d25",
        "cursor": {
          "ref": "285b612d-0b4d-4537-b46a-6ed0e5593445",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4e9dfea-ece2-441d-9f93-7ce08cd7563d"
        },
        "item": {
          "id": "7bc8bf79-fc33-423e-bb18-24b817353d25",
          "name": "identifiers"
        },
        "response": {
          "id": "e7dd7e47-6a85-4080-acb5-d6aca71f4b51",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0970461c-d66b-4aac-8470-bbab0e5138ac",
        "cursor": {
          "ref": "714aab34-efb0-42da-99dd-963adb237156",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e23da39b-61b1-4926-a83b-2a9a0a4303d6"
        },
        "item": {
          "id": "0970461c-d66b-4aac-8470-bbab0e5138ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ada554a-cdbb-438e-bd3e-e7773ada0918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db655a-84d6-4d94-9ef3-e6b1f01ea8a0",
        "cursor": {
          "ref": "68127bf9-14bf-449f-977e-8c233193469b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4f83051-8826-4fac-bff9-1efbc5521cac"
        },
        "item": {
          "id": "a6db655a-84d6-4d94-9ef3-e6b1f01ea8a0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6e427bf0-2448-43c7-b87c-625626af8196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207f7744-1245-4004-a702-f2895378ad4d",
        "cursor": {
          "ref": "46bca598-7271-4214-bb2b-f556f241bded",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "afc98982-569f-4b01-811d-b615e279c132"
        },
        "item": {
          "id": "207f7744-1245-4004-a702-f2895378ad4d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2252d60b-35c4-4019-8e03-93798391b261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc706130-a8fa-4684-81ea-fe9f7e41d1e1",
        "cursor": {
          "ref": "09ddf2e6-de32-471d-8484-86cfa2fd4535",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "59825c7b-9241-4cd3-af9a-4730e40cf22e"
        },
        "item": {
          "id": "fc706130-a8fa-4684-81ea-fe9f7e41d1e1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f3f639b4-b8ac-4ee3-96fb-6a0b948b2656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c3f79c-205f-4680-9673-4201115004be",
        "cursor": {
          "ref": "1b3d97f2-4742-4964-909c-4d8faddc540d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dc6ee0e3-b50c-44ae-bd27-6112e8971a08"
        },
        "item": {
          "id": "12c3f79c-205f-4680-9673-4201115004be",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90c0e4e4-3c45-4c85-a0ff-9b6a896c56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c0178e-3fe4-4cd9-908a-9a579e3db0fc",
        "cursor": {
          "ref": "7f76e96d-978f-4ad1-9ed2-7d6b2a23cd1b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0f1e553a-8115-4e7a-ad2a-25bcefe14c6d"
        },
        "item": {
          "id": "67c0178e-3fe4-4cd9-908a-9a579e3db0fc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1085d734-2f10-4f4e-91a6-1530521e0dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254395b0-db80-4417-ae7c-ba3b32cbd0d8",
        "cursor": {
          "ref": "af87d840-5ef2-4b93-bcd5-b784d2d13086",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1588c217-1c55-4cfb-9f8f-f6afced6e05c"
        },
        "item": {
          "id": "254395b0-db80-4417-ae7c-ba3b32cbd0d8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9f2b23d5-7690-4f90-aeeb-5b5438ace9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e5c6d6-91d6-4b75-9798-e01444c47669",
        "cursor": {
          "ref": "2c946890-a5a0-4be4-8467-c5984bbaf665",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa3862df-ba8f-4ad2-bb6f-ca44f91bc622"
        },
        "item": {
          "id": "e8e5c6d6-91d6-4b75-9798-e01444c47669",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9eab9e0b-8f65-4612-90a7-4b6f82f7b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2bd9f5-d09a-49ae-8e15-b8c05ec05642",
        "cursor": {
          "ref": "226f96bc-fc3c-4f40-aea5-e6d57892f1de",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "029c962f-5956-450e-ab13-bdbba106b697"
        },
        "item": {
          "id": "8b2bd9f5-d09a-49ae-8e15-b8c05ec05642",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "324ecfe0-5808-4ac6-8e5e-80262da51e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28855f-015e-4d47-ae74-53dde9345be5",
        "cursor": {
          "ref": "2aaa6944-8afa-49c3-87bb-b99d4318ad21",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0c120099-8806-4c54-82d9-f90062697dda"
        },
        "item": {
          "id": "dd28855f-015e-4d47-ae74-53dde9345be5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ce7cf9d-5d84-4652-9098-f7c8c557aa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de84fab8-e22b-461e-8fe5-8b5b59e537d6",
        "cursor": {
          "ref": "2e942b96-7121-47ba-b204-853e56686051",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4172ad12-9b44-40f4-8695-c1cf0c59d9a1"
        },
        "item": {
          "id": "de84fab8-e22b-461e-8fe5-8b5b59e537d6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "89ad909c-b3ae-4cf7-ac11-de1461343cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a203db-0d15-4e64-8e2c-39012df15e19",
        "cursor": {
          "ref": "0205396b-fdac-4641-9cf6-dfaa27163fe6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "addee6e0-f208-416b-9da6-e4e8615390d1"
        },
        "item": {
          "id": "a8a203db-0d15-4e64-8e2c-39012df15e19",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f8aeff4-e9f3-41f2-a842-4ddfe570ceae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd0f5bb-7be3-4802-bddd-ae7e25656568",
        "cursor": {
          "ref": "73406d72-d799-4aaf-9f3c-ff00fb48ce39",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a48141e4-e195-4a51-8c13-1f3403fbb084"
        },
        "item": {
          "id": "6dd0f5bb-7be3-4802-bddd-ae7e25656568",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c652bde3-2ed8-45fa-a87b-ef1ff597d7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31ce1d4-a61b-4740-b754-53a10fd88d42",
        "cursor": {
          "ref": "fa07aff9-061a-4f16-a87a-3044845b9b23",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ea63e0f-e750-42d6-9411-3271769aeaea"
        },
        "item": {
          "id": "f31ce1d4-a61b-4740-b754-53a10fd88d42",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3314e245-65e5-4392-8c09-85daf6156d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a6384-56a9-423e-9972-7e4b12f477c2",
        "cursor": {
          "ref": "4e2e963a-39c5-4eab-84cc-46957b044761",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9a0b3f99-faa9-4742-9910-b584a9803150"
        },
        "item": {
          "id": "a41a6384-56a9-423e-9972-7e4b12f477c2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2ff7c083-ffba-4adb-b5cf-2c8d7894dc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6ed062-ac84-40cd-b7f0-7d30e6c92535",
        "cursor": {
          "ref": "e7a69a35-a65b-4b57-bccb-ee91704c057d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b65fa50a-540b-46a3-839b-376c780fb00c"
        },
        "item": {
          "id": "1b6ed062-ac84-40cd-b7f0-7d30e6c92535",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "84fd0d6f-f223-4991-a2ac-ae1a698751e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8450f8f-f1f7-44c3-9d1c-7a65491a4770",
        "cursor": {
          "ref": "04f66b5d-cd50-48aa-b420-4ceec1d1cabf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "69a5b8ab-33ba-4341-a9c5-164c4eef0d0b"
        },
        "item": {
          "id": "f8450f8f-f1f7-44c3-9d1c-7a65491a4770",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a87a9b43-f21f-41cb-940b-c92825b15ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75850fc7-48ab-4950-ad1c-296708368bf3",
        "cursor": {
          "ref": "99195597-cf7a-45bd-8810-28bf520511bb",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "816ac7a7-05cf-4202-8874-d49b15ec4ac6"
        },
        "item": {
          "id": "75850fc7-48ab-4950-ad1c-296708368bf3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0944d03b-f2a1-45de-aefc-acf526b1d79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b209f5-accb-46b6-ae3d-f712da642a4f",
        "cursor": {
          "ref": "defe0d9b-b07f-406f-8a9c-4053191c444d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6f080101-b0fc-4bdb-826c-b8d9dd6ede04"
        },
        "item": {
          "id": "18b209f5-accb-46b6-ae3d-f712da642a4f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a8960df2-6136-44c2-b874-22e70768f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26f6d13-7132-4af5-8687-eacdb5d4896e",
        "cursor": {
          "ref": "2c7b12c0-6991-40f7-89bf-599e9e42b121",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98ea1efd-e9d5-4587-9a39-690e82c0c96e"
        },
        "item": {
          "id": "b26f6d13-7132-4af5-8687-eacdb5d4896e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3cc19537-744c-4240-846b-5ae85cf518aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b844221f-176f-4669-98db-c181af703be0",
        "cursor": {
          "ref": "83764ea0-c685-4a6d-a5d5-0d57bad0fd25",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0f09a49b-bccc-4a30-9e78-fca64e547a75"
        },
        "item": {
          "id": "b844221f-176f-4669-98db-c181af703be0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6e6fc2df-1428-4656-bdbe-aa74b5ee0e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b74855a-263a-4688-a9cf-9cf2b9a89ab5",
        "cursor": {
          "ref": "47176fbf-adc6-4a97-8791-398ae79c993e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9be88c16-393f-4680-b288-ff259f59ea29"
        },
        "item": {
          "id": "8b74855a-263a-4688-a9cf-9cf2b9a89ab5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cf0b9868-4eff-4b8a-9374-bac6390cddff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248b57da-5ad8-4459-ab82-9599ebf6955c",
        "cursor": {
          "ref": "a34c5bac-8302-4386-b9bb-459d85dd8612",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5f2f250c-4848-4479-adbf-4fc6f92d7ece"
        },
        "item": {
          "id": "248b57da-5ad8-4459-ab82-9599ebf6955c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6e5795a3-9fb9-4b4e-b073-2f45b4d167fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeaf52a-bc99-45ac-87a6-a2319f2e5188",
        "cursor": {
          "ref": "dcbc0771-50d6-4067-a014-8b8595ec9f90",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b411a885-0fc2-4153-937e-90997ef5ea00"
        },
        "item": {
          "id": "bdeaf52a-bc99-45ac-87a6-a2319f2e5188",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "318621b9-050a-4396-9b6c-545bf8f8b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd1b33e-ac9c-423a-a2d9-a3d844ee9e68",
        "cursor": {
          "ref": "9107f0fe-6647-48c3-a1ee-ef7d7c7b0cfe",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29db1436-03b8-489b-aaae-ee8022c38dc6"
        },
        "item": {
          "id": "5fd1b33e-ac9c-423a-a2d9-a3d844ee9e68",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c34228aa-1abd-41e9-8580-6d3d2d844751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09971677-01d3-45b8-a211-d987461c55dc",
        "cursor": {
          "ref": "e283b0a3-596b-4991-8d01-216533833cea",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ba7aae24-1082-4774-ad04-97bcb28f57ce"
        },
        "item": {
          "id": "09971677-01d3-45b8-a211-d987461c55dc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "92f76d3b-7296-422c-9546-ba6beaac203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14f6963-c419-468c-b8a1-148536005fab",
        "cursor": {
          "ref": "6a4a5ff9-7abf-48d4-a542-748b59aa9a0f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c72ecd59-8bc0-43ab-afe9-64282c9ac42c"
        },
        "item": {
          "id": "a14f6963-c419-468c-b8a1-148536005fab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "64c5c9e9-9819-42aa-b768-b967df73efe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f41d81d-4235-4d0e-9248-42c527df7375",
        "cursor": {
          "ref": "888dd3b1-28b9-4ea8-9306-d2ebedf50cf0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c941239c-cb6d-4503-be64-e95e04539cd5"
        },
        "item": {
          "id": "7f41d81d-4235-4d0e-9248-42c527df7375",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "368bd82e-a9d0-4997-9e9f-53cc310541a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb362913-98c4-41e2-901e-b5260ce2bd62",
        "cursor": {
          "ref": "cca9cad2-f6bc-410a-9404-c2d508398fcd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "16f8cc3d-337a-4f26-9de1-a82075b00b06"
        },
        "item": {
          "id": "fb362913-98c4-41e2-901e-b5260ce2bd62",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "80bd3578-f86c-4f93-9eb0-a9c9874bf1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361ef1d-c836-46cd-ba83-88beb22113fb",
        "cursor": {
          "ref": "c121a889-b400-4c8e-95b3-377831e99ee9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4b22484e-ae24-4ba6-aaac-2a24056dbe72"
        },
        "item": {
          "id": "f361ef1d-c836-46cd-ba83-88beb22113fb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "898c26d4-0666-49bd-a9c9-203f397ab0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c57520b-f945-4923-98c4-d031a9b1f60a",
        "cursor": {
          "ref": "7f38ab9d-f0ae-49df-b018-7b322d22c37b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2bb5ea9c-7046-44d9-867e-819bfbf5f2ed"
        },
        "item": {
          "id": "0c57520b-f945-4923-98c4-d031a9b1f60a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "304be338-d54f-4409-9a72-e0618caf5ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f88acb-86e7-438b-a493-e511a5da2d91",
        "cursor": {
          "ref": "029c050a-0058-4e6b-b415-b9a72a4ca5b1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97ce9139-21c2-43b7-baff-0d4f10d29ea5"
        },
        "item": {
          "id": "32f88acb-86e7-438b-a493-e511a5da2d91",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5668cf75-10bd-4933-b90f-f74db9854b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85343fa-7dc3-41e0-b772-cd5666f312df",
        "cursor": {
          "ref": "831a79ea-77d7-425a-bb7b-c34b90252601",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f17beecb-5090-4f13-8015-993dc3df26da"
        },
        "item": {
          "id": "b85343fa-7dc3-41e0-b772-cd5666f312df",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a6a58384-f44a-441a-a0ae-c7b0c08946fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c30ad2c-1dbd-4a28-a464-672223f1f19b",
        "cursor": {
          "ref": "f4a66c4d-9fae-4b2d-9da2-ba691049f7aa",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2132f51-bdc4-4d34-bee9-a7c00db85fca"
        },
        "item": {
          "id": "7c30ad2c-1dbd-4a28-a464-672223f1f19b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "82c594ac-73ed-4653-8110-398af977f1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636187e-9d25-4de3-b43a-08b4ad8258a0",
        "cursor": {
          "ref": "dd0e0f27-a900-4939-897e-8b6aec2fc847",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6091b110-bc8a-4cc1-8d89-407c911f89fe"
        },
        "item": {
          "id": "e636187e-9d25-4de3-b43a-08b4ad8258a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d6286945-a4bb-4edb-8ba8-763f1a3986ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341cdacc-5e2f-43a2-b1e3-dd0bd596aa74",
        "cursor": {
          "ref": "229e6634-e2f5-44bb-976f-8c8dcce86387",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "529b364b-09f5-422e-808d-1bc0f0253dd6"
        },
        "item": {
          "id": "341cdacc-5e2f-43a2-b1e3-dd0bd596aa74",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1335fd41-e605-485c-9aaf-947c900f05b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeb840c-3682-4fe8-b8a4-b2f9e251d1c5",
        "cursor": {
          "ref": "d403d344-2ca6-4dc9-a3a2-e22540cccfcb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6ca142c8-aa70-4961-9cd7-61ce4e838952"
        },
        "item": {
          "id": "ddeb840c-3682-4fe8-b8a4-b2f9e251d1c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f62b5de-7ed9-47c6-ba01-0197566e0275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a835774d-1219-44c9-bb0f-f8afc9c13fbb",
        "cursor": {
          "ref": "48db313b-c7cf-4be2-94e8-b8665b5838b9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bd4f57d2-7ba4-4c00-a260-8fa6d2f605bd"
        },
        "item": {
          "id": "a835774d-1219-44c9-bb0f-f8afc9c13fbb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7d2016bd-f898-4d23-9107-f942e7fd1a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2893a4-8f93-4d40-971a-152b9a712b65",
        "cursor": {
          "ref": "eeaf78a0-fa66-4f14-bc13-d12c362efd02",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "92517cad-a26f-4cb2-a361-0525b1fc8a4c"
        },
        "item": {
          "id": "4d2893a4-8f93-4d40-971a-152b9a712b65",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e8fc076a-e000-441e-99e7-4ba705e43b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28ed343-0d5a-45a5-a9b9-8257e55a946b",
        "cursor": {
          "ref": "ad355306-d147-4dcc-a5b6-6fc16fa83524",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b6d31e35-fe1f-4bf3-8059-e42762a6e144"
        },
        "item": {
          "id": "f28ed343-0d5a-45a5-a9b9-8257e55a946b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "34e56c78-d489-4bab-a205-672af0bf4d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63de1a9-b357-495e-bff5-bc11eb96468a",
        "cursor": {
          "ref": "425e60ed-3a58-4549-b155-1474ca8fbebd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cc3fd04f-8830-4c46-bfc8-4d797ab1b3d2"
        },
        "item": {
          "id": "e63de1a9-b357-495e-bff5-bc11eb96468a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "890ff64e-17e2-4302-b37e-14164e4bbe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff66184-a81b-49bc-a72a-663e5bf22815",
        "cursor": {
          "ref": "3afd2c3c-7a90-49b0-ba41-f50a3147cfc2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d3a7d314-b587-4cbf-83ba-4d91629ae4fb"
        },
        "item": {
          "id": "7ff66184-a81b-49bc-a72a-663e5bf22815",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b3c5fe5e-625c-46bc-a6b7-380ecd27c1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ede5b62-8bea-4d10-9257-23f6cb54e9b8",
        "cursor": {
          "ref": "3ef1e434-e01a-4da7-be3f-7460f87ca43a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "83a23abd-1b72-4bb6-9627-395843d23979"
        },
        "item": {
          "id": "0ede5b62-8bea-4d10-9257-23f6cb54e9b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2e555e7e-ec08-4f01-a52c-9d9a0557a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04684a-2506-49fe-9a8f-7ef3a3fb6ccf",
        "cursor": {
          "ref": "7bd06caf-0dd1-4f4a-8950-a1bde955e81e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "596c98eb-6bbd-4b47-9e9e-e936a369f31d"
        },
        "item": {
          "id": "ac04684a-2506-49fe-9a8f-7ef3a3fb6ccf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "517aea57-937c-44f1-bb5c-7edfc013ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0347f8d-fd2f-4e41-8b17-4e4e3ba7e952",
        "cursor": {
          "ref": "f2c55c19-ca21-4d32-9cd2-23bf649200bf",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db6f9a0b-1058-4622-afa6-5b46e43f9e29"
        },
        "item": {
          "id": "c0347f8d-fd2f-4e41-8b17-4e4e3ba7e952",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c38e5a7e-62a8-4e9a-ab37-55803d8d4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50fe4b2-6532-48ac-b0ac-db814d00552c",
        "cursor": {
          "ref": "6279168a-4e22-4070-934e-b8d401c55ecc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "df19d646-0791-4559-afa8-c6baa49f6101"
        },
        "item": {
          "id": "c50fe4b2-6532-48ac-b0ac-db814d00552c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "35d3ae48-37fa-4f13-981d-13b2fe3dfe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea37a4af-a14d-486d-a1b2-4e47197608c3",
        "cursor": {
          "ref": "3c2fa9db-873e-43e2-8815-ac42e7069ac8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ffee1db1-6d84-4aa3-87f7-7a0977009e5f"
        },
        "item": {
          "id": "ea37a4af-a14d-486d-a1b2-4e47197608c3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "792e4fc4-aaf1-4fb9-af7f-c0e8808245a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47935992-846b-4861-ba4d-0a8d9eb4054c",
        "cursor": {
          "ref": "c7aea795-cf09-4ee0-b472-f7cd3b6c640e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6d4aa600-68ec-45b1-b6b2-6b0543022c8b"
        },
        "item": {
          "id": "47935992-846b-4861-ba4d-0a8d9eb4054c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f1a9e1f2-dcf3-46b6-b247-ca73c7679c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b44e4-d207-47d8-b6cf-bed6177d04a6",
        "cursor": {
          "ref": "96764f9f-f70e-43f2-a13f-88440c1f46f4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc505b33-c1f1-4349-864a-2a7865c8301f"
        },
        "item": {
          "id": "235b44e4-d207-47d8-b6cf-bed6177d04a6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21be2929-4f8b-4149-baef-480ff3b7a239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e759f-4874-413e-903a-260dc04b1c63",
        "cursor": {
          "ref": "213ee697-52b5-4f87-9476-54633923f954",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "85485643-c847-4bd1-9f49-e2eca01af9c9"
        },
        "item": {
          "id": "b12e759f-4874-413e-903a-260dc04b1c63",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c2e1b8a0-3481-45f2-b3dc-6a9888b536a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a278bc-4a7c-4aa3-ae0b-80859b49adb2",
        "cursor": {
          "ref": "499308a0-e62b-4848-8a57-c4ec97be884e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "54befbd0-05f5-44c3-8fb6-c9dfde998f18"
        },
        "item": {
          "id": "79a278bc-4a7c-4aa3-ae0b-80859b49adb2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3f49ae5c-b8bc-456c-99f8-adc8014d0e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ebfebf-7205-48ba-a896-df942db6aa7c",
        "cursor": {
          "ref": "8f05861e-7efc-44a5-ba3a-6ec916181735",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7cbda834-9343-44a8-9263-2f3638371e7d"
        },
        "item": {
          "id": "86ebfebf-7205-48ba-a896-df942db6aa7c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8300f780-3de0-4850-b7fb-75f606c31ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aae943d-3a3c-4cd2-9bc2-a93b7df579a5",
        "cursor": {
          "ref": "573ab03b-ff23-4764-ba97-c68143a6f636",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "468e7ec9-279e-4c0e-9244-0c9cef498739"
        },
        "item": {
          "id": "3aae943d-3a3c-4cd2-9bc2-a93b7df579a5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c2d757ac-ab42-40ea-a6ab-831842b21830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95758fba-b11c-461a-bc25-08a14eab0c35",
        "cursor": {
          "ref": "f316d580-0677-4295-b05d-c691011427f6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c24a8261-a733-4a37-b1c6-673b9c67897c"
        },
        "item": {
          "id": "95758fba-b11c-461a-bc25-08a14eab0c35",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66d381f1-7d18-49e5-9baf-5fa5b2e4c525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e704a2-4e4a-4d37-bc53-34f74fd4594e",
        "cursor": {
          "ref": "d9742f1c-97a4-4dd4-8e27-c6276163bfc9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8a095cd0-995b-4c75-b8ea-75016885ec4c"
        },
        "item": {
          "id": "a7e704a2-4e4a-4d37-bc53-34f74fd4594e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1e9aa7c8-1e52-4dae-9f58-98a70dc9697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cff9225-2bc8-4e8d-b058-4f739ebf553e",
        "cursor": {
          "ref": "f4dec882-1792-4e2d-9a30-f9f42e96931f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eb820bd1-d1d0-4064-909b-aa72ed1b29d2"
        },
        "item": {
          "id": "4cff9225-2bc8-4e8d-b058-4f739ebf553e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "179b83ab-2213-4ed1-a5bf-2f07318c1b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576bee7c-c5dd-4b87-98ef-da6588fe9f42",
        "cursor": {
          "ref": "9f69f2f9-bb5b-44b4-ade9-ab648c279e53",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4ae7d68f-f01d-46f8-81f5-9ca6d996c22c"
        },
        "item": {
          "id": "576bee7c-c5dd-4b87-98ef-da6588fe9f42",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f8dfc34c-e862-4c47-a4fc-02b308bfa6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9908aea-7fac-4563-943e-7e1fdd1dcd28",
        "cursor": {
          "ref": "34e8da7d-6f55-4b8d-bb64-283b44d34f0d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c450e395-a48f-4692-976f-bce8dc079f62"
        },
        "item": {
          "id": "c9908aea-7fac-4563-943e-7e1fdd1dcd28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5be767c9-a1e3-43ca-98ba-783f45fbb75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e486c6e-6dc7-4419-90fe-f1a9433b6432",
        "cursor": {
          "ref": "32596787-6565-46f4-8f21-abc96d57650a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "44f56de9-15f1-41e7-92c9-26b4779d351d"
        },
        "item": {
          "id": "4e486c6e-6dc7-4419-90fe-f1a9433b6432",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cbd65b4e-4d35-4d7d-89cf-6d489957f65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f10e4-5082-40df-a09e-52094b4ccf4a",
        "cursor": {
          "ref": "ea21a4cf-0c14-489d-924c-d0b8bf0fa884",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c48d6036-b7f1-4c47-888b-bb0ddb08ccac"
        },
        "item": {
          "id": "5f9f10e4-5082-40df-a09e-52094b4ccf4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0e608896-9cb3-423c-99cc-b05078a418f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d443fc9-762a-495d-b7ef-144c5a4e5c99",
        "cursor": {
          "ref": "58209d8b-1a46-47a4-9241-27dc34d3dcea",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35f6e710-98ab-4aae-a3b8-6b4fe8f54b8f"
        },
        "item": {
          "id": "3d443fc9-762a-495d-b7ef-144c5a4e5c99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "67ae0c2e-4a81-4900-8612-0ed2b4af7782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa35ea9-67b3-4bd2-9072-14f45bbaf56b",
        "cursor": {
          "ref": "956f3620-5458-4b40-94fb-4d4bf7b2b1ce",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "034602d9-2ae6-45b2-8afa-7be3e6f6a667"
        },
        "item": {
          "id": "faa35ea9-67b3-4bd2-9072-14f45bbaf56b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f4ffc8bc-24ab-4f2f-b883-c2f6bf0c2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b21f3b4-5e2c-4dbb-95dc-88e948fc77e9",
        "cursor": {
          "ref": "47c5f3c4-65d5-4806-964f-52e63ab55fc3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7149aa8c-4adf-4ab2-bc7e-9571842d7df4"
        },
        "item": {
          "id": "4b21f3b4-5e2c-4dbb-95dc-88e948fc77e9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ec3dc43b-8f39-4caa-ba97-33bd0a2b1f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e897ba-ba98-4f48-96d2-fd527b78cb14",
        "cursor": {
          "ref": "a5ae7e9e-f4a0-4970-a55b-89a488a23c1d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "88f2b3c2-1878-4ac2-a238-978885dcbbae"
        },
        "item": {
          "id": "c2e897ba-ba98-4f48-96d2-fd527b78cb14",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "91057922-3524-438a-bfa3-16b69f68aa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1350e10c-67ef-4dd5-a533-c135a857447a",
        "cursor": {
          "ref": "06c9cb2e-8d35-486e-b6b0-47c55805b790",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "18fda113-3200-46ed-93fc-d2f98f656a3a"
        },
        "item": {
          "id": "1350e10c-67ef-4dd5-a533-c135a857447a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "be801b91-e257-4813-a835-ea51925330c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee347fca-a8cd-4bc6-b80a-0eff6ce55c67",
        "cursor": {
          "ref": "2da9e27e-5ad2-4b77-a8a9-6d6ace9b7313",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93800133-9c8d-4748-ac80-4f7dafdbe952"
        },
        "item": {
          "id": "ee347fca-a8cd-4bc6-b80a-0eff6ce55c67",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "96f924b6-0fa0-468e-87be-92fa87f87ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5224c2e-abea-4837-9acf-17c9cd112a22",
        "cursor": {
          "ref": "ab487c7d-6817-47c1-87a9-f64ed2ab15e9",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3bae1739-8113-4c92-a6ce-abdff93f0fb0"
        },
        "item": {
          "id": "e5224c2e-abea-4837-9acf-17c9cd112a22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4dc7eb4f-1c01-42fa-a438-f71d7cfb4ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9084bc28-896b-476d-b141-bae32028db3b",
        "cursor": {
          "ref": "7514fb56-c5bb-40c3-9bd5-e0f60bc38bb6",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "557e3758-2ca4-41e2-acea-aba965a09bd1"
        },
        "item": {
          "id": "9084bc28-896b-476d-b141-bae32028db3b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b0e9d4bf-0004-4191-9d0c-1bcaec88f087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ea00a3-2c2e-45df-bf88-7804402979fa",
        "cursor": {
          "ref": "1be485bf-8020-43bb-83e1-2ada8d3b1cb1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2067631e-6122-4166-b50f-98258511f9ee"
        },
        "item": {
          "id": "49ea00a3-2c2e-45df-bf88-7804402979fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a6b71e5-8853-487f-ae64-ac0e627f8c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0678b4d7-9ae0-4928-833b-a553224c32d0",
        "cursor": {
          "ref": "caf2bdf9-4177-4e56-b2f8-0ca1234752e8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aa1cf38f-56a1-4ee2-b2d1-0aedd4b9d4d8"
        },
        "item": {
          "id": "0678b4d7-9ae0-4928-833b-a553224c32d0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ef74d6a1-459f-44be-ab3e-2219656a7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a2137-81b0-46ef-831c-c294453422d6",
        "cursor": {
          "ref": "8f9a64be-b40a-4698-adac-4b6028a61494",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6ad52ac9-33e3-49eb-8241-14d650f30423"
        },
        "item": {
          "id": "970a2137-81b0-46ef-831c-c294453422d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "849c9903-2ceb-4797-92ac-d7c32e81de6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23418453-4c12-4502-b36d-8c660c247eea",
        "cursor": {
          "ref": "cd9bd167-c74e-4824-85db-ea84bd51550e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fee8a4ce-e372-46be-93b2-e10dc9d417ae"
        },
        "item": {
          "id": "23418453-4c12-4502-b36d-8c660c247eea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9df8f906-7bcb-428d-8ac0-56a3ae6caca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc4f502-a954-4851-a109-c7d05c55510d",
        "cursor": {
          "ref": "a62d9bed-214c-4189-9dcf-e34becfb93a6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4791a17f-f765-4c59-9c0d-1b6de2ef9d4e"
        },
        "item": {
          "id": "8cc4f502-a954-4851-a109-c7d05c55510d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a063652b-cb44-4a49-a722-05032b2a0102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864197c5-daef-4b11-84e2-edbfede070b9",
        "cursor": {
          "ref": "3e6a932f-c37b-42e2-b9e8-2ce4d5862a00",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d48cb63d-7d6b-4462-90cd-488cc7aaacce"
        },
        "item": {
          "id": "864197c5-daef-4b11-84e2-edbfede070b9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bd0c09d5-d83c-4da7-9e55-e61dd5185b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58831f9b-4f09-42bf-8f21-8ef2edc086e1",
        "cursor": {
          "ref": "692b8a8a-6a52-46f6-959e-42b57d5849fa",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "136968d2-b20d-4279-85a9-a5efa793f6b8"
        },
        "item": {
          "id": "58831f9b-4f09-42bf-8f21-8ef2edc086e1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5cb413c6-d060-4374-91d6-acda331e7fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ee1be9-1a77-4592-aaa0-9591ce0c1c5d",
        "cursor": {
          "ref": "01365b81-111b-4f63-b260-91d8b8a41254",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd102ee9-38b9-4a12-bd42-1b3a4f9c8bfb"
        },
        "item": {
          "id": "23ee1be9-1a77-4592-aaa0-9591ce0c1c5d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4dd1da3f-5222-40da-af59-c5e6b8f82c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f938e0a1-d18a-42cf-b256-3f596f766045",
        "cursor": {
          "ref": "05bc2683-eb34-4882-bfee-9b8e4cd1fbe6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9574a4d9-a148-4d2b-91a1-b88491b74806"
        },
        "item": {
          "id": "f938e0a1-d18a-42cf-b256-3f596f766045",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4440c9ef-a9b1-4d8a-8e7a-af392c82d3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7216afc-34c1-4cd7-85ff-26ed8036ad0a",
        "cursor": {
          "ref": "fd49d545-c62e-4dab-80df-bc0ecb56d0c9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a5a7d8c4-14a4-48b6-9e9a-1e99b79195dc"
        },
        "item": {
          "id": "e7216afc-34c1-4cd7-85ff-26ed8036ad0a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "684e5119-bf8f-4003-9442-965865863b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136f9736-a9a9-4946-a874-4ef42f4a70ae",
        "cursor": {
          "ref": "e46bc7ac-8539-4887-9fd2-878b9f150861",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "62ab76fe-d6fe-43ab-9032-d6775fa0c169"
        },
        "item": {
          "id": "136f9736-a9a9-4946-a874-4ef42f4a70ae",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fc1d69df-f8b9-4206-aefc-f0235a88296e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f49618-57ad-42e8-8593-7b33d54c851f",
        "cursor": {
          "ref": "89f70fad-a117-4eff-8e10-daaf43ba7579",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ccbb23b-a4d2-4ac3-961b-86a890f35e70"
        },
        "item": {
          "id": "d9f49618-57ad-42e8-8593-7b33d54c851f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d07fdbb2-1eab-43fc-804f-c5c325e1a71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec72c32-6b9b-4edc-964c-6d6a342bebf5",
        "cursor": {
          "ref": "1dd99276-d158-400d-8842-57f9e0ea798b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7434aec0-6ef3-4515-b66f-dc944409bf08"
        },
        "item": {
          "id": "2ec72c32-6b9b-4edc-964c-6d6a342bebf5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d575a52d-7ae7-4439-a046-dfd407b32144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f812b1-3d27-4681-aba6-e001964ef9bf",
        "cursor": {
          "ref": "7d4cab0b-d6cf-4f66-a913-93b77840e37a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9c8b656f-cc03-4eec-be70-0300b899b269"
        },
        "item": {
          "id": "38f812b1-3d27-4681-aba6-e001964ef9bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "76059ee9-3331-4270-9e37-1904179cbc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f22f99-11b5-4649-9216-9f74707be6bd",
        "cursor": {
          "ref": "737334dd-8c1f-4a7f-ba3c-028cc45cbbc1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8d3f8126-5ef6-4f01-941b-d9fd55b04bd4"
        },
        "item": {
          "id": "53f22f99-11b5-4649-9216-9f74707be6bd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e9c2fd2c-e90a-4987-9ada-649dd8323c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56033a2f-ddbe-4929-a81b-287bae50dd7a",
        "cursor": {
          "ref": "6c92c5df-c65e-42e2-91d6-13096d707304",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "665e4ab2-1674-4e55-8de0-dbfc6adde4b7"
        },
        "item": {
          "id": "56033a2f-ddbe-4929-a81b-287bae50dd7a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c1f3cfcc-06e2-4464-a78c-60ce8ae63428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c75327-c6a3-4af3-ab03-52918212a3c5",
        "cursor": {
          "ref": "56805e89-f840-441b-b825-193e74094281",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "22edec96-e77b-4b8d-a5da-12cd46ac5a13"
        },
        "item": {
          "id": "67c75327-c6a3-4af3-ab03-52918212a3c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1479e020-ad59-45cb-bbe6-d931d7e3e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b92f999-e937-4b52-9d07-4bea877c88e6",
        "cursor": {
          "ref": "0871b23a-4144-4a94-934a-a63c645deded",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ab18b606-f659-4c42-848d-3dd176ca8144"
        },
        "item": {
          "id": "1b92f999-e937-4b52-9d07-4bea877c88e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "15e2eef0-0e91-45e1-b578-c25c9845fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da38eb90-73c2-4673-995c-85cfed3ce0c3",
        "cursor": {
          "ref": "5a56fed3-bf0e-4eab-99f9-5215db1d4249",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8560c485-86d5-4819-bd10-f95bca3f64fa"
        },
        "item": {
          "id": "da38eb90-73c2-4673-995c-85cfed3ce0c3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d802683-82e9-4558-9de9-c8e252349a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace5ce4-3c03-43be-86a6-f86ac908cd59",
        "cursor": {
          "ref": "a61c7391-12a9-4171-a869-132d6290ef96",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9e221a9d-cf10-4f3c-8c19-14016517679c"
        },
        "item": {
          "id": "1ace5ce4-3c03-43be-86a6-f86ac908cd59",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b59f563-1f52-4729-8014-bb540052fa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d473b3de-397a-4b4b-8cb3-3babec0cbd7a",
        "cursor": {
          "ref": "707cfd3f-8853-4ccc-bfa2-066611537ca3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "82871209-59e6-4664-9f89-e03957275521"
        },
        "item": {
          "id": "d473b3de-397a-4b4b-8cb3-3babec0cbd7a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5d238451-4d62-4444-8b2f-d350d9bbe40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ed1f63-262f-4b64-a39a-69dd3f1924cc",
        "cursor": {
          "ref": "dffe7090-e8a0-4725-a611-854ebb5d3c0b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "21b3c4cd-a3ed-4c43-bb40-2089f16559df"
        },
        "item": {
          "id": "22ed1f63-262f-4b64-a39a-69dd3f1924cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "411f65c7-1206-44d7-9182-b17a6fa81915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b062e59d-24e0-4ae7-bddc-339483b17c34",
        "cursor": {
          "ref": "114b97b9-e115-4126-a2b2-3fa1b045d723",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9234ab34-2b5f-4798-9372-af8d0a255c46"
        },
        "item": {
          "id": "b062e59d-24e0-4ae7-bddc-339483b17c34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2a5d2298-921c-4fa6-93b9-52a222e68530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826556dc-7fcb-43ec-a19e-084a2879d3ee",
        "cursor": {
          "ref": "3077c82a-3d9d-4fcb-b82a-badae675853b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "80d13732-70dc-49c6-845f-40d333fff60b"
        },
        "item": {
          "id": "826556dc-7fcb-43ec-a19e-084a2879d3ee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e6a2d4d-a639-44df-960c-fb1c206312c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1951db74-3189-4a76-b487-c8f4351dd05f",
        "cursor": {
          "ref": "8145387c-e339-4e78-9fec-0d74c891e2af",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6400a54e-dc0f-4882-bf3c-3283fed9da46"
        },
        "item": {
          "id": "1951db74-3189-4a76-b487-c8f4351dd05f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c9f3c16-5cb4-4a68-8964-af0be56f57b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa5a0f-6565-4e54-a8f6-76689bc49a40",
        "cursor": {
          "ref": "7f9b7ded-cd48-4e40-a7af-9e4b3664f4ba",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5f829ff-263b-425d-96a9-fa691239fc8c"
        },
        "item": {
          "id": "29fa5a0f-6565-4e54-a8f6-76689bc49a40",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "34adc80e-6425-4fb4-be6a-3731e02f8de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "20fc81c3-668f-4ef3-9a52-9534a0980c94",
        "cursor": {
          "ref": "467e8349-2210-4f34-82e6-05427d2b7109",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d8fac35-45aa-4175-8c83-cf62a5f513ce"
        },
        "item": {
          "id": "20fc81c3-668f-4ef3-9a52-9534a0980c94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "39e2e586-9bfe-41cc-8c1f-c3d814bcab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fe876fa0-4768-4f0d-af13-6f3be6237ed2",
        "cursor": {
          "ref": "dd345063-1dc9-44cb-831a-299ee24fd94d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d708fa8-3547-4a65-aac0-41c7963ad905"
        },
        "item": {
          "id": "fe876fa0-4768-4f0d-af13-6f3be6237ed2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "81781152-7fdf-47d4-8be3-3af4887f2aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "38a97754-5016-4778-a4b7-6c15d92a8747",
        "cursor": {
          "ref": "8d252451-1a8a-4025-a8d4-33d9c2db7787",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b6366637-0679-426f-9d46-5835f8c87013"
        },
        "item": {
          "id": "38a97754-5016-4778-a4b7-6c15d92a8747",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "105d08c6-ff8e-4cf0-8f05-bc4afd7448c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "826d2a1b-13f9-407f-b2a9-bb818b216b50",
        "cursor": {
          "ref": "8dc86766-0e45-4dba-a58d-ed26a58b8f5e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d252e9c2-72c9-4aef-a434-95b4d69da984"
        },
        "item": {
          "id": "826d2a1b-13f9-407f-b2a9-bb818b216b50",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5584f8db-070a-44f9-9101-52692bb6d888",
          "status": "Created",
          "code": 201,
          "responseTime": 12953,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e669b10b-a995-4529-aae5-cfd4de72d86e",
        "cursor": {
          "ref": "2bcb5469-fef1-46a1-ae09-7b37a7382ded",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "46ad3303-4daa-43fc-ae3f-4330d067ebe7"
        },
        "item": {
          "id": "e669b10b-a995-4529-aae5-cfd4de72d86e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6370cb90-5e04-4a0a-adbc-b31b41b202ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "089515db-df84-482d-8b68-7d7a522e6af2",
        "cursor": {
          "ref": "ca24c78e-d6d1-4164-96ee-c879c3576750",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30419378-6410-46a9-9ea1-82bf63e01228"
        },
        "item": {
          "id": "089515db-df84-482d-8b68-7d7a522e6af2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6c57236-a77d-4512-abf0-461735813ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "21273190-031f-48a8-b060-820425a1801f",
        "cursor": {
          "ref": "d1b46bec-8fcd-4566-9f55-bf9a1b1dd30f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2c106223-c596-46a0-bd56-6e56546781b5"
        },
        "item": {
          "id": "21273190-031f-48a8-b060-820425a1801f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c4f35693-7e26-4d01-af6b-456953b5c403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2a3311-56b4-48ff-8eb9-475acc9638d0",
        "cursor": {
          "ref": "9bd47666-12d0-4901-bd68-7417b7a0a82c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1f74198-00c1-4a0b-a5e9-4c90325874b8"
        },
        "item": {
          "id": "cf2a3311-56b4-48ff-8eb9-475acc9638d0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "09591329-672f-4f07-bd6d-195a7ed2afca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2250f14c-5159-4d4a-a28f-dea82fca0425",
        "cursor": {
          "ref": "f0cb1d9e-e336-479f-ad87-5abf24411eb6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a3e4198c-8114-4c0e-9d86-6e9985cbd8d7"
        },
        "item": {
          "id": "2250f14c-5159-4d4a-a28f-dea82fca0425",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da2dfca1-8840-4608-853b-8e469fc5a1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12fd0bd-6fa1-4512-95de-e58eee687b79",
        "cursor": {
          "ref": "193dbe13-4c91-408d-9d9c-913cce0aec74",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "70406281-f1a7-49f1-905e-53b23b66d2ba"
        },
        "item": {
          "id": "e12fd0bd-6fa1-4512-95de-e58eee687b79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c5a462ae-ae25-4fb8-a91e-9f2f21985c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9887544-bad3-41ae-a6b0-d6b43adbcd90",
        "cursor": {
          "ref": "2194a83c-8248-442e-8489-4a1d9a7328d6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "feefafe4-9921-4292-9967-609081e25558"
        },
        "item": {
          "id": "e9887544-bad3-41ae-a6b0-d6b43adbcd90",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8cab8eb6-bb8d-4d79-8b60-a09584a80daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819fc12a-ec96-469c-a3e5-5907cfe4985d",
        "cursor": {
          "ref": "2a41f8fc-0b4e-44dc-b37c-fca01c85dfa6",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f097b2e-6b7e-40b1-9c7f-6467506a2fb3"
        },
        "item": {
          "id": "819fc12a-ec96-469c-a3e5-5907cfe4985d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "adf9686f-fbd6-42af-93f5-27a212072b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b5d921-fdf3-4bbb-a80b-b364d1107431",
        "cursor": {
          "ref": "ca1ae693-ffc6-4187-a368-1060d574acd9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ff725c28-ffea-453b-93f3-9aa4ce430911"
        },
        "item": {
          "id": "32b5d921-fdf3-4bbb-a80b-b364d1107431",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9fe3aa93-cde2-40ed-9eaa-4e34301b2596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853c7c62-1f92-4c18-93f2-081eabd7f2e1",
        "cursor": {
          "ref": "455f67ef-0556-4c3c-b661-e1b02e695392",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5b0f0d9d-7aa9-4fd4-8ecd-248d735969c1"
        },
        "item": {
          "id": "853c7c62-1f92-4c18-93f2-081eabd7f2e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "93b707ab-8ce1-4fcd-906f-afa9a898a3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0e4dd9-4b56-4788-8304-71f667dc066c",
        "cursor": {
          "ref": "69fe2d71-9191-4666-93f3-9c31f8cce91b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6c036da7-cab3-4d10-b4d4-514a70f07950"
        },
        "item": {
          "id": "cd0e4dd9-4b56-4788-8304-71f667dc066c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d963868-55f2-4fae-82af-2ad330c48d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c93391e-472c-423f-81c0-614c22bf3745",
        "cursor": {
          "ref": "1764ac5b-f6ff-4e50-91f7-d93548a2d7d4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0e71252b-5d1b-495f-861c-fc3c4ef62a39"
        },
        "item": {
          "id": "6c93391e-472c-423f-81c0-614c22bf3745",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "492922aa-7824-4baa-8f7d-978c1113e5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15427182-f2d8-433d-82f6-e635db564c54",
        "cursor": {
          "ref": "14e82320-cd71-4165-a21b-5b2671f7e8ae",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7d0bdcb9-87c2-45ba-9122-f2cc7eba63fe"
        },
        "item": {
          "id": "15427182-f2d8-433d-82f6-e635db564c54",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "42d9a4c5-2902-41c2-b28b-ddcba2d4dc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08105a8d-dd0b-4353-8024-be401c05eeba",
        "cursor": {
          "ref": "87fded17-25bc-47fe-b280-778e3e80b4e5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "592ecb3e-587b-4289-9015-edbfb610bde5"
        },
        "item": {
          "id": "08105a8d-dd0b-4353-8024-be401c05eeba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f173f9e4-1421-4677-93c8-872214325204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafd3b2c-f2a5-4e0d-ab00-d5b8dcaa9a9a",
        "cursor": {
          "ref": "d402b47c-7955-408f-8302-69b8c1a5989e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "66c8fccb-afa3-4131-a301-c00e99a8de1d"
        },
        "item": {
          "id": "bafd3b2c-f2a5-4e0d-ab00-d5b8dcaa9a9a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9883f2c-abc6-4264-b099-8fd887d0fa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ec80d-c41f-42df-8560-5b4b2a3fd8c2",
        "cursor": {
          "ref": "7be28687-8c06-4fce-8434-e07dceb246cd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3069f685-ad8c-4467-91da-97e4032ba121"
        },
        "item": {
          "id": "939ec80d-c41f-42df-8560-5b4b2a3fd8c2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7496e77-10ec-4e90-8525-4f345394cc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce50f2-65c6-4d12-a1fc-75420e1c478b",
        "cursor": {
          "ref": "2ad71532-bdc2-4ac0-a917-3123e03b1955",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c71222df-7d49-49c0-ba26-b109fff3c2cc"
        },
        "item": {
          "id": "39ce50f2-65c6-4d12-a1fc-75420e1c478b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "85976a64-7cec-45a9-af0b-8be38fe46874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fbf222-20a7-4aba-b476-f071b095a214",
        "cursor": {
          "ref": "69fff6ee-0282-4326-b778-08592285f0cb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7300c540-eeb4-43f2-9cff-3de4460d17ac"
        },
        "item": {
          "id": "b5fbf222-20a7-4aba-b476-f071b095a214",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a90f3e74-0196-4b62-a67a-c75f50c0b387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951d68ad-d859-4076-8074-764c6b140a2c",
        "cursor": {
          "ref": "e37242d6-5291-40d1-9b1c-66f8484ab22f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e3d0f6cc-4a68-441d-9999-460ee7c0d47c"
        },
        "item": {
          "id": "951d68ad-d859-4076-8074-764c6b140a2c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8e8b5b4d-5373-47b4-a3dc-024d0a2d04d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "897e9da8-aa95-4ecc-99b8-d9adaa89bd7a",
        "cursor": {
          "ref": "193d47bd-4d04-4181-b98b-0771d03dd434",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b65632e5-ad45-45d3-bd61-a9f53a9fcad3"
        },
        "item": {
          "id": "897e9da8-aa95-4ecc-99b8-d9adaa89bd7a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0e2a8b7-6b33-4e4e-8a6c-24897f7af4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed2a25f-1e39-4d24-a956-2fd687bb2b44",
        "cursor": {
          "ref": "23268846-4999-4ce7-99b6-cff9391a6fcc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fef90951-a415-421d-9b2a-d367788e1d26"
        },
        "item": {
          "id": "aed2a25f-1e39-4d24-a956-2fd687bb2b44",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "88043fb5-b3ef-44ec-9ce3-e721e1fd7f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1374be01-ff9c-4d49-843a-9d1ce6cab029",
        "cursor": {
          "ref": "c4139e50-6b9c-42e0-bbb5-07c3c07ce54b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "26a297f2-08a0-4b27-aea4-00e93f7ff733"
        },
        "item": {
          "id": "1374be01-ff9c-4d49-843a-9d1ce6cab029",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5332cda-58f0-4839-99e0-2565d4240a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce47c3-f560-4647-8c10-6fd122bafa5d",
        "cursor": {
          "ref": "56707955-f1a2-40a0-b1f5-1132ffadaaea",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6ff94823-0abc-43ff-9cf0-080072a21131"
        },
        "item": {
          "id": "86ce47c3-f560-4647-8c10-6fd122bafa5d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24236e57-73ec-4578-80a9-a2e386457ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c5ebaf-e671-4148-9eed-f8bf6d939032",
        "cursor": {
          "ref": "d5af6909-3026-456f-93ab-6955a62aa87d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14e5a1bb-dd95-4937-9435-1894a3ad97d2"
        },
        "item": {
          "id": "02c5ebaf-e671-4148-9eed-f8bf6d939032",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c8a380dd-7ecc-4170-8c2a-4e65f0474c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2188f3de-2ad9-4e7c-9507-6718aa0a0add",
        "cursor": {
          "ref": "56d18c21-7f72-428e-a9c4-5a761b5e24de",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5d02b6d5-fb59-40c1-a380-f96788d6c2c3"
        },
        "item": {
          "id": "2188f3de-2ad9-4e7c-9507-6718aa0a0add",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26d778c7-a841-4ffa-86eb-4e5fae2079e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17c3aee-161f-4d31-a309-263f7e17e617",
        "cursor": {
          "ref": "ff1c6c42-ebff-4b5a-905e-724ca28db0b5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eec390c4-8fe1-4926-812a-92c5a257d572"
        },
        "item": {
          "id": "b17c3aee-161f-4d31-a309-263f7e17e617",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8d7feb2b-fabf-4fde-b7e0-9124024f899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637da654-64b0-4ff9-a053-548542190029",
        "cursor": {
          "ref": "cfb568e9-78b9-4e50-b0fb-bec0fb0fd353",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "80acf543-d825-44e9-b244-e18ce3c74614"
        },
        "item": {
          "id": "637da654-64b0-4ff9-a053-548542190029",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6690444e-56e8-49d7-baa3-c74ef629d70a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 109,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0e716bb3-69b3-4783-a519-46c8cc6d79b5",
        "cursor": {
          "ref": "051e3d12-65e9-429b-a5bd-2f789fbdabff",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "055a148a-4ec4-4aee-aa91-b066f357f8f2"
        },
        "item": {
          "id": "0e716bb3-69b3-4783-a519-46c8cc6d79b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "940aaf7d-b45c-4a73-807f-cb41c535acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abc8d22-33c1-4aad-bd99-efaf90f58ea7",
        "cursor": {
          "ref": "38625b7d-acd4-40f9-82d6-eb23229e9bd6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7681eb49-cb2b-4183-b7ee-e985a5e1557c"
        },
        "item": {
          "id": "2abc8d22-33c1-4aad-bd99-efaf90f58ea7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75520ec3-cd3c-4076-aad5-8c3996c267b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d822eca-22b1-44e4-9981-6f661ba0f2bc",
        "cursor": {
          "ref": "b58fa4e4-d951-4739-8b50-891e42787726",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "59948e2e-769a-4e9b-93d8-02d1d31e6206"
        },
        "item": {
          "id": "3d822eca-22b1-44e4-9981-6f661ba0f2bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1d3e473-e429-4b4a-a988-c5add0f318fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fc3cd-9ada-4bbc-be97-74064057b557",
        "cursor": {
          "ref": "15c515d2-77e4-4601-be16-2b499693270f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8cfefab3-f4e9-4583-bc60-af5f69dda434"
        },
        "item": {
          "id": "af8fc3cd-9ada-4bbc-be97-74064057b557",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cc213d2-66c3-47ec-be80-afdf9ac9f958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58e01a-850e-4ba8-ba39-25afad33eb42",
        "cursor": {
          "ref": "ffc03559-834a-4457-b339-6b75192ac4fa",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ac0e1e6f-dd6a-4a30-b841-dbf0e58f760b"
        },
        "item": {
          "id": "1a58e01a-850e-4ba8-ba39-25afad33eb42",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eebc9599-6e83-4181-b796-a601d3987385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a558bed-d380-4d25-88ba-6129489d84c5",
        "cursor": {
          "ref": "6b1e0ba8-7fa1-4fb2-8d96-c12ba34dec2a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d329b453-4260-4247-a97e-bee964065a60"
        },
        "item": {
          "id": "1a558bed-d380-4d25-88ba-6129489d84c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6e5bf1fd-71ab-40fe-a8ad-ec0bd26344bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3065c8-3d81-427c-b93d-a0d434b5464c",
        "cursor": {
          "ref": "9a159986-a07f-4987-ae0b-0df3ac57d832",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d504ecf-0b56-4f93-8a13-d5a9d499ac7a"
        },
        "item": {
          "id": "5a3065c8-3d81-427c-b93d-a0d434b5464c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bb7751ab-1b37-4ecf-aea5-3aacb19244b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "d5535e02-eb2f-4f54-b4dd-3481b796b2c0",
        "cursor": {
          "ref": "1d62e086-fe53-44ec-a8d6-21e2835e011d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7ab5ed9c-7534-4f72-a438-0465ea9c4240"
        },
        "item": {
          "id": "d5535e02-eb2f-4f54-b4dd-3481b796b2c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "810456b7-7f81-4934-931d-8e7eaab05176",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 130,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "fdb55c37-ae48-4c1c-b395-1df8aec35831",
        "cursor": {
          "ref": "4806cbcd-67ee-4dea-a0b4-2a50af7369a5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a223886f-afcc-4a05-b993-af03ca077ec2"
        },
        "item": {
          "id": "fdb55c37-ae48-4c1c-b395-1df8aec35831",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ee70c9fc-fd29-4c2b-9289-294437e75675",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d39b147e-f107-4856-94e4-6d52c641ccec",
        "cursor": {
          "ref": "48c0f2bd-5113-44d3-b6e9-c85440903894",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3022a11a-d77f-4fe4-ba65-148ed88f0110"
        },
        "item": {
          "id": "d39b147e-f107-4856-94e4-6d52c641ccec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e16a4bbd-81e5-439c-9883-496f2d15c1c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "cdf12e51-8b5a-4076-8b13-0480ad6d001f",
        "cursor": {
          "ref": "d498c7f2-79f2-47a9-a30e-93d1338451a1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fe0b4e72-c9bc-4638-94ad-aff7fa549f57"
        },
        "item": {
          "id": "cdf12e51-8b5a-4076-8b13-0480ad6d001f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "72beddd0-6cc7-42f2-83a5-7b312027e838",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a446fe71-fb7c-46f9-8cb1-dab6541f0c6a",
        "cursor": {
          "ref": "383496fa-3874-406a-a724-2d5569324496",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4820a7b3-a7f0-4ed1-a786-ea538e7838b7"
        },
        "item": {
          "id": "a446fe71-fb7c-46f9-8cb1-dab6541f0c6a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f5c5d970-0015-43d9-aae6-507f04dee534",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8f9ed020-72cc-41e9-b783-f888f5f14bb4",
        "cursor": {
          "ref": "1dd5bb6f-3276-4c9c-8351-d888ddb687ba",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d85f34bc-0d15-42b1-8dab-52a8769caa21"
        },
        "item": {
          "id": "8f9ed020-72cc-41e9-b783-f888f5f14bb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05fda8db-9135-4527-8b05-3f71dc7a3bd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc892b-b9fb-45f2-bc31-5f3668d8b7c5",
        "cursor": {
          "ref": "12529099-267e-4598-b2a0-62e7486ef2c6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3fabe12d-ac8c-420f-8195-396a53b6f70d"
        },
        "item": {
          "id": "90cc892b-b9fb-45f2-bc31-5f3668d8b7c5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ebda221e-9e07-4dee-a9ee-f4083540bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a56490-a0dd-44e4-9722-0b19e08413c1",
        "cursor": {
          "ref": "bf148843-4caa-4c55-af5f-31f96d9b266a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7ac439ca-7645-4332-9b6f-10fc6a495a2b"
        },
        "item": {
          "id": "c5a56490-a0dd-44e4-9722-0b19e08413c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c8aa1dfa-f4e2-4e5e-96ae-230e5c1b7cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be96a85-0852-4a1c-ada3-1876ea33d3fd",
        "cursor": {
          "ref": "72943af9-41d7-48dc-a625-61f5c0f9f79b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "48b4061b-31e1-43c9-8685-b8a8962bf696"
        },
        "item": {
          "id": "6be96a85-0852-4a1c-ada3-1876ea33d3fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ef02119-d471-42aa-afe6-02777da1a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65363652-51cf-4d2a-998e-aeae079065a8",
        "cursor": {
          "ref": "c1c828b3-069d-43f6-bdb7-bad3658d0e95",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "513371e9-9306-4435-b3ea-fa15649f3481"
        },
        "item": {
          "id": "65363652-51cf-4d2a-998e-aeae079065a8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ef4f8628-9005-40ef-92e8-4d0af3248420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92db7d58-05df-43c5-9890-23310104b74b",
        "cursor": {
          "ref": "ba698265-6daf-4f63-b210-fddd2a72e5ac",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1274afe-ca29-440a-a3d9-0907ec2cde3f"
        },
        "item": {
          "id": "92db7d58-05df-43c5-9890-23310104b74b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3ca30a67-961b-4152-b2af-17e929a07736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ad46d6-5265-4296-91ba-82f3ee01f94d",
        "cursor": {
          "ref": "adf1df75-29e8-4725-af98-f2a1091c3bda",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db37a3b3-7071-44e9-bfbf-02c49344b3d5"
        },
        "item": {
          "id": "07ad46d6-5265-4296-91ba-82f3ee01f94d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6382798a-4053-4939-9b96-4c56566b14bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25d363f-39ad-469c-ac75-981d4fd4869e",
        "cursor": {
          "ref": "79ddf960-066a-4fdc-bb45-a0f61a8c4656",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4ae9e68a-585e-448f-b364-db965b2c5ec3"
        },
        "item": {
          "id": "f25d363f-39ad-469c-ac75-981d4fd4869e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f68fa6f-fb02-4ccc-9b5f-756e6d8d52db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880ab7a9-50c5-4d4b-abd4-a1af29ce1afa",
        "cursor": {
          "ref": "227ea825-f438-436c-a51b-5a510d40dce4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c6616836-a36e-4d19-b799-b71bab950148"
        },
        "item": {
          "id": "880ab7a9-50c5-4d4b-abd4-a1af29ce1afa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7578da6-5b21-46ce-886a-91250724f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8926d78b-d7b6-4662-a33c-51e450150570",
        "cursor": {
          "ref": "9783d55c-6845-487e-9d59-216961877930",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aa6a9edf-f18e-4f8e-936d-ba8e063177b5"
        },
        "item": {
          "id": "8926d78b-d7b6-4662-a33c-51e450150570",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f0e18e05-9c93-4f88-8c30-e7a6535a26f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7483b106-f6ab-48fa-9b53-15971793ab87",
        "cursor": {
          "ref": "2c2ad52c-1b4f-4a73-9ec8-ce88dbd1b7d7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1834cc83-18fd-441d-afe4-1da7772a3497"
        },
        "item": {
          "id": "7483b106-f6ab-48fa-9b53-15971793ab87",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e3d3b146-0046-4f23-bade-e2a58fc3c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c648941a-1321-4fe7-9fd4-dfbdf5c2b962",
        "cursor": {
          "ref": "671de68f-b2b7-40fe-88a5-5dcd760b3260",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "46969f10-1ce9-4be2-8c1b-e28019d68b10"
        },
        "item": {
          "id": "c648941a-1321-4fe7-9fd4-dfbdf5c2b962",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f2b0ab77-adb0-4003-9a0f-0e252b213e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd626a-806c-40e2-837d-79a4d2fbb45b",
        "cursor": {
          "ref": "50aa756c-0ba5-44e1-9ddd-4027f6b924dd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "297f964e-9098-41cf-8f1e-5f61c43f5cbe"
        },
        "item": {
          "id": "f1bd626a-806c-40e2-837d-79a4d2fbb45b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "393b643c-f79d-43b0-91a2-dde40c1c730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a04ca7b-879e-405b-9ad5-5be0fa5098f4",
        "cursor": {
          "ref": "a91e8aa9-1a7f-4aa0-8c12-35d25c06acb0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14c4e209-2d9f-4947-8870-1008c700cf5a"
        },
        "item": {
          "id": "1a04ca7b-879e-405b-9ad5-5be0fa5098f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d0ac3b27-2759-4110-9b65-2f68d645bf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eff540-e8b1-48e7-b955-64d01f706604",
        "cursor": {
          "ref": "f62e4622-3dd8-4b3c-8aac-65f33dc08053",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "714d1d09-68b9-4370-8543-74af1357ed93"
        },
        "item": {
          "id": "02eff540-e8b1-48e7-b955-64d01f706604",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "74ff41d0-dc97-4dd8-a12c-6a83b3ec2af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270068f8-3848-4d7f-b47d-0674f45e802b",
        "cursor": {
          "ref": "62d98b90-a64f-417e-9ec5-b291224e9045",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "25248fc4-9ba8-4840-bde5-adee9cedc013"
        },
        "item": {
          "id": "270068f8-3848-4d7f-b47d-0674f45e802b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bdc93a8c-fecf-44c8-aa55-30ecf348c70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847fc83a-8983-4e6c-a760-eda2d0042735",
        "cursor": {
          "ref": "b123313c-2208-4b0d-be01-4341db22889b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3aebcc5d-3dc3-4882-a20c-61648fa346df"
        },
        "item": {
          "id": "847fc83a-8983-4e6c-a760-eda2d0042735",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2e167c5-80af-41c9-898a-b14d418cef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf3bb6-2a27-4e9a-8be8-1ca842807917",
        "cursor": {
          "ref": "86f43a92-9a02-4035-b5e9-1f9733f24022",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "06d6720d-1129-4dfa-9608-6b204425542c"
        },
        "item": {
          "id": "4bbf3bb6-2a27-4e9a-8be8-1ca842807917",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0a02d641-110f-4693-b4ee-0e970cccc42d",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "22fed440-3bc3-4843-9259-a07fe7ca1bef",
        "cursor": {
          "ref": "28a89e83-5c68-4f2c-84b1-2c2b0bc3f4e7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6f8532f5-d904-4915-9de3-6a6e546b4b40"
        },
        "item": {
          "id": "22fed440-3bc3-4843-9259-a07fe7ca1bef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c1defd5-e1b9-408c-b62b-0c9bb0fca9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbaf4fb-f5ab-4a3a-9f30-e283458f9b1c",
        "cursor": {
          "ref": "0caa5b36-b6b4-4f8f-b355-38336f9c744b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d2cf5d22-5a44-4a7a-aec9-9724006d9f08"
        },
        "item": {
          "id": "7cbaf4fb-f5ab-4a3a-9f30-e283458f9b1c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "81a30786-e67e-4138-a8c0-1c71ced2c9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9795173d-395a-4aa3-9bc5-66ce6eedd529",
        "cursor": {
          "ref": "a1af3ff0-9d92-4002-8059-c45506ec7e85",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b576276f-fbee-4e74-9060-40482b221221"
        },
        "item": {
          "id": "9795173d-395a-4aa3-9bc5-66ce6eedd529",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bcd43e7d-ab8c-49e9-b644-6232bf6faa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d7b4d5-7ee4-4d2a-87f3-75e40928acab",
        "cursor": {
          "ref": "4e3e8e5c-1fe3-46c2-830e-88140afc642c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e32887f-0754-456f-be95-68da57a87b6f"
        },
        "item": {
          "id": "c4d7b4d5-7ee4-4d2a-87f3-75e40928acab",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "360b12aa-51c5-4a8d-b3d7-80a47ab09642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17160c4e-ef10-4e84-a926-d4dad12ebef1",
        "cursor": {
          "ref": "3e12061e-2273-4788-bbb2-f15874f3f3b5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76674191-dac8-4111-aeb0-94ff7de2d70a"
        },
        "item": {
          "id": "17160c4e-ef10-4e84-a926-d4dad12ebef1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7214545-30ac-405a-ae38-4e753ef7f024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dc9f46-5a4b-4fe4-9dda-612e3d1658d4",
        "cursor": {
          "ref": "6b7c7e20-2045-4863-8536-40dfd410f28d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee5960c5-df9c-45e8-8345-b5032ff26064"
        },
        "item": {
          "id": "78dc9f46-5a4b-4fe4-9dda-612e3d1658d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "690a3c9f-c3ca-437e-a76a-52dee4f8357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab70932-3f08-43d6-8512-29bcbf59075d",
        "cursor": {
          "ref": "93a4b1ef-10ee-4cc7-acb2-65e28011ab8c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "38b21fe3-0e18-4c52-815d-c1dcc92c0e8c"
        },
        "item": {
          "id": "cab70932-3f08-43d6-8512-29bcbf59075d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "024859d5-9a9d-4c50-8db5-fe5b73ddec6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9465338-35a5-4c5d-adda-654930517039",
        "cursor": {
          "ref": "623ef5b2-df64-48c1-8b80-9a5a53d85b98",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8c29ea98-7d97-4c3d-8ed6-ee33832418d8"
        },
        "item": {
          "id": "b9465338-35a5-4c5d-adda-654930517039",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "303a336c-378d-4223-9f43-d9f7b6559d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334e78d8-dab1-4998-bbb6-057b99e3b02d",
        "cursor": {
          "ref": "82d633fa-4d5b-4e0c-a4c7-dbce1413bcf1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0284c17c-ade6-41ce-ad26-6abb09e7dde1"
        },
        "item": {
          "id": "334e78d8-dab1-4998-bbb6-057b99e3b02d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6bcca937-c395-491c-b557-e5631f717b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bfd0f0-d6b8-4b9a-8603-785ab1d9dd65",
        "cursor": {
          "ref": "3917987e-b90f-4766-8439-8855f8c131bb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "72f1f6ea-4271-4156-b7db-12378920b47e"
        },
        "item": {
          "id": "59bfd0f0-d6b8-4b9a-8603-785ab1d9dd65",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88ee5152-c300-4a28-9275-1c828f95f70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2036f8-e05d-4931-84fa-9e3209446c25",
        "cursor": {
          "ref": "41c250ac-703a-47f3-992e-5ee6fd2e32a2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "292b2dda-1ee5-44cf-9b9e-c9da15074f83"
        },
        "item": {
          "id": "3d2036f8-e05d-4931-84fa-9e3209446c25",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d619ae16-06f6-4342-9dae-609a6fb776db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1669a208-b0f9-4c8a-af85-81af8fbec4ff",
        "cursor": {
          "ref": "99a6ff4d-d66f-4f95-af06-8212d2067cb7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6df7a22d-a90a-4441-ad26-34b7645925ba"
        },
        "item": {
          "id": "1669a208-b0f9-4c8a-af85-81af8fbec4ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aff7cc91-cf58-403d-95fc-a89fa38135b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55629d43-87db-4630-9558-020f183dbe25",
        "cursor": {
          "ref": "22af3a99-e3f6-408b-8f09-25b75dafcb6b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "58df7a37-005e-4479-8841-058d3593df5e"
        },
        "item": {
          "id": "55629d43-87db-4630-9558-020f183dbe25",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d5331e83-ba73-4172-bb91-86155c76b85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5865ccc-efb9-4cea-81a2-f29ab46fdc1b",
        "cursor": {
          "ref": "dbbdba8e-0d24-4379-9d22-4fdcbd278040",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ab211442-612f-4f3f-b498-d70911912259"
        },
        "item": {
          "id": "d5865ccc-efb9-4cea-81a2-f29ab46fdc1b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "591fc690-f239-44b6-959c-b5d058fc6667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6735f92c-959d-42ec-beb2-cbe565d65141",
        "cursor": {
          "ref": "066fa3f4-bc15-4110-aa96-96505946e0e0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "707cb612-8dce-46b0-ab8b-9920cf3422b6"
        },
        "item": {
          "id": "6735f92c-959d-42ec-beb2-cbe565d65141",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6c2c1dc9-5c18-4e45-9a12-9fa98f3784e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6594cd66-2aa8-4061-a7c8-d3428d4c02cb",
        "cursor": {
          "ref": "58839e51-d87e-4aff-84e3-f75b5bd0cd78",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9d0c1769-0692-4743-b9e4-83e8ebe0d0f8"
        },
        "item": {
          "id": "6594cd66-2aa8-4061-a7c8-d3428d4c02cb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa19c01b-7af8-479f-bf00-001272ef2330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668ffff8-89c5-4dca-a28b-6d7b28d36707",
        "cursor": {
          "ref": "83a6ed73-2d9e-4915-a895-be48bd4ac7cc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43f93f4e-55b7-406f-abca-7a283e819c50"
        },
        "item": {
          "id": "668ffff8-89c5-4dca-a28b-6d7b28d36707",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6c28bfc-f7f1-486b-982a-b406dbcc0a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e9b0c-e154-43b2-b93b-f27e915caba6",
        "cursor": {
          "ref": "59a209e9-92f8-472c-b3ce-8db6e1b794b8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ef24b93-1d20-4df1-8f24-bb26c2a84449"
        },
        "item": {
          "id": "919e9b0c-e154-43b2-b93b-f27e915caba6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "202ba393-0130-4e10-8f8b-932fe3a9d3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ed244a-7f8b-4657-9efd-2f2379e308ba",
        "cursor": {
          "ref": "fedf086a-6b44-4e0e-9cfd-73fa1103353a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "61e13699-3dfe-4657-97b9-959829823dea"
        },
        "item": {
          "id": "71ed244a-7f8b-4657-9efd-2f2379e308ba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ac14b457-1573-4b9d-a80b-b24505cfa7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d1896d-1ee4-4c27-86a0-811deae0e0e9",
        "cursor": {
          "ref": "51ef30e1-1b3a-44e0-9efe-d87a914a0304",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5290209b-f560-4fae-ba37-1281d2bb3cfe"
        },
        "item": {
          "id": "b8d1896d-1ee4-4c27-86a0-811deae0e0e9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c4ff7316-4132-4c0a-922d-88c615e19e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1943c4e-d0bb-40b6-83c2-240c64c5797b",
        "cursor": {
          "ref": "bb7abb5a-ec39-444d-87ef-b2450d180c6b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "adb2242f-b7dd-41e2-945e-412017054fa3"
        },
        "item": {
          "id": "b1943c4e-d0bb-40b6-83c2-240c64c5797b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "80137b24-3578-4081-8161-a39e6342a32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a678872-c599-4551-817b-97666cceb59d",
        "cursor": {
          "ref": "b237e7cf-25ba-4f40-a0b3-f4ad8640fc8f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bdf224a8-d718-4934-b205-1cd47a66a675"
        },
        "item": {
          "id": "0a678872-c599-4551-817b-97666cceb59d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9c39375-97a3-4d6b-acd7-c84e69aa042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a99064-c19f-44e1-bcfd-7f694f30e43d",
        "cursor": {
          "ref": "d1949f47-d972-441f-a7ba-6cd001e4a90a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b833ef6a-5983-41bc-aefb-1176f4f4053c"
        },
        "item": {
          "id": "56a99064-c19f-44e1-bcfd-7f694f30e43d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46e35941-7b2a-4b81-9f74-162b3ad909d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8ee7fd-4ecc-4733-893b-ba5d2d610837",
        "cursor": {
          "ref": "983cb205-e566-4ea5-bc39-e830270a31a3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3c7d431c-8f17-4303-b528-ac9117430145"
        },
        "item": {
          "id": "4c8ee7fd-4ecc-4733-893b-ba5d2d610837",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "24a79044-541b-4030-970f-bf65fa280edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d01c17-d226-4743-b022-65d2379690e6",
        "cursor": {
          "ref": "fb2e391d-5248-48d9-a907-7c36aa636ba7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c73bd17e-ff66-44a1-9d35-ec42082fc6e1"
        },
        "item": {
          "id": "73d01c17-d226-4743-b022-65d2379690e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e266c777-7cf2-46e2-96b1-58454fb4927c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61ec56-0a64-4fcd-8bd5-db90adfbaf9f",
        "cursor": {
          "ref": "4d7e6369-ffa0-472f-b1cd-d6c506cc1c6f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e150da92-5be2-4db0-a4f7-510273348e74"
        },
        "item": {
          "id": "ed61ec56-0a64-4fcd-8bd5-db90adfbaf9f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9fae23af-922a-4ce3-a4ff-27e0fd21812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683d59a1-37d8-48cd-bcbc-354f45a2ab95",
        "cursor": {
          "ref": "f27295fd-5ce0-413a-a968-244f7082759b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c0dd39ce-3f6d-4d8b-9feb-dcc08741de19"
        },
        "item": {
          "id": "683d59a1-37d8-48cd-bcbc-354f45a2ab95",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3fdd85f-0c7f-4339-8fea-e6ef3785ed42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf6a988-253c-4642-bcec-b6376b02450d",
        "cursor": {
          "ref": "87de5557-3666-40ef-9c44-a0f0e82ae9ad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d66a2e0d-974a-4928-8d55-4b7f548893ed"
        },
        "item": {
          "id": "6bf6a988-253c-4642-bcec-b6376b02450d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4c9151f4-7412-4ad8-9118-b99bba04f062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c79c7-153a-4d1c-94ef-d4f346a4f1d0",
        "cursor": {
          "ref": "0a07e928-6f8a-4b35-b09a-3f118b3f76de",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "57fae566-5c5e-4cec-ae2f-d8031695607a"
        },
        "item": {
          "id": "dd5c79c7-153a-4d1c-94ef-d4f346a4f1d0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "74f28399-919e-4c65-982d-dc6ee369707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408d1cae-01d2-4e22-bc35-6ec9478f387f",
        "cursor": {
          "ref": "b4ea256f-c704-44de-afa3-b6e464d35cb6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "37ad181a-d71a-4d72-b9b6-1970bc1e6f09"
        },
        "item": {
          "id": "408d1cae-01d2-4e22-bc35-6ec9478f387f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "986e0035-539f-4038-937e-4320a30f0c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b59cb6-dd4e-47f0-9445-bd27f5a0ac28",
        "cursor": {
          "ref": "c59569b8-7399-4b38-b4b7-e285a435ebd3",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "701cc798-6274-44e8-a6e6-b6b1344ac6a6"
        },
        "item": {
          "id": "71b59cb6-dd4e-47f0-9445-bd27f5a0ac28",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ebb023b8-aa5c-4521-affe-5f167f13fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd3714d-7553-45c5-93ab-0aa573b0e69f",
        "cursor": {
          "ref": "f2f7bb74-a4bc-4902-976d-8217b6a3cb44",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "266a021f-5ce3-46c0-81a0-4d6ca5d97bd0"
        },
        "item": {
          "id": "afd3714d-7553-45c5-93ab-0aa573b0e69f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b88af32a-04a9-4ee9-996c-f47201d58753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f25cbaa-84dc-4937-a2c2-c0319f4a6432",
        "cursor": {
          "ref": "9f591e7a-a7ec-427a-88ea-3945f23fb20b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a7fc966c-44d4-4c8d-ab24-3f995b7ca5c9"
        },
        "item": {
          "id": "7f25cbaa-84dc-4937-a2c2-c0319f4a6432",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0140cee4-4be2-4b32-b58d-560488e872d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90307f26-cee6-4876-a566-835a0c25c538",
        "cursor": {
          "ref": "ebb7bdf5-7515-41c8-ac30-2989881d7077",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c6a60716-3aa0-4699-b26b-922a314dbcf4"
        },
        "item": {
          "id": "90307f26-cee6-4876-a566-835a0c25c538",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8f1bc366-316d-46fb-9e65-d2a91388fa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74305dc6-ee09-48ab-ac9a-3df4482e569b",
        "cursor": {
          "ref": "4b9a613c-0133-45d8-88ab-8c846e0c8c04",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "85464f15-0ea9-4930-861e-40088ca1e8eb"
        },
        "item": {
          "id": "74305dc6-ee09-48ab-ac9a-3df4482e569b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1c03f76e-e908-4812-af88-862f330c48ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25671393-81a7-4744-982f-97a4c5029aca",
        "cursor": {
          "ref": "8611df18-8a67-4f09-81d8-28436607350a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbd5cbaa-51c3-439f-bf11-1dd90f7105bd"
        },
        "item": {
          "id": "25671393-81a7-4744-982f-97a4c5029aca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bdbc9bd8-dd01-40d6-81b3-2002ff3079d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ee9160-037b-4611-b218-95d89de024f9",
        "cursor": {
          "ref": "a2677609-6df4-48e4-89cc-9212b92bb0be",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cda4ddc8-69c3-4b20-a480-f7a7d0067c22"
        },
        "item": {
          "id": "18ee9160-037b-4611-b218-95d89de024f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "96233683-6a7e-4140-b373-1caefc286b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c87678-1219-4345-95d2-e1b41739bf79",
        "cursor": {
          "ref": "57ecc944-06be-4b7f-b0d4-b84e7aa5fc39",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3354c692-5335-4676-b7db-fd1121a93bd0"
        },
        "item": {
          "id": "38c87678-1219-4345-95d2-e1b41739bf79",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5f65fca-1fc9-412c-8b95-ab4f8b4273db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e6735-29c6-4c27-ba36-b1473a9f6d44",
        "cursor": {
          "ref": "83b8ea6a-2760-46ab-8e30-f292f233f2a8",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e7712a8-a854-490e-bbd8-e41ea3d7c999"
        },
        "item": {
          "id": "627e6735-29c6-4c27-ba36-b1473a9f6d44",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c510bbda-2f81-401b-a018-81e622bfb2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245ac28e-b65d-479c-ba51-e5fd91d181e5",
        "cursor": {
          "ref": "3b2c8d63-8e24-473a-99a1-04e97f8e5e09",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca5f4049-3892-46c1-83c7-e465abbcffa2"
        },
        "item": {
          "id": "245ac28e-b65d-479c-ba51-e5fd91d181e5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0b204ed6-0e36-4174-98cd-496d27e5827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1a486-186a-4b62-bc74-7fc2ae5b2ba3",
        "cursor": {
          "ref": "77f1fe54-210b-4d2e-bda1-7f1dec670147",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "283bba98-0bdc-46d3-a59e-52dcc373991a"
        },
        "item": {
          "id": "8ba1a486-186a-4b62-bc74-7fc2ae5b2ba3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "50c19c6f-01ae-4671-802a-c494d0e4df01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654ed1a6-db3d-48f1-9883-daf89aca7d82",
        "cursor": {
          "ref": "8adcf24e-e978-4d60-b9e9-bcf713c6e4c0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "83aa38cd-60a3-4578-acd2-50b81d1ce04a"
        },
        "item": {
          "id": "654ed1a6-db3d-48f1-9883-daf89aca7d82",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "182de4cb-56e5-4b6c-9888-b76a0c39dcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570ab29b-ff9e-49dd-973a-1af9d6f6bfda",
        "cursor": {
          "ref": "47d9bfe1-9dbe-4f47-a52b-809c783ba5df",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9b047a1e-0d59-4b5d-bb08-092256353c4a"
        },
        "item": {
          "id": "570ab29b-ff9e-49dd-973a-1af9d6f6bfda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b34264cb-c00d-4585-944d-9654b8f84cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cdf33d-435b-48f6-bd8e-3045cd424283",
        "cursor": {
          "ref": "2e76db7c-5d9e-4c9f-afd5-d1184624923d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a16606a5-12e2-4047-bfd4-33c37afefa10"
        },
        "item": {
          "id": "a6cdf33d-435b-48f6-bd8e-3045cd424283",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "47e2994e-4ece-4f44-82c7-f27173bf88e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba3859f-457f-4368-b18a-6ebed3f5fd42",
        "cursor": {
          "ref": "01654379-9da6-4b49-8c97-47f712d0afb1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a6d9ef89-6f16-40e7-b32e-1ed674d65400"
        },
        "item": {
          "id": "9ba3859f-457f-4368-b18a-6ebed3f5fd42",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a071bae-792e-49e9-a648-c93e3ed77aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129ab0dd-84d4-440e-be88-2532bae0209d",
        "cursor": {
          "ref": "5706247f-21db-44c6-91f3-7d9062d60ed9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4731c518-be68-48eb-ba7f-ebdd36f955a0"
        },
        "item": {
          "id": "129ab0dd-84d4-440e-be88-2532bae0209d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4caaa407-381b-4f9a-8da1-49eeb4468168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976a440-b673-46f3-91ad-10a144a2bafb",
        "cursor": {
          "ref": "eb36336e-b100-4a60-9a29-89c344b78b94",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6afeef0a-fe51-4c87-a969-63d2965f8af3"
        },
        "item": {
          "id": "6976a440-b673-46f3-91ad-10a144a2bafb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "556783e1-4505-48ba-bfe7-a4c53bf609a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d719915-4021-4523-86a7-c82ca813152c",
        "cursor": {
          "ref": "206b0f33-9e3e-4e24-a5ec-edd450881574",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55c8c678-1db2-4f70-b6c0-7ac5e6e0e946"
        },
        "item": {
          "id": "3d719915-4021-4523-86a7-c82ca813152c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a8707724-9f3d-440b-b427-3f43f317c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55672ad4-c761-4cc6-a2dd-a98a3e9d343e",
        "cursor": {
          "ref": "d056f9bd-4935-479f-b9c7-e2275b854e19",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "757a3040-a5e0-412c-b53b-78415e5f0b80"
        },
        "item": {
          "id": "55672ad4-c761-4cc6-a2dd-a98a3e9d343e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ed9d652e-86a6-4c3f-a188-bfb28f7600bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fe4f9-c5ea-4ad1-adf4-6942e5dc1380",
        "cursor": {
          "ref": "507e0ef1-fce1-4007-9311-d3df3f635d21",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "34699355-e8fd-41e1-88fa-0cf1c8d4a0c4"
        },
        "item": {
          "id": "aa2fe4f9-c5ea-4ad1-adf4-6942e5dc1380",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6469091e-b7a4-4d63-bd9d-f7d4ffa35e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f67b3f-00d8-4e58-a078-888cb6953688",
        "cursor": {
          "ref": "92f83c58-4723-4674-8681-17c8999ab645",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ad4c483c-6c8f-4c97-ba53-3b873c619368"
        },
        "item": {
          "id": "82f67b3f-00d8-4e58-a078-888cb6953688",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b996c5a-b92b-4314-b6db-3d91c3c1d78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c18404c-1b5a-472e-88a9-9963efe8639f",
        "cursor": {
          "ref": "042c6339-9356-45b5-869c-e30e2d3395c0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "44ef01ea-ba11-4176-83a3-5fd338952bdf"
        },
        "item": {
          "id": "5c18404c-1b5a-472e-88a9-9963efe8639f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6fb812da-98cc-460d-b38c-2c5465392719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cfc4b6-de13-40bd-b7a2-ff86024685a1",
        "cursor": {
          "ref": "fdbd520f-9599-4ce6-aa9d-55983284de5f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5e35715f-0242-4c2c-9abd-9d6943fd3475"
        },
        "item": {
          "id": "08cfc4b6-de13-40bd-b7a2-ff86024685a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b3e7b24-2923-416c-9e72-46780f1a2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b36a94-7c9b-4d9d-9932-087f9f4a42a6",
        "cursor": {
          "ref": "ce903e46-2aea-4906-944b-dde0d24a6e7a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "43946ee8-901c-4d68-a906-fb38d2fc3c9a"
        },
        "item": {
          "id": "40b36a94-7c9b-4d9d-9932-087f9f4a42a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ca7883b2-e161-498b-a496-15cc2f7289a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac83cdf0-4e4d-40c7-a390-436107566641",
        "cursor": {
          "ref": "93bf56d3-6745-4215-9ce8-a81d77486a26",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "053f2d5f-c560-4ea8-bca6-0de5d9cc4e34"
        },
        "item": {
          "id": "ac83cdf0-4e4d-40c7-a390-436107566641",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "819681d8-4cd3-41e6-a9ce-2315a5629aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f0e7b2-161b-4f66-8f06-07ebdc67e79c",
        "cursor": {
          "ref": "1bf25c8d-59b1-4e9a-af70-1db8fcb5048d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8c50f30-a476-49ee-96f6-3c860cdd4dfa"
        },
        "item": {
          "id": "e4f0e7b2-161b-4f66-8f06-07ebdc67e79c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4abae240-4aef-4d28-bf16-c5004b7281ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b58be5-c0eb-4557-872f-0e86c09dfcd9",
        "cursor": {
          "ref": "e069c020-6d59-4b76-ad03-34cf8ff72ade",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9620e3ad-9328-4d26-b8c0-5cb5d5962cf6"
        },
        "item": {
          "id": "14b58be5-c0eb-4557-872f-0e86c09dfcd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "62ce035c-22d4-4587-a932-0efa877c31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f127c9-3117-4a8e-8c13-3414b0173b3d",
        "cursor": {
          "ref": "3ff7bf8a-0bbd-4382-98a8-26af0fe492d2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e861b48-8317-4e0c-bf02-8b5c05cd4d5e"
        },
        "item": {
          "id": "56f127c9-3117-4a8e-8c13-3414b0173b3d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9c88d0ba-fcb3-46d2-b7e7-d345856275a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e551f-ab5d-4d80-9cdd-70db0ab59f69",
        "cursor": {
          "ref": "a0aa6748-3c04-4a6b-b6f3-abd8e7653892",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "90c1d4b0-e620-47dc-94f5-139b67bee932"
        },
        "item": {
          "id": "e59e551f-ab5d-4d80-9cdd-70db0ab59f69",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8b048aa1-cd87-40a3-a0c5-c2928ee57b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd1b1c3-a774-454c-9b58-fa7f69c8db5a",
        "cursor": {
          "ref": "ac60768e-d416-4bcc-a658-e1e81c787b94",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9bc99ee2-c20e-4a7f-a7fa-d1d688bfde81"
        },
        "item": {
          "id": "0dd1b1c3-a774-454c-9b58-fa7f69c8db5a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6f7fc8bd-d481-4b50-95e6-ec8f6cc392d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467e571-ebb4-4903-a53f-c19911b77650",
        "cursor": {
          "ref": "4789a7fd-b22d-454b-9330-360dbf86ec12",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f4c1bc24-54b4-46bf-a213-474a1cc8dd7c"
        },
        "item": {
          "id": "7467e571-ebb4-4903-a53f-c19911b77650",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eff0c363-6e54-481b-9c2a-569c54c12406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f328fcb-8a76-4231-9fa9-ddb58df1f420",
        "cursor": {
          "ref": "4aa970e2-87d6-4613-931b-8fec0e7ed16a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04963046-a32c-4867-b94f-b41596aca968"
        },
        "item": {
          "id": "9f328fcb-8a76-4231-9fa9-ddb58df1f420",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eca7bc05-8047-4902-81bc-d60d5c54c075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df26404d-6a21-46df-b5ec-e68760a9a210",
        "cursor": {
          "ref": "47b5ef15-df3e-4618-b01c-c27c29e621a5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d175b3fa-8056-43be-aaed-36d8520b66a6"
        },
        "item": {
          "id": "df26404d-6a21-46df-b5ec-e68760a9a210",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "119d441a-ed21-4ade-be97-4b10e0978366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cb55fd-3be2-4b0c-938f-0bd376e7c3a0",
        "cursor": {
          "ref": "d3a56dd5-85c4-4fda-9c41-41ce2a82ae12",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e12b2f5-af13-4181-a48c-ebf5688c5137"
        },
        "item": {
          "id": "26cb55fd-3be2-4b0c-938f-0bd376e7c3a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0f1705fe-ae55-428e-b4ba-557e59ec6854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb58345-643c-449f-849d-2dd69d2a4a4f",
        "cursor": {
          "ref": "f22cef45-f010-4110-b49c-2e9e932fcd6a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "160f6d76-7ff2-42b8-9768-e04fa252a14f"
        },
        "item": {
          "id": "0bb58345-643c-449f-849d-2dd69d2a4a4f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a0842d87-67e2-4d16-b41a-00bc2aced27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358bb616-e527-4412-9194-d9f61c8338f6",
        "cursor": {
          "ref": "472dcff6-fe88-4d05-8dfd-df5ec77da0d3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f7a44adb-8eac-49dc-92b2-82c0ab58c0e5"
        },
        "item": {
          "id": "358bb616-e527-4412-9194-d9f61c8338f6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "36b56b47-4a95-4ac0-83b8-28caefc958b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb679c8-322b-4737-aff3-e2cc68b70146",
        "cursor": {
          "ref": "4d9b91f6-4c02-4584-a5fc-931dc8251047",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93fdf990-b983-4dc3-b33e-5b14ee2741d8"
        },
        "item": {
          "id": "bbb679c8-322b-4737-aff3-e2cc68b70146",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29c2d911-4154-472a-9922-f279cd34ace3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c251a03-9d1d-408a-9464-85f1ba93219e",
        "cursor": {
          "ref": "21e6faaf-9473-4606-a7e9-5a1eaa5ce61a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a0137969-9454-4baa-a56c-c93047cfb66d"
        },
        "item": {
          "id": "8c251a03-9d1d-408a-9464-85f1ba93219e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ac25c398-95df-403a-8147-2d29626a3f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fddf991-5a54-4b17-99bc-f5bb5f751de9",
        "cursor": {
          "ref": "6ded8458-03e4-479e-858c-039760361407",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f9414c10-5f1a-4ee3-9d8f-a0bacf710145"
        },
        "item": {
          "id": "7fddf991-5a54-4b17-99bc-f5bb5f751de9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b5bac52c-fcda-4bbf-88b5-1c470577cf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1bd03a-4e5d-4274-a056-3bce6edd2214",
        "cursor": {
          "ref": "fc0a817e-a1a4-4afa-82b7-63dc0cb456e4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "04f22071-dd0e-42e3-a17e-750904273950"
        },
        "item": {
          "id": "df1bd03a-4e5d-4274-a056-3bce6edd2214",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f741834e-6c77-4e85-a332-74a3f037f708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61041d8f-5a04-4f76-a97a-057f368036c1",
        "cursor": {
          "ref": "123d9c58-e475-40c5-8cbb-7a16e6806348",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bcc33e78-e66d-420b-ae66-6e42007bc36a"
        },
        "item": {
          "id": "61041d8f-5a04-4f76-a97a-057f368036c1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "13fad47c-5bc7-4e83-8a66-0737bbd454d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740802b7-0502-4d26-9f74-97d4f5b6cc8c",
        "cursor": {
          "ref": "216eff63-2055-45e1-9ded-13d839590f39",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6b69c789-e2fc-43d7-a7b8-59fb87c88f04"
        },
        "item": {
          "id": "740802b7-0502-4d26-9f74-97d4f5b6cc8c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "31cd18a3-55b8-4db3-a60d-cf86fcfa2508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c81d487-a91c-4723-bb14-b82758758a28",
        "cursor": {
          "ref": "3a567476-bdaa-4e84-83cf-be7d9b298e17",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "640795c4-8502-4d9a-a9e2-936c8282ac73"
        },
        "item": {
          "id": "7c81d487-a91c-4723-bb14-b82758758a28",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c0ae91f5-fce7-4844-aab2-a0b910bd7b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a9c8e8-877b-44fc-8ebc-d47b13f49ecf",
        "cursor": {
          "ref": "f4a410b6-cfcb-43a3-99db-5c6f5febcc55",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2543fa3a-1923-4f6e-af48-75e771128822"
        },
        "item": {
          "id": "e4a9c8e8-877b-44fc-8ebc-d47b13f49ecf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aae653b9-70f6-4781-9e84-4b82895381fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd1b588-f3d7-4457-8c5a-d4d58668d715",
        "cursor": {
          "ref": "dd8a39e0-6a7d-4baa-bdce-7eea26049481",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82f9cc79-8f34-478d-a720-57e4651efc1a"
        },
        "item": {
          "id": "4bd1b588-f3d7-4457-8c5a-d4d58668d715",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7e3a7b4-6ee8-4273-8133-2a28d640a405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153a906-b3f7-48d0-92c9-4250e2888c2c",
        "cursor": {
          "ref": "0e469b40-376e-48ca-b8a7-5f5c94b1cc4a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "61501481-cddd-4b44-b3e7-650d68919c55"
        },
        "item": {
          "id": "2153a906-b3f7-48d0-92c9-4250e2888c2c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1086d381-3b26-4862-aca7-526ecc7f3fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a8e1e8-1be4-477e-9b7b-03d0f34a2a24",
        "cursor": {
          "ref": "894798aa-796e-4c2d-a99c-254e1afe363b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c202b20f-40dc-451f-8666-0eb0fe714fa7"
        },
        "item": {
          "id": "38a8e1e8-1be4-477e-9b7b-03d0f34a2a24",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ca3bd930-bf10-4351-91a3-2a8faaf9b5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5bcbb-5f4b-4c9c-ae93-969a7a08185b",
        "cursor": {
          "ref": "8bb735b2-e2ce-4a28-947a-63eaa7d7fc1b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b4709c27-cb9b-4509-94ad-5a85ab88fe8d"
        },
        "item": {
          "id": "b2b5bcbb-5f4b-4c9c-ae93-969a7a08185b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4123e4f6-5ad9-49e3-8ca7-22a9faeeebb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c96253c-a3ea-42da-b47b-4ceeadeb41ec",
        "cursor": {
          "ref": "4e8154b5-3a58-4bb0-979a-6ad50b79c482",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "369a1ed6-27b2-4e33-9df0-4322e3054cb8"
        },
        "item": {
          "id": "9c96253c-a3ea-42da-b47b-4ceeadeb41ec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7e1ce3ae-effe-4d7b-90ba-f884ab2e75e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64501bb6-3bf8-4421-8469-5bc35aefa169",
        "cursor": {
          "ref": "0ddba1a8-f231-4e3b-a5c7-56c2db3342eb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3194527b-853e-43d5-a1b5-29a028a5c7f2"
        },
        "item": {
          "id": "64501bb6-3bf8-4421-8469-5bc35aefa169",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f2f57490-1aa5-4235-8ece-4c35ccae9fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd659905-dc40-49ba-9ea9-5d56b7317e7e",
        "cursor": {
          "ref": "dc822cb8-a8c1-4c38-b120-7e6d6c301e07",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a57cd42-4237-4a0e-959c-be4cbc3fec47"
        },
        "item": {
          "id": "fd659905-dc40-49ba-9ea9-5d56b7317e7e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c184caec-2625-4ef0-b724-2800f7eb2f72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a674bbed-1825-4990-802a-2d326620c453",
        "cursor": {
          "ref": "6da6b937-c4fe-46ba-85a7-835146a679bc",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "659648e1-6519-42c4-877b-df920daea694"
        },
        "item": {
          "id": "a674bbed-1825-4990-802a-2d326620c453",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "94b6ebd3-c503-4ad5-93e3-d00360168008",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1cd0c8-c84c-4ee3-8ff2-13a66eaa9f3e",
        "cursor": {
          "ref": "b6f6751f-cb1f-4bc9-a387-129b187e0a7a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "67b7702e-f74c-436d-ae14-d92690042bc7"
        },
        "item": {
          "id": "ba1cd0c8-c84c-4ee3-8ff2-13a66eaa9f3e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "782a1f32-bf4e-4f75-80fb-5af680e25e43",
          "status": "OK",
          "code": 200,
          "responseTime": 7200,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88865cf7-2bb9-463f-a39b-a1d73813e0a6",
        "cursor": {
          "ref": "a9d42542-5539-46c3-a79a-4cdba420248e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "128df652-94d7-4788-bf3a-f75aa7f82a7d"
        },
        "item": {
          "id": "88865cf7-2bb9-463f-a39b-a1d73813e0a6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8166d758-60bf-41d8-a95d-5cad0f6b22fd",
          "status": "OK",
          "code": 200,
          "responseTime": 6653,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fe604a-419d-426d-8da5-fb0499ae64be",
        "cursor": {
          "ref": "4edbaa0d-33fb-4935-930e-216212c321a5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96f28d25-b8b8-4d48-9d59-c9a8913a291c"
        },
        "item": {
          "id": "d1fe604a-419d-426d-8da5-fb0499ae64be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7f57870-ec53-47bc-ab81-d6c4e648a56a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fe604a-419d-426d-8da5-fb0499ae64be",
        "cursor": {
          "ref": "4edbaa0d-33fb-4935-930e-216212c321a5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96f28d25-b8b8-4d48-9d59-c9a8913a291c"
        },
        "item": {
          "id": "d1fe604a-419d-426d-8da5-fb0499ae64be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7f57870-ec53-47bc-ab81-d6c4e648a56a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5038e1d3-b293-4e97-a532-c5c8970698f6",
        "cursor": {
          "ref": "7121e965-ee8c-4d25-9085-08bc4b422807",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3ad1eccb-d7db-473d-a448-1713ad8b863b"
        },
        "item": {
          "id": "5038e1d3-b293-4e97-a532-c5c8970698f6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9af96b93-ac45-4c7b-bd6c-c91bbcfd2aea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09614b0b-fb80-4e1d-a719-566fb403a9bf",
        "cursor": {
          "ref": "654b98a6-ea5c-4d95-8803-6f42b42be23f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b0099ff-b163-4176-90b5-395a6fbfdb8b"
        },
        "item": {
          "id": "09614b0b-fb80-4e1d-a719-566fb403a9bf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9a46616e-c6c7-4297-aa6f-019eddb585ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}