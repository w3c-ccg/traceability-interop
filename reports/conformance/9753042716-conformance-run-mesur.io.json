{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "689e861c-61e0-4656-bbdf-a0ad0ab68442",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4493c13d-ffce-42b8-a2b1-bfd60174ba7a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a038920e-7369-49fa-82cf-cff3ff391249",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b86f5c50-9c3f-4da4-8c6f-4bc7355ff039"
                }
              }
            ]
          },
          {
            "id": "7b2ac748-84f5-49b4-aafc-321b9e63025b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b665ddde-73bf-4c2b-8bf3-7b7df0759119",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "067694ea-8a58-42b0-ad98-a731deae0f0a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "83f94aca-eb6c-49c2-81b6-2649cec778dd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "858fed5f-fd96-47dd-8d4a-178fc49c5445",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4aacda25-5980-40b4-9f5c-704c3fbac484",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc4d73bb-ab43-4af6-b2e8-19b2c318b7f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58ac853d-d2fc-4dda-b9c9-b814582c1130"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79b8e4c6-95dd-4f0e-9b58-0d4d4daa35af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ab6ecd2-f4a8-434b-9c4a-7a4c4917ca3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5d4779d-13fe-4a3e-a7b5-f594444bbf72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08c83f5c-b9c5-46de-9678-590deeab9341"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b9968e3-cd6e-4cc0-9aed-85185c38b7a1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a119ebd3-68b9-4662-a01d-07cba5110777"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "607e0b82-4ed2-4825-bc8d-266053d2405a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3994c8b1-93d5-4f1c-8278-db6f9c28e20d"
            }
          }
        ]
      },
      {
        "id": "d62a9ada-c815-4ca8-ae0a-787244f90ef5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2ad1a561-be4a-491d-8da7-0e12a8d7c66d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5325734d-5b6a-471a-b91c-10edf3859dd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81e65aed-af54-475d-b3c8-190ed67be237",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249dd645-0cec-406b-8bc4-381e754cbfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06a840f1-c785-4249-b583-00d23fda638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec2b6a1-8650-47c4-b67d-78c4605fd8a6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c35880a-b58f-4e39-925b-20103242ad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "345d40b4-5321-4140-aca2-b3669f7931d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bc5e40-4aa0-4678-9d74-8c2e6805cad2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc229bd-451b-4fbe-afdf-e09e89701934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89855a25-05ad-4efc-a09b-9466529af611"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc79176e-2231-4bcf-8fdc-564fe8a63215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1524caf7-169f-480f-bef0-7f3aece51160",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04738b62-7750-44b5-aa95-1c482ed51836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f5c4672-eb10-4499-8de9-b2746b7d21ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0bcdbd-e252-44ee-bb9d-7a397ccae998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41d7c9d-25a5-476d-b779-9c64aa33b7ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f773765-5b06-439f-8664-bc3937e08135",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbfd4fd9-5189-4ada-bd3a-98723833c5e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51145fe6-ae76-48af-a661-dd6f07be575f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e22e296c-eac5-4a9a-8394-c11d4a640fd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a293b167-06ca-4191-91d6-37ebb4764122",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe9126ff-1c42-4da7-8624-36ef037a86db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc67bc05-4b33-46ae-bb76-62448a65880a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22c1ea53-ca60-4943-9f9d-ec29c23ed9ec"
            }
          }
        ]
      },
      {
        "id": "f545c4f0-f5b8-4933-9f48-7cf4bcc3473e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "728495fd-884a-4bfe-a42a-d30986f37950",
            "name": "Negative Testing",
            "item": [
              {
                "id": "491d062e-2aae-457d-8db6-ad026cfe1601",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0e630629-94bd-4463-86c0-97e5cdedbc81",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086e18d2-9ace-436b-974a-c8183c1c4a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34af672a-dd90-419c-ba31-9b280f241929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcb21e7-2f6a-4291-b781-2defd9fd2fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db74f5f-67c6-46ae-ac64-469c1a111ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cf5e04-1a9c-4ccd-bd2e-92e1f715b90a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a62d6-1b9d-4213-ba1a-023a831f50e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c19603-c261-4a33-b3de-315a732c3e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0d5837-4c2a-494c-9b5a-aaeaca7426df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5838917d-acb5-45a7-ba20-57941d2b1e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a145791b-ecec-420e-8407-b68e1429397b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a90abe-3161-4ed4-b3ad-0008e4441a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecc201a-d610-4bfe-b933-8917189412b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc2490a-10dd-44a5-89d5-2b3c4478a2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c2077d0-df7a-4c06-a493-221d8892add1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e29f84-16d5-4963-99f7-6b7267d27efe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28256d-5a24-4d8e-9743-ba69b0a5ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203a5f39-b0a7-4d81-b774-5e8185356399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0456f20e-5015-43a4-b91d-fa6b9d90a845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "305ae71a-6584-4ba1-8d43-434472f865ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd2dded-a08f-4707-8767-4680f1090f2c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e83910-4e4c-48f4-bdcd-1f87d8c05328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096e408e-e327-4058-ae3b-35c19ea59987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa617b3d-b0a7-4c6d-b0ca-53df98feb7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "367147eb-aa91-49ea-9a9d-d42f9add0052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260c128-7245-4ee5-8987-0bdfab9ac360",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b61ea1-3f77-4382-981f-0af893c4ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5422ac6-3064-4c15-b2c2-48903c6131b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025975cf-ffad-4f17-925a-dfdbdda42a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188513a1-067a-4077-8817-42ca247baa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20893b5f-5ea9-4b3f-be5e-a9b62213dc7e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c84997-c237-47b7-b7fa-d0fbe108f155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0ea536-ae45-40a5-8c13-138ccdf744b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b2e1dd-9c4f-4775-975c-4daa273c7207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acf7e4e0-78e1-4c23-9dee-78d0b956d832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af28d2fb-f4df-4a6e-9272-530556a6ac0f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7404f8bb-a6ab-4c28-b333-e2ea1b43664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb7066f-7706-452b-9130-aba23a006796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413af17b-2760-43e2-a7a8-7664584d4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af906a97-acf5-4732-9347-d07205a65586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1b3ca7-8a60-4df5-aa87-1ade69284ba2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f78bb7-f24c-4c69-905a-8893ba913b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf56da0-1377-41b2-8f83-2470f43d21f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9332f02-649f-43e0-9034-1f8b98bdd7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f49d5437-1557-49c6-9212-9b739fc3a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c3f1d9-19f5-43b0-a9f0-0ed01b71d022",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a4b770-aeaf-4591-bde3-738bfbae15a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b2cdfd-174f-417c-ae4c-5ba7e6944560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d32d76f-7191-47ab-b155-f07c7c624696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a99f3341-91a7-4d4c-acd1-7ed0e7453b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87097e4f-f07f-49c2-b140-0001944b4a4d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873ea204-5f04-4516-9d13-75faf5caeedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c428170a-1862-47c0-a78b-b4b1fd0694e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c53a906-5cf9-43d7-b8f4-18de2966257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cdd8253-2426-471c-9055-65deadd3722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc70d4d-ce2d-4eac-916d-298b0864f763",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922a91d0-6373-4fcd-a4c5-3d2897fc9e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd762c2-a87d-49a2-a7f9-b843a0196f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94330fe1-8895-4731-87a1-843458243d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f58b285-b3e6-43e2-b924-27635f8c16fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884c857e-cd0e-473c-aa6e-47e55d3dbbf5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdbc57b-c8ea-41de-b132-1144bf3a0b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb9d63-bd39-40fe-84a5-cb5f5d1da970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52361171-dc68-413c-aa49-35f22c804a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bcfdf15-c6a6-424c-bc97-826f8ad0248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fef0fd-eba6-4a91-b342-bfdcb2f0c2be",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7ddd9-9e4b-4faf-9057-81f33e7fee74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a33dbcf-436a-48fc-a9ab-ef92641b7dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a3d64-ec89-4f68-a0a4-7a6c15b0ec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4826adb-9e8f-487b-a847-480e7af63831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a92156-0bb6-4fed-9b3d-e57df4c5c19c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733031d7-70bf-4349-8902-f84265673f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd812b41-3d8e-4e75-b228-4dbae1a80499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c10aa-e244-420e-8541-5dfc997d9597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c3e18f4-b4f2-4f66-9f3c-723053e68025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6380df06-c1f8-4ebb-ab3e-ae37c67699e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18728ae7-2a29-4ea1-ab21-752b474e7f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85049c5a-2ed7-4ee4-845a-2f4afd8b8e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883ea3e-e463-4f39-823e-65d4a918201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3496dc4b-5f34-45bc-8adc-890d5791d2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707ba33a-04f3-4400-9e9b-344b164a4a2b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45643411-2f57-40f4-beec-27ae2f39c458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11793be5-136a-48af-b247-11eb0031ee62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5729fc30-c952-4766-aac0-a33a3253e946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773d243d-79f6-45b4-b3b9-526513a4ccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b683d-60c1-46fb-a317-167ac8420870",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d07fda-0065-4dd4-be2e-33762f8e6222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766a3051-8806-4612-9efd-1308fe40004c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc54f03-e1bc-4e38-8135-9b212444a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3856ac5-835c-4c26-a6af-c064a55e8851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329ddbe-8cd7-47bd-83a7-a3be3d66d588",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8536827e-3464-4f55-a279-72c7f5dfcf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12d437e-2c58-4728-996f-c0dcc6e1c02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea0c062-4b39-4bd6-882f-ddd1d4fc4218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0c63db-2613-4173-b1a9-d17a265d2b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d069e2-bcaf-44a6-8187-260e781d6358",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4178d8-70c7-45b9-9ffe-ca1283a959bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75b592f-1560-411e-8ad4-b069895ac3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0765b-2985-498a-9dbb-0cee206f8dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9904b50-bd60-4e94-975e-4aee0ca317ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1412d0c3-8925-4152-bbac-b918a8cd0469",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be76ae79-560c-455a-8553-8080358ea29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0013db-d299-48f7-bba3-1557d0c1e861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd45d90-61c5-4254-b3a2-f06ef69ec920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea95b6ab-a66d-4d74-8711-64f634bacdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2a7317-ac16-417b-a784-88c03b32a316",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59614f8-17ab-4da0-880a-9ed6ada58904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da78edc-8660-43f0-8f33-fd92eee729e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea08e3e-403d-49ea-9762-81596421d947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "879410e3-9f28-4eec-83aa-e28545d87634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09757b46-0059-4b7e-b930-ec3abf5628e1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7244b14-f3bc-44ba-9510-5924c290d777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4f793f-5439-4474-b3e7-603b9c2990a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2b330-0bc6-4d9e-84a4-4c3c11c68776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c25c986-162c-47c5-afc0-ccd5bde93f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcc749d-4fea-4fc3-9358-71371eecdeee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bad9e6-4cbf-4fdb-b967-0f9115804e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4146fbb4-08ab-4e41-a0c0-be67ccfdd56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a75fe3-6e92-4b47-87a4-50b0027af1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcc0565-3c29-47d8-b59a-2a0060534aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43c01d4-934c-4ecf-89bf-273e700ac377",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9854cb5c-7ac2-42b1-8b9a-bd9479d2eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c6689-f509-4313-ad07-cb7178fb71c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387a7528-c41c-44a9-9d9b-b1d18d9e6566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad085f8-20ba-46fa-a4d0-3fe7664420e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed097410-bb94-4a62-8368-b05ee9f67d0d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed44dc-b398-4394-911b-f439f07cc8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e085fc8-52da-4d7e-a971-9676fecb58cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e32fc5-1919-4154-8b44-63ec3e6af2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40635b4-ac88-444e-86c9-658f5c46a53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d14873-1c66-4495-8ae2-eb97b9ccabc6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e6271d-ddb3-4f13-9a3d-b5b327d0bd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad27159f-ba8d-4693-b5af-a1d7ac1f95d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8312984-22d8-4bce-bfe4-37599ab3d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41722fb-05e0-46df-b434-739d348e88e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152f8518-ed3a-4afb-b3fc-d82c08e5c450",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1570c68-2af0-4c8e-bf86-7cb4d127292f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c28e56-4ccb-40f8-8a6f-a93d4223d336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c610cbc-d118-41f0-95b8-460fce37b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fecba61d-c42f-4768-9fa0-4fa638775d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d8b4f1-c059-4918-9354-f3537a56ab84",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c035fd-1049-475b-b51b-5a20757ea38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22631373-92ec-4af8-864d-ea1a91e5a16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee7560c-196a-44a2-9093-925c858835ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc98f833-de4d-4f87-aeb8-1e7349defbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc0f075-5225-4a8b-8ddc-0eb60cc0d2f9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc263c-3864-47bd-9c45-9d5642975f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6583fa12-637a-46a2-ac05-8b77cc858289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b28d55-2c97-4225-a8f4-53aea727b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7e1f2a-b30f-4332-a446-8584015443a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac1564-f371-473a-bf12-307d54a917b6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a927cda-2351-45e4-afb9-dab2545794eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f748b2-8393-4bff-a079-e66be33f5c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d36d7a-f83e-47cb-8b5c-d16e46dfad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb20104-f03e-4b06-8a36-5e6d9c72e875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331ebac-94a3-43ed-825f-124a897b3b17",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0129665c-17b5-44e6-a111-2645289066c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4506303a-9437-4885-8d37-578b8b5ae6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a190b80-98d9-4a97-bb42-35b8183fa3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f7cfb1-2a6e-4011-8767-e5c8c0908fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f219954-272a-4970-82de-49455179e616",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab84505-c017-40ef-afbe-c1c9a8dfac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaeb7f0-4a60-4e8f-867f-a35e726d11a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e560dc21-a727-4765-a458-99c52139ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e744c06-e8a3-4942-8aba-f86ee9a8ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049795a1-577f-43b2-8a38-0f7326c71e32",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d72e564-94d4-49c7-945c-0277e59b178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d6a370-7338-4fc2-9159-31e03f875929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff674e6a-942d-4f9a-a560-c94426dc14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9875589-6d4d-4a2d-bbef-3db6d0adb2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d5bc3a-2fef-4a05-b9c1-1c84579fc58c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7340d9-7142-4579-9806-cee0c31d511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98b2908-4d77-4b3a-89cb-433bc368a0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355e66c0-29cb-4a88-a75d-8a51ce704d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0011c4ce-ec7d-47d6-8b37-4bed4073aa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b4815-3567-45c3-9c3e-c8998864e013",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7783d52e-d7ac-4fc6-b38e-75ab70bfb8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "295668de-e952-40d7-bdf4-e5839ce3c614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dff8e39-c579-4f1e-9cf2-07c673058cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91ff933b-143a-4af0-896a-406f616007e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3079d1be-ba14-4a1e-ae1c-73c7601ec5a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96898dbb-00e8-44db-9306-95d783d0e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdff36c-3c1f-42ea-b1ea-fa5ee1d7f529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41da3352-3449-4bb7-b331-b986f5765587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a182a739-cefe-40de-a4e6-c0f7de6f6a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65e1fbf-6adc-4013-a898-44c896ec3237",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f6b22-4020-412d-b8ce-82d63a6e0004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ebb4b3-3ac8-49bc-9d7d-020044e410c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d452da2-7d4e-4eda-b368-56be55d48c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b725cd-3c4c-4bd1-8142-48c2c7c375b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d50c6e-c772-478e-ba48-dfc3f2bc6d64",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4d9cef-70a5-41ed-a8c6-781c01ba7e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8502bf25-da69-48a1-9bbd-80eb1f229ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187d1d3a-029d-4cf0-9db0-46cf73fdd3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b27f7c3-ca1f-4fda-a9f7-e1880478b43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fbbcb9-c800-4b78-9c21-1a169e04df6e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c176bd21-c518-45ee-9cb0-1604f4ed9f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293af4df-1873-4743-bc2a-b6dc88e7cb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26782416-0d19-4c9b-9d35-47b716ee291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06646c06-a54c-4f44-a5fc-0f1b8a391c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8077125-31d9-43a1-8361-75422d4b206e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb81e2f-4148-48e3-aa42-0d4a3dc327f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4845ff-e8af-4baf-96f9-8059310e0ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1889ae5c-38de-45b6-9698-b4fb99740763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9b382b-95eb-4ca3-bad5-c1588c67ffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5f91d7-faa8-42cc-8365-749631175ce9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2b0969-4b72-4ab5-84b3-0d61b5ef518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2367a2c2-c1e0-48ee-876f-6ed39262c391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c77378-fda2-4cc1-b35a-d23190317643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d26d5e7d-4553-4a89-89b8-ac68c21d2bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4aab54-46cc-4001-aeec-220c7b41f89c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdb272b-1fed-48bf-82e8-54c82efd63c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1b7f52-8498-4798-a595-9d24ffd0fe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ed9dff-5b27-4f54-b39a-0f4e97c27d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a012210a-0a96-4e6f-9aef-8f855ddcb779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc30f15-7528-4910-a0b7-84b4ad65116d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bc5c1d-c327-44bd-ba86-1b48645dd1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d34b62-2a05-4c41-b62a-5814add92166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f6c9db-5f31-419b-a009-7d205604bd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48972421-175d-4829-aad5-a7162dcc6283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc590c4-0d53-49d1-9f1b-ed0918d17741",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a643ec-a5cd-45ed-8957-6abb21690949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81c2821-61fb-4d40-ad24-287b8a79b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa6f89-40da-4b30-8677-4172906dac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f02434-e140-41bd-bf00-8da9163b9792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a059979-38e3-4a68-a81c-a0ad57ca04d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9572d3a-b7d7-4878-9a60-39b250b1b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2f3e4b-580a-4796-8b51-8a044d18c02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72be2971-2c82-4ba7-a0f9-ce7948156ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd2778d-51cd-4091-82ca-ab543cbfcd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502d02de-d545-4c31-b39a-a07124067d1d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9f41df-d506-4edc-987e-298fc954e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe4ef11-33b3-46e3-b4d3-0bd5a7f5bc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf923066-3b3d-46f1-a4ec-2b59bb56e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "668ca3d7-f197-46a6-be04-29a2b30f6452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7d8e74-bfc2-40db-b985-ebd732a7318a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efb8cd-10de-438e-b581-63f56ca33f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d11baac-dcd7-4665-9b93-a2ce85513c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c94b7eb-5202-4e5d-b6bf-a2ed2480afea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72757d04-9399-4102-9082-d8e2b4314dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926fa57b-83df-43e4-b5fc-8f07123c9346",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ac3832-1463-4dc1-b44a-107d210f079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bfbdbb-fecd-4a98-9de3-3fe2bba5a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02389005-9c5a-4bca-8ec5-f4e18b7c0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54dbc188-911c-4a7d-9999-00dcb1d845dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e0a8f3-c96b-4510-ae70-dd1f3a5d6611",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d79502-eb9d-4d86-abc0-473357214196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265b748c-512e-438a-a42a-a93db6eff22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db038251-a971-476a-ab3b-1b18cb187bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb17477-b154-4600-aa64-17b8e2d527e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f4e802-b42c-4a40-8d9f-39ed01739c6c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2877b39d-c4de-45cb-bd85-482461c983dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ad4de3-ca1b-4e51-8173-33abecb1890e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbea1f44-3080-4c93-ad98-772b1b05c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf079a2-0cf2-4a30-82da-adab552e0adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4318706b-ee82-498c-a50c-c566434acf12",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1511e701-970f-4554-9cf2-3d9c6e2dba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa0bf5e-830e-41fa-8b03-a8ecfc2fd24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72ff4db-ed55-46f7-b01b-4006df7bdb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bef0716-8e28-4a55-bcfc-4dc81639c18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d1b9e5-9ac7-47be-9b82-c37da2dd1daa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c527b50e-963d-4b1e-a0f6-962bea80ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7595014-2ceb-4aea-b222-317e3e6c7777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705ffa0-4866-4441-b218-6268b91953a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb30b0eb-b333-434d-b2d9-3f814ad0c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb4c3d0-d3d5-45af-9fc4-134155fe869c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2cbc60-801a-4d90-bc63-009490e9b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef299ff-1f77-491b-baac-87a83e96b838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbd1cfc-7403-4cf9-a71f-504d8183a27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae076510-138a-4c80-a271-e02fb069563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa59fc7-1071-46ab-8dfb-b225e11c03e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4948f-4aa8-4cd3-8215-f9cebff2e603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1948283-5ba0-48ae-aad0-f65ce09e7823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3021215-d49e-4bde-a486-63f268b6f322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1b3569-2e74-4330-bd91-39491541af5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b6a7d6-6c86-4729-ac86-55bb6bbfe776",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fca98a-a1d2-4fd8-ac37-05c7cbdcc8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e68b38d-4041-44cd-8d57-bb8806954f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb8a130-cd2b-4128-80e5-29f774b76175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "38619371-1add-4a06-8c75-25e88a890f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614d0b43-3575-46e8-80e4-faeb5668dcac",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c397b7-aad1-4ea2-a1a0-0c689ec91b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ad3a5-bdef-4746-a4df-01259b6740ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6701cf1-25c6-43e0-89b5-74161895e1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b16f521-2499-431c-9623-4ee18bed79f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48cd4f0-2c1d-4ff9-9076-0a917b40762b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b93d7ab-464c-4736-858d-74d737ad6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6c8454-a193-45a5-a5fc-0523aa0242a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ef389d-5a08-4587-94a3-6d3ac54b492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e24b1b6-40f9-4bcf-a05b-392be3874eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7da6d2-b208-4e70-8c11-17867347ac67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182248d2-06a1-4b36-b60f-28782dc639d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bcd667-746f-4ac2-97ea-f206e3c7339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f98cfa3-d894-47a6-aa04-cb4d6e3d1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32405c75-ee78-4566-b06a-cf68f83f4590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c96e1b-332e-47a2-be78-74214e106c8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ee8cd-47e1-4a82-90e1-e6dd991bcd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce153b95-2021-4dbf-9b12-70064f109b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da68fdbe-bebf-4476-89bd-f1b82b2e64ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c254540e-02d7-4546-a2f9-2af678fa27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e49663-04ba-422e-ab1e-6708d08cce51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2a144-a2cf-4e97-9c66-d496ca09dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7069e4-bdee-4cd6-ba13-f6ee132ecb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafdcc66-9e0e-4fd2-a93c-db88dbe4416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "695a5e8f-6584-47a8-9aab-a14452f60a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070778bc-44bd-4a4e-991d-0521a26cfa52",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7efe5e-c5e9-4deb-9911-e2879a23327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7866049-e8a5-4997-bf28-498636c7e1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb5a40-db6e-490e-b03e-d9e341d05be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a7b775-9cf1-4935-a34b-a9c194cfb618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02af876-7f78-4100-87c0-aee91ffcbbbc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af24563-3c4d-4e99-8c01-1b51b9590443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd89260-d4b1-4d53-8795-d94dacc8c92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470a133-b81f-47f5-a520-c20ea74f7d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7db5c52b-711d-42a1-83d8-e3f9fdf3dfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a610cd-af88-4a1f-92c0-5e376810adf7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6f7401-5e23-4249-b4a1-353425d78413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183c4691-26b6-4301-901a-e3b33e893bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a234d4-c417-49f1-a1c5-e33ef7be9022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c553fb88-8acb-4031-a1ca-0af333b5a0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d1c4cf-cff7-454e-b319-b0f5bcc45fa5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ff771d-63dd-4f22-b58b-2ba31cdd400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a41dc33-2d7e-42f8-a0c1-7b148f27df71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcce266-7caa-4ec5-b0ee-629204fb692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb1659-bec0-432f-bda8-a878b559da30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7b9bb-1c22-434e-81b1-6485d9ca4d58",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520d220f-58c9-498a-b5d4-5a9c36d4cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa4447e-e53b-4a88-8fc5-f0fff67584b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f01799-1caa-4928-b6d0-9c9ad6225614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee21487-33e9-4904-b4ee-ee3ee60b37c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55192a9f-a31e-4820-94a7-3414756059f7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ac826-0402-4dc2-92d1-09284119dcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc83688-4140-41ef-b612-4b2895b54041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbdc9fd-9c1a-42a1-9512-281d9051e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8177d81c-cab7-4c12-95e9-0abac4f2ede6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490db412-00d1-4f14-86f6-646be0cf69b1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2febbda3-4576-4740-9240-c2f2b3554b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf9264c-56d2-4de9-9304-a63a4b4a28cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588a775e-537a-4e39-ada6-54daaeeb499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a651d4-6a80-4860-aad4-dbdc7c5414f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151f05c7-8658-4378-84df-22f5efd9be65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee99973-5aec-4717-a737-69ce789cf54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6666ee47-8643-4810-818b-7a98c1abe50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca64ab-2b88-43e3-8b8a-8ba231dbec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ec02e4-fd74-4c5a-b576-68c2a1d75d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dbfda4-c241-4ac9-908a-2cfcb99dd1da",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bae91b-5a6b-4916-98bd-94c49d9d8a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5d1b89-c6e1-4fbb-8deb-7d775c0c2b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cad4c99-b8bd-4b70-be20-6e36974bce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1deced21-ff46-44c4-909b-74172e6a3ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd43a4-53e9-467d-8d1f-4c8652f117ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d70bd-aaef-494d-b2a7-bfa323d08711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f8e337-d115-4dc6-a0f4-7ed242c2043c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b154c137-cc2f-4123-a485-3968c3d36538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94937d2c-a61a-46b3-86ea-476b9d1bf92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f728ea6e-2793-4cdd-9bb1-e0ef58bd62b3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b7b22-42a6-4ef0-9d08-6fa8c6a31e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38112ab-9fe6-4084-b111-1d3df26b2562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698909d5-e3bc-4218-9bd1-c0264e401975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b61db200-c3c5-4e80-aa73-0393cfea5d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4d4830-5547-44a6-8a6c-7d2f903dec58",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6d1139-50be-4d6c-8a24-bd5f7220a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d868c8d-b051-49a2-ba4a-ef626359b68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c77e0b-501b-489f-aa0e-1fa488096e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d31c6451-eea2-4e3b-bcc1-fcf0a31b458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3442a0d-c95d-458d-aee8-c59ca107207f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27b7f2-1f40-43e9-840d-eac63db7a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac88a50-abc4-4db2-86ee-81bc6d8f1c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f36a6c9-3d49-41d4-bc4f-ed058416bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c59098bc-be82-4363-9615-1656046e76f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf89c47-e028-4e89-a5b9-30c7e2de9d66",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442e875b-f628-45a0-b54b-41d07414d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8601adcb-e622-4826-88b2-efd244c8deb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1c1b17-778f-4717-9ae0-63a8a3e68f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2fe434-b7b3-4f4f-adf9-6b2785a2ad28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c075b82a-64b3-4145-9059-32847d472d77",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e6e69-e6c1-4de6-83da-9a9ea201aa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babcc56d-e0e8-47b0-8493-0684e42e336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30669edd-8081-4258-92db-83131418498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58c57ea-3c84-4d35-a3e4-2948bdc120fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3ae720-0ff0-4e5d-8160-757e2dd92b40",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d081513-368a-49e3-90d8-fa96f71b5a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dd46b5-a4f8-4f60-a520-8feb10432b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affc64c9-1c56-4c0d-87b6-8b5f6b00a173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2918981-71bd-416d-b732-1fecbe9218d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f44348-7e72-496d-97a9-c3e5e97f0f6c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270c3930-9b1b-44d2-8c1a-b0141426b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385879ad-5b25-4f85-b8d7-a2751a79f5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c52abc-879a-403d-a6dd-2dcb5e384fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b8d8f0-c5e2-4f81-a8c8-dbdbd04d505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd5f13d-9b1e-4f01-b441-bdca0aa4cb2d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b0b273-74c3-423e-8a08-a24c791aed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da90216-1578-48fa-b72e-077712864eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f7579-7a97-41c6-b280-78f0002aa40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42229aaa-6ae8-4737-9823-7ff7a1bcbed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5383744-3334-4015-887a-a4f642e42cac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8ad771-6d87-4ad7-bda6-31836d194278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021d1552-741e-4ab9-9217-4fc3c9214f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e1b83d-9f44-4e0f-be8e-2e2d55352db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2096b2d2-da4b-41ea-94f9-4e0eb4d829f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930d8ae6-64d7-44aa-a839-ffcc4de6301b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aac5475-8c7e-4a5d-a288-9e122da6211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ee7395-f55b-4f13-b82e-a7ae0fb480a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd486590-a63a-416f-817d-8b9525ac23b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e939498d-51e6-4f38-bb4a-cc741aaf3549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42429b0-441f-4e1d-aabb-87031d1d62a3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b8b540-36ff-4e69-96ab-d114d270afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf30c0d6-4760-4476-862f-8e0086361777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9d5539-8404-448a-b9f4-1a3620e47331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ff0da0-8f11-4618-b830-5bb9a6649a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f588462d-e747-4a43-bbe2-f2e4d3b7b7cd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d377347a-9552-43d4-ad13-639ecf641c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82f4460-86dc-43c9-96a0-9d258f90d4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5856c21-9986-4c32-b1e7-7ce03aa735be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3649eb82-0122-49e5-9138-6f6efb5c9aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50240ef-472d-4d6a-b452-16b396063ab7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64659b0a-bcf0-470d-a9ab-99f956cdc07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad15698-93c6-4e31-9a0d-3228f1a0f11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bfb220-e242-4803-999c-ba2817cffb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9928b2ff-eab5-4afd-b8ca-fe368c8f8292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b47761-648d-47cb-b93f-fe17595a1d29",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f94d6-e319-4710-958c-f417d843307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3faa31-2f73-4da8-80b3-7aa3c66ef811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a02c0-2e69-4ad4-8b64-5d0148a83986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05dec7ec-880a-4fe2-8084-eee3b8e80de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c664b-5a0b-4a5e-81d9-abacf97ea028",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27739ee7-2ae9-4018-80ee-0eaf01a53cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18e04e0-74c1-4fbd-a3b0-6720d8cd8643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b3d558-bd81-467d-8456-a6349035f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f078fdf1-f081-4e1f-a6bb-118ed8185e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c9c2a9-ca8d-4b17-b8f5-43736dccf293",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90097b32-966e-4958-b69d-3327c89c7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d010bc-66d8-486c-a372-6b56a92f1d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c6ba84-be43-4ca1-bcc3-18162f43e411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "921ddac2-35f4-42fe-bdc8-ba21035a93a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eaa7bb-c09a-4d9c-95d4-b80eb6faaa25",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7be13fb-bc31-4c84-ba66-356dd9051421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f216e2-4706-49e4-a493-85324d2e240d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a6b8e9-d605-4eb8-8dc1-a1fd0337d2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "579075f3-595b-4cf2-bea5-735e8a179d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2fd0f9-b1d5-4986-a824-03b8b225f5ce",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f371ddaf-034f-499a-a981-3dfd10d1bbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5678f475-4c82-4ff2-bb8f-f8ed9b39ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5060e3e3-16e1-4bad-ac3f-29ca85dd5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05a0ede7-a620-42d4-8b6a-c6485a3ee2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892d933f-dda8-42d7-9540-da305631ea30",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab32d7d-b4ff-413d-80d5-0068267032d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36df4276-1151-44ad-9228-4e42221fa141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6739467-2818-4b49-b6b6-bb4c4d60f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04aad44f-9c2e-4591-b763-4ca3db42f18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aeca43-d316-4792-bd5b-9489b9f5385b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38e35ce-4270-4aa7-8e84-da9ddc275a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84915331-886d-4cdd-a5ea-d23b6ed30fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad23a1e-7b8b-4e4f-8601-15ea512b95e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cdc291-719d-4e12-98ad-a8d3e0499007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7760d15c-b129-4fc9-8553-12a90398ea9b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d572e0-8c25-4c74-a43f-3ae49991c77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8328fbfe-5bdd-4851-b31c-4b66c372bdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffd67da-8672-465d-afae-61d76ee6ae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b7591a-395f-49bc-add3-19a6f6bfeb3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a04008e-8f96-485d-b278-d0fdf6fda3e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6caa62-c3a4-479b-b4fa-b0a22fffe2ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8b82d4-b523-459e-a6f4-79a5a40b7a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fdca164-0ee4-4538-b7ad-7f982585e1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e400050f-169d-4e74-b9fd-0672755191c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a37a382-fdf9-4106-a542-787772fbe2a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d85c0e76-29ca-4ea0-a7ee-df9b9cb0bdc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5025d9f2-af40-45b2-9b14-c72c6ff0667e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff4acafb-816f-4e4b-b653-7dd631091972",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61f4aa05-d09f-490f-be7d-a4b939a8251c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f4f69ab-c2b3-4c62-9efb-f9b6e068d71d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7af56266-76f7-4efb-8f63-5ca9f399afd9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "42c863cf-1ed0-463b-897a-c2a6f6674588",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96071ff3-3f7f-4aa1-95ee-1aad3954d734"
                }
              }
            ]
          },
          {
            "id": "42ee6d9d-84a3-466a-bd46-80d53a0ff206",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0a12727-3770-4965-b162-c8824513ec4c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a8519b2e-c578-4e83-964a-f2e1c3fd3ece",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d34787-1c3e-46b4-ac79-cf91c3958456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c2ed6e48-bd5d-446d-9012-73a557b2fe07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ead4d7-09ea-4f03-89df-5497725c34ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7c395a-231f-4151-bfdb-e221b685daa6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ca4f757-23e5-4df1-9f15-dbd0eb7a65ee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7a69f79-f972-46cc-9e20-a32aafa90b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6875b75f-e5eb-406c-bab6-742979459074"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da7e3a8b-c0ec-46b0-8a03-e2f8eab021d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e8f3080-25f1-4090-a0a2-d61c537c1f65"
                    }
                  }
                ]
              },
              {
                "id": "7ab404b3-cc14-440a-8456-8f87fb6b9e70",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e9c2e66-d4f2-47eb-b8d2-be25c661ae14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85db4ee0-b251-4df2-b48e-20a49873eac2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e5d7ddb-9c42-463d-8d6b-edd764448f1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77149224-258c-4ca5-9b72-87eb63633505"
                    }
                  }
                ]
              },
              {
                "id": "68baeab0-d56e-4059-bee5-9f317961e346",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a443a3-6776-418d-ad46-a65dd03bb150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8859dd7d-9d18-4619-a970-4e265f47689f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbf0cbcf-b8a4-4387-9d72-beddd1d7ee44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e421ccfc-0ac4-4403-a6e4-b5031394a966"
                    }
                  }
                ]
              },
              {
                "id": "6fb1b06a-89d7-4a7b-8ea8-9580360bb5ca",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b1caf27-8159-46d0-a1e2-32faa41bca83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6578a1d8-4d59-4201-9d9d-1bcceed6b4a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aae3c10c-4275-4d32-bc8c-11a9c7cd0e5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "48bca517-72ec-4209-82f0-0eada0fd16a4"
                    }
                  }
                ]
              },
              {
                "id": "cd85a3a9-cbdd-42ee-a5db-9261b8989cea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e48d05b-bb34-4508-94f1-b7f85ff87667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "803012c4-6497-4515-85d5-9a5296194119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c309a78f-30e1-4d5f-bd2a-3e45378cef3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f73d8dd8-aed9-4589-a662-c6a69104eb22"
                    }
                  }
                ]
              },
              {
                "id": "ad41f6f3-0d97-4e86-8ee9-b5552d0edb5d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3bd2342-7357-4bfa-b682-ccf4fbcc9f7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38ea2d61-b451-49df-ad59-a65b44b11397"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d6dc50-0769-4a9b-b603-54936ad9fe2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "003c45b5-e0b1-42ee-85f1-9d18d0da3ca3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "054f0ed5-8bcc-42b8-ae1c-434b71e5d2de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db430d43-ee09-49b2-bc61-be7da0b9d9d9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2383254f-9e24-4fad-bb78-0db2169953e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0637f7d-7098-4780-b78b-cf4861275c56"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9af4cd47-c825-45ba-baec-ca74b479265d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a3a411e9-3f4f-47c9-a7cc-795d6baea9c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91dd371b-755b-480a-8db0-31e92eebd0b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99a2a29a-74f2-4e0b-b360-544ace437d8b"
            }
          }
        ]
      },
      {
        "id": "2cd82228-68c6-4352-86eb-cc754acdded4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c69f383b-96ce-40f5-8b77-db0d6d26c606",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27902671-60cd-4494-b5e9-95bb150156e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19f2b6da-103f-42d9-b5b6-f5cc57dd7572",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d218073-9ff5-4b8f-a8c5-055e2e6fb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9c9482-919a-40ad-a661-f7f828a4ab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8b1810-49bb-4be4-b971-3b24c01ac1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbf74e6-47d6-43d8-ba01-f66e7a351f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85d1b05-2eab-4c7a-8c8d-e8728f8d15b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eab8f29-fd1a-47a6-a5aa-69d8ae731b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91546699-33b8-435a-a7e0-635be94accc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51cb186-5042-4e23-be9e-f6c77b483cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27abc15d-7bdd-44d4-b91a-2788a8ac55cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a364c55-57c2-4644-b102-bd82bbfca5d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efd4149-2d24-4d44-a9d9-5168d480af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ba73b2-42dc-4bc0-9342-e009fec34107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7b4906-75d0-4d29-a5c9-c28a40323e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06ca532-8f40-4e66-b669-f6f90688b626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e29613e-4e94-4b58-ae99-8b665ba508c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f117c099-3c92-4ade-912f-445a153582e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13116eea-bca2-4dd3-a894-fd34d9768723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e623d7-12a6-4a36-89eb-079fa8e0216b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b7103e-cc37-42ad-8c25-1e047cbec12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7cae64-2371-4cae-899b-1e059f52f2df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c2c0d9-fc88-492d-8aa3-0af3e383bff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec910410-3a25-4abd-948d-2a0b139f505c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1629c8c-8031-403b-b725-361b2d476075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74335abc-2c0e-4b48-b4b4-18b830270c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f890e98e-7364-4797-aa41-65d80f87d3ab",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace86709-97a6-418f-a923-64c1a1d5d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39124f9-161a-446e-a003-79bc1d34fc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd61b4eb-90c3-4961-af10-7a8c72fabf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "722f6a5b-9d30-4b85-bc74-fbca7b567e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f2205f-3f2d-4abd-8dc9-98ed55c7cb58",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be82b673-c29d-4e0f-a4cc-0f295d6648ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fc9aeb-d7fe-4ba1-bda8-9d6cef1a2cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79342332-4f4a-4432-80a6-5d1ef5a42772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc98439-9d58-4c58-a6e5-d847f3de97f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c335f893-12c0-4437-a80d-50c854ad1357",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a53ae-0b5b-4e69-97c3-76fab81973b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf3c045-10b8-4bc4-9551-e0ce5120d91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c57e6d5-0312-4636-ba9f-f3cc512421a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c06d87-6b75-4b8f-95be-18a15babc0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7cebab-48b6-4d9e-a52f-713ab79fb01b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb086b99-4a0b-445b-b0fb-939d39f1ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6494a70-7006-48dc-8afd-b26c54609ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40df0afd-d32e-4e40-87c4-e6f98b85dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42152ebd-d09e-4285-8ec2-e3ceb40b327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5ab708-ac9f-41c8-a039-06a840de3e7f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c504b7-b5ec-4029-8831-be123b5a24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a30471-0ef9-482f-b831-7a709bd5c87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1208431-1b29-43a8-bf4d-d354ac8bdb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ee5339-4903-4ee1-a532-0735e4cbf8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a78a65a-5fd0-47bf-b039-9ec59d227335",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cc3a70-3283-4fc3-8924-c75fc19aa30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48906ee3-3e54-4069-a259-9682c7324f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7df426-2371-4f2d-a38d-f9b19d9d7954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c21a10a8-e63e-489c-949b-f88bcb86d556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2e8bce-c0dc-4a17-8336-909007ecc80a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f005d49-b249-4c65-b014-98f841ef40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eb347f-2ce7-4017-861e-37b97c32d34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dbd2c8-36a7-43e3-bb95-a50286726fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1139526a-3057-4ae4-94c0-f902c6588fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b852b7eb-161a-428e-93d1-3ba9e9cb0867",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f40a16-5248-4d3b-aaee-f8de887f340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2252cab9-5436-4c85-8412-c45f12f07702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c77a0fd-af45-4ee2-8f76-2be19cbdc082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "036c9eb8-bc4b-437e-b838-ce3ad8bfc6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06773294-8b04-48d6-9256-62967c6cf585",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a2526-3551-495c-ad00-1e580ba16d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e9b71b-5b5e-4c57-bf9f-d82571600ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d79789-1302-4b7c-b53b-bf9ce232e150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf58515-c3e1-4589-9e1f-ba67721b246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0663fadf-e7b4-45c9-801f-d1c5dcdbb795",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a408512-b980-43c4-8216-2f5877fd30b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e7e1f3-3fe5-49d7-aa6d-5cceafae0a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3c99bc-a259-4891-8989-ba918daa4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3c9315-3f44-4a57-9209-e5f44b61c79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90376764-e1a0-4b75-bacb-8f2407f67781",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1d5779-4fdf-4364-af45-c1d0d5035778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c2415c-2294-4b5d-9384-b84d71c5cd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f035e-fe60-4d3a-8d94-f2d4903cf1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a62083-f551-488b-acfa-7c9cd4e91c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df706899-8f8f-4256-ab2c-b04a300fa365",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab0c681-4a1f-47a9-b7f3-b2cb7c43ff68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553183d2-b566-4791-a720-7eb15d100069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a9f757-556b-45f2-9a3c-71eb5559a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c854e302-1b31-4150-819a-01ff5c8464f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acae2d17-c090-43ea-a7dc-1a6e4af6dfd0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b02a895-dd36-4ded-bca7-a8602c4e48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62530fcc-1e6d-4b8c-97a9-3f6430b92e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f0cc04-8817-4e94-ade5-9ca758cf2b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b52ef6-6343-4127-aa84-aecb5fb46d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9a2337-cf8a-4400-b657-785f616cf525",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae60af2-11e2-4fef-9216-7cfad3c11200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899c7961-a58d-4db5-a7e8-3672b57e81da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f87b209-06be-4a1a-8eb3-8d20c2134308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "651bb92e-e492-4bc5-a13e-107ee3ca682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f15e61e-2290-4b13-b0c8-9d75652d93c2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86b06b9-6875-46fc-9d74-70d02e91262a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28cc7a7-6664-4d2e-aff5-4c3b6963ff7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb077f4-5eb0-4974-a309-5ecb23a56038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "652d61fd-44f7-49e9-b937-88754477c2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef7736e-dbb3-4100-8521-acc4c88c5fbc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49dac21-2def-420f-9d68-85e333e05e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf7d803-2334-48e1-836d-c61001f1a72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b051d3-272b-4174-8d42-fca0d193e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bef6aee-48f7-40e5-8307-901f25117824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb7bcd7-0dee-4c38-899e-021b67d61802",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120709e4-ec1b-4530-ac29-cd9e15cd715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a41a3fa-b814-46c4-9a67-3ef5dc5f1eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd353ac-0b52-4848-813c-d67f9c96961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70b8e83-f9fd-44a7-9a45-a4ad187633d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68e0236-83de-406f-bb47-ae1b28f4f052",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a21828-e555-4c6f-bdbc-ff5d7fa95abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2cdb69-9c5e-4db4-91af-3c5cd344a4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62994ef-665d-464b-8774-519547c0917c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9bdf08-ab6d-4fba-92f7-86e9574a440c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19f776-d020-4024-825b-e0d3d62de3f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c219b2ac-7f92-485e-b08a-74c1b933c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f660863-81c3-4a26-92ff-87d05c843d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3132b4e1-3fc5-4330-9b1b-b24128517802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d581a8ba-6f2f-483b-88f2-ee1529aa2059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3497ed-5954-4268-8a83-0b275fe1871e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3a024a-da84-466e-be02-2453737d98ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98ce357-1b9d-4bdb-b289-11b8ebf3a2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ba3fee-8f45-4937-bef2-a7c3664d2768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0261fe-3fde-4974-a579-818bfde0aee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fde6a74-e6b1-43f6-94ac-5aa196f6008d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ec96a-3878-4104-be19-2384371503d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9224915-273c-4a31-8257-4f6d21615456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac927f8-2e2a-477d-8529-dc6a4df4f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5628bb-2403-4e6c-841b-e34f0317f336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee44efa-3843-4704-9841-497320766c51",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f069cfa-05db-4177-adc0-ec49ea5992b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dc282a-4ac9-4e5a-ae45-024730243be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de37b327-e29d-4dbc-9895-3e7920e4b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ef23d1-cfb0-42fe-a885-3afc3ee55c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1cea36-3e94-44dc-8264-c01813e372b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96a22cb-6396-42ae-b70e-9bd8c985978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba969d3-b0c1-4463-a4f4-155cbab38537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e47ae0a-2f9a-4c37-885a-77778b57fd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3302bf49-4e63-42d2-b6d1-68763812e080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410da21e-b6a0-412e-aa96-559c388d8ddc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5a9069-26df-405a-a790-6d61fe55206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1118eb-adde-4259-ade7-d331715f88a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70134d0-1e18-45b6-a713-d2a66c3c4ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639eade0-0dc6-4c9d-980b-5c31bb6ad9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4648e4b1-57b2-4f17-a538-cac10801144e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ec809b-3acb-4943-b474-06d51cb161c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cb2f7d-60b6-4e7f-9c4f-9abcde4bcf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26d1d8e-d710-4281-8ac9-e0472822e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eda2cb1-0e49-4205-8e76-f6f3c316dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36873064-d75c-43f5-a1e9-4c358cdc367a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cef70a2-36ce-4256-961e-700ae13b7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29aa669-e3d2-48dd-9d66-aa4a26f03e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d08e62-6f20-4611-9e22-6323652e5319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf73ac9-fb8e-476f-b579-7a63ac7039b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc720d-bb16-44e5-b829-6cecf675f1a2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc4488-9808-4f8c-bd65-b16963a7f289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06a606d-ba83-4504-9b6f-a22e1a0a571a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42aab10d-09cb-4ef1-89bb-87cbcf699c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e60801d-03ae-49b2-a472-045a5ed8baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdd2a41-985a-40e4-bfd4-1844b4d8ce2f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f9a00-efc6-4607-b7a0-419d67e1b192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13bd483-5c1a-4b5b-88e5-be5777503cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427c94f-a3d3-4107-98fd-c5ace4a1c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a842e81-319d-4953-a51a-a6039cfd69fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d9707-4e55-43a1-a3ba-21b70f6120ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cba3e5-7020-4bab-85ba-5c9ed308d717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ba499-4e8a-4169-bff0-7bfabdebf594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1416983-e49a-4d5f-9976-0212b6c792de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e22f73-b88f-46b9-b56e-0147cfc1652c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0190c62-7ecc-4118-a786-e19bfc3aa750",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08968e50-5cbe-4f18-a322-27863551f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881d5aaf-f55e-4e85-8506-a6668d3b3b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aafb28-7221-4a59-bc42-108e10babaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b962ba-11a7-4d33-8f87-7e323ead3323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074754a5-5d22-4e62-a454-f80467834efd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a1da67-5b49-4bb5-9868-ef0b29e0663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46abd82e-08be-4e92-bb01-f50f9e26544e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8372f15-c330-4bae-aded-08d3af52d222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0cca67-1033-439b-8ce6-faafd8589384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e372a-7679-4f0a-a0f9-affd32ecf4a4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f6771-6244-40ef-aa4f-bc7734515bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0643890d-609a-4653-9936-4283fccfd963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4065e87-7ab5-4c4d-bd7c-fd1fe1072165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "387a4268-0cb1-4ef2-9969-fbb4e8722cd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc6fd228-1227-4f5f-9ba6-5410cab85a33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43ce9eed-2b2e-4457-8567-4b49c0bf63b6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c79387-0429-4f88-9e1e-cd92e9aea450",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11cbc936-4634-46a9-a42e-937b7f8a257d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ed6100-8fc6-46c2-9ff0-23c67ac877f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4d17a8b-cc91-4ee0-b23f-2b04ec7718c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2088dcb0-9bbb-4ab7-9d89-2e3e586bce06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b17c3c3-0fb1-4cc1-a5b2-042417272fc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec10e27-8053-4701-9f75-9936437de308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6468860-9cf2-4eb2-8903-21dea4ab7e3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b76f8e3-3b6b-472c-a439-25ed247bcc09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b7a3e61-0e53-4650-81cf-bf8393742cc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b41b516-6295-49b2-9eb3-26a7e857f984",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21373ef0-67e7-4653-8a8b-2ddaf2c555b6"
            }
          }
        ]
      },
      {
        "id": "49187179-5c7a-47ce-8629-865d3298defd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f3f3a3f5-8607-43bc-8863-223a1781df29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9834af29-c989-46e3-81d6-2b75b6f642e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6f459f0-00f7-4831-b05a-71bcc60bb44f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e667a0e2-b7d8-4a17-89d4-649f6d7b1af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25941fea-b0e5-4270-982d-b4e5f71b5b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f40aeae-3ecf-4130-83b1-4c8565977438",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ec76f7-b83f-4648-8be6-0197d832c3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb1f33a-5042-4c07-a7e7-8f42e3063e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d70483-c17c-458e-8dd3-a4e88a73132c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203a4eaf-fdb1-49cd-abbb-945bbb172d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bf8e15-8061-4676-b245-99e9694908f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd4305-82f6-423c-b07a-4d982892b345",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ba7fb1-ff0b-4476-ad0b-0aeedd34ef52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defc53ab-d79a-49cf-bbcc-fe3e81c6e631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7f3663-1ce9-4ecf-aa17-34b7c09b0a75",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874a543f-5c7b-4fd5-9869-29469d32413a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84888cf1-0666-4ece-9945-b776ecbbc2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3213fb-ee20-457b-b059-2ab5e866d58f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f30995-8c66-403c-ab07-ea6ab9010121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b35b68-0542-4586-8432-e578059e7404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261e9dc1-d3bf-46b6-bf14-fa47e7b13998",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5bb790-9a5f-43ca-9419-38e1618a5fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e08beb-e3f3-407f-8ede-6dfead38f26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1979e766-ca15-49ba-aa9a-4b4a706ac9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c24890-0ca3-42cf-989a-8bb322ce4139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e16f1f-a080-4558-bdb6-ccf16f431c81",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c89b440-a972-432e-8a2a-3746d0fdca01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd1e6b7-c18f-4cda-9b5a-15adf7ceb178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ba37c2-4741-4204-8f2f-0b6d3145f2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc8afdf-194e-4db0-87a3-1cb1494cd00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264742dd-7ebb-4159-8954-54c1e4f98272",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d373a3a-20d9-4f47-931b-38876017091a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6533fc-cd12-4c9d-a0e9-7052d04bf137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8daee01-8149-49da-a34f-cb1a44816749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8616035c-518b-4fd0-8eb3-3cef0e70b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c65ffb-b84e-4e00-a210-4bdea665e2a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eed29e6-6138-48d5-872b-526de80ef878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7473ad9f-c20f-4b56-9cf7-da3a2751ba2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbb23d9-374f-4561-b546-c23a3251aa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d7aae1-3163-47da-a358-d3ea859a7904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc736bbf-8ad3-4040-a634-88107c0f9229",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb488a-3777-4c97-9b77-0c27cd7f99e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02950e09-312c-4b64-9748-014f93fe10dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091ca1f0-ba24-4a8f-a6a2-2523f2b789c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3efc1a-2b1d-4619-a8c2-467b2b7cc3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8250fb9c-74b2-46ab-903a-e07a1ffe7c66",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b7a7e-34c8-41ea-8f1b-5ac4ffdba68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541d1b06-202e-4226-9c05-3d845476f06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc2206d-b640-4f51-9b50-340fd20b8c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcea758-54f5-41fc-87cd-9fe4608da97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf2a293-3bf7-444f-abc5-d2a5fe97fd52",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe7d5ae-519e-4a6c-81ca-bfb0de6c2604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10c5d42-e321-44bd-b1c8-2100f36a14e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5e1497-554d-4680-b48a-cd75f170d426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3651ced-3afd-4d37-a299-1b53574d94d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96d99b5-a0a9-4ee0-baad-496d92cb6a84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e085a86f-98ba-4bcf-bead-73caeae06593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ff09ff-4789-4edc-8278-bedff99632e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68da3028-9b8b-451f-9c67-67ccc5159fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02840e77-7c6a-4178-85ba-69162493c82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91e97a8-0fa6-4f70-839a-3e110bd3a95a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4deb54-5a63-4601-8571-488d67127b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ecfa3c-cb13-45da-b2b9-5173c3573f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fd7625-9348-4459-997a-0927c71b2ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f04123d-1888-4c38-a418-d8180fb8647a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82345ed-30f5-4e24-bd80-e36ec81d7b07",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02993906-831a-4c2c-955a-7d95b5ddb739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc1bcc49-89cc-4a20-a275-78ff0bb0fee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dcc343-dd2f-4ee7-bad1-ff323bf803a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2a9767-e773-46ce-95f7-d191cf65a640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7701456f-e07b-48b4-9cdc-2a9356ad3776",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5621edaa-650f-43fa-856c-20cbcd0fa4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff64cf9-2954-4ad1-8190-d1636e7777ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c554be78-5d99-4358-8abb-c029d6249cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd7ec86-9503-40ed-a5a6-d276b05a23d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43887411-bbc1-4aa4-ac98-6bd13c119aa3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237c7ec5-1219-4eaa-b5c3-1c2505764bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c55f00-79e3-4754-87f7-b2143d1f191a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b604a7-c1ea-4ceb-8720-5dfed2ed51ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b436e1-b1db-44cc-bfb6-e1c4728b56fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68354d6a-82e4-4655-9d05-c33a8cf7c944",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17255e4-4562-4ffa-9e2a-dd2368202b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf89806a-225f-4d82-984d-16cbf735a505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646be1bc-dfe0-430d-aa58-30b29011f9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f16f5a1-96e8-49ed-b3e6-3fd99f33fbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf269fd-253e-47e7-a12c-1c20b2957099",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f2056b-740f-4885-8424-d4855211459b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828b8a0a-c640-4867-a642-4b69b9406036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b60165c-f7d2-4db4-9501-d8960a466c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ef7ac0-3b84-48fe-b7a7-f6ce17e2ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307a834c-e212-4a6f-b61c-d723f896687c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de69823-ca77-4183-8665-65b290498fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafca364-6ddb-48e4-bb3b-28f08bdee771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9959e0-6118-44ac-bcd6-bc92e884c901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1aa88cb-6710-4592-b25e-8e28c73ed014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0751462c-1ac2-494e-bac6-c78063194549",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47324817-0056-4cce-8e0a-c3b76546f472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2e9da0-5f14-4fe5-92b6-acfe56bcf7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1e38c2-b342-4c54-929c-30b10e67a7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3038e3-0067-4be8-bf4e-c23a44967d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73955161-8902-4943-b8bb-87879c8b5b3f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e948b8bb-5aac-41c0-a9ff-197abfc40459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e7dfe5-d7d1-4a24-a88a-a88a04b1c3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b9ad1f-ba58-43a0-9fec-b1eacaf61ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673ac543-7111-4f56-a6ae-d533142cead4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f74266d-cca2-4bbc-8363-ef9d0bb08172",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d7051-e175-46fc-a389-dccba46b81c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf06a77-4c05-453d-85f0-0969e473971f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18adfb77-a39d-4170-afc9-56b7633425a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bf104b-216f-4a18-8b00-2e5e2bc7b8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f60f07-222e-4de2-b24a-f0866970f548",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53bfda5-a6ef-4c30-aecc-9cbcd2e23ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4abfaf-14ec-4420-90f8-e144bfe8013b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ec4082-de48-4dcb-9420-0991056fe36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb6d79f-f6a7-4d5b-9607-314e88cd960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f50da7-c7e1-41f6-b5b5-50067597593b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b75222e-6824-4518-9f65-82e76887db9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2751804d-11cc-4f71-8746-42a0e793f6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9eb58f-e603-4a13-bd18-4c1e558a2b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e319454-864d-4ec3-866b-29b8eebbe420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da4cfc7-939a-4851-b54e-6a89570f87fb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55f6136-8de3-4f8e-aed8-74d866564cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b8b8b5-e513-4e05-8790-d5098eaa8411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0925b208-73d2-4a95-9c41-bd71e4f7e52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7549de2-aad5-4ac9-8481-a35925559ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0c8a17-010f-44b9-8d78-adcde9014b71",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b218a28a-c9ed-4cb9-a099-4acabf6a9d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3585865-a502-40ed-a979-85267523e0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208052e-91a6-4d70-b23a-c7d019272327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ca6df8-d5ca-4a60-a13e-b63056d5aec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b7993-e0b8-4d89-9406-caf9ae855098",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1afd58-2458-4006-8104-ed956da4d192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1154d07c-1097-465c-9f72-c72edcf92d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f29c03-d3e1-4feb-8349-59a5d0e83753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8166924d-62db-43ba-82d6-302d443ef893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1597e3df-1fbf-4eb2-ab89-e807343c8344",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467f06a0-69c6-45e8-a558-a43348a0608a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f31b1d1-3a09-4861-b096-34c8ed21569a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d399fb9-e0b5-4e63-8991-712493328ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d666ee2-ddfd-42da-a6b8-79853d12ace5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ac25d-1f8c-426f-8cc6-13030d909846",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89a08f2-9a87-4dfd-9f1e-0c00672195ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505d9b67-ac20-428d-9ea8-5ab8deb4b05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c32c22-c60d-4e68-b7b0-765a3fe97e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d3ffca-661b-4723-9256-20feade8a114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e24c9c3-0291-4c0d-a049-ef93d358738e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ce85f4-2fe3-4b33-bb71-e6906cb86455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e20666-4107-43f3-9afe-7df4364264a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17a3bea-2b49-4a46-bd3d-cf3623edd774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933ababc-4099-4e4c-864e-eb2907e13eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3104ac-38f1-46a3-bc10-0a67cffb57a9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f8df71-3ce5-4636-aa4d-8e9c729d36dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df137f5-dfbc-4e9b-814c-28a4e9edb029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d65ff5-b339-4bd5-aa78-de1866162dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ffceb9-c15a-4d9f-acd1-8caabc836f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa4dc5-d261-4225-8383-bdad6d7aa138",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e817ec8c-b2f9-42c5-a17c-668ebcb7d948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dc1aa2-00ea-4c5a-9b2f-d332af3388f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2447227f-2539-47b6-8a30-d51b7af4aefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd1dd66-460e-45f0-b45e-da820d69c09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9cb47a-0d69-460c-993f-a07134c7c83b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec8e089-5220-4b1b-a47c-e000bb00019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dd510a-0c49-4f70-b420-f1701066dde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e8dce8-a575-44dd-bf84-8a19729262f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0dd023-a8e1-42ff-974a-a75bfad26d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0ee75c-1010-4f39-812e-a8751904e2dc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7301ac4-35f9-4e6e-85d5-f893b3a9a2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75806df6-193e-4939-bcea-f4832d1d311e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc8c0d6-76e4-4115-8d6a-0fcc28374eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6755f49-8964-41da-a32d-46a98326fe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f40e650-630f-4ab6-8467-3401d775b3d9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3fafb6-40fc-493a-947e-5f60396b2012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52001182-3774-42fa-a763-35ecc8c07faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7233f8a2-9ef7-4dfa-9011-d11d528643e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fc17ec-3cce-4cf8-8e19-e418d725f9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd8a9f-b779-4a35-a0fe-fbd13af9f4a6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8379d63-3551-4cb7-954d-72a991015b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a3fa9e-021d-4f20-8f0d-f5a80ebd3198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe2fa44-60c6-406e-82f6-1b4d882fdd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6567f6-1b51-4614-9037-99dbcee1d008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db99b57-3ce4-4202-a416-a1f68c3cd69d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b51472f-aee0-44ed-9e1c-6ce1fdea9448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf407b97-7ec6-4c59-bdd9-bfa238ece6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6e6c78-2c33-4344-9cc5-145ef2a2081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec9e482-dc99-4144-815e-92db0284e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0bc373-18d0-4287-b023-353691ec830c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d6658-8714-41d8-8e93-d65485c357ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1ad447-cccf-4092-9b3d-587eea70795c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38f6063-31ed-41fd-9c13-22df49f21dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5058590f-47a6-41d6-a6e5-a54adb37bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c4e884-3ae6-4968-91bc-a5e76ccfff10",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70051974-56d3-4665-a6b4-fa139670cae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa828221-0a1a-4ae1-beab-059a765e46d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d15185a-f43e-473c-bb21-7c23029866d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776251bb-988f-4210-9708-d0b22ff9ee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95808498-6093-4a4d-b5c7-7407d192c718",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1fea87-1269-42df-baf1-177db04ae1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687bbabd-83c0-488f-b65a-b26efa83db0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79a83b5-346f-4407-aad7-84e827496ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89533cff-978b-4c0f-8516-7bfb50f01538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b37ed9-61d8-41cb-acf0-b5956a54d458",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8b9276-e038-4111-9e74-bc4fe7c5ab3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555ad839-ee0d-4c7c-9b3f-b0bc3c5ce79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b333a8-80ec-4a36-97df-0c098078fdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf5306e-f010-47eb-9b20-9b284f97912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63966e0f-5ce2-4324-8220-bb8f2a5d22bc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8ab89-1048-4aa0-8b50-6084e6dda950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8d21e3-c980-453c-af5e-d5ccc971b008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208e1fd0-6bdd-48c2-beb1-7d6e28187e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b888dbed-1781-406c-87a7-ae6185cbdfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d68b370-6bd5-4ad0-8cf2-d11d939223b0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c05243-9ca2-4771-b51d-0f21e2de22e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27222336-72e5-4268-9a60-8d15b1afb6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82bbfae-16fc-478d-ba35-9fe3baf1d745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba269aa5-c295-415d-90db-a01e5f0f0b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e150324-c0d9-45e8-8d31-830049cef6ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f80375-05cd-4872-a406-5ce932defefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e600fcb6-8814-4ac2-aa4f-ecd61ec3beb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2959830a-91ef-46cc-b734-413fac5b6818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e802efa9-0cff-4c05-9255-66e6d5e68223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a9c521-5e56-46bb-a1e2-552e8ebdb9fb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3589a3d9-4111-49ff-98fb-ec70a8d1424f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e819225-6ede-4113-986b-399693f723f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167bb69c-2cb3-4ce8-a48f-def8ae223b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1493be7-e33f-4b73-b4e9-62690e9b8662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d323672-2359-479e-a4ed-df517b25593d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c81bc1f-dbe3-450d-b6d6-dfbf34aa7b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325fccc0-9c45-4a59-a61d-033e3cd8d9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd41465-cd14-425d-8b11-96f31b9276c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12493d3-acae-411b-bd17-e15ac7f0bf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacef84f-edfd-4e38-87e2-124d209fb613",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1ac4ed-dbfc-4491-acd2-06f0da293557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48894c1e-9169-4b54-bae3-9a485ad05e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656320f7-3557-41f7-aadb-134a78968c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6609fc6a-411e-4d94-8ef3-2b71fd09950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2745ab2-0c31-4d08-acea-ba7bee24b748",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550550fc-8e58-485e-9ff4-6cc89faf8e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea200a28-c712-4f39-b876-b0a4d45b8670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180e5c21-ed14-444a-b619-bb48894347aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755d1cda-85fe-49d7-99b2-a99157d2d43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281144cf-38a2-471c-8564-0673b10549f0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edfb9f6-04a1-4e18-b154-14b5d45e3d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9af5c85-3c80-448f-aa98-ac384b796024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e69f9ed-4a3a-48d7-a88d-4f0008e4fd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82824d8a-7f49-4118-b6da-44f45ac8de10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df3e40b-b8ed-4b26-8a18-c4ecdc643d5b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b0e289-d922-493c-9527-52a42510aa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2e9341-6212-49b2-b7cc-63b06f896506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261a665a-9fce-4e37-9a05-d5afbaaf94db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d512ff-2511-4513-8561-258c9469c392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52d484-c801-4024-a89c-a0906934b23b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6951cd0-53b4-4472-9f99-013333bdca5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc30a26d-ffca-47d9-b7c4-852e90148759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f3d8ba-b906-44c9-aeb9-0bfa46340798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c932138-be2b-462f-9d40-0d3f9cbf6399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f980b6c-dafd-407f-bd1a-930da5967bd3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ff941b-beac-4d6b-8b48-7d57cbf62572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148d96ff-8bf4-492c-8ad1-815ef5581199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a23d4e-d125-4432-8049-ca18937ce10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c2dedd-2f27-4ac5-a673-56eb38c2d4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee729a7a-b95e-47a7-af95-a7f876854dd8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bdcaeb-e445-490e-b2f9-edf6cc662290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a50bc1f-57d3-404d-9d9b-e8e9798835e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50ba9e9-911e-43f1-b124-d62c313ec94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7521f6ec-c65a-4faa-b26c-75f44a33a6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebff1f1-9d2f-47c0-a906-2f0ef17714c8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e2d167-b06d-404f-bdae-7d201703300c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a3f0ed-7cdd-44f5-a0fa-708b07cef58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969e6b2b-5e7e-4bf6-8a3e-3626a91c456b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4342bc5a-311c-4f73-923a-0ee9a3dfe932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e834d511-f9a0-474d-8125-e402a5535c69",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610358a9-2ed3-40ce-84f1-631a67549ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c572c88-5cf1-48b1-a596-7066c7f6b304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7914f4b3-1df4-4df4-812f-ded657dcf7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b47fc0c-b7f1-4f2d-a718-1f803727c0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69946bff-4d30-4eff-ae1e-c757dd69ee13",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f602954a-f479-4e80-add4-e4594cb440fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30366fb5-3b63-4583-b2e8-cce169972ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce818df-0f69-42e6-9991-732ba4370a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c2913f-9781-4397-aaf7-86744f232075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a603f-79ba-42c4-8191-d9fd5cd2fea6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9d81b-b486-4578-acac-41fad06b095a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d0c441-6f37-409b-ae78-06f6219e3e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1193c435-6157-4bc1-8021-696f8576bc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70be024-7b08-4f1a-b5eb-709b692fec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c91380-c0e2-4853-95e8-75916eb4465e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180cb1d7-af2d-4258-a3dc-06d73ee32681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfdebe2-7868-4d44-b678-3a7ffb158873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716601a-ff3d-41d2-a807-178185ce129b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26626df2-9349-4cbc-9110-bd80a73ce7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c023e-56d8-4eb3-a7c9-334f81c1a194",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dfded-9337-455a-a5c8-01b7d80934c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873ed572-e00d-46fd-86fc-9b0fdc697639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d576e1c6-a309-447b-bf49-089753ab8d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e91d15-7a55-4eb3-a495-114b2c6842e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c107ee-f8f2-41e0-988d-e0215b8ab5ea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be62098-f8b0-4c7b-9c52-5d11dca5f140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b62dd9-5bd1-4a76-8a8c-62243706f6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d29b6bc-2e8e-4ebc-b376-5cf5e802ab3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3251bd9e-6e71-4417-8555-25562d022830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f40bf1-04e3-4eb1-8bde-7b087031f3a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696f710d-ff1d-4ed7-929c-20446c109300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df09f97-e619-4835-98bc-aace1eca8b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ea75bb-210c-4c80-b4cd-f872a9b0ccf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f973f38-e4a6-4d9b-8fcc-c1ac2fff34b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2ddb3-2aef-46c4-b989-33a67819cee5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a482fe-023f-4f4b-b8ab-84f215a2fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245d9361-c8e8-40ac-be20-afc49ce1be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09e529d-8f91-4330-858a-308dc98220a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81551bd6-727e-4bab-89ef-4707fbe74119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83643762-f2df-4db4-96ea-44d12c23dcea",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac03c692-a115-43ee-95df-0a10c41a7c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25639d65-9358-43a4-af89-adf7cba8ec05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea525c52-840c-4e68-85ab-1760c864b888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3d7301-5f5b-49c7-8313-20b8bfcefe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84692ddb-dee9-48ae-b803-8e0c27ccd536",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef0f122-86bc-4ed3-aa26-0205e57941ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c2e83d-de6d-4745-9643-53753855f1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64b8bcc-a352-4d02-8e31-7355f01c55f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051c02b0-f52e-4940-95de-c4c8bb42380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb2cc6b-fe0e-4db3-8aad-dc22f4103a56",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e328a369-c38f-44a7-aedc-033d3a31e28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e24b69f-fb9d-4f7c-ab0a-cf21b2636e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9329fe1-b8ae-4ea4-8345-6b0b5ada5560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7201087-35cd-461a-8956-e2440c1b3364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2284ad7-3a98-4b68-a9ee-c4d410d1b101",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7d9d51-905c-4750-8b26-b10a14bafe97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610e5714-d2d6-47a7-86c1-a78f3974a443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb2c9a9-b839-43be-a5e5-a6bfaf841b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e804b04-a592-4274-b96e-e5fc874ed8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a154159-e198-4507-a8e1-ed2de4c380f3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367ddfcb-8d23-4539-978d-86dcc69e9092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8116607b-0b6f-4ffa-912a-e103ee87a978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d8d40d-f1f9-49ea-b071-e58e337e4db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e01823-ccf7-4976-b862-4a9a1b04b6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e885fc5-eccf-44ed-913e-f1ae2c828ae3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55fdce2-3c5f-4eb5-ae08-1798a1a6afde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a4f3f3-1d11-4844-9016-a40f4b32e5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46657e6-c872-4eed-8065-63f34acbbde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42bd402-ee4f-4b1e-80ad-302f19fda38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462f6693-da25-4861-9674-16cc2d7cbd20",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec093b2-2d06-49d8-aa6f-0d398610690a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff32f53-237d-4ff5-bd23-db518a6b4ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7950b9d-867c-4a0d-bf36-728b1bd83e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b34bc1f-b016-4880-aaca-d3e9ef356184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d5e732-bbdc-45ff-b1e0-31929b0cb61d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a254c3d-94e1-4ab2-8854-3c7b08489cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb79ca2-93d7-45c4-b4d1-b400ee48e3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388a3a1f-9623-471f-a34a-bc33c7f08a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a48541-cf02-422b-8f45-be7ee3f58ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6874c699-ab74-401d-a48e-e9cfd14ca80d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52a8930-662b-45cb-9dd0-0aabae00e825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "402a3ba2-916c-420a-b9b2-d0ae555939ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a932c6-8706-401c-a3cc-2660400e58bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e025a0c-fd69-42af-9f1e-635e3f64978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db928679-a4f7-44c5-a510-c7b4b6680974",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20b0edb-2d2e-450c-8848-1df415dc6a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5a1ca4-84c2-47dc-83d3-e1536633a859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57597bf7-9df3-4435-b132-cc0060101bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe1e87a-7e67-49d5-968b-3351ba67ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41d0b07-caa0-4cbc-8007-a58858ca35da",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1470b2b-c0e0-4b1b-9f8e-539cac68902a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83cb2556-a0a3-4de6-a672-5b4440952a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d20265-8759-4cb2-9716-57255502a69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8f1d05-9302-4289-aeca-bac4beba4ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe37f7-7879-4867-8437-8c2aa0156360",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066af261-2713-4126-a23b-08dd5bf12321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3922261-cc5b-405f-b06d-998d97e929db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430fadea-e4e5-47f2-9742-7231de92c39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e602e6-65ce-4797-a429-b56f2603e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fd02d6-28ca-4719-a903-c2f5b590af86",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0363b1a6-20fb-4418-b70c-47bdaa151ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31f7860-4df4-47bb-9915-610fa289c99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adffb0b-9773-4df7-a70f-54bc2afd5216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116c82e7-9a55-4c03-b4ea-c4c2bda6e17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac15b897-7ff8-4d41-b743-d4ed07829dde",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925a7b95-1db3-42ff-a2b1-663c9e0fd15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccdb857-b8f3-48fb-9b61-02f747b7d496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c190b4f6-bb69-4997-ae69-5a2be7f298a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61eb94e-a8dd-4288-80ff-2dc34471cf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2228a732-c262-4ad4-95ec-ad5068013fd6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11ec498-867c-4826-8ae6-89270a4324cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8710b377-36ab-495c-aa32-ec4e1b896c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab6c0dc-ae12-44c3-aa43-1a29ee260795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb859bd9-35cc-4ed4-bd31-6e5f5842e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099da96e-f175-4c6d-9fd6-bdf99d661cb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c50ca9-10d6-4f23-993d-157376f8b46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29ef412-eee1-4238-ab2a-e9b1cd1117fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058940d-1e84-4713-ba22-6fd0a5b6c3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12aa55a-01c2-4c0d-8730-41ed1bd8779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2ee558-f077-4737-8e9a-5b0f7a6386d1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660327e-7f7f-4c91-a644-ed63d8a0e429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fb516d-8b50-4070-a6f4-fc86d85f480e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bec96f1-9f75-4e96-a56e-08aab312037b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854fccd6-ac88-4cbe-9145-19d36c0affc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90099733-1c2e-44fb-9f89-40197ab14065",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f49991-085f-4fa1-add7-221031e3a35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350e2282-c79c-406a-b19f-bb2fcf5b49f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5422e90f-ecf9-4144-9bcf-c94b84fb09c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f742a0-8288-46eb-b865-25584520e205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff421d2-0efe-4e5a-bdc2-eb46267cbf3c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b7896-1dfb-4f4e-885e-9c6fe3654e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ae24ad-db13-443c-ba0a-3f3765150d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf4a215-ae3b-417b-bb24-617081039b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ff7634-3a36-403f-aed0-cf997d4f0eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c767b0-e6ca-4f3c-9dd4-38ea73012bd2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16acc53-91a0-46cc-b9bc-c58ee999d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f83f091-db9d-4878-b5a8-f37e09405543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f29ea6c-dded-4e33-94fa-553e617da225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac20a1b5-8e0b-43a5-a0d2-651ef718e8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a12a906-b148-4ffe-954d-e3178542400c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b13095-b7d0-46cb-8a82-dfc3d849bd33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b64a13a-d290-47aa-9006-17b736e61a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f64a66-4af5-428e-a59f-c82507f8ab32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d76859e-6920-43f7-8d58-3b83be7bf063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a90612-8960-47e1-b275-067796202f22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1195a246-edf1-468d-9b15-61072e3b84e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca99c15-3f8f-492f-9030-56c53c3ad421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da693d11-3852-493f-83e2-32f27f8af074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81993713-3d55-44d5-b3ec-65a86b5f6cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a16c71-8ae4-49ed-8adc-83a29f8acb94",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ea349-157e-4df3-9229-fd3a1e9ebb03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea414762-fbd3-41a5-9a3d-9a4405886186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd6fd34-6bea-4133-ad44-7ee1bb1b7492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f94ae5-1004-49fc-9de7-202c24dc0dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88425b7-d627-47a7-9038-6195064360c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71e9233-1851-4c68-b7f9-c4890249433d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1eec4da-fa4a-41db-b85e-cf9e979f014e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc8f7a-3474-4489-b4a8-731046c12116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57216cb0-b9ee-484b-a26c-6687b4bf2914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8aa2ce-e093-4b32-a3d2-c0352cd90013",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1334754c-b508-42f4-b8bc-04563fd9fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd3062c-9042-4621-8376-fcf8b1cfc552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9daa8c-63e6-467f-9037-b518eb51b36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fb2e05-f8b7-4046-8afa-2c1e8aada947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7864d168-7c2d-439e-8891-370abc2dc42f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44981a9-5a9d-4c8b-8cf2-844c185b66ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8eb5a4c-b116-4b13-be16-025f99312c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692bda23-8085-41a4-89a0-93bdb24a9f58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45188c62-3cb1-44d0-a407-b1b8c3d46b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb27ef89-0f57-4c2d-b148-2ce2513e33ed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0366fe24-fef0-4316-9ef7-d71a6366ebab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b721ddb-7670-4dc2-a69c-3f4806cc191f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac5bcf8-ee64-4df8-8ff4-9180dadc6922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e224e381-a31b-4e70-a381-c4c137ad00c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9925643-a38f-4c13-9ad5-49a8e0512594",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7729a-0213-48e9-b57f-41c818af5495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c20ce9-360e-4243-b63c-d84383dea28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d66dee-077d-4c9e-85a6-91c83ab32ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8635a2f-ea96-47b5-a2d4-15c20e94712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42029aaa-b0a2-47fc-8525-239c7c32f269",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd30c0-755c-4a9d-b373-e505f77bf156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e70685-c1b4-4bb1-bcd9-40c12ad0e238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cd6257-8906-4172-be27-17d78000d458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a805e9-637e-4c26-8e8a-be0ed7312837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52876f5f-5a23-4fbf-8369-a04e17201e69",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af284c92-7533-4d06-98bd-9c8c797dd7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac3812c-37a4-4551-9466-547e2a1f13f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1fb45-07de-4978-8660-c8502aa038ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3518860-17bb-4f3c-96a6-40ae01179d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c461abf0-057a-4a32-8b62-70bd2dd5b70a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3f5e88-268a-4db9-87fb-eb6dbbc76158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbe9b1f-7665-4155-9aea-3494c74fbdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6900fb5-e887-4da9-8aa7-25d7858dcb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fa2bcb-86e3-4390-9885-137b67e409da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e42e04-2bc6-4f33-a014-67a948fe53bb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc442ae-7898-41fb-a32e-eee4518f5545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2798ac58-67c4-4d80-848e-35b636282ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a129c08-5f3d-4ca8-96af-33b5def8e388",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b18986-0de5-4158-bd71-4df27e9f8685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b723805-a931-4f5f-af05-2da0709f480a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f510e18-fbca-4cbb-8eda-aad35ab4d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9930e28-a8bd-46ac-9de9-f49968edd1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4431c-d124-403f-b8f4-ee96fbc8bb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46760a2-2abd-44da-92b3-172dc29460ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3431af38-95b4-4771-a8ca-16b5e55e88d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c206fe5e-e1ca-4281-b2fd-233500d7d171"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1799fa27-549b-441a-b9d2-06ae22b053d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b1d1492-3099-4961-aef3-5b82ad63dbd2"
                    }
                  }
                ]
              },
              {
                "id": "9ff11aa9-d163-4b98-8c4f-d91da186a42d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5003f7db-7fe5-431b-a664-f6de5e5d8509",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f659f7c6-5cc2-453b-9ee8-15d74f4da468",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "386455fc-0169-45a4-b124-73f2b3cf625a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc51eda-eeb2-4253-b594-68b87aef19ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f69b4668-36b4-43ce-9bbb-75522aa8e452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c2960e4-b6eb-456f-aea6-9aa7e6e1a25c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dd2abd4-7831-414d-827f-7c1a1b3ddeaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf83d532-55ae-43d1-9633-88e9075afbef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d6effc7-454e-45a0-b614-b656ef28ce06"
                    }
                  }
                ]
              },
              {
                "id": "322e7999-7d36-4a0f-9995-a02b3b3b9f6b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79a4f63c-e4e7-4ba0-b80a-3d43ce6660c4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e4b6b-8183-4de8-9113-ca855d202c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad0079d7-247d-4037-99dc-c6795b6b3eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab1bb5a-2698-4a84-b550-5fc1b472c3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b5fe7a-69c9-4454-bdb8-858f6027f80b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bca69c1f-824d-4998-9625-a29c12292f69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dee819b-03c3-4e1a-a8c2-a53ef1882845",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d6e6cde-028d-453d-b91c-009da08a97b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ba9c964-22b7-4832-8020-f7bb7840254e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ca0f8a2-574d-48fb-8841-952c5e4e1033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a586f75e-3089-430d-8d30-d50051b3f3d5"
                    }
                  }
                ]
              },
              {
                "id": "193fa3a4-4e1f-4212-8329-3c8edad2e131",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bf5df82-05b4-43a1-9bf0-9ee8f848ca82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1907a39-e6eb-4d48-9f66-3e5a55bc915e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4b81fdf-2810-46a2-9e9e-fec3b81c5032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e24c0169-2d32-4323-94de-49385450552a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a5d04c-9bfc-4d92-862e-b328185903cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e060d7b-95b0-4f60-9c20-13b2f92c4dc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa13bc35-e2f1-43c0-a713-62626812be4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f41614c2-a372-4fc3-9c14-2e5e0a248f86"
            }
          }
        ]
      },
      {
        "id": "4cf27f9c-cb17-4314-b8c6-1d58c0ba1c6a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "15ea299e-6d93-4d75-8ca6-4b181445e185",
            "name": "Negative Testing",
            "item": [
              {
                "id": "924ffa83-2529-4ecb-b352-d233a566f43d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fb34499-b860-4224-8f0a-5504915d0c32",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06271c72-ae0d-4442-ba69-fced5994d561",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b37005c8-b190-4aa9-a952-04bc7d5e492a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657de384-0ea1-4147-81a1-3baf0094196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8470b212-5482-4b14-9371-ede54e155d42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0deb9e31-25c2-49fd-a657-87bf22741251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d220173-8b90-4919-9d62-a585e63c2e8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a4ccde-06d3-4501-8761-cda65a02fa19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66513079-d745-4fcf-a874-1a25a41d384c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f750f3e2-089b-45a6-a4a4-c05d55a8c22e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57c2c3f2-3b46-4726-a694-43edab2ca9b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8efa8caa-1b07-483f-988b-e9b0277824f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aea5e3e4-dc41-49b1-8047-74637defd967"
            }
          }
        ]
      },
      {
        "id": "53259d8a-3a38-4b6a-bc77-653df9c6e6bc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "64aa0333-03fb-4d26-b58b-a9859546ad0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20105dbb-ea7c-4aee-9e57-a2240241093a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "022f03e0-ea76-44c9-a2a0-c646ab5df82c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d2d5a-f55a-4549-949a-8829f52c2138",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e883771-e281-44ae-8b87-46d10f0ab50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b66dc1e-e5f8-4dda-9faf-ffbc5b0faafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f142f85-2854-4881-99cf-bb621ceebc4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "447a016e-d010-43f3-b813-b843948acf8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c36ded7-0a7e-403a-b772-777280851281"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf178a2-3c49-4993-9b77-c55e3e5e0684",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3fe54d1-2bd1-49f0-b791-7985ddf8c67e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3bb02a9-db57-4fcb-a6a5-976404fc51be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2baa97e-59f3-4630-baa9-70283877f2e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d8539da-718e-48fd-b6fc-c26ff448c9f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "170dded3-74f4-4444-9959-a7feb7ef310c"
            }
          }
        ]
      },
      {
        "id": "add7b305-0495-4837-af51-3d789fcdf1fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f8e2c06b-69c9-4fc0-b85f-3bcb6f2a5550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58839371-449d-4e20-89b2-63de02656bdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63696612-f842-4ddc-95f9-0bf7ac51f97f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447afebd-5260-467f-83ca-0e3f424e2860",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99dd1cc6-a7e4-4f5c-a588-0368017ada79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bfa6a7-9011-431c-a73a-11abf3c0ca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "953ea7f6-477f-4677-8030-8cb39c9bccec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef122c14-f1e4-4725-a0da-503daf85f98b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158fd117-39e2-41f5-a943-d418eed3c570"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cd4c119-4396-44cf-a1a6-e8cd2b1b03db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e68f76a5-eb06-487e-8eaf-668bfeaf74bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6687c695-b6f0-4544-9c87-e479cee94a51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1498a307-c22f-489d-aab1-50bf5f0e2a1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "911ba0db-4cdd-4787-931b-49247d8964c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b7a0cbe-9c6a-45e7-bd59-9a8fa4defca5"
            }
          }
        ]
      },
      {
        "id": "560b808d-b2c8-4800-b119-6a36ffb3fa3a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f632f9e0-8cf4-4b82-b1d3-0fff43efd8d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ad46cd1-3b9e-4e0a-a323-7523db322616",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "da785369-a5aa-4758-b094-08ac949f655c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ccec309-477f-419e-a484-e2d2c597f47f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20190421-9d9b-4df4-bace-a4604331edd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.4087301587301635,
      "responseMin": 2,
      "responseMax": 325,
      "responseSd": 30.0587322437555,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719880717772,
      "completed": 1719880727677
    },
    "executions": [
      {
        "id": "4493c13d-ffce-42b8-a2b1-bfd60174ba7a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5bd69341-71be-4d78-800e-496033c26d1c",
          "httpRequestId": "a43ecd02-afad-4dfd-b992-810edee30023"
        },
        "item": {
          "id": "4493c13d-ffce-42b8-a2b1-bfd60174ba7a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cf3c4101-58af-4133-85f3-2b6c9edaea39",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "7b2ac748-84f5-49b4-aafc-321b9e63025b",
        "cursor": {
          "ref": "c8b1a2ac-4dff-440b-98e3-48247daf022d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f229a4e8-d748-4cd4-8ee0-9d547c2d56f3"
        },
        "item": {
          "id": "7b2ac748-84f5-49b4-aafc-321b9e63025b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f73738c0-97bd-4823-9fd5-a2d552b3b805",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4aacda25-5980-40b4-9f5c-704c3fbac484",
        "cursor": {
          "ref": "597f78e2-ab8a-47c6-b8e9-ad650a90f747",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c2166c50-70bc-4603-a57e-38175ab3ea22"
        },
        "item": {
          "id": "4aacda25-5980-40b4-9f5c-704c3fbac484",
          "name": "did_json"
        },
        "response": {
          "id": "1b605d0d-d21c-4150-b26d-6f2c66289b55",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e65aed-af54-475d-b3c8-190ed67be237",
        "cursor": {
          "ref": "30dbb058-f488-436f-b8f9-d99a7635a0a4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4df87f16-0e7d-450d-bada-c348f6346a7c"
        },
        "item": {
          "id": "81e65aed-af54-475d-b3c8-190ed67be237",
          "name": "did:invalid"
        },
        "response": {
          "id": "1cab51f4-fd2f-4f94-b250-4ed75677dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e65aed-af54-475d-b3c8-190ed67be237",
        "cursor": {
          "ref": "30dbb058-f488-436f-b8f9-d99a7635a0a4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4df87f16-0e7d-450d-bada-c348f6346a7c"
        },
        "item": {
          "id": "81e65aed-af54-475d-b3c8-190ed67be237",
          "name": "did:invalid"
        },
        "response": {
          "id": "1cab51f4-fd2f-4f94-b250-4ed75677dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec2b6a1-8650-47c4-b67d-78c4605fd8a6",
        "cursor": {
          "ref": "c72e2372-c66e-47bf-828d-4b40895b0859",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e8d3eb59-fbe5-4b5a-b8f2-ed92eb536406"
        },
        "item": {
          "id": "aec2b6a1-8650-47c4-b67d-78c4605fd8a6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8815e35a-4e95-4b0c-af12-3489344bba9a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 325,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bc5e40-4aa0-4678-9d74-8c2e6805cad2",
        "cursor": {
          "ref": "47a196be-f569-4594-9fe4-61d60b41e6a8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a4d58a38-44cd-4727-a2d7-63887dad6dbb"
        },
        "item": {
          "id": "22bc5e40-4aa0-4678-9d74-8c2e6805cad2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "31c82c08-728c-4d5b-ad43-d1fb245559b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1524caf7-169f-480f-bef0-7f3aece51160",
        "cursor": {
          "ref": "04db4222-2adc-4f1d-954c-76d224004ebe",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c853d83a-3754-4859-b0ca-4ed295783955"
        },
        "item": {
          "id": "1524caf7-169f-480f-bef0-7f3aece51160",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "45000db1-0b84-4428-bc4f-110ae1b3e635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfd4fd9-5189-4ada-bd3a-98723833c5e8",
        "cursor": {
          "ref": "d832e9d4-754c-4630-9bbe-85ce85a133b9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c73b071b-aeb5-4eab-8bb7-2db6715e8896"
        },
        "item": {
          "id": "fbfd4fd9-5189-4ada-bd3a-98723833c5e8",
          "name": "identifiers"
        },
        "response": {
          "id": "4a49e31d-1b23-479a-b1d5-26415363be59",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e630629-94bd-4463-86c0-97e5cdedbc81",
        "cursor": {
          "ref": "78613858-a864-46ab-af5b-a918d85b0388",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "72501d66-9226-45d8-8d9a-1c0cf1b02fd7"
        },
        "item": {
          "id": "0e630629-94bd-4463-86c0-97e5cdedbc81",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "58984e49-e79f-42ea-aceb-d2eb5cb6179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf5e04-1a9c-4ccd-bd2e-92e1f715b90a",
        "cursor": {
          "ref": "12727b11-0fbc-4194-b4e8-75a018374189",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ce863638-7f83-42db-ba58-a75eb8542d0e"
        },
        "item": {
          "id": "50cf5e04-1a9c-4ccd-bd2e-92e1f715b90a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "289a74cc-b5ed-4f14-b4ac-4656c313e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a145791b-ecec-420e-8407-b68e1429397b",
        "cursor": {
          "ref": "27eec419-d13b-4408-90ed-0d838a3cad07",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "76a37bcd-749f-4fe8-8497-1f297533e4d6"
        },
        "item": {
          "id": "a145791b-ecec-420e-8407-b68e1429397b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "619d3cae-7dc8-42bb-ae60-bf2592438b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e29f84-16d5-4963-99f7-6b7267d27efe",
        "cursor": {
          "ref": "ed6be093-4c0a-4507-8fb8-fdb5e4b34099",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd7185e0-5344-4726-b7c1-2c3eaaac27c5"
        },
        "item": {
          "id": "45e29f84-16d5-4963-99f7-6b7267d27efe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ba4831ea-5eb1-43ef-8d5b-1253732891e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd2dded-a08f-4707-8767-4680f1090f2c",
        "cursor": {
          "ref": "bbabf7bf-d505-410d-8380-63b82c4f5688",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c96587d-0007-457f-8c0e-c157a1751bc5"
        },
        "item": {
          "id": "7dd2dded-a08f-4707-8767-4680f1090f2c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f021770-911c-46f0-9edb-c87cc8f668ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260c128-7245-4ee5-8987-0bdfab9ac360",
        "cursor": {
          "ref": "e24d358c-e565-455f-b1cb-bf0b4f1e335a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3fc361eb-c2af-4796-a28c-502aa34b0ec2"
        },
        "item": {
          "id": "3260c128-7245-4ee5-8987-0bdfab9ac360",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c69f4631-415a-43ab-b874-d4f3f276b122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20893b5f-5ea9-4b3f-be5e-a9b62213dc7e",
        "cursor": {
          "ref": "48ce7c3d-6012-4880-b289-6cd7b9647d9d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fea39bc5-e794-4d4b-9d83-f63983c68fd2"
        },
        "item": {
          "id": "20893b5f-5ea9-4b3f-be5e-a9b62213dc7e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ec1151cd-51aa-44df-b9d6-302c8e01b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af28d2fb-f4df-4a6e-9272-530556a6ac0f",
        "cursor": {
          "ref": "b6751976-14e6-42c8-8e29-a206335f0586",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3fc4be86-e4c3-4f40-a1cf-22d04b2f1d56"
        },
        "item": {
          "id": "af28d2fb-f4df-4a6e-9272-530556a6ac0f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1388f3f3-8775-401b-9873-8126fdd743f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1b3ca7-8a60-4df5-aa87-1ade69284ba2",
        "cursor": {
          "ref": "38a14547-550c-4437-961e-5db35d97fbc8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "449f31b9-c30f-4162-bc0f-adee251944c7"
        },
        "item": {
          "id": "aa1b3ca7-8a60-4df5-aa87-1ade69284ba2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d61704e5-5a6d-40d7-a731-e45b76427b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c3f1d9-19f5-43b0-a9f0-0ed01b71d022",
        "cursor": {
          "ref": "5b56b4d7-706c-4f2c-938e-a95570d2799d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08e9b1b8-5d9f-4ed1-9499-415b1d2fd4d5"
        },
        "item": {
          "id": "97c3f1d9-19f5-43b0-a9f0-0ed01b71d022",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ff574d23-8778-4ff2-a20f-9d607b75bf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87097e4f-f07f-49c2-b140-0001944b4a4d",
        "cursor": {
          "ref": "2a61a89f-7bba-4183-816a-226dca79b919",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "597d0c71-ac6e-4a33-976a-a4c2693be340"
        },
        "item": {
          "id": "87097e4f-f07f-49c2-b140-0001944b4a4d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4118f51c-2d84-4803-8411-35e1071cacd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc70d4d-ce2d-4eac-916d-298b0864f763",
        "cursor": {
          "ref": "a8e8b7e2-6db1-4100-83c7-7014e9219c2d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "687f226b-81ef-4ccd-a664-6aeafc4e81fa"
        },
        "item": {
          "id": "3dc70d4d-ce2d-4eac-916d-298b0864f763",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a11cb07d-bdb7-4dcd-9571-37ce8ce4f588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884c857e-cd0e-473c-aa6e-47e55d3dbbf5",
        "cursor": {
          "ref": "0c5401f1-f35d-427d-a5ed-d35b06073795",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "50e2004b-27f2-446b-838e-33001c2c6700"
        },
        "item": {
          "id": "884c857e-cd0e-473c-aa6e-47e55d3dbbf5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f656b18-dc51-443a-b12f-e70be430e5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fef0fd-eba6-4a91-b342-bfdcb2f0c2be",
        "cursor": {
          "ref": "e6e2ee39-7e27-4b05-9b4d-78daf32ffba8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "56f863d2-d502-411b-863a-962aa696f4e1"
        },
        "item": {
          "id": "73fef0fd-eba6-4a91-b342-bfdcb2f0c2be",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9530f739-aa7c-4a0f-89c9-87d0975607ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a92156-0bb6-4fed-9b3d-e57df4c5c19c",
        "cursor": {
          "ref": "85cd80fc-c76c-4545-8c99-c650eac7538f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "18c3637c-1688-45ad-91bc-f4c80f67e88c"
        },
        "item": {
          "id": "07a92156-0bb6-4fed-9b3d-e57df4c5c19c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c8068673-7304-436b-bb93-b2bb2af6ff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6380df06-c1f8-4ebb-ab3e-ae37c67699e9",
        "cursor": {
          "ref": "c6b531bb-fb76-4594-aa00-46c7240a336b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4e1ab932-fecd-4ea4-a736-6b9bdee01b1b"
        },
        "item": {
          "id": "6380df06-c1f8-4ebb-ab3e-ae37c67699e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dfef6beb-d1d1-4832-acab-6904ffdf8275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707ba33a-04f3-4400-9e9b-344b164a4a2b",
        "cursor": {
          "ref": "9a5853eb-3bd2-4275-8e7e-d2f8ad89e050",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a90db827-24dd-446b-825a-fc8ab9666546"
        },
        "item": {
          "id": "707ba33a-04f3-4400-9e9b-344b164a4a2b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "46c9365a-6ded-41a0-b6ac-8c9cbcb13c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b683d-60c1-46fb-a317-167ac8420870",
        "cursor": {
          "ref": "bd2c76a7-6c6b-4e2c-991a-81055a5883fa",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ad561d1e-e8c3-4ea9-b9bb-a710b3b09e8c"
        },
        "item": {
          "id": "de6b683d-60c1-46fb-a317-167ac8420870",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "30287b67-1e42-4705-9892-a03d6e7da1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329ddbe-8cd7-47bd-83a7-a3be3d66d588",
        "cursor": {
          "ref": "1c826d99-9e7b-4d26-a7a7-3956d696f970",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "45598311-8340-475c-bcfa-28442ee16834"
        },
        "item": {
          "id": "c329ddbe-8cd7-47bd-83a7-a3be3d66d588",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "99918999-6924-4f56-8a60-01b3fcb38997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d069e2-bcaf-44a6-8187-260e781d6358",
        "cursor": {
          "ref": "57a9d9a3-226c-4926-b7e1-1250e9698eee",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc65ab93-fe6a-4600-bc0b-5a40a733656d"
        },
        "item": {
          "id": "65d069e2-bcaf-44a6-8187-260e781d6358",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c087a7e2-6e9d-42c5-ab5a-4d8e7496801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1412d0c3-8925-4152-bbac-b918a8cd0469",
        "cursor": {
          "ref": "0f52cc52-4062-4ecf-90e7-9efbee1f626e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "77f05cb7-fb6c-4d20-a4de-50bc0aa43fe9"
        },
        "item": {
          "id": "1412d0c3-8925-4152-bbac-b918a8cd0469",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d074bc0-f352-4eda-b3ef-054343154f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2a7317-ac16-417b-a784-88c03b32a316",
        "cursor": {
          "ref": "adb529b7-fc44-4ffa-a3f2-de388455e083",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0e163394-8728-43a9-8fb9-8496876f6bde"
        },
        "item": {
          "id": "2f2a7317-ac16-417b-a784-88c03b32a316",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c6d6b4ec-bd76-418f-8062-2e22f71d7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09757b46-0059-4b7e-b930-ec3abf5628e1",
        "cursor": {
          "ref": "d48c1db7-608b-4329-a8df-47bb261a4b95",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a6e51d54-926f-4cc2-8958-283ba38400db"
        },
        "item": {
          "id": "09757b46-0059-4b7e-b930-ec3abf5628e1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a29a5d6d-578e-4917-ad73-1841468f3748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcc749d-4fea-4fc3-9358-71371eecdeee",
        "cursor": {
          "ref": "8fb96863-4788-48df-881a-8506dbc3599d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e54bc10b-4616-4107-af13-7b609278428d"
        },
        "item": {
          "id": "5dcc749d-4fea-4fc3-9358-71371eecdeee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "65a73992-aae4-4588-b16f-e8f75da99efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43c01d4-934c-4ecf-89bf-273e700ac377",
        "cursor": {
          "ref": "edd754b8-0d57-4c78-b19e-1b5b9f43851f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0004c50b-eda1-4310-8bfd-20016c47695e"
        },
        "item": {
          "id": "b43c01d4-934c-4ecf-89bf-273e700ac377",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c50b5a6-d050-460a-9905-4f88dd14fd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed097410-bb94-4a62-8368-b05ee9f67d0d",
        "cursor": {
          "ref": "f20deea8-08e9-4f95-a31a-d28a1d5f80e9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f39bf5fc-935c-4c7f-8130-c1131f124a4a"
        },
        "item": {
          "id": "ed097410-bb94-4a62-8368-b05ee9f67d0d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "51ccb750-e521-406f-957b-483359941e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d14873-1c66-4495-8ae2-eb97b9ccabc6",
        "cursor": {
          "ref": "67c69ed5-7513-473c-93f4-279a74be95c5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "be98d634-afcd-43c6-a8d0-12ca4be0e15f"
        },
        "item": {
          "id": "59d14873-1c66-4495-8ae2-eb97b9ccabc6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38fbd96e-b673-4269-9c50-ad11beb79945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152f8518-ed3a-4afb-b3fc-d82c08e5c450",
        "cursor": {
          "ref": "363d32d1-6d8f-46cd-803d-046fcbac18b9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d2aced5f-1e9b-4acc-8c85-419478885c8e"
        },
        "item": {
          "id": "152f8518-ed3a-4afb-b3fc-d82c08e5c450",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "44a495c1-b35b-4477-a2cd-f2b8a2ae3ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d8b4f1-c059-4918-9354-f3537a56ab84",
        "cursor": {
          "ref": "a9f86edd-de32-429c-84b4-5ff0a3b2ad56",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bfd20769-45a0-452c-a1f4-e96a03a01fb5"
        },
        "item": {
          "id": "58d8b4f1-c059-4918-9354-f3537a56ab84",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "05eced54-7c77-4204-a07c-440fbfa52af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc0f075-5225-4a8b-8ddc-0eb60cc0d2f9",
        "cursor": {
          "ref": "d4b13a5d-2246-461d-b7b1-876a91655d51",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e70beec7-0500-4d94-bbe9-f380da64a932"
        },
        "item": {
          "id": "ccc0f075-5225-4a8b-8ddc-0eb60cc0d2f9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5107e139-dcd6-4608-b8ed-6ae1f6a13189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac1564-f371-473a-bf12-307d54a917b6",
        "cursor": {
          "ref": "cb15502f-4fcd-48b8-a352-eecff4b31293",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1969e14d-6ee6-4753-8f1f-2668e24d3afb"
        },
        "item": {
          "id": "b2ac1564-f371-473a-bf12-307d54a917b6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fa5974aa-3998-45a0-bd4a-7016764109ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331ebac-94a3-43ed-825f-124a897b3b17",
        "cursor": {
          "ref": "2bf9b294-ff36-49f0-9f07-4306ab719bdc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2db8db77-8d9b-4ea4-8894-f2ee828335fe"
        },
        "item": {
          "id": "7331ebac-94a3-43ed-825f-124a897b3b17",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fe6477a5-27b7-4ff7-a59d-c7b757e4a7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f219954-272a-4970-82de-49455179e616",
        "cursor": {
          "ref": "5b405af1-2290-4331-a176-65dd85a70033",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "64e0d119-0055-4160-bc06-3b5702a07de9"
        },
        "item": {
          "id": "5f219954-272a-4970-82de-49455179e616",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b0596320-9bcb-4302-b13b-b880d1c646cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049795a1-577f-43b2-8a38-0f7326c71e32",
        "cursor": {
          "ref": "b1afdb4a-2be0-4310-9651-ff558fc039fa",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f874ff9f-c4fd-4516-8546-0c772e85a6a2"
        },
        "item": {
          "id": "049795a1-577f-43b2-8a38-0f7326c71e32",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b7e08d9f-d0e5-4af9-81ce-f7727817217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d5bc3a-2fef-4a05-b9c1-1c84579fc58c",
        "cursor": {
          "ref": "c3d65e53-1426-4f59-b233-5815f0cb624d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "52d67f9b-77d8-4f2e-b4e2-00c6604b62b3"
        },
        "item": {
          "id": "56d5bc3a-2fef-4a05-b9c1-1c84579fc58c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0125c108-7b42-4916-9c75-a55beaabdd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b4815-3567-45c3-9c3e-c8998864e013",
        "cursor": {
          "ref": "f048df00-b326-476d-aa86-fd060fa2dafe",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "563fb5a5-293a-4d3d-8709-91454d5c4df2"
        },
        "item": {
          "id": "1e7b4815-3567-45c3-9c3e-c8998864e013",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "104d68af-323e-4378-83fd-0cca0ab0b71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3079d1be-ba14-4a1e-ae1c-73c7601ec5a5",
        "cursor": {
          "ref": "78cf419c-223e-4c53-b406-46251a9c8294",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "faf9b349-2c36-4b13-ae5e-68816a7e11bb"
        },
        "item": {
          "id": "3079d1be-ba14-4a1e-ae1c-73c7601ec5a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "485f3f28-1d3e-49d6-afe1-c44dc87be737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65e1fbf-6adc-4013-a898-44c896ec3237",
        "cursor": {
          "ref": "74365e5e-9079-44ab-bbbe-8e9c696aade2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2f063e60-3ed3-4c2f-9607-3d4040771e21"
        },
        "item": {
          "id": "d65e1fbf-6adc-4013-a898-44c896ec3237",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e8f5d398-3451-4e11-b583-c7605e4a098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d50c6e-c772-478e-ba48-dfc3f2bc6d64",
        "cursor": {
          "ref": "b55cdbdc-2e39-4925-8596-8cd989aa534a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "20c12ce3-a1dc-4419-9c1d-3f6578a66995"
        },
        "item": {
          "id": "a9d50c6e-c772-478e-ba48-dfc3f2bc6d64",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "56ed4220-23bf-491a-865a-e0d87b97ceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fbbcb9-c800-4b78-9c21-1a169e04df6e",
        "cursor": {
          "ref": "1abbe68e-34dc-4667-9ff4-622cf819fb38",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "452dadf4-23d0-404d-b5e2-df05ffa6d57f"
        },
        "item": {
          "id": "41fbbcb9-c800-4b78-9c21-1a169e04df6e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4e5ad783-e7cd-4190-8436-445e0c616a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8077125-31d9-43a1-8361-75422d4b206e",
        "cursor": {
          "ref": "0ae4daab-6289-4baf-8489-d1c37c969144",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9409bac4-9c31-4f16-9c02-d23c5b0db9b6"
        },
        "item": {
          "id": "d8077125-31d9-43a1-8361-75422d4b206e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eeca0ec6-ec6b-4708-a9a7-180431217fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f91d7-faa8-42cc-8365-749631175ce9",
        "cursor": {
          "ref": "e31dd886-5d40-47f4-8f6c-9083e9e025ea",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d814bd96-f976-40fe-8309-88396d5886c2"
        },
        "item": {
          "id": "ec5f91d7-faa8-42cc-8365-749631175ce9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "43c7d2b7-e326-4de8-8de5-c45d0e7630e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4aab54-46cc-4001-aeec-220c7b41f89c",
        "cursor": {
          "ref": "c662a4a0-f939-46a6-a4a5-538b8f16dfc9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "25d7b3b5-e515-4938-b996-b1e41a31f048"
        },
        "item": {
          "id": "6d4aab54-46cc-4001-aeec-220c7b41f89c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8c83fdb2-50aa-46be-9cd3-62e2c29851c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc30f15-7528-4910-a0b7-84b4ad65116d",
        "cursor": {
          "ref": "2ac356f0-0fc0-4461-8120-a1e7d060332d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d9068f2f-47b5-4d9f-968b-fceaf479257b"
        },
        "item": {
          "id": "bbc30f15-7528-4910-a0b7-84b4ad65116d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4918ead3-3faa-4d06-b6dc-9944b12a37d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc590c4-0d53-49d1-9f1b-ed0918d17741",
        "cursor": {
          "ref": "40058e09-5a86-44ea-a835-f1301d30c794",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "379fb848-d2fe-4e87-81d2-adf9a22b4dab"
        },
        "item": {
          "id": "0fc590c4-0d53-49d1-9f1b-ed0918d17741",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8108c4d0-f095-46ec-b3b0-fc4a1e319429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a059979-38e3-4a68-a81c-a0ad57ca04d3",
        "cursor": {
          "ref": "54143f06-280c-4015-963c-1ce7a92c7f3c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b6c58b39-4763-4e87-9cda-518622b2561a"
        },
        "item": {
          "id": "6a059979-38e3-4a68-a81c-a0ad57ca04d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "abd334e8-21eb-4671-8a59-040d257aea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502d02de-d545-4c31-b39a-a07124067d1d",
        "cursor": {
          "ref": "12bb66b7-6fb5-4128-837c-50057bd53875",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ddac273d-7d73-4549-9891-144f0e4b0ac1"
        },
        "item": {
          "id": "502d02de-d545-4c31-b39a-a07124067d1d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3cdc564a-5f39-4d75-8c07-a1bd4a5b36a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7d8e74-bfc2-40db-b985-ebd732a7318a",
        "cursor": {
          "ref": "0454bdea-a787-47b7-bc8c-84539d88692b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d71a03ff-83d9-4caa-9e36-b61d885394e0"
        },
        "item": {
          "id": "0d7d8e74-bfc2-40db-b985-ebd732a7318a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9504161e-bad6-4084-9901-db63ddc5a7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926fa57b-83df-43e4-b5fc-8f07123c9346",
        "cursor": {
          "ref": "5917315a-ba39-454c-a6da-e539b8f59252",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7692d2ad-2040-4612-a518-e5ab4f2847d0"
        },
        "item": {
          "id": "926fa57b-83df-43e4-b5fc-8f07123c9346",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc826eab-5f6e-4595-8852-9b4cff7256ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0a8f3-c96b-4510-ae70-dd1f3a5d6611",
        "cursor": {
          "ref": "df001190-14ce-486a-8864-2a92591321e4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63d53bfd-fc86-4885-b479-13f5862f2db0"
        },
        "item": {
          "id": "d1e0a8f3-c96b-4510-ae70-dd1f3a5d6611",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3dd77d77-bc63-4984-a8f7-d1b77d4273a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f4e802-b42c-4a40-8d9f-39ed01739c6c",
        "cursor": {
          "ref": "1dee99de-8f2c-46d6-a96b-1333b1cd5d0f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b13d0f87-10c4-4e2f-a82a-31c64257f467"
        },
        "item": {
          "id": "38f4e802-b42c-4a40-8d9f-39ed01739c6c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e81144ab-d63b-43b0-9476-ee9e8fbe9e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4318706b-ee82-498c-a50c-c566434acf12",
        "cursor": {
          "ref": "601e6652-67ba-4ab2-adc3-85f8b72f5890",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4fbb03e9-6ffa-4a53-8a91-3a3056390cdc"
        },
        "item": {
          "id": "4318706b-ee82-498c-a50c-c566434acf12",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf194e4e-bd11-4a54-be67-49e7bd599bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d1b9e5-9ac7-47be-9b82-c37da2dd1daa",
        "cursor": {
          "ref": "38fc9144-442d-438b-a7dc-cf19b0dd6a46",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2529ecc3-1fe2-4458-81cf-2e198ac19e69"
        },
        "item": {
          "id": "d3d1b9e5-9ac7-47be-9b82-c37da2dd1daa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e3fc90c0-dc37-4f0e-81c8-ae2e3dccb3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb4c3d0-d3d5-45af-9fc4-134155fe869c",
        "cursor": {
          "ref": "ffad566b-7ca8-460e-adc4-df5205df38f0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14c03645-2973-4867-941b-73c972799a90"
        },
        "item": {
          "id": "ebb4c3d0-d3d5-45af-9fc4-134155fe869c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f421ffe7-6c23-4882-874c-9a4114c31221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa59fc7-1071-46ab-8dfb-b225e11c03e8",
        "cursor": {
          "ref": "bc370529-1623-4a68-9a8f-dd2c3065a86e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1beb857f-9f92-4fcb-bfdf-ce8e3bcb59b0"
        },
        "item": {
          "id": "9fa59fc7-1071-46ab-8dfb-b225e11c03e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d72d9fdf-35f9-416e-ae26-41fe3092dd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b6a7d6-6c86-4729-ac86-55bb6bbfe776",
        "cursor": {
          "ref": "0bb08330-7b70-49bd-b756-4c4fb58b2caf",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f50508a-8a8b-491a-abd7-7c2bad66a330"
        },
        "item": {
          "id": "f2b6a7d6-6c86-4729-ac86-55bb6bbfe776",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "985ce800-793c-481d-b1dc-3f1f901041e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614d0b43-3575-46e8-80e4-faeb5668dcac",
        "cursor": {
          "ref": "e215d592-9307-459a-84f2-acedcd9fe832",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "adf131da-039d-440a-b869-d37edb023046"
        },
        "item": {
          "id": "614d0b43-3575-46e8-80e4-faeb5668dcac",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5f469999-4dff-4569-af1f-62320866b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48cd4f0-2c1d-4ff9-9076-0a917b40762b",
        "cursor": {
          "ref": "33a3e176-7da0-4d32-8a6e-4195ba49fab0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d9f4bfd-beee-4784-88a5-0820a8299fdb"
        },
        "item": {
          "id": "e48cd4f0-2c1d-4ff9-9076-0a917b40762b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63617c32-62d8-4ef1-94b9-40ec4ca6c400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7da6d2-b208-4e70-8c11-17867347ac67",
        "cursor": {
          "ref": "e6611e75-f76f-46eb-9967-077a63144549",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a0bcbde9-096c-4f1c-a5a7-fa3723370195"
        },
        "item": {
          "id": "6e7da6d2-b208-4e70-8c11-17867347ac67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eae39531-2ec4-4a04-9168-6e9bb1a4c1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c96e1b-332e-47a2-be78-74214e106c8c",
        "cursor": {
          "ref": "b4942c96-f52a-485a-bd3c-3b367320ee6c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bc1e59df-010e-47b2-bad7-b12c2415ad99"
        },
        "item": {
          "id": "36c96e1b-332e-47a2-be78-74214e106c8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79f465b2-4e4b-4ef1-9f0d-8178f2880d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e49663-04ba-422e-ab1e-6708d08cce51",
        "cursor": {
          "ref": "281dc3a5-16d3-4e34-8597-2b76c86a35cd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "49900b57-102e-434d-a6a6-d25636c77860"
        },
        "item": {
          "id": "e4e49663-04ba-422e-ab1e-6708d08cce51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c411c88b-847b-4705-9fba-8f2dc1145035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070778bc-44bd-4a4e-991d-0521a26cfa52",
        "cursor": {
          "ref": "44aa6052-5d78-4972-a6a7-d8e42f7b610d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ff3990dd-1bac-4e12-adb0-2d5519d2edd8"
        },
        "item": {
          "id": "070778bc-44bd-4a4e-991d-0521a26cfa52",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "744dd484-32ea-4ee9-836d-d344949aeb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02af876-7f78-4100-87c0-aee91ffcbbbc",
        "cursor": {
          "ref": "750b7d6d-0e70-465e-a9ba-118b669b66a2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8a89562d-a56a-4584-8190-d54d2af041fa"
        },
        "item": {
          "id": "a02af876-7f78-4100-87c0-aee91ffcbbbc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "364cfd1b-d3cc-4c5c-a208-f636c492959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a610cd-af88-4a1f-92c0-5e376810adf7",
        "cursor": {
          "ref": "27be78fe-93fa-45f2-acf3-460192fbbbe2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "eca442fa-a8eb-4f29-b694-bbb3da30e328"
        },
        "item": {
          "id": "69a610cd-af88-4a1f-92c0-5e376810adf7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2c49b126-4c85-40f2-b430-9f1544f949f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d1c4cf-cff7-454e-b319-b0f5bcc45fa5",
        "cursor": {
          "ref": "8c5b3a0c-17cb-4bd8-a4ca-064f1bcf99dc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6db7cb70-4ace-4d38-85ed-016a67fa2bab"
        },
        "item": {
          "id": "60d1c4cf-cff7-454e-b319-b0f5bcc45fa5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3065d57c-cbb8-4dab-b46b-75297fe87f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7b9bb-1c22-434e-81b1-6485d9ca4d58",
        "cursor": {
          "ref": "2e2eed06-52a1-4c04-901d-b69d5661f6a9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "763f6ae1-187f-412a-b9a2-72036ffb75c6"
        },
        "item": {
          "id": "84f7b9bb-1c22-434e-81b1-6485d9ca4d58",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d276ca93-64d9-4232-baa2-6019e548b4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55192a9f-a31e-4820-94a7-3414756059f7",
        "cursor": {
          "ref": "123072a4-054b-41f6-8825-f9ad08c0ecab",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3aebe4da-0601-4e20-a519-36b8ce637288"
        },
        "item": {
          "id": "55192a9f-a31e-4820-94a7-3414756059f7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7490ce7f-5778-4a47-a2cd-e691a4f5a32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490db412-00d1-4f14-86f6-646be0cf69b1",
        "cursor": {
          "ref": "27e79bd4-5f65-4b1a-95a8-29cbed0d54b5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7bdf4afb-438f-4d97-9a40-3b60ca2483ab"
        },
        "item": {
          "id": "490db412-00d1-4f14-86f6-646be0cf69b1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e02968ec-86c2-4457-b3ba-667fee830819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151f05c7-8658-4378-84df-22f5efd9be65",
        "cursor": {
          "ref": "ce307a46-7916-4a70-8698-1d6b90ac43a6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6769487c-0393-4786-aeac-fb38e742a612"
        },
        "item": {
          "id": "151f05c7-8658-4378-84df-22f5efd9be65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3e3e7fb5-530e-4fed-af36-dbaf6db2f01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dbfda4-c241-4ac9-908a-2cfcb99dd1da",
        "cursor": {
          "ref": "4e48e2ea-6d52-4b74-9389-444a8f820622",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "749d8330-9a2d-400c-a872-6712fd6d39aa"
        },
        "item": {
          "id": "89dbfda4-c241-4ac9-908a-2cfcb99dd1da",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "40f0eb38-f51d-4755-85ca-fc3f1997b479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd43a4-53e9-467d-8d1f-4c8652f117ab",
        "cursor": {
          "ref": "4b83d8a8-a5aa-4c65-8c97-9e5f757063ed",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "84831f55-3ecb-477d-bebe-f9e6a84cae8e"
        },
        "item": {
          "id": "8dbd43a4-53e9-467d-8d1f-4c8652f117ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99711695-37ab-47d0-a118-8c6c492f1c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f728ea6e-2793-4cdd-9bb1-e0ef58bd62b3",
        "cursor": {
          "ref": "440050e3-904b-4ce2-8c58-5f0b0234e845",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e118983a-8967-4d2d-84bd-bfe34bd3864e"
        },
        "item": {
          "id": "f728ea6e-2793-4cdd-9bb1-e0ef58bd62b3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "405632fd-bb25-49a6-8f0d-027cee0fb13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4d4830-5547-44a6-8a6c-7d2f903dec58",
        "cursor": {
          "ref": "d926a704-89c7-4afb-948d-674955d6f1de",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ce5f379-97c3-4baa-a031-4c08d4c9f157"
        },
        "item": {
          "id": "9b4d4830-5547-44a6-8a6c-7d2f903dec58",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cc2762f4-64f2-40dc-8f8c-2998993bdfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3442a0d-c95d-458d-aee8-c59ca107207f",
        "cursor": {
          "ref": "375a6ff1-a66f-4f1f-b2f1-8b727d7892cc",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f132c8c4-0255-4a22-8be5-6b744cad74e4"
        },
        "item": {
          "id": "d3442a0d-c95d-458d-aee8-c59ca107207f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "66b2113f-d007-4646-86bb-aee3237c767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf89c47-e028-4e89-a5b9-30c7e2de9d66",
        "cursor": {
          "ref": "c490046a-cd62-45dd-9d71-08ac4cb796bc",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0dea3b0c-d462-4c9d-81c9-5a2a68c368a1"
        },
        "item": {
          "id": "bbf89c47-e028-4e89-a5b9-30c7e2de9d66",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "de412ee2-5733-401b-ad27-c8e23ac75bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c075b82a-64b3-4145-9059-32847d472d77",
        "cursor": {
          "ref": "dc3b6162-4153-4b57-a74d-96452f86baf2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "298cb94f-0d70-4de3-bda9-0f8703823222"
        },
        "item": {
          "id": "c075b82a-64b3-4145-9059-32847d472d77",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b82e29e2-91d2-48d7-84a2-815d77ee8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3ae720-0ff0-4e5d-8160-757e2dd92b40",
        "cursor": {
          "ref": "bdd47242-f529-4b9f-9c89-9d6056095cc4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "93c14da3-d610-49e6-b33d-0afb5a8f0237"
        },
        "item": {
          "id": "2f3ae720-0ff0-4e5d-8160-757e2dd92b40",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "df80d1a5-3642-4d88-8f03-14ab52f46981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f44348-7e72-496d-97a9-c3e5e97f0f6c",
        "cursor": {
          "ref": "7c2e69c7-6d41-4ed2-9ace-01dcedd46a04",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ff39bf0e-23c6-4917-93dc-de2270814b01"
        },
        "item": {
          "id": "a7f44348-7e72-496d-97a9-c3e5e97f0f6c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bec9f494-83bf-4288-bb06-85bb113c5cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd5f13d-9b1e-4f01-b441-bdca0aa4cb2d",
        "cursor": {
          "ref": "4e5f1d58-3f6e-4d94-b0d9-366f814d359c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d9b283d-cfe9-4941-8a50-d681442e3d8c"
        },
        "item": {
          "id": "7cd5f13d-9b1e-4f01-b441-bdca0aa4cb2d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "76de9262-4e1d-40f9-a96f-9e254496e3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5383744-3334-4015-887a-a4f642e42cac",
        "cursor": {
          "ref": "c1457502-d1cd-4226-8be0-0a971a084a4e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "17df8140-2409-4a14-8baa-103378ad914c"
        },
        "item": {
          "id": "b5383744-3334-4015-887a-a4f642e42cac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "68012335-a070-4764-9b25-f5299ab28c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930d8ae6-64d7-44aa-a839-ffcc4de6301b",
        "cursor": {
          "ref": "e8f8c78e-9556-402d-8bcc-7d0bcde6aaf6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3135bcca-cf26-40fb-928b-b02b24e97b45"
        },
        "item": {
          "id": "930d8ae6-64d7-44aa-a839-ffcc4de6301b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d5d150c8-49d3-45ff-b6b3-56e2d1f85c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42429b0-441f-4e1d-aabb-87031d1d62a3",
        "cursor": {
          "ref": "fa9c1133-ba57-4a1b-bffa-18b869470d31",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3a93f507-2314-478b-8292-a8d8a528735b"
        },
        "item": {
          "id": "d42429b0-441f-4e1d-aabb-87031d1d62a3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "924d31b5-8996-40cd-a044-aa124c49d996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f588462d-e747-4a43-bbe2-f2e4d3b7b7cd",
        "cursor": {
          "ref": "11ccde63-0a54-40c9-a7d1-dfc2122d3715",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "123ca727-f086-4130-bd3c-1e0469a5bc5a"
        },
        "item": {
          "id": "f588462d-e747-4a43-bbe2-f2e4d3b7b7cd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e6a46cd1-9b23-4bf7-ac93-362074f48784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50240ef-472d-4d6a-b452-16b396063ab7",
        "cursor": {
          "ref": "58c2c66d-1e1b-4490-a346-ed3152b50d2b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "41f7321f-84fb-48f8-87de-67f001c6c582"
        },
        "item": {
          "id": "a50240ef-472d-4d6a-b452-16b396063ab7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2128477e-234a-4556-ad18-24fa4250e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b47761-648d-47cb-b93f-fe17595a1d29",
        "cursor": {
          "ref": "41a44efc-97a4-44a7-9593-1f8d890f8148",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe3aac08-31e6-42a0-bcd8-5b209fe08dc6"
        },
        "item": {
          "id": "47b47761-648d-47cb-b93f-fe17595a1d29",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ad47ef78-e438-4862-a5bc-470e522c2278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c664b-5a0b-4a5e-81d9-abacf97ea028",
        "cursor": {
          "ref": "23339565-4b28-4791-a308-b191f0b97122",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "25f24742-6e96-42d0-80d5-73ca02d00e65"
        },
        "item": {
          "id": "491c664b-5a0b-4a5e-81d9-abacf97ea028",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b771b9e2-6d31-45a0-be95-13fdb8ad8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c9c2a9-ca8d-4b17-b8f5-43736dccf293",
        "cursor": {
          "ref": "067674bb-2d83-4a60-9e00-7f5b81e2e46b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "23406614-79c4-4ce7-9c09-cd0000f3e262"
        },
        "item": {
          "id": "32c9c2a9-ca8d-4b17-b8f5-43736dccf293",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7509c92e-43fc-4e4e-8a40-5adb345157ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eaa7bb-c09a-4d9c-95d4-b80eb6faaa25",
        "cursor": {
          "ref": "107e6128-9b75-442e-8b22-985456ddf902",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "11dd0cf1-688b-4156-959f-7a2bc713daa4"
        },
        "item": {
          "id": "d2eaa7bb-c09a-4d9c-95d4-b80eb6faaa25",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5f9047d7-8db8-4c0e-ada8-195caf53ee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2fd0f9-b1d5-4986-a824-03b8b225f5ce",
        "cursor": {
          "ref": "87d570a0-1494-47ee-95a7-bc466779b4e0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5d31edbd-a5e6-465c-92e3-55ed66683ab7"
        },
        "item": {
          "id": "9f2fd0f9-b1d5-4986-a824-03b8b225f5ce",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "841089c6-c5aa-4037-a2ae-4671de4442d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892d933f-dda8-42d7-9540-da305631ea30",
        "cursor": {
          "ref": "246e818b-9f02-4e6d-9e42-c5cad6c6cb9e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df9ebede-8b22-46b8-9143-fc9a9ab78693"
        },
        "item": {
          "id": "892d933f-dda8-42d7-9540-da305631ea30",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3451881a-929f-4a77-bf48-25c7b97e9432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aeca43-d316-4792-bd5b-9489b9f5385b",
        "cursor": {
          "ref": "7dc87add-0300-45ab-96f3-15933c72cc93",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6210c61b-046d-4882-925c-00699966313e"
        },
        "item": {
          "id": "56aeca43-d316-4792-bd5b-9489b9f5385b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f84e80dd-12cf-4d5d-bf63-63407e39c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7760d15c-b129-4fc9-8553-12a90398ea9b",
        "cursor": {
          "ref": "00ecfdbe-ec4f-423c-b009-03c2d5597069",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ac835a77-82a9-40cd-90e9-2d32b99e742b"
        },
        "item": {
          "id": "7760d15c-b129-4fc9-8553-12a90398ea9b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6d91a0c3-875e-4f66-ac6c-9b1428642cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6caa62-c3a4-479b-b4fa-b0a22fffe2ba",
        "cursor": {
          "ref": "35b81304-3639-47cf-9fad-09271df7c7fa",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3512dcdf-8130-44ec-a233-b66103484650"
        },
        "item": {
          "id": "1c6caa62-c3a4-479b-b4fa-b0a22fffe2ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0d02f91f-b52e-4854-b64d-bc4e10facd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8519b2e-c578-4e83-964a-f2e1c3fd3ece",
        "cursor": {
          "ref": "e49e89ef-5ac8-432e-871d-1178705717ce",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "81ea8775-1a40-4b6f-8489-16a952a6e148"
        },
        "item": {
          "id": "a8519b2e-c578-4e83-964a-f2e1c3fd3ece",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f9a14a68-a7be-4725-a22e-628a7335a7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6ca4f757-23e5-4df1-9f15-dbd0eb7a65ee",
        "cursor": {
          "ref": "ef168245-e81a-4c9f-86d3-0a8974750738",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f6407d93-4a54-474c-8644-614e39d981e3"
        },
        "item": {
          "id": "6ca4f757-23e5-4df1-9f15-dbd0eb7a65ee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "250c700b-9d6e-4f03-a572-2ecb3e1fde11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7ab404b3-cc14-440a-8456-8f87fb6b9e70",
        "cursor": {
          "ref": "f981855e-7d27-484e-91fb-515a992c6e38",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0491f02c-78da-4796-a228-1217fedb595a"
        },
        "item": {
          "id": "7ab404b3-cc14-440a-8456-8f87fb6b9e70",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cb2de299-f2a6-4590-991d-baaeb369b3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "68baeab0-d56e-4059-bee5-9f317961e346",
        "cursor": {
          "ref": "4efb1701-3eab-4f20-bd21-0e933afe0d8a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6c6863c8-16b8-445e-b8d8-fe1a1d4892c2"
        },
        "item": {
          "id": "68baeab0-d56e-4059-bee5-9f317961e346",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f9f2418-8b67-4bde-b96c-affcf397e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6fb1b06a-89d7-4a7b-8ea8-9580360bb5ca",
        "cursor": {
          "ref": "3736c6da-5c82-48af-9429-2ea166b69425",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54eae27e-c18e-444c-98a5-93b4dd3d3523"
        },
        "item": {
          "id": "6fb1b06a-89d7-4a7b-8ea8-9580360bb5ca",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d7bc3b94-f404-428c-b9aa-2476318a75f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "cd85a3a9-cbdd-42ee-a5db-9261b8989cea",
        "cursor": {
          "ref": "d6a6928e-bbb3-47c0-9feb-872f534b98d3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "efb39c17-9469-43cb-a4ca-a8bf71634408"
        },
        "item": {
          "id": "cd85a3a9-cbdd-42ee-a5db-9261b8989cea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ab094c44-b996-4ee9-a622-f88a412dccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ad41f6f3-0d97-4e86-8ee9-b5552d0edb5d",
        "cursor": {
          "ref": "170182ba-6e31-4b5e-967a-be434dda489f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1eeee7aa-ea69-4c2b-be08-ca125adb61d7"
        },
        "item": {
          "id": "ad41f6f3-0d97-4e86-8ee9-b5552d0edb5d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "430a0ec8-96bd-4189-a69a-7c0ff6c38e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "19f2b6da-103f-42d9-b5b6-f5cc57dd7572",
        "cursor": {
          "ref": "a8feea80-0d9f-4ee3-a24f-f41466839f80",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "67c2cf98-52d7-498c-a6d5-5b309ffec3e2"
        },
        "item": {
          "id": "19f2b6da-103f-42d9-b5b6-f5cc57dd7572",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0d35fcc-e7ad-4642-87de-dd9c2254567c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85d1b05-2eab-4c7a-8c8d-e8728f8d15b9",
        "cursor": {
          "ref": "f643c9ec-37cd-42ee-973b-63e687ea37c8",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52e560ca-40be-4604-97d7-7b042ad22db8"
        },
        "item": {
          "id": "c85d1b05-2eab-4c7a-8c8d-e8728f8d15b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ae5624f-4567-45b6-b58f-8a976a8d4b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a364c55-57c2-4644-b102-bd82bbfca5d0",
        "cursor": {
          "ref": "fe9c41b7-9b5a-4e7d-963a-7fb126c70dae",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "933ee0df-ab95-404a-8baf-5b277fa441ee"
        },
        "item": {
          "id": "5a364c55-57c2-4644-b102-bd82bbfca5d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "57270066-7d7e-4644-8501-e37d91eabd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29613e-4e94-4b58-ae99-8b665ba508c3",
        "cursor": {
          "ref": "c8c85452-02ce-4677-afae-a50c705d88a7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e465826b-9f1f-4820-83c6-361099650fc9"
        },
        "item": {
          "id": "0e29613e-4e94-4b58-ae99-8b665ba508c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1b9f4113-3a75-4e35-89b3-64bc6b3f52ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7cae64-2371-4cae-899b-1e059f52f2df",
        "cursor": {
          "ref": "bca17456-4171-494f-8c62-1c4dee7967f7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c613ae2-7a02-4593-b75b-b4f43c4a0f71"
        },
        "item": {
          "id": "4c7cae64-2371-4cae-899b-1e059f52f2df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de6ef389-c9ed-4655-949b-99e66acf0d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f890e98e-7364-4797-aa41-65d80f87d3ab",
        "cursor": {
          "ref": "d587db68-3d3c-43f3-9aa3-5552ccf01b5d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe43b887-d081-45fa-a8f2-b8845ead2f72"
        },
        "item": {
          "id": "f890e98e-7364-4797-aa41-65d80f87d3ab",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "606dd7d0-93f4-4ce4-bf5f-2cf4e66d88f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f2205f-3f2d-4abd-8dc9-98ed55c7cb58",
        "cursor": {
          "ref": "bea6273a-e986-4362-aa4e-a18dfdf35e6c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f79b156-e452-4a48-a68f-b6f2aae0eb19"
        },
        "item": {
          "id": "38f2205f-3f2d-4abd-8dc9-98ed55c7cb58",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10479a47-d181-42b5-a8bc-80ac5a2111c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c335f893-12c0-4437-a80d-50c854ad1357",
        "cursor": {
          "ref": "54248696-682b-48cf-8345-321cb24e33a2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d59f615-bf1d-4a47-be2b-e7c7df59f9ec"
        },
        "item": {
          "id": "c335f893-12c0-4437-a80d-50c854ad1357",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02ed5f07-ad5d-45ff-b796-5496c8b2538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7cebab-48b6-4d9e-a52f-713ab79fb01b",
        "cursor": {
          "ref": "e62c2a6d-e06d-4963-8533-77ea6344f23b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1cf64879-3495-4d00-9f73-bf13e38a4b85"
        },
        "item": {
          "id": "8e7cebab-48b6-4d9e-a52f-713ab79fb01b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8f65185f-179c-4f68-b0f7-404fb82dff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5ab708-ac9f-41c8-a039-06a840de3e7f",
        "cursor": {
          "ref": "47cf9b7f-29da-4995-a57a-85e2994cefed",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "95f2acba-2085-41d4-8365-f0597b4f0ecd"
        },
        "item": {
          "id": "0d5ab708-ac9f-41c8-a039-06a840de3e7f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f1df0b4b-b1f0-490c-9b2b-d042f7acf296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a78a65a-5fd0-47bf-b039-9ec59d227335",
        "cursor": {
          "ref": "e2dd6fef-77d0-4927-995a-d1106e968c8a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d4819232-b5a1-4de3-bcfc-70d17b27c4fb"
        },
        "item": {
          "id": "8a78a65a-5fd0-47bf-b039-9ec59d227335",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d85d54b7-c9bc-4b65-9ade-a6559dad924f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2e8bce-c0dc-4a17-8336-909007ecc80a",
        "cursor": {
          "ref": "a929d026-4260-4147-b93e-e781ccb944db",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1c313674-d243-43f9-80bb-15734b0f6b84"
        },
        "item": {
          "id": "bf2e8bce-c0dc-4a17-8336-909007ecc80a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "12c21d47-296f-4936-83e2-8de356f265df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b852b7eb-161a-428e-93d1-3ba9e9cb0867",
        "cursor": {
          "ref": "99f7f431-92b2-47ae-a3f8-32cba3235a21",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ebf16725-0df8-47cb-85fe-0eff817ba7da"
        },
        "item": {
          "id": "b852b7eb-161a-428e-93d1-3ba9e9cb0867",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "afb274d9-b5d1-4c9c-a0fa-c1a3742c261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06773294-8b04-48d6-9256-62967c6cf585",
        "cursor": {
          "ref": "03dc4cd2-12f0-4aad-bf85-55856afa7f74",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "82dfccd3-6d11-4989-ae81-cb7ba97c534a"
        },
        "item": {
          "id": "06773294-8b04-48d6-9256-62967c6cf585",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2929dbae-e618-4c59-a24d-d9ba215e5b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0663fadf-e7b4-45c9-801f-d1c5dcdbb795",
        "cursor": {
          "ref": "c3671130-a5b7-4886-97a3-92747495d629",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "15762074-d34a-4cd0-85f7-c7461c3a6e2c"
        },
        "item": {
          "id": "0663fadf-e7b4-45c9-801f-d1c5dcdbb795",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "091a5046-e686-4b13-83de-466da82199ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90376764-e1a0-4b75-bacb-8f2407f67781",
        "cursor": {
          "ref": "2af8e524-bd9b-4c5b-b441-3c55e3bf4866",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "43c864c6-6134-4e08-872f-4b9ce7519cdd"
        },
        "item": {
          "id": "90376764-e1a0-4b75-bacb-8f2407f67781",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28d7d127-05db-45ca-9870-b1b6fd3a1cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df706899-8f8f-4256-ab2c-b04a300fa365",
        "cursor": {
          "ref": "e1a53b00-37e5-4178-904d-ef3677c29cef",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "299ada70-cf45-4049-91e6-7a79f103ce70"
        },
        "item": {
          "id": "df706899-8f8f-4256-ab2c-b04a300fa365",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f9dadc90-3410-4778-9c34-49f4d3eca8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acae2d17-c090-43ea-a7dc-1a6e4af6dfd0",
        "cursor": {
          "ref": "053349ad-4483-4901-92f4-bb56a77c7405",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2347286e-559d-4048-9f7d-402a5d4dcc20"
        },
        "item": {
          "id": "acae2d17-c090-43ea-a7dc-1a6e4af6dfd0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7cdcce92-32e3-4c4c-b834-bba88cd963b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9a2337-cf8a-4400-b657-785f616cf525",
        "cursor": {
          "ref": "c7aa2023-f28e-4a85-a53d-5766de6a6a4b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f442afe-ec1f-475b-898f-f7873c2b4d49"
        },
        "item": {
          "id": "8d9a2337-cf8a-4400-b657-785f616cf525",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d9fa145-be61-47e0-8b53-a6240938b793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f15e61e-2290-4b13-b0c8-9d75652d93c2",
        "cursor": {
          "ref": "80ee1776-6981-45e3-94d3-ccdaade8f8ca",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "798695d6-6f73-492d-acde-aa8ae22fd744"
        },
        "item": {
          "id": "3f15e61e-2290-4b13-b0c8-9d75652d93c2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9dec9677-8c1f-4963-830f-c75d3f967202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef7736e-dbb3-4100-8521-acc4c88c5fbc",
        "cursor": {
          "ref": "f06369ff-f02e-4464-80e0-069973451ee6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dc9bde2c-7b04-48cc-9dea-540b486bbcaf"
        },
        "item": {
          "id": "eef7736e-dbb3-4100-8521-acc4c88c5fbc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8c4ac857-18d6-4a7a-ac8c-fda3d9ce1cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb7bcd7-0dee-4c38-899e-021b67d61802",
        "cursor": {
          "ref": "5feb8b2a-ebf7-4aec-a6a4-87a5f72478ab",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7d10b420-cae9-4d8f-883c-ae3a9100712d"
        },
        "item": {
          "id": "1cb7bcd7-0dee-4c38-899e-021b67d61802",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22c8d2ae-fbf8-4e56-bbfc-b767a8426756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68e0236-83de-406f-bb47-ae1b28f4f052",
        "cursor": {
          "ref": "ec98d53c-9b86-4c8c-86d4-92784df8e6f9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dc52bf68-5096-4090-b853-187cf5e2f76f"
        },
        "item": {
          "id": "e68e0236-83de-406f-bb47-ae1b28f4f052",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3c6ec6c0-3909-407c-aa9b-c847b16e3d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19f776-d020-4024-825b-e0d3d62de3f8",
        "cursor": {
          "ref": "7d8cd30e-f2a6-4919-a7b7-eff1f1a3c740",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "43e04621-da7c-4768-834b-93dfcdcc7700"
        },
        "item": {
          "id": "2b19f776-d020-4024-825b-e0d3d62de3f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd5da690-1a1c-49e3-93ff-6d56881057d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3497ed-5954-4268-8a83-0b275fe1871e",
        "cursor": {
          "ref": "47055ff7-3532-46c0-bb0d-95e96a975920",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "433ce5c2-fd33-45db-b5fc-eafb7558362a"
        },
        "item": {
          "id": "0f3497ed-5954-4268-8a83-0b275fe1871e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6027b724-b564-4051-9c1b-07942149e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fde6a74-e6b1-43f6-94ac-5aa196f6008d",
        "cursor": {
          "ref": "fdc6c52a-cde7-4b77-8eb5-abce180bdb18",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3bd209e2-7880-48fa-a80b-bc094b22e1e7"
        },
        "item": {
          "id": "4fde6a74-e6b1-43f6-94ac-5aa196f6008d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b1fe85df-63ab-4a3e-9ec6-128ee16ae75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee44efa-3843-4704-9841-497320766c51",
        "cursor": {
          "ref": "23059a62-e881-4cc7-9e7c-677d3fe39a75",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b331b214-d360-4242-9376-18ef14c2e153"
        },
        "item": {
          "id": "cee44efa-3843-4704-9841-497320766c51",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48124fe4-db7b-4c80-b2c7-5e719581e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1cea36-3e94-44dc-8264-c01813e372b8",
        "cursor": {
          "ref": "cfd11d2b-1415-4b0d-afbc-1c79c2232881",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "556a1d3c-a490-4bdb-ac54-6949f74edff3"
        },
        "item": {
          "id": "cd1cea36-3e94-44dc-8264-c01813e372b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b603c7c3-2af3-48f3-b32e-d28ffb8e25b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410da21e-b6a0-412e-aa96-559c388d8ddc",
        "cursor": {
          "ref": "37f02751-a82c-42bf-97c9-e283d553359f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "12fc7c93-edb3-4dda-a299-c22fc1919d02"
        },
        "item": {
          "id": "410da21e-b6a0-412e-aa96-559c388d8ddc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "99ae2ff4-eb86-4e57-98f6-55b78fca4002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4648e4b1-57b2-4f17-a538-cac10801144e",
        "cursor": {
          "ref": "df705fa1-ac2c-4de3-92a9-8af9719b11ef",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "63e731ce-32c7-4f8d-bf0f-2d20f82450a8"
        },
        "item": {
          "id": "4648e4b1-57b2-4f17-a538-cac10801144e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38974b55-d1bd-472e-b6bc-fccb5b668b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36873064-d75c-43f5-a1e9-4c358cdc367a",
        "cursor": {
          "ref": "84662b67-9484-4ec0-8347-23e2f0b0a210",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c3eb7d53-8d5b-4e23-8330-7b9206ac7897"
        },
        "item": {
          "id": "36873064-d75c-43f5-a1e9-4c358cdc367a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "519c1b34-de9e-40e3-a993-2bb154725de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc720d-bb16-44e5-b829-6cecf675f1a2",
        "cursor": {
          "ref": "36e35b2d-6ada-4ea9-a8a7-67e949430f51",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f8a06f85-f2ae-4288-ad0d-d4207017660f"
        },
        "item": {
          "id": "70cc720d-bb16-44e5-b829-6cecf675f1a2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e0d4d6f3-e566-4e53-8466-863aba5a7698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdd2a41-985a-40e4-bfd4-1844b4d8ce2f",
        "cursor": {
          "ref": "823c8f1f-04a8-4c0a-a567-82fa2f219584",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dce6b121-9cac-406f-8fac-7bb71a5b8cef"
        },
        "item": {
          "id": "6cdd2a41-985a-40e4-bfd4-1844b4d8ce2f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9aff6b32-febe-4baf-9f1d-2472fe5ce09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d9707-4e55-43a1-a3ba-21b70f6120ca",
        "cursor": {
          "ref": "d98f7f4d-9bef-4b5f-9d2a-a0dfa42a7f30",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "743cc12a-70a4-478a-8f87-92a7574caa41"
        },
        "item": {
          "id": "db1d9707-4e55-43a1-a3ba-21b70f6120ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "936d7e50-741f-4e81-8857-be6d90faa767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0190c62-7ecc-4118-a786-e19bfc3aa750",
        "cursor": {
          "ref": "3c122f1b-dd0c-4813-8441-c3810b364040",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d55f37f-edb5-436c-862b-f777f8f6e615"
        },
        "item": {
          "id": "e0190c62-7ecc-4118-a786-e19bfc3aa750",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "312692a9-d6f8-4d99-9f4e-f8e93fb6ac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074754a5-5d22-4e62-a454-f80467834efd",
        "cursor": {
          "ref": "1976e149-78f6-4fc3-aaee-593974394fb6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b22fc517-5b52-400a-a617-1edefac7bddd"
        },
        "item": {
          "id": "074754a5-5d22-4e62-a454-f80467834efd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ecd0b1a1-ac30-4f32-81d1-ba817bbaf7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e372a-7679-4f0a-a0f9-affd32ecf4a4",
        "cursor": {
          "ref": "22e3f657-81cb-42d8-aad5-5edd13820445",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70def262-d10a-4499-a673-e05c873558db"
        },
        "item": {
          "id": "fe7e372a-7679-4f0a-a0f9-affd32ecf4a4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e06ab03f-fd2d-4459-abdd-90737d2a6ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ce9eed-2b2e-4457-8567-4b49c0bf63b6",
        "cursor": {
          "ref": "ccc4ef25-3b52-4951-9e46-c8f52c09c7eb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3485d967-57f5-4d8e-96ba-8fb1db00153f"
        },
        "item": {
          "id": "43ce9eed-2b2e-4457-8567-4b49c0bf63b6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2268c7b5-3266-4b83-a50f-9ae646d8ad07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f459f0-00f7-4831-b05a-71bcc60bb44f",
        "cursor": {
          "ref": "892f982c-9ac0-4e75-8a92-28c1bfc9a3c1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2cb0bbbd-21c0-40a2-93e3-77c876006ddf"
        },
        "item": {
          "id": "d6f459f0-00f7-4831-b05a-71bcc60bb44f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "31ef2875-22ab-440d-991e-dcb6043e2cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f40aeae-3ecf-4130-83b1-4c8565977438",
        "cursor": {
          "ref": "86a2b581-2715-4f76-a25c-8a29bc543534",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "211a5a0e-89cc-457a-9bf0-9437047457a0"
        },
        "item": {
          "id": "4f40aeae-3ecf-4130-83b1-4c8565977438",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a4d58e5a-eac8-4079-9cdd-9285197e514b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d70483-c17c-458e-8dd3-a4e88a73132c",
        "cursor": {
          "ref": "9b0101d0-94b4-4831-af00-ec1844ad41b3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "63935d08-27f0-448b-8c93-7b8e31100239"
        },
        "item": {
          "id": "92d70483-c17c-458e-8dd3-a4e88a73132c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ed959207-409e-4f2c-aa69-d7fa1d2be1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd4305-82f6-423c-b07a-4d982892b345",
        "cursor": {
          "ref": "109ef813-1306-44eb-8a49-cea1b12d13c7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ae9e8f2b-1d3b-4cbf-9d0a-c6fdfb8a1f77"
        },
        "item": {
          "id": "47bd4305-82f6-423c-b07a-4d982892b345",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ce23e545-1dbb-46ac-9454-de22f8067d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7f3663-1ce9-4ecf-aa17-34b7c09b0a75",
        "cursor": {
          "ref": "bd593c46-343c-4819-86e2-c74258a27885",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f97a301f-2dd1-4ab1-9b6d-0d4e9bea9113"
        },
        "item": {
          "id": "5f7f3663-1ce9-4ecf-aa17-34b7c09b0a75",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eb22ca8d-5b84-4468-a77c-64f4fd11406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3213fb-ee20-457b-b059-2ab5e866d58f",
        "cursor": {
          "ref": "1891d44b-5bdb-4011-9eb2-1f2d6c36b93d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b09c70cd-8c48-44bb-b26b-6a5fb1073505"
        },
        "item": {
          "id": "3e3213fb-ee20-457b-b059-2ab5e866d58f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f08000f6-527b-4668-859d-cb7bd9d31d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261e9dc1-d3bf-46b6-bf14-fa47e7b13998",
        "cursor": {
          "ref": "6931b9b8-5f75-4a8a-8bcd-de56e02c7509",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37fd8cf8-9c16-4590-8c46-cbf68345ab04"
        },
        "item": {
          "id": "261e9dc1-d3bf-46b6-bf14-fa47e7b13998",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f5299f60-1df9-47fb-beb1-8bc0ecac836d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e16f1f-a080-4558-bdb6-ccf16f431c81",
        "cursor": {
          "ref": "8c65770a-a43c-4cc8-996a-253bfad5e7a0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2c6a0420-6823-41f9-89b9-fd3f2bcd3397"
        },
        "item": {
          "id": "b1e16f1f-a080-4558-bdb6-ccf16f431c81",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ccc970b8-dcc7-4a33-9452-886a4023af28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264742dd-7ebb-4159-8954-54c1e4f98272",
        "cursor": {
          "ref": "e82155bf-7fdf-421b-9891-9567690b6801",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5bc232fd-4700-4cca-a426-1172736383d8"
        },
        "item": {
          "id": "264742dd-7ebb-4159-8954-54c1e4f98272",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "86776ae0-37f6-49e5-90dd-04e54815d966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c65ffb-b84e-4e00-a210-4bdea665e2a9",
        "cursor": {
          "ref": "3c0ac730-e961-4f0a-8475-7b5f8ecf3b84",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "df47972a-89ed-4278-8e70-e2d5ae7c042a"
        },
        "item": {
          "id": "d3c65ffb-b84e-4e00-a210-4bdea665e2a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "25b6a10b-2e61-4fe7-96b6-3db018703951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc736bbf-8ad3-4040-a634-88107c0f9229",
        "cursor": {
          "ref": "21ffdf5e-9596-492b-9fd8-d2ac7c9ca39a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "917cf516-87b5-48a1-9a57-b612f14b18d0"
        },
        "item": {
          "id": "fc736bbf-8ad3-4040-a634-88107c0f9229",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "070347a7-5b9d-4f1a-9a25-ac091bf2511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8250fb9c-74b2-46ab-903a-e07a1ffe7c66",
        "cursor": {
          "ref": "882abf4f-1175-4ad6-8ca6-951aae83094f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "008b1531-4a1f-4bbd-98af-2701fd2d66ea"
        },
        "item": {
          "id": "8250fb9c-74b2-46ab-903a-e07a1ffe7c66",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "166a562c-ebd6-4cbd-9789-9456d676911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf2a293-3bf7-444f-abc5-d2a5fe97fd52",
        "cursor": {
          "ref": "cd553a7b-1834-4418-b938-6ea95edf4411",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ed2927a3-886a-4286-98d7-8730ddd6f1e9"
        },
        "item": {
          "id": "bbf2a293-3bf7-444f-abc5-d2a5fe97fd52",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "987d8e38-8040-48d2-9338-dbfe6f9b2fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96d99b5-a0a9-4ee0-baad-496d92cb6a84",
        "cursor": {
          "ref": "7ad3e405-32bb-451a-9e6e-0ce3eaeb7ac7",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2eee2fe9-9500-4fd1-8d30-c943593495ab"
        },
        "item": {
          "id": "e96d99b5-a0a9-4ee0-baad-496d92cb6a84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a1e12f31-9086-4ce0-b39e-a909b0738218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91e97a8-0fa6-4f70-839a-3e110bd3a95a",
        "cursor": {
          "ref": "f78a4939-09a4-424c-a3b3-9bd3a96add80",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b18d6bf-96de-4eea-9f32-c068465da6a7"
        },
        "item": {
          "id": "b91e97a8-0fa6-4f70-839a-3e110bd3a95a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "de576fa2-0774-48d0-81ed-56b41556459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82345ed-30f5-4e24-bd80-e36ec81d7b07",
        "cursor": {
          "ref": "03f0f7a7-f2cf-43ff-81a9-8d304703fbd6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "13a998c7-3a48-4524-a689-a3884265d973"
        },
        "item": {
          "id": "a82345ed-30f5-4e24-bd80-e36ec81d7b07",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5aecaa3f-3c6b-41aa-9f99-b6cb5190d280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7701456f-e07b-48b4-9cdc-2a9356ad3776",
        "cursor": {
          "ref": "4901e95f-474a-4920-87c0-c0fdca16cb4b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1aa2c638-d1d8-4e0b-abc4-3529b7afb3ea"
        },
        "item": {
          "id": "7701456f-e07b-48b4-9cdc-2a9356ad3776",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8c56e76d-668d-4256-a5b0-cac5d9858772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43887411-bbc1-4aa4-ac98-6bd13c119aa3",
        "cursor": {
          "ref": "ce96b862-ae36-4b10-9806-66246f8a7e07",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e173b39c-3503-4b9f-aaea-ffdfc839c605"
        },
        "item": {
          "id": "43887411-bbc1-4aa4-ac98-6bd13c119aa3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e557a4e0-9b69-43c9-8fed-aad66e9df207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68354d6a-82e4-4655-9d05-c33a8cf7c944",
        "cursor": {
          "ref": "7e1e5cec-4255-4b27-9761-71140f84daaa",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "82adc855-a018-401a-9331-6114493ff93a"
        },
        "item": {
          "id": "68354d6a-82e4-4655-9d05-c33a8cf7c944",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6c46480d-ee10-44eb-a8d6-888c0be3e257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf269fd-253e-47e7-a12c-1c20b2957099",
        "cursor": {
          "ref": "015797ca-a3ff-463d-98b6-335d7777a4ed",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "099d6d6a-43ac-4304-aefa-b52fb8d0bcfb"
        },
        "item": {
          "id": "adf269fd-253e-47e7-a12c-1c20b2957099",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "020c7c9a-4c14-4255-ac92-05222334f7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307a834c-e212-4a6f-b61c-d723f896687c",
        "cursor": {
          "ref": "af8ae46c-1bfb-440f-b7e3-a7a6b7420992",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6ae2ed6f-8168-4f8a-a2c9-24d1ac0c89c0"
        },
        "item": {
          "id": "307a834c-e212-4a6f-b61c-d723f896687c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b7d01168-3659-4b6e-8a6a-ef311f2e5a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0751462c-1ac2-494e-bac6-c78063194549",
        "cursor": {
          "ref": "55680406-4626-40b1-b8aa-50c5d557341c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "45ec0b22-52c1-472c-b0b8-ac4a7b413ac1"
        },
        "item": {
          "id": "0751462c-1ac2-494e-bac6-c78063194549",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61fe29a2-6d35-437f-8c23-de73101967d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73955161-8902-4943-b8bb-87879c8b5b3f",
        "cursor": {
          "ref": "32df36e9-7aa1-4272-b1fe-af37d399bc2e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "af7e7ce9-2f1a-40c8-8b89-0c82f191eaa6"
        },
        "item": {
          "id": "73955161-8902-4943-b8bb-87879c8b5b3f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ccdc7c5b-65e6-4879-b90f-39ec4630f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f74266d-cca2-4bbc-8363-ef9d0bb08172",
        "cursor": {
          "ref": "8773bfd6-e533-44b3-b6d2-3f00cc96bc65",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8ce61696-da25-4db8-992b-e5b295057067"
        },
        "item": {
          "id": "6f74266d-cca2-4bbc-8363-ef9d0bb08172",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a9a4a514-6dd2-4c92-978f-80a93217e93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f60f07-222e-4de2-b24a-f0866970f548",
        "cursor": {
          "ref": "925ee46e-47b1-4d96-80ba-98c2ca618dfd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "90c4e3f4-d45e-4859-82b6-29d04f6fd6f6"
        },
        "item": {
          "id": "28f60f07-222e-4de2-b24a-f0866970f548",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3720d0dd-2c6e-4e14-80aa-83aa53b98de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f50da7-c7e1-41f6-b5b5-50067597593b",
        "cursor": {
          "ref": "8d7c2f19-00ee-4f47-a901-9eefe5f10f6c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a6fa3c3f-6a6e-450c-9f19-3d7a5c81eb47"
        },
        "item": {
          "id": "d5f50da7-c7e1-41f6-b5b5-50067597593b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c9e1eb1b-56a5-4dca-97dd-3cdc7b430e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da4cfc7-939a-4851-b54e-6a89570f87fb",
        "cursor": {
          "ref": "2924e5b0-26a5-490c-ab87-cbb9951cfde0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b1774f5-d861-4f00-8262-8f013aa88dd9"
        },
        "item": {
          "id": "9da4cfc7-939a-4851-b54e-6a89570f87fb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6c7befb3-63dd-459e-ae92-d5aaaf4b4be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0c8a17-010f-44b9-8d78-adcde9014b71",
        "cursor": {
          "ref": "30316b7e-e431-4f2e-9b60-8f3535b5398a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b694fbbe-1747-4aca-b2c1-62142f4c0e12"
        },
        "item": {
          "id": "8a0c8a17-010f-44b9-8d78-adcde9014b71",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "87b0aeb4-a637-44fa-bf93-440e5e8dcaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b7993-e0b8-4d89-9406-caf9ae855098",
        "cursor": {
          "ref": "e9d7d636-1887-4377-b1fd-3f484429878b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cf04dd2c-cadd-4e52-8b84-d65261f87166"
        },
        "item": {
          "id": "f97b7993-e0b8-4d89-9406-caf9ae855098",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "85fc84ad-9e5c-4fe9-8a59-9c06bdc802de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1597e3df-1fbf-4eb2-ab89-e807343c8344",
        "cursor": {
          "ref": "2e1cc9df-d7e6-4d4a-9cd4-58dea58d42c7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "87f480a4-f0ed-4b51-9bed-71b762151a88"
        },
        "item": {
          "id": "1597e3df-1fbf-4eb2-ab89-e807343c8344",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a7a2479f-b4e6-4b8f-a401-908053e4668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ac25d-1f8c-426f-8cc6-13030d909846",
        "cursor": {
          "ref": "e875f4ae-bcd0-48d7-a3d3-0a78c285a838",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1824dc2e-c159-43ad-bd82-422f892f64f6"
        },
        "item": {
          "id": "a76ac25d-1f8c-426f-8cc6-13030d909846",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "74cb4c79-a2dc-4eac-b437-1f9ee771e798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e24c9c3-0291-4c0d-a049-ef93d358738e",
        "cursor": {
          "ref": "5375ed1a-6ef0-44be-8611-e375a0259b9e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "919cf940-de53-4753-805f-de3b00654ec5"
        },
        "item": {
          "id": "6e24c9c3-0291-4c0d-a049-ef93d358738e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "881f9953-7304-4c66-bec6-b00123350577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3104ac-38f1-46a3-bc10-0a67cffb57a9",
        "cursor": {
          "ref": "cad5a75a-06bf-47ad-a529-af758c0b27c7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9cf64ae-fc77-41a2-94f6-4b88f94d2aa7"
        },
        "item": {
          "id": "0c3104ac-38f1-46a3-bc10-0a67cffb57a9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "049ed702-284c-4edd-b717-484e21f9652c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa4dc5-d261-4225-8383-bdad6d7aa138",
        "cursor": {
          "ref": "2cc70457-fe48-48db-b6ab-9edd4566ba83",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ab0415a1-0590-433c-9f1d-00cd8c6384fa"
        },
        "item": {
          "id": "a3fa4dc5-d261-4225-8383-bdad6d7aa138",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e7cb47e0-25d7-47d0-a919-53d2c8421261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9cb47a-0d69-460c-993f-a07134c7c83b",
        "cursor": {
          "ref": "b3ba012c-f459-4c2d-bfb3-ccbe1d2b7ad9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c12bf0fa-6113-4bdb-95df-e94379706d71"
        },
        "item": {
          "id": "bd9cb47a-0d69-460c-993f-a07134c7c83b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f8cf649e-80ff-460f-b7b1-4dba30165d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0ee75c-1010-4f39-812e-a8751904e2dc",
        "cursor": {
          "ref": "72bab99c-08c3-41b0-a04b-8c50a1028979",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69bbc6ed-a55b-4810-9d04-964954f45ccc"
        },
        "item": {
          "id": "ab0ee75c-1010-4f39-812e-a8751904e2dc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72f44c22-3fa3-4a0f-baec-290e251f2535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f40e650-630f-4ab6-8467-3401d775b3d9",
        "cursor": {
          "ref": "a6ae97f5-32fc-4453-84cf-cf290f81e885",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ffc0dd1b-823b-4c49-92c2-131026074e2e"
        },
        "item": {
          "id": "9f40e650-630f-4ab6-8467-3401d775b3d9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0a434f8c-d358-4c51-9277-ac49c924d6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd8a9f-b779-4a35-a0fe-fbd13af9f4a6",
        "cursor": {
          "ref": "0ad6109a-cc07-48f6-a0e3-0ecd21f84d95",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "81ef27d4-d311-4849-9f29-5f63621e121f"
        },
        "item": {
          "id": "2ddd8a9f-b779-4a35-a0fe-fbd13af9f4a6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1e043117-6779-4cb8-b869-5ab0abbd5305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db99b57-3ce4-4202-a416-a1f68c3cd69d",
        "cursor": {
          "ref": "b7f7925c-a914-4b1d-8633-83199991df88",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7b6ab6ac-e880-4bd0-afee-49bf6d2ab96b"
        },
        "item": {
          "id": "0db99b57-3ce4-4202-a416-a1f68c3cd69d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "082efa32-2cb0-4704-a614-4d55d3087b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0bc373-18d0-4287-b023-353691ec830c",
        "cursor": {
          "ref": "4877d232-06a2-40f4-b993-7c3f165cb138",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23878ed8-7c95-40c0-8bf6-699498a4c294"
        },
        "item": {
          "id": "0d0bc373-18d0-4287-b023-353691ec830c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8e414aa0-f6de-48e3-ab4a-847597db12e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c4e884-3ae6-4968-91bc-a5e76ccfff10",
        "cursor": {
          "ref": "fb275af3-45f6-4fc9-a989-a516a3b326d7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35915bf2-f126-497c-ab8b-37f4621da12c"
        },
        "item": {
          "id": "f7c4e884-3ae6-4968-91bc-a5e76ccfff10",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa8966a3-af1f-4ea3-92fb-bd90808aa4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95808498-6093-4a4d-b5c7-7407d192c718",
        "cursor": {
          "ref": "c78e37b2-3aac-488a-ab1b-c60fb4454355",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e34ad11f-6c13-435c-9796-54cde9fedea8"
        },
        "item": {
          "id": "95808498-6093-4a4d-b5c7-7407d192c718",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "174600c7-6f4e-4bdd-819a-4c1a2883c80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b37ed9-61d8-41cb-acf0-b5956a54d458",
        "cursor": {
          "ref": "72bac0f7-d48b-454f-ac07-8d4727396b59",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b575852-4651-4f4d-9569-163b0e32f74b"
        },
        "item": {
          "id": "e8b37ed9-61d8-41cb-acf0-b5956a54d458",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "960d354a-e120-4b38-ab55-5de60eec8802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63966e0f-5ce2-4324-8220-bb8f2a5d22bc",
        "cursor": {
          "ref": "a080e44e-ef0e-4dfd-9e91-cc5ba71ec592",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e3ae746-4439-4709-8209-16de023c7513"
        },
        "item": {
          "id": "63966e0f-5ce2-4324-8220-bb8f2a5d22bc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5fdeea57-1994-497b-9fb5-eb7d4d840384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d68b370-6bd5-4ad0-8cf2-d11d939223b0",
        "cursor": {
          "ref": "9489968d-4c34-4a41-9070-cb7a35638445",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f01674b7-daae-4d81-98ef-4a4fc5ad5ace"
        },
        "item": {
          "id": "8d68b370-6bd5-4ad0-8cf2-d11d939223b0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d7c8f053-7241-4f00-a533-38570a77ef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e150324-c0d9-45e8-8d31-830049cef6ae",
        "cursor": {
          "ref": "f5b54dac-a339-4920-873d-057250d189ba",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1035ae82-51a6-4e8a-a67f-2cd529f44f53"
        },
        "item": {
          "id": "7e150324-c0d9-45e8-8d31-830049cef6ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "868954ac-d40b-4353-971a-1bb2cad2732f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a9c521-5e56-46bb-a1e2-552e8ebdb9fb",
        "cursor": {
          "ref": "36c8fae6-b1d8-4fd2-b4f3-6077a261ff18",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "347be4b1-3d43-475f-b85a-b04059c6f7dd"
        },
        "item": {
          "id": "e0a9c521-5e56-46bb-a1e2-552e8ebdb9fb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "91d1586c-bbd2-49fa-8f95-4bb0908447ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d323672-2359-479e-a4ed-df517b25593d",
        "cursor": {
          "ref": "11e2751b-9dd3-4165-9772-3537a7f72b84",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b69d0e9c-87ec-446d-b95b-f3faf3dc56da"
        },
        "item": {
          "id": "7d323672-2359-479e-a4ed-df517b25593d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "550e9af0-7e1f-4475-abab-090ed0454d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacef84f-edfd-4e38-87e2-124d209fb613",
        "cursor": {
          "ref": "5aef6169-8870-467d-bc75-f20ef49a430b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e195dfa6-f1b3-4d81-8e2c-22f2bf116014"
        },
        "item": {
          "id": "aacef84f-edfd-4e38-87e2-124d209fb613",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ebe9838b-db64-4ea9-a95b-75ed10083a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2745ab2-0c31-4d08-acea-ba7bee24b748",
        "cursor": {
          "ref": "a9ba915d-dea3-410c-9a08-82bb5d973add",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9792f0cc-0c6f-4201-a70a-1eccba45328f"
        },
        "item": {
          "id": "a2745ab2-0c31-4d08-acea-ba7bee24b748",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9936b721-f80d-4f4d-929a-64df37e40149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281144cf-38a2-471c-8564-0673b10549f0",
        "cursor": {
          "ref": "4a6f4238-58b5-4a1d-bc87-0dbb29254622",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b9864c3c-0b12-4e8d-910d-ad21ab1e11cc"
        },
        "item": {
          "id": "281144cf-38a2-471c-8564-0673b10549f0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ce03c87c-62f2-455a-9020-0bbe3b42dfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df3e40b-b8ed-4b26-8a18-c4ecdc643d5b",
        "cursor": {
          "ref": "86f3de8e-106a-42a4-a15a-ac3a5cc7880b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c3be34f5-ca7d-48a5-ada2-c7f7577b0abd"
        },
        "item": {
          "id": "1df3e40b-b8ed-4b26-8a18-c4ecdc643d5b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "01399d88-0d42-4197-b211-aa880839b325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52d484-c801-4024-a89c-a0906934b23b",
        "cursor": {
          "ref": "542a205a-4ef6-4d2f-b294-b76815b067d6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "083c9389-b0a7-462f-abdb-d999a97cfc7c"
        },
        "item": {
          "id": "eb52d484-c801-4024-a89c-a0906934b23b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c80904f1-73da-48e8-96e3-c291c3e20f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f980b6c-dafd-407f-bd1a-930da5967bd3",
        "cursor": {
          "ref": "4a2f7f77-9aba-478a-9983-8bc055ffb9f2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fd2b18b0-91ec-44b8-bd34-cd20b79ddadf"
        },
        "item": {
          "id": "8f980b6c-dafd-407f-bd1a-930da5967bd3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d3bb148f-cc40-473e-a6f8-575ec7b75f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee729a7a-b95e-47a7-af95-a7f876854dd8",
        "cursor": {
          "ref": "6f77c2ff-ecfd-4be1-8d0c-1f499b5f887f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a5fae886-6903-46de-88b8-51cd77f87b5c"
        },
        "item": {
          "id": "ee729a7a-b95e-47a7-af95-a7f876854dd8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8daa30e3-9176-42d4-b5c6-ba66e965f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebff1f1-9d2f-47c0-a906-2f0ef17714c8",
        "cursor": {
          "ref": "8f20a601-f69d-45b6-8d43-91d6a30204a6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2124a324-8e08-41c8-b877-d6387a1fae01"
        },
        "item": {
          "id": "9ebff1f1-9d2f-47c0-a906-2f0ef17714c8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "de0bc04c-7bc9-457c-8c86-9675b68f2a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e834d511-f9a0-474d-8125-e402a5535c69",
        "cursor": {
          "ref": "50e71943-a8b6-46e7-8c08-10c26817f2de",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be9cc2bc-3571-4efb-b176-a9f1e29f28bf"
        },
        "item": {
          "id": "e834d511-f9a0-474d-8125-e402a5535c69",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "577214e4-3dc4-4106-a5cf-6959d47d9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69946bff-4d30-4eff-ae1e-c757dd69ee13",
        "cursor": {
          "ref": "1f584cb9-b44a-499d-b492-ab0b8f8f5447",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "96744f09-43bc-43a6-b44c-e0547cb036ce"
        },
        "item": {
          "id": "69946bff-4d30-4eff-ae1e-c757dd69ee13",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "74f11515-c2b8-4795-bf0f-2121cd7f9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a603f-79ba-42c4-8191-d9fd5cd2fea6",
        "cursor": {
          "ref": "4ab28daf-0eab-4a51-9193-eee81b661541",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7f2e26fa-656f-4e78-9404-234851235863"
        },
        "item": {
          "id": "e98a603f-79ba-42c4-8191-d9fd5cd2fea6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e72d5e12-8424-47f1-bd7c-c57aceb22804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c91380-c0e2-4853-95e8-75916eb4465e",
        "cursor": {
          "ref": "bc4092a4-a839-467b-9c3f-34790fab2b61",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b1731bdd-87a8-46d6-bd7e-64757e09f217"
        },
        "item": {
          "id": "f3c91380-c0e2-4853-95e8-75916eb4465e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1eecf9fe-46c4-41ca-8a68-0d961e7a007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c023e-56d8-4eb3-a7c9-334f81c1a194",
        "cursor": {
          "ref": "629c8649-a29d-4ea9-b862-a530d61f742d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4322b2d-a898-4e13-8d44-5fa43188520c"
        },
        "item": {
          "id": "807c023e-56d8-4eb3-a7c9-334f81c1a194",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13e19694-3931-49b9-a143-d02e5f2ed323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c107ee-f8f2-41e0-988d-e0215b8ab5ea",
        "cursor": {
          "ref": "3e13d9d0-6b8f-4416-8dc1-351c3a109d50",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33d77d1d-0a16-4140-910b-93369601cd84"
        },
        "item": {
          "id": "04c107ee-f8f2-41e0-988d-e0215b8ab5ea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cc58b988-667a-4672-9f54-d911fd8ac589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f40bf1-04e3-4eb1-8bde-7b087031f3a6",
        "cursor": {
          "ref": "0292cbca-f96f-4ca2-90a4-5401e8380771",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a8906ac7-3a84-494e-a90d-360fccf2c73b"
        },
        "item": {
          "id": "29f40bf1-04e3-4eb1-8bde-7b087031f3a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d087076-bd7d-427f-af2c-4f757955238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2ddb3-2aef-46c4-b989-33a67819cee5",
        "cursor": {
          "ref": "3589f3f3-3a6f-4649-aee0-35aad9b167df",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc8aaacf-1c12-418a-9d09-708dc81bab69"
        },
        "item": {
          "id": "04e2ddb3-2aef-46c4-b989-33a67819cee5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "abe54b35-da75-4be1-a490-57247d9de533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83643762-f2df-4db4-96ea-44d12c23dcea",
        "cursor": {
          "ref": "ac204440-71ce-4548-903e-ac314c273f8a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aa2edaeb-8c47-4d37-ac80-dc8a94e40eee"
        },
        "item": {
          "id": "83643762-f2df-4db4-96ea-44d12c23dcea",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89f12a8d-5594-41ce-8f5d-32bb3718fa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84692ddb-dee9-48ae-b803-8e0c27ccd536",
        "cursor": {
          "ref": "c6c5c98b-7877-4f4e-9f60-b850c3b3a1ba",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "035b0490-e451-452a-a45c-b64bd054b8eb"
        },
        "item": {
          "id": "84692ddb-dee9-48ae-b803-8e0c27ccd536",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17654413-6a40-4ab3-b40f-aaa84bca318c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb2cc6b-fe0e-4db3-8aad-dc22f4103a56",
        "cursor": {
          "ref": "8eb50624-2b56-44e9-aaa9-f91f5a50ce0d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f4cd9579-cbd9-41be-ae9a-6d4ad5f96e78"
        },
        "item": {
          "id": "5fb2cc6b-fe0e-4db3-8aad-dc22f4103a56",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "250ea3d4-033c-47a2-8c35-6f3a70074b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2284ad7-3a98-4b68-a9ee-c4d410d1b101",
        "cursor": {
          "ref": "7792d88d-a1da-4b4e-963c-4c9a67eb3cad",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "952fc978-bbb0-4847-ad63-f25c34dbac93"
        },
        "item": {
          "id": "d2284ad7-3a98-4b68-a9ee-c4d410d1b101",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f2d6222c-2942-4738-9a72-ab9b5d454e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a154159-e198-4507-a8e1-ed2de4c380f3",
        "cursor": {
          "ref": "6553f564-0fbd-416f-bd8c-f6c2f103804f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6c23040-88c8-4000-abee-167e0b116d67"
        },
        "item": {
          "id": "3a154159-e198-4507-a8e1-ed2de4c380f3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8ae9aa8f-3ee8-4b62-93f2-013e963f09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e885fc5-eccf-44ed-913e-f1ae2c828ae3",
        "cursor": {
          "ref": "2236bb48-1ffe-4e61-9823-4f4d1de355ec",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7d243642-f8c7-4b15-88c8-021060e4d6c1"
        },
        "item": {
          "id": "7e885fc5-eccf-44ed-913e-f1ae2c828ae3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2270ee3-89fa-47ed-a582-94b9307e7640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462f6693-da25-4861-9674-16cc2d7cbd20",
        "cursor": {
          "ref": "c488dbac-8bb8-4561-a59e-b44e45d82f47",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8eb208a5-78b9-4260-b864-bb9d2847abec"
        },
        "item": {
          "id": "462f6693-da25-4861-9674-16cc2d7cbd20",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ce2a5dd6-638b-4992-a922-2aae03b68441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d5e732-bbdc-45ff-b1e0-31929b0cb61d",
        "cursor": {
          "ref": "a8bdd0fe-c3db-4986-b2d2-776359d0fe00",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af25d4f1-4e79-46ec-b38d-b7b55c47082f"
        },
        "item": {
          "id": "a4d5e732-bbdc-45ff-b1e0-31929b0cb61d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a8930fe-83e8-4795-92d9-5ef80bd55bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6874c699-ab74-401d-a48e-e9cfd14ca80d",
        "cursor": {
          "ref": "dd317906-2d49-4ea6-8058-36e6e1b6d858",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9ba582a3-32c6-4f75-95f1-e7939a8be254"
        },
        "item": {
          "id": "6874c699-ab74-401d-a48e-e9cfd14ca80d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7fa2082c-cdb5-400e-9468-58e43b03e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db928679-a4f7-44c5-a510-c7b4b6680974",
        "cursor": {
          "ref": "b0a616f8-a5bb-411f-884e-83d0e3fa1cfe",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c72236bf-c884-4b43-b6ef-05e953e95206"
        },
        "item": {
          "id": "db928679-a4f7-44c5-a510-c7b4b6680974",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b6076fd2-be53-4a1a-a65b-d4b9b5f4214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41d0b07-caa0-4cbc-8007-a58858ca35da",
        "cursor": {
          "ref": "b5ef860e-87a1-4ae6-bf4d-89737b829db9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "27ff7ece-7597-4bcd-999e-414f2067b329"
        },
        "item": {
          "id": "e41d0b07-caa0-4cbc-8007-a58858ca35da",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7758a5c6-5a08-497d-918f-15df20d1e551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe37f7-7879-4867-8437-8c2aa0156360",
        "cursor": {
          "ref": "e95a0d0d-c380-4d49-867f-e5f660ffdef0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "04c46f32-c0fa-40e6-aa58-c4e30a1b4468"
        },
        "item": {
          "id": "fafe37f7-7879-4867-8437-8c2aa0156360",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fdb8ab09-38de-495c-ac4e-4574d4c04306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd02d6-28ca-4719-a903-c2f5b590af86",
        "cursor": {
          "ref": "797f34e2-14fd-45d1-85a3-9b29fbb7d6d8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9dc936b2-d829-4234-9eb2-fd68ed98efd0"
        },
        "item": {
          "id": "40fd02d6-28ca-4719-a903-c2f5b590af86",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f466a294-ddca-46b6-9506-507746415f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac15b897-7ff8-4d41-b743-d4ed07829dde",
        "cursor": {
          "ref": "47b09302-13f4-48b0-a4bc-6070efc2d33f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98c5e9ff-85d8-4ffb-a0ba-567a2417eba7"
        },
        "item": {
          "id": "ac15b897-7ff8-4d41-b743-d4ed07829dde",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94f20b8b-89dc-4591-96a1-f783e546cd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2228a732-c262-4ad4-95ec-ad5068013fd6",
        "cursor": {
          "ref": "f1528ab6-6893-4de1-b2ef-ef7393591e56",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ed87a009-a043-4db8-b77f-d79e455c3851"
        },
        "item": {
          "id": "2228a732-c262-4ad4-95ec-ad5068013fd6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2f5ecc1c-94f5-48d0-8c59-b1ed158b994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099da96e-f175-4c6d-9fd6-bdf99d661cb9",
        "cursor": {
          "ref": "660a2369-63aa-4a2c-9f5c-6f7b17968e99",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c0a727bf-02c0-465f-b25d-897d94cdabb2"
        },
        "item": {
          "id": "099da96e-f175-4c6d-9fd6-bdf99d661cb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1bce58da-054d-4efa-a067-2b7cb25b209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2ee558-f077-4737-8e9a-5b0f7a6386d1",
        "cursor": {
          "ref": "86931c65-6374-4a06-950b-35147ed23c4d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "63754b38-296d-457e-8e40-69e3b5e58f98"
        },
        "item": {
          "id": "eb2ee558-f077-4737-8e9a-5b0f7a6386d1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0469abdd-6f45-4cc5-9d3c-5d02ebf03312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90099733-1c2e-44fb-9f89-40197ab14065",
        "cursor": {
          "ref": "a34618a5-19ca-4b0c-a83e-eb5b98fbba52",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f055e47b-10df-4d73-9fbe-6aa75b510060"
        },
        "item": {
          "id": "90099733-1c2e-44fb-9f89-40197ab14065",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c76c3ff9-c808-4236-aa2e-70b2521967e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff421d2-0efe-4e5a-bdc2-eb46267cbf3c",
        "cursor": {
          "ref": "76789898-7f0e-45e1-a7de-51b3606c0365",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0480f1be-0848-4d3f-a06d-b4daf6942c49"
        },
        "item": {
          "id": "1ff421d2-0efe-4e5a-bdc2-eb46267cbf3c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4aac081f-7a04-417e-94df-5498d7950a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c767b0-e6ca-4f3c-9dd4-38ea73012bd2",
        "cursor": {
          "ref": "7ef491be-90c0-4ebd-83e6-72332c78125f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "12859a75-2841-4f3a-925f-4bde72f2c854"
        },
        "item": {
          "id": "c6c767b0-e6ca-4f3c-9dd4-38ea73012bd2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "74dc2de9-9e5e-4c96-8e95-50b04a73e453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a12a906-b148-4ffe-954d-e3178542400c",
        "cursor": {
          "ref": "1f9e106f-8266-4bee-a6a5-1661e4de668c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c1a9c89e-59a3-4fb4-bbae-3bda167c1fb8"
        },
        "item": {
          "id": "3a12a906-b148-4ffe-954d-e3178542400c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f467d394-5507-4aac-b7f7-3ad3f5acbfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a90612-8960-47e1-b275-067796202f22",
        "cursor": {
          "ref": "dd70b5a4-3778-439b-880c-d2e1549e248f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "310d9df5-2c12-447d-95f3-285cce643233"
        },
        "item": {
          "id": "b9a90612-8960-47e1-b275-067796202f22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "29ed05d0-bef0-403e-baeb-8323f979d8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a16c71-8ae4-49ed-8adc-83a29f8acb94",
        "cursor": {
          "ref": "6bf744aa-9caf-4c9a-a372-4be2f5f4ee76",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "af1500b9-7fcb-4c2b-aa96-b8d80c613f16"
        },
        "item": {
          "id": "91a16c71-8ae4-49ed-8adc-83a29f8acb94",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e001b58f-a466-45d4-bcbb-02e76a0a269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88425b7-d627-47a7-9038-6195064360c0",
        "cursor": {
          "ref": "ab27b608-ccc4-4f80-ae01-2dea2dc65525",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e32226bc-d784-4b82-bc2f-f46df82dcf5e"
        },
        "item": {
          "id": "a88425b7-d627-47a7-9038-6195064360c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "06fc9930-0224-4c85-beb2-3704add8e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8aa2ce-e093-4b32-a3d2-c0352cd90013",
        "cursor": {
          "ref": "be91c006-e55a-49af-a9a1-6ff3fedd482e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "15b24efd-4500-4f69-b85b-615abf16870c"
        },
        "item": {
          "id": "0d8aa2ce-e093-4b32-a3d2-c0352cd90013",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "513c3b96-68f5-4501-9237-ba4d8f1e0f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7864d168-7c2d-439e-8891-370abc2dc42f",
        "cursor": {
          "ref": "a07b07ff-3429-4902-afea-ef3f54794423",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "be4e6e6d-c8aa-41e6-8bfb-ff5134b31712"
        },
        "item": {
          "id": "7864d168-7c2d-439e-8891-370abc2dc42f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "58c5c7b3-f9b1-4292-9256-2623f67b2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb27ef89-0f57-4c2d-b148-2ce2513e33ed",
        "cursor": {
          "ref": "155d09cb-d419-4e8b-84d6-ea8df9d00728",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "16aed8ba-8dbf-4b5d-a807-2c8a29a22b1b"
        },
        "item": {
          "id": "eb27ef89-0f57-4c2d-b148-2ce2513e33ed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5d3ba9b3-a0e4-4dbc-a9bc-7d105169375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9925643-a38f-4c13-9ad5-49a8e0512594",
        "cursor": {
          "ref": "d0cbab47-95c9-4c74-974f-a0459eeeb40c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0a327a81-46dd-4de2-9028-fb9c76d2694f"
        },
        "item": {
          "id": "a9925643-a38f-4c13-9ad5-49a8e0512594",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "db2c2f99-8fd1-445d-991a-c1a48b0491f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42029aaa-b0a2-47fc-8525-239c7c32f269",
        "cursor": {
          "ref": "94850d0a-836a-434b-ba54-dbe872f94f86",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f5157387-e058-4c60-b529-f70bc6118e47"
        },
        "item": {
          "id": "42029aaa-b0a2-47fc-8525-239c7c32f269",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b640ae98-49f4-4d62-b727-2eea87f12f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52876f5f-5a23-4fbf-8369-a04e17201e69",
        "cursor": {
          "ref": "1d4b1a83-c985-4e11-8b8a-cefb1d6fe723",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "85254738-522e-4a0e-995f-5e214dbbfdfc"
        },
        "item": {
          "id": "52876f5f-5a23-4fbf-8369-a04e17201e69",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "be7fec11-b411-45ca-ab7a-d3b4cb25f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c461abf0-057a-4a32-8b62-70bd2dd5b70a",
        "cursor": {
          "ref": "f6cd7647-639b-4f8d-826e-d0907ff20db7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2abd884-6bc2-46b3-b94f-30669640161f"
        },
        "item": {
          "id": "c461abf0-057a-4a32-8b62-70bd2dd5b70a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "80311dde-423c-4a70-a8a5-82b349b33edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e42e04-2bc6-4f33-a014-67a948fe53bb",
        "cursor": {
          "ref": "d6db8073-7dce-4954-823d-0bb08468b33a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ef75fb69-3341-4c7e-a314-5bd1569b6d6e"
        },
        "item": {
          "id": "32e42e04-2bc6-4f33-a014-67a948fe53bb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1d060c6-6d05-4a16-a0dd-95a032a16bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b723805-a931-4f5f-af05-2da0709f480a",
        "cursor": {
          "ref": "edec8149-62b0-432f-9efa-7aee3b5ec8d0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "051abb50-3e7d-4c07-8458-3c8e514ef099"
        },
        "item": {
          "id": "2b723805-a931-4f5f-af05-2da0709f480a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f95795f0-3ed8-4988-83b3-45d6f04018a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5003f7db-7fe5-431b-a664-f6de5e5d8509",
        "cursor": {
          "ref": "0578726b-2607-4c9a-bdf4-aeb2768346fe",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b0e91ea-a896-4aa6-b0c4-20b788db9afb"
        },
        "item": {
          "id": "5003f7db-7fe5-431b-a664-f6de5e5d8509",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "93a032e2-d648-4ebb-9694-21fe7c49493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a4f63c-e4e7-4ba0-b80a-3d43ce6660c4",
        "cursor": {
          "ref": "8109be4c-553a-480a-b401-591480fe66cd",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "013d6743-4c12-4908-aeaa-bc65230caefd"
        },
        "item": {
          "id": "79a4f63c-e4e7-4ba0-b80a-3d43ce6660c4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "193ae5a0-5860-4a18-b0dd-3edcdab106ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "2dee819b-03c3-4e1a-a8c2-a53ef1882845",
        "cursor": {
          "ref": "94b85997-bcc2-413b-9bfe-bb2e16d0c664",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71fd6f16-c3e7-4d9d-8d90-13e5b809af76"
        },
        "item": {
          "id": "2dee819b-03c3-4e1a-a8c2-a53ef1882845",
          "name": "credentials_verify"
        },
        "response": {
          "id": "60415751-b5f9-4bec-b8ca-7378edda5128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "193fa3a4-4e1f-4212-8329-3c8edad2e131",
        "cursor": {
          "ref": "5fe1c3a2-01f6-4346-be44-cd0f2381961f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0445a3c2-7ea4-42a7-8c83-b5709d605c3f"
        },
        "item": {
          "id": "193fa3a4-4e1f-4212-8329-3c8edad2e131",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "401338da-1437-44ba-8672-a2ac437e4d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "9fb34499-b860-4224-8f0a-5504915d0c32",
        "cursor": {
          "ref": "8fc77f17-1543-48f8-b0fd-eb52483627d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a16d9be0-0025-47d5-8dc8-237316375283"
        },
        "item": {
          "id": "9fb34499-b860-4224-8f0a-5504915d0c32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89a426be-c8d8-4370-ab87-7e0f8a89b7fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb34499-b860-4224-8f0a-5504915d0c32",
        "cursor": {
          "ref": "8fc77f17-1543-48f8-b0fd-eb52483627d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a16d9be0-0025-47d5-8dc8-237316375283"
        },
        "item": {
          "id": "9fb34499-b860-4224-8f0a-5504915d0c32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89a426be-c8d8-4370-ab87-7e0f8a89b7fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f03e0-ea76-44c9-a2a0-c646ab5df82c",
        "cursor": {
          "ref": "a6caa173-b95b-4731-a25f-d4b55bb2eb27",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1aae9115-4264-42be-a859-5331ede5f676"
        },
        "item": {
          "id": "022f03e0-ea76-44c9-a2a0-c646ab5df82c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a7df95a8-05ee-4cf6-abbb-700db4eb01c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63696612-f842-4ddc-95f9-0bf7ac51f97f",
        "cursor": {
          "ref": "743c64d4-fbd8-47ef-99d8-083f20ae9d4f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4f9f7a71-7749-4747-925c-e44e803f1ea4"
        },
        "item": {
          "id": "63696612-f842-4ddc-95f9-0bf7ac51f97f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "597db404-ad82-49e0-8295-d92a26879636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}