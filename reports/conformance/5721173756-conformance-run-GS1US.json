{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2daec6ea-f804-4fbd-89e1-d9e63aa65499",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2dc5001a-19c3-4b9f-99e3-af3bb8d65921",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c49e601b-9de9-4831-9936-14d8dbb825ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d08004c-7f27-45aa-a1b0-9660478687b5"
                }
              }
            ]
          },
          {
            "id": "e8c002de-1407-40e6-9979-4c28351cf2e8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcd14787-b673-479e-a3a8-d035f14c43cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2cf5a90b-46c2-49b0-b575-1b3fc2f64111"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2a961eb6-e496-4f2b-b899-b2c3d74909bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "06156d2b-2fa0-4702-b43a-f49be6e5b014",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d085092-8b28-4ad3-a7e5-489b58647836",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a0e47b1-dc9b-4730-a3e6-dff49b116054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "819e1e6c-a3ac-4b7a-b162-31eaa30a0a41"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97249e89-edc5-4d66-9e73-ab2a8893c96d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df45ed16-603c-4f6f-9e64-933969921181"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a11cb8ee-f1f6-47ee-8c17-a7ec32ff0ec1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6f8a8bc-cb90-486b-8bbf-83dc72998c91"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cf883ab-58b8-4f45-aa9a-511fa9598679",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "72a04f10-a35b-4031-a705-fdfbcca01ad6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fa282ba-0735-4923-a90b-76145ed66b3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "854d075c-85aa-456e-a74f-cb85d6839e3b"
            }
          }
        ]
      },
      {
        "id": "b914e22f-02ef-4683-929f-bfb3b2eec97c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5b7487ee-78b4-46b9-82fa-1c9adc8165d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49c5e824-69d9-437f-8ad7-7da72ba8fbf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ba3b08b-c2ce-4dca-a11e-016bef0b9ca7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff4c304-e3d4-4cf5-9308-db9e0b85f7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b06314-be14-4471-b67c-c3924b4c690a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63ed12e-2c6e-4a8c-80db-1ca2341907b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ad905-ac33-44ab-9da7-f3c1319ab65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0518b20d-95ba-4c0f-ba87-6f523d5a8270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a89663-ebeb-44ab-8b43-f0e846a57eef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2613557-58e2-4bed-a432-005e59518259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fe67fe5-54e1-4e5a-b6a0-b2951f24d0ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f7caa10-2a0e-44d1-b57e-4f4a73abe05c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "790197d9-009e-42ba-b260-486eb3c07a79",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147c1ff-cf55-4d82-a9c0-d5756b45ad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91d6a7fd-ead7-40c9-abf6-acd119cfa1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df55c3-2776-42d7-92d2-2f88f00afa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5632d4f-df3f-4d10-a6ea-4d0c1198dfb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b7a277d-8090-491c-a55d-392a8a7c7d85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7efe80e4-320b-4a2a-a0ab-3b13866a1157",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d93d0aa-8cde-454f-9af6-ff11a2f7bd21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0beb8865-e8df-4d1e-ba57-f5cc92ebeff5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "190bf453-6c05-4f22-bd04-26a0c0a8e41d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aeff28e9-36ec-470b-bcbf-e0545bd19273"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7074f38e-23d4-4d38-b1d6-f53cf9f46078",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11e8d1d6-de63-4286-9a1c-e44369366538"
            }
          }
        ]
      },
      {
        "id": "3f4ce065-c5b1-4dea-a5ab-7c00d328545f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "af223eb5-643f-4f29-8e83-213c5011e83e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb86616e-711e-4be9-a84e-6564c9357e6c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6abf2052-1c37-468a-b7d6-c939e94ff41e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64958486-0615-468e-80f0-d56ddb66d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4143dd55-6491-41fa-8c4e-6d4b53067f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b477046-ebfb-4304-97cf-158bcf24f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecc6f330-3f2f-49df-901c-34d439ed0bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffbc1b0-fa60-4160-b331-554295d7b096",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a7ffaf-605e-401c-8611-4ca57e7a43e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c703468c-2d30-421f-ba06-cbfe1830b1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb98793-239b-435a-9508-5014afe16065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb47f886-8aac-468e-8c37-780d5b2ddc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0bc351-0367-4bd8-bf23-2790eade8fd1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a84c77a-e8d6-470a-ba5d-c907c0c8c91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00fffb5-92cc-434e-b5ef-a1121babda16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc46b51-386f-41fa-a7d8-5bc766aa3b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53cacec5-c5f3-41c7-bff5-0370191f8e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c1ebd2-79ce-4f9a-80e1-3204f51cd2bb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19654094-b365-43af-ac95-5198c7c30a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39c671a-94e4-4b6e-bc3a-2d53543dcdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a499bd46-a197-44b9-8322-2f3752c9b7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4a82283-8af5-4b1f-ae4b-e49fda7386fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe4d424-cded-4bb6-bc60-51400f84ac07",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c192a22b-8dc4-423b-8244-8b182639b0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511e6b53-8e49-4d54-b569-30bd0e624fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64010f06-c818-4762-9695-4bda76592d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a405df-9e32-415e-90af-92d4aef1765c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725a2140-9ca4-4c16-9b55-a3236bfb8e7c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b533e90-9d48-4c70-a455-985edc03e5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5ae4fc-f1ff-4aad-9c2a-933b58349a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e7e436-8557-44f2-9f90-4ad884f46098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc0add02-5c4b-4fc4-bb30-f7070956ec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1613c5-74c7-4b1e-b36d-011402d06e2e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7f4af9-45af-4d86-a075-327fec155172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb01d86-425a-4980-88fc-98a42411a426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3436da42-b60e-4fad-84bf-1fa1868fa362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a769c55e-cf80-4754-b9fd-561b69b68ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0005e34-a1d6-4e78-957c-1dc6463b7999",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53375af-c94f-4e13-bb7f-089674a59a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef16f4d4-aa84-47a0-a93f-08cee854b65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368527c6-9039-477f-9d2a-57b84ac3904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b57c2a1-a807-46be-b595-a4e5fac36bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44e2b6b-3130-41fc-b95f-2906dbf2e625",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfec6f4-1ab2-4326-b7b9-abf2e538c603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfc0721-3ae5-4ebe-8cc4-b5a55471f5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07543e91-c714-4f20-ba7a-82d550abb0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d907db0f-f30a-4d2a-9cd6-6c3a8dc8041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a95c03a-3f49-449e-a13f-9a592a69b836",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07df2e80-e7e2-4ac8-8486-583f76a5a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79538fb6-f350-4c25-9094-fbc24bc9d7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fce5a5e-4cc0-4eae-a6d2-c07e0c2837e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "756bca26-2ec0-469e-bc97-ad52a36f8165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40604694-fdeb-4e6f-ba0d-471db9aaaeb5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622e3f32-15c2-447d-b935-db69045a3659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54533a7-44a0-4b01-87d9-061a02ae309a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912174be-4c07-4236-a903-f497888e2341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebe73fc8-93d3-4e3a-b913-1d1acdac5d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e99510-7d68-4412-9643-9883436d8356",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5822857-a1e3-4301-8aad-ab49a9c2ae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde92949-3eaa-417e-a3ff-8f92e03474cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4144063a-86b4-4b1c-856a-341f0e8a1411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "947063e0-07da-4b5b-8a47-8d134f5efb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b68c97-5433-4718-b4ce-a6accaf082bc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9ffb2d-bf01-4bba-9922-4f8878bac50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185feff-74ca-461e-a89c-2458b7a155ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b55807-04f5-475a-9ab0-281ab752d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7e39fca-5871-442f-b643-2232ac969921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19937f94-04ba-4326-92b0-1d4cdd12f315",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030c6db8-e130-4842-bd07-dc30dae0e5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcc6809-9de8-41a2-a879-7a6b2dac9318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9967086a-ead8-43ab-861b-d9b99e02dcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8636f5e2-6177-4cc9-8e3e-47f12e7515f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16794280-f0b4-4bc4-82bb-c6bef555de5e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37930156-1dfc-4b65-aae2-d4649984e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b81879-b37b-4de4-89fb-7a9bcf72f2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfed663-ee15-4ce8-a912-0804e1fc619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee54e1a4-6c26-4c49-8030-38f06849fed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f2f81-4b0e-4ba4-861e-59e958a0a288",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3883023a-5f8d-4e37-aa67-88997519ce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0f00fb-51d2-456a-b3ff-74b2b4188385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00217ab6-8ed8-4eb3-9ab0-3b6d04683511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f795992-1a50-49e1-9891-d2e04c1ab416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4612dec-ba69-4923-aa7c-4fc0f718b19d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b5bb9-0b31-4b9d-90e9-479e7287c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1193c0-c011-4b4e-acf2-06fc192c7390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08698ea-ca4b-49a3-9acc-f6c5c2fc417e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43781c35-3326-489d-9ab5-e4bce6d362b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a009d70e-7755-4b8a-a3b1-9420200fdec0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37576e4f-eeba-4099-be12-ee86fb394b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0d1aa8-549a-46af-8a74-2796a4b30c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90fc67a-0bc2-4a4e-a499-0513068e31b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c541ee11-1647-4209-99f9-3ad80ac4798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78f55ce-7822-4424-8ebe-b07e6564c580",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffaaa12-cff6-4e96-8310-fa3d225ba9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f619dbb4-a7ef-455d-bf29-93baf0ce90ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1007550-63c5-4827-9fb1-96c52967e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5672f59-eb67-4844-837e-6fd70f9bcf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe974ff-7aaa-4a6f-9689-7004e44f72f3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3050a-7619-44d7-87c9-15be9fe74b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279821ad-4808-4f1d-b5e6-551df325cf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84aee7-2ba2-47f4-ab47-8a57ced06f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3019d031-4afa-4ee8-b31e-e9901211a141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89132f3d-fa82-40d7-98aa-7168f862b05c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780473fc-e0e8-4f9d-bfd0-ef2fd9b162cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75d1bdc-6ab7-4277-8998-f3e7982e8e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585a556-888b-4604-9e09-5e0471c5ea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b64f4db-de0b-4cf2-baf7-b383aa09742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90f6e79-08b9-4336-b53c-6d8241c2d569",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f56486-cdfa-4e1b-bf1a-07d7d51634e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52f04f4-00ae-404b-bfa7-734ae8ef8c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e763ae6-9643-439d-a458-d33dbd667a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94d8cc4-947f-4225-8a91-9eb46f57a526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c495e42-76c5-4335-914c-3ff87fac2cfe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e97a0b7-be14-49c5-819f-97c1c3ce4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf899fa-4f71-4670-973b-72ea14ca4c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d23545-4875-4b90-94ab-4b2579024539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43b2cf1f-40d7-4abd-bd9e-b0be509c3e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013ba75c-aef3-4fbb-be05-771e16beb152",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb56c8d9-a21f-4da4-b6b8-4714c70ac41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a68f8d-4674-41ea-a100-3ff4f16cbaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78ca7ee-d486-4f92-8fc0-c281f79bae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "069f3086-46f0-4e62-88db-e5feabe49f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1ed4cb-b739-4181-9ef9-e22bbaf3805d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f44b3c-d355-4a5a-a206-53d218b7bf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69df8645-0b6a-4bbf-a484-413a8a7ad107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a1ed5b-6300-4137-8d4e-7b62f3a73c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79309e61-9723-498f-9ecc-44939781ff74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4883058-00bf-4cda-9e8d-1d3dbfe328c6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd94588-9376-48be-9c6d-150ef99fac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47da33d4-16ed-4afc-a4c1-9292f01132a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39d8a5d-b793-4bf0-a4a8-30d37f001075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89535f0-7be6-4d22-be9f-974720399db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a41b29b-dc1e-4827-ae58-7bbe8a3d3444",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ade2a0c-a32e-4eaa-af2d-398e2519beb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6c82f3-3c27-451c-b8f2-9be49673d72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85564c62-94e2-430d-9641-7816af3ab651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71675645-d6d3-468f-8ff0-3952375554db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f28dd7a-5ff5-4770-9e77-5a9358c4ac67",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f5efdf-b90c-43d0-97d6-9344ad957592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcb7afd-3d3c-4d35-8fcf-1f9bc368de6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af26d0-5ad6-4791-9db7-554470ad0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f24b9f5-bc6b-4879-b5cb-40de94dc896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd9d8e0-5b93-4188-a196-c4919d49dc23",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6cfbb-5ed0-4679-81a4-cb50b3498d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f4635b-37f2-4283-a632-f4606c3c2871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e06a897-ec63-4fc2-b7e7-97116ec81ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11519e6-6c29-45e1-afa4-5cf28292834e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff58c5-07bc-4b91-8b1e-4a5102a7268d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0578990-7ea0-490e-8c31-71b8e16cd1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4787f4a3-ad02-41d3-8379-f0854c8d8988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f8a5cc-2c4d-4177-b862-073a67060335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d94b9ea-9274-4e69-b79d-cfab88f6bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94410a30-8f2f-4397-b163-fa9d0031219e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73e45f-2dbb-4b82-a621-0fa5f0eb08e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c740fe-0876-4d55-98b9-c3676e9db6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71a66f-e1ca-4775-b495-c5e1203b7ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb97b45e-7f6f-4eac-9a5d-2c39fffbab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7424b2ec-ac24-4ac0-a70b-752a816abd5b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6623aa-4b14-4a67-9bf7-ed9370191638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95721de-fe10-44f6-a92f-f17165a6e11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c73115e-d423-4a34-bb88-41ac617c9b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7bf4e8-48f6-455f-b48d-90d4d07ab599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9a2df1-57f2-4f4a-9eab-5fb415e3f4ca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d155f7-f599-45ad-9093-76daad142cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ada24e1-bea9-4216-a346-219c04c922ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb86feb5-a291-416b-88a2-ab73f424a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8446a2bc-5340-4257-a8c1-2f5dc14340d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65acc17-c28a-4bd8-88e1-a168aae89f2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676acc19-e78c-4c6f-b464-c958d43d3f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445a87ef-471b-4a9d-a200-6fb4e6fc69fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accb116e-b17e-430c-9fc3-76afcc736a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad53a6ca-8dbb-4441-a3b5-0fa4a08cd4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4cf3bb-a326-4220-8235-82cd311bca52",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2336071f-9204-4366-935d-678548331d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3d7c06-d357-44e3-9317-ad1dfad0d22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11e09a9-be7f-4f9f-b068-2d415851139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "163b92f6-bd32-4f19-be62-9b88b6fcdbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc91dae-4d87-4f1e-8820-9767358ce3a3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295ae324-8123-4a52-8d97-8be9f862a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ad2fc11-d593-40f8-99cf-569d2168e0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387a6449-3152-46eb-8bba-712306076cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbd9feb-d18b-4273-ae5e-8c5c319fec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f044a2e-92f9-4010-b84f-b80fbc6eccea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ac81d-fd35-4341-9961-7589a9bf5afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debe103a-e525-4303-a599-5faada6eaabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea21f9-8ebf-47b7-8090-0f6869c5bfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d122361f-7f0c-42f8-89a1-c4988f2330db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feceeae3-e5dd-4842-bb58-24c442da5f55",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e85a4b6-f0cc-41c6-8225-d6740776ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b237410-5f13-4c54-934a-bcd7a1ed182a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4857f9fd-d19e-46ee-b753-e61fc5bf22b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e62233e1-3a88-422d-859a-ceb108221ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46951cf6-8943-46d5-a611-5f2495071c1e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fbb979-8d8c-4560-ac40-9c7c86b3bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea50da7-5db1-4cc2-82e7-7074e9b4a560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1212a75f-19ec-4ec1-84e7-0b6f72a1dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8984bd4b-24aa-4233-9e36-79e8a00544e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa9672f-11e9-45a0-ac3d-7c33af582b2b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da4ccf3-82b0-4e81-83ad-61ca39ef3fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0eb641-844d-4b58-a48a-0e9ba2a7bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a995a75-2c1f-4435-87df-b9c8be1a1a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea83da08-f3dc-437c-beb1-d8381e8b80b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7be67db-d128-4bae-bccd-d1d41f640ce6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6bd072-6c60-434a-a3aa-d6784056865c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbf4e4b-11fc-4c33-aac0-3817ec261814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7af522-2583-456c-914d-2b9282d9b965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1327ca-5de1-47ba-8d7e-171b65b0525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f3f378-0a9d-43b2-8fc5-8ec2f05c698d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df8873-6f52-4a2e-96c0-0b111cdf74af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589a2fff-d62e-4664-ae02-34f5d936b672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde7ec7-e1ba-45c7-a535-1b864790d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8d362d73-c5a6-45ac-954c-966c5137bc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe739d56-be4c-4c98-b106-312459fe5641",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2ce13-492d-48bb-981c-c2d5b875fdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ab24a2-046a-4766-9b45-21aa6b34e147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c69554-df41-4952-9c24-3342dd4acb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "994941b1-0dcd-4ecd-a259-de0c54fa41cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0953288-0d00-48b4-b845-3bd6d82584c2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2fa775-30c1-4e04-8ce6-26885851724d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501fb4c-fafd-464e-8038-3b561dc7101f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a894ef-91c6-4af7-b5e7-c4ed985b1ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "06befe1b-b958-4153-ac18-c8f22b863f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9173af46-c4b9-4547-9620-0c0f4824c216",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d81055d-23da-402e-8a66-d4443a6a03df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0634b9f-1f02-4f76-8bff-7f1997d2b7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363f2aff-7310-4c70-a0f3-f9436176d328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2eaf60d-ff12-49ab-803a-c28b34d743b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496d7b32-c2d4-4d77-ab7c-6c7c51bc0e5b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72c664a-53cb-4412-aa81-76e7963a9615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb9c7a6-4aea-45fc-aa00-f7d8b7ed6236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12da6d17-ee7b-48ce-b2a0-6d54731db023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf79a6e4-a7ea-48ef-93fb-e50716d80238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79effa4-f775-4114-9ebd-c8b103ca7b9b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a0fc5a-2b2d-461a-b8a1-09d2d7c3e4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b0d3ea-8457-4ab6-b6fe-0afd3fd562db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c02482-058a-4f06-ae4f-645091ce3f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6a53b0-3252-401a-ab9c-c22f53c5e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a30108e-c4a8-4880-b893-6591287e9679",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd767f33-fd62-4482-92d3-fd3cd337fa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff7c14f-992a-4b10-a594-07357ace4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf021d-3cdd-44a4-98e4-f31a3bee0a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01821799-88c6-45c4-bacf-c4da0eea8946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb59c6b2-a723-4686-a303-305bfcd3c9e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12431d7a-e336-4a85-827a-193dcb0a6df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f754d6b8-03f1-4f07-8fb1-925a60caed34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec83444-9065-412c-8aa3-6cfc54a4fcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "410a01aa-c4ec-40db-9314-590942190066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2971c6-0ecd-4118-9316-1cf8c0fc6940",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4463cee-f492-41aa-a782-e374d4c35fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09321aa-c802-45d3-b815-de9f4862002b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3f8a40-8f62-44eb-abe3-c2c3d11654dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8611fb49-91f0-474c-8f08-8b0c60264d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85d5b2b-aebe-414a-bf8f-4edeb3dc05d7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308245c7-9a1e-43e3-9871-648be50ba4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f138e1-e096-4269-9941-e22dd87929de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb3758c-3337-490a-bad8-acc1042d90d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd93d767-daca-4fbb-9b6b-f42469b9c5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c927c7-2e7d-4c5e-8373-f7db663ba94d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267cfa9-e019-47d1-9bd1-73f6b9fd8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38f23ec-bf52-49d3-937e-a1e121c11cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e47d55b-ca88-4a05-99ec-f261397293c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ec5994-957a-453b-8b47-c9fe1f4083f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c98037-7ff0-4697-9767-aee6f28e05d2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d40c87-a7f9-4824-a21e-39b9566dc093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d0bf20-3b26-40f7-90f5-c0defc1680d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b702444f-51c7-4b2c-bab4-98bc20474513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff00ce3e-1441-470c-a0d1-2476b917f0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2da296-1c75-4557-910a-f51c5a7da42d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c484f2-c5ce-4516-95ee-0d8a247ebb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8dd233-d3a1-4bff-9996-57524fc25d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71dcdc1-fbf7-4370-9690-2e294845c46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14569760-2716-4de1-8d74-21b83b6cfb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c7fabf-1a6b-4592-8465-d211f48508a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c7af3-e277-4f60-ab3a-1ecd0a444b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b5e370-c4a4-43b5-a7c3-da1a885e0dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2460a533-ef95-46f4-9432-7304610d44c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde108f0-b5c0-4fbb-b0f9-ae8616c91dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ce0eef-8b57-4ea7-8967-d35bc8becda6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767aa456-8a25-461d-bab4-c41d1169b8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665ee672-6edf-434f-ac45-c8aba19ceafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c997d46d-c27b-415a-af2d-1b02071d8bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b774989c-e7c6-4003-9fcd-af004823abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f99742-e1c3-4e6b-b1c5-16cb7003832d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a033cf-73c8-4a17-aaf0-a2bb62b5a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57f9363-3978-4dd0-bf62-ec10df3d5619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfe10c7-866f-49a6-80e1-d4bae06cffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4339dc80-2b97-4395-a991-51a83d53bbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c459b-7e7d-481f-9bea-47b785a2971e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3485631-5c78-4f33-96fd-a61e4277db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc1fa81-1acd-4a78-a5a6-a57f5daeb740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912f1fb2-7fa3-4540-bdda-3170c5a03ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44689907-b27f-4243-ab3b-bea12aa822cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa99c89-cfd7-4b1d-acdd-7df6d8294a3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09fccdf-5c39-4211-b174-e683df1ac940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e0b09-f390-47ba-8b0c-ae4f13b786ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2854608-6726-4c13-a551-a1df310b5ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfca706-4e6f-4e77-ba78-a0be708e85b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eec0402-891a-4196-b391-6ea351d90a74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168dcba-ed79-460b-891e-117c38a974c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e048be9e-5844-4e33-ae72-fdd499fff20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad5b670-1812-4e49-bc4a-f34692a82ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1bc041-c699-4313-8c3c-8e92b213cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ceab12-a5ee-4789-b68c-dc38e890db2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e28f41-e54d-4f5b-a605-de074ce14f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f87d5c-985f-47ab-ab2f-e14cea3f1e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6564a105-ee3a-46d9-9ab2-a1d92fe72a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b26ec2-5f8c-4f1c-9c8a-856e2fc1be29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb41cc3-c2c3-4da5-b4e5-9ca58c244979",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d355e31-193b-4943-85a5-76e62a54c7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b442ce-4cc5-4937-896a-4f798fd24c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae0a5f1-85d2-4d50-b579-2ad20e072fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a1b43b-ab5c-4cb9-bd8f-7f17220ddcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d19284-d424-4123-9409-ef91f06dddb6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135f62b5-9d98-499b-a935-73401127a4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5842def5-a0cf-430d-a125-9a7938be054e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5ea158-5396-4fa0-ad83-da80873f1548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d03eab-a39d-46fd-b0c0-51580ef484ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ca952c-d964-44ec-a322-925815d498ea",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b132e428-7c71-402c-aa96-3f0674272bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1170b5ca-4c9d-4378-a31c-80980de2ffa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a723ab2d-3ec6-4f32-9fb8-97f96700b35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f04cbe-8b96-4c16-9b30-daba5141885e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c638063d-b8da-4e5a-b59d-3fb29b9c04a3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2442dc7-e526-4a50-b858-b4f16a26e750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1972dfb-4997-46b4-8e28-7bf6d336cda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f456de2-9725-4b77-8ce6-26d9b6d1894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59288913-e85c-4e0f-98d9-4f89dcd84f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38554b41-d7c1-4e2b-abec-57cdb94ae594",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7314e256-f244-464f-8f7e-d850f69ff2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53697c7f-9221-4537-a47a-4d1f7408c029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0a5ec-0604-47cc-9c57-a295e2615dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae89425-0a35-454e-9e8c-02c5c0da04df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f14158-88dd-44a7-99d3-7eef5744d0e2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c10e9f-d021-4df8-8289-ac35c05fa49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad69f7e-1da0-4290-bdba-e83873bd8ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efddf000-b28b-49ff-b9d1-e0833b5f719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6118cdc7-7488-40ed-92bf-b71d5d18ab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ac760f-4c74-4d06-bf53-06f209a34cdf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c6d657-2d47-4a9b-8de2-08cbec0bae17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e534fb99-2d56-49e6-926e-deb2a75267e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1877b93a-4bf8-4d8a-922e-4a4f67d4a9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37883be4-f953-4122-a5dc-9a0708e0a468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f15c718-1bba-420b-bafb-1b265a5e1d7f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49171c66-345a-4025-9146-40c8f41ef694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f678326-8038-4b47-a558-44e700a1503c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c40321c-f774-4622-8009-366e58fcec8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22325181-2445-4bde-9788-4481a8dab759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5179b23-59dc-4c7c-8d1d-90a8a5dd403f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a20d32-bdb0-4ed5-976f-b8961512f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d75613-987a-49c6-a5b6-390e4d374c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9112773c-4b52-400c-b985-6d106f4fcb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51101b79-7afe-4c11-a30f-5214cb5b4c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c466a07a-055b-4e9c-89e6-008b4978bd66",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04b096e-b75a-4bff-803f-5a518afe466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb182757-d9e8-4015-81d6-60076d5362cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602a94e9-88b8-4064-a6b2-f8b67b6cdcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e219d75f-bc18-4bc3-8bf9-ea2636c5f28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4653f1bc-02f3-4db4-bb3b-a691d4bb3573",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bcab8-68a1-4d36-8a38-e33f94844610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18aabfdd-d18a-4036-9171-87533497c087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f92a6f-4674-45c8-81c0-b538b97b30b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f130a57-f12e-46b1-a59a-171d7b9e4f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e58ce2-aac3-4a1c-9b51-48f490c39e82",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87987904-98c7-4de2-958d-5bd6108b7006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea82c81-9c43-4723-a9fa-e63253f8d314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d391e9-22cb-4264-97e2-3d6d6277e696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb029e98-a21f-4733-9a9f-abcd915e9933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00c1af6-9588-4ff2-8b0c-d57cf8c5155c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea40911-8a37-4167-8754-24a2cf490333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a863ad-313e-499c-9f9d-bde288c34d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaabf85-8dc0-4c82-98bc-3eae6eaa0890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58f9429d-e412-456a-8338-597251a631ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ca623e-64b5-4981-8924-1cd5d8a77fde",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5550aa48-eb5a-4dbb-816e-6185e676866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fcb6e3-e2cc-4391-ab0c-4bcd01d3d1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77064f-96d1-46ca-97fb-dc4164c5950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db717259-e796-4876-b1f8-ff379a566ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d52c399-12e4-48f6-aa3c-5599176349e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec50a527-3832-4cc1-aac1-b727456a47b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ea6ae8-2bb8-4b8a-996a-f47fdd5abae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9918cfaf-1987-4d19-b8f7-be71f0a716e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edf435d-b009-4776-a858-609fe79cce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e8159e-83f7-4f1a-a494-621117d78387",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b01a4-3ebd-4d25-986b-69f0b5cdd37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77af967-f227-4c05-941a-27de59d343f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6956f-2d01-4f75-8edd-e1ed00149749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4ce521-76e8-4995-8a29-595a9733d37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d4ba7b-43b5-4240-a97b-b63fde68c54e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcc80e7-3d18-48a0-b0f7-f6c1f3ae9d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bb9a09-aa79-4d7a-b0ee-7674f9f29609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350633fd-1c80-45a0-aa07-78adaa16645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3303de6-f197-49d7-8b3b-a13a129bfb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b6342a-21fc-4a46-8c4b-4d47cf53582e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20466ee6-44de-402a-a1ef-8b1a171c7bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cdce12-674e-4df3-a8e8-cfb0cfc8d087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4ffd8c-8adf-4856-a3b8-b8f6553f0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b13865b-6b6d-4cad-8cb0-8cf7852aeec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fcb452-e30f-4ed5-a07c-4e33732ade37",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d564eb5-d2d8-4ca1-9824-b5f7d2e5889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76014da-bdd5-4f0a-bc3c-a525827add1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5797e4a6-7b8e-4a1c-bca8-8e8c3930971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1c686f-ac80-4f0a-a876-36be76b1a6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebee2281-4bc8-4ec0-8aec-d90a9fa5df1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306b3f05-b393-42d0-b6a6-a1ba4969572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3e98c2-7b1e-415c-9b39-0cfe23d90f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd189925-eb4c-4503-a1ea-579dd89f45db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06e691a-1991-4691-a043-9aeadbda4ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72403b6-812e-4b52-9102-6c5ae503f59f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78caec82-fabf-4a5c-97a5-50a44ce480f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f9c659-cde2-4e20-ad8f-f4bba8790131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd99a51-a62b-4e02-b446-b0ebf160f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc730c50-d0d4-457b-bb34-3757317785f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631aa63f-fb59-4bd3-8e3e-f5afa097fa53",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54055283-7383-4546-ae28-bd586d02c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c85d3bc-660f-4488-a0df-1fc58a21e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61dfcc-be66-4b76-b572-20f46a9c4bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0388f1ba-d453-4627-b91b-9c92402e6cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1d4daa-9539-42b2-b247-defe40b004c1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8401d743-83dc-4284-826d-3fb3c48ee04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f799ed80-ffa3-4223-99eb-d2585e8d06f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f5a039-c6ce-4353-9fff-301e67b0acc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "820bb279-ab3a-4ebc-b604-9502f6f1cf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c9b40-eacf-4102-a9e4-12876b70cedd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3b096b-15cf-4e37-b9d0-f34ee77c68e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659b3d8d-4556-41ce-9d26-a3b4d0171d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1527de98-8965-4698-ab55-ec188a879b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "141b7265-953c-4fc8-b5e2-bb01b196a736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae4a6d-0bf5-4ff9-ad3a-96a33a6b3029",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac531eb0-1002-4567-a493-8512114cb1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba95fa-279b-468e-a43a-5305f36a4e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f8346f-541d-43f2-bc99-c4d319d4bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d553a0-d04c-4328-bd6a-18d160b04be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6488c6eb-2335-4bf6-b6cb-261dccf354ac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a2a258-b37f-4560-a784-6fda8a595109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593d98ee-f783-4c0c-969a-b234ddb8baf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d531c60-52a6-44c1-92d0-7132d5cfd0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1fa27c-6fc4-49d7-8070-0c355dd26412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aa93d8-6947-4932-8782-c1a3c81b0cd9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eec501b-340a-441e-b948-6c0eb78cb08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c31faa-7603-48e1-b8ac-bc2f4cd5d81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12824a07-5040-4002-aa35-892b51b935e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a94119-2142-4784-af89-40f0fa2ec199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d330a921-d347-4ec5-847f-e39dc215b0d0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0ccb6-6c7f-425f-8864-b69a9909a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05554672-237b-443e-9701-57296e8a6912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429fd912-b1e4-4ca0-91dd-37b104ef6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b179f5f-e347-4bb6-89a8-db0353d9331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7834aa31-8615-4bf7-a67e-2950c8acb118",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d9df61-4c2f-4c5c-b1dd-f116459a873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35be01ac-a1e0-464f-b803-539a48b8833f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9117870a-d21e-450c-80ff-81f125ad269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0edc79-d5b6-4fbd-9351-f5af6a4ffea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8914ce-5781-4d52-9180-c5daf32e7686",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbe3625-648f-406f-aa6e-7f17ade4195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8334b76e-bbb8-4237-b332-e4b948e3b7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b2ce3f-822f-4061-b5aa-806a35f8b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "977c7b66-43a6-45f0-8436-86ec1067eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d7f097-b791-4ad9-bfc8-4e053217425f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61842ef5-1871-4945-967a-e5d731e74d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f215d8ff-0216-4680-bba0-bb266922eabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4ae920-08a8-456b-825d-97ebe32ebc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aef13f8-7752-4399-b58c-9f4dfba0296c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fdbcc61-a005-4b08-a87b-c4dd2bdce51b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a10d753-c41a-4efa-851c-16941bdff36b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75637c73-c51b-4c8a-97ab-c21453b1d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "402a67fd-a036-4761-b9b3-cbe5daf71da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa524adf-5039-41a2-9a21-76fe9d8415c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f1c6de-e2ee-4998-9637-172167ca29a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "758eb4c3-2107-4a87-bf95-212a375fff15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11d69266-a291-47ae-a9cb-1f1240c96451"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2a7ed0-b31c-4430-aed7-58142dd45bbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fde7e250-889b-4ffa-9faf-329c954d5e55"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff10af74-4600-48ed-8fa2-384c8683d178",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d3fcb67-6b11-44c9-bfea-ce592e28cbc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "194e428a-c6b3-4ff5-836f-ea1e817b473d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0ddfc6b-784b-4ac2-be8f-eeb8a33d6e28"
                }
              }
            ]
          },
          {
            "id": "3faba42e-e21f-4e2d-9679-5172fc8de0a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45a89bd6-9204-4e85-8484-b2d37cf913d4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "801a8f0b-9178-4dc0-b29c-88e3546fae1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da39a813-e0d4-4e28-837b-ba76f8e5aba7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5087b74-a17a-4612-831b-3f0101f32b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccaf20d2-a390-41a2-8ce7-461c656d186b"
                    }
                  }
                ]
              },
              {
                "id": "cbc7d841-f4bb-4e84-9faa-5abcf2a8977a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e86f8c8-d546-433d-bbd2-e35d0e778c2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6270383-8fa2-4e5f-b258-bcd1cd237d7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015ce2f2-7972-424c-81ef-448eae7e828d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f64f646-4f2a-494e-a14f-e2e9ef4ecd36"
                    }
                  }
                ]
              },
              {
                "id": "c97aebc2-8ea0-4b95-8a2b-48e6126bb1d4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b2cf40-54a4-46c3-9965-bc4d560d7870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "052a4b4f-bfa5-4526-828a-1af0ec326a79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86f52870-83da-4e03-92c7-85e8f5f15d5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ce6b2cd-dc22-48a1-a5cc-439039c8eb12"
                    }
                  }
                ]
              },
              {
                "id": "6c36bd4f-dcd7-4739-bbc3-daba63273470",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a24a95d2-c8e2-4569-875f-3ab56f83e502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfbb3915-b254-433d-9707-fb699ce2d806"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a5ffaac-3860-4cc7-a5a9-9c6ff5ae0cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c3824328-38a5-4715-8c5b-e85bd6f21d1e"
                    }
                  }
                ]
              },
              {
                "id": "49119348-ba54-4740-9a08-e93172c6717e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e9f76fa-cc55-4a0d-b873-6af84400fcd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "231345b8-9694-4ad2-8847-796c8486a032"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b6da6c9-24b0-44cc-a706-d0a6d100a805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a04db9ff-7e1f-42ea-9f16-51721bd55f85"
                    }
                  }
                ]
              },
              {
                "id": "4671a660-bedf-4077-aa79-b59be044db9c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9df3c2f-0baf-4e02-9838-d49568e4ae85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af0837d7-7638-4bc4-a57d-8ab3f1aa1a8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "008da2c5-e554-4f32-900d-8173cf16e96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79236d0c-9661-4911-b7f6-0be32ef2d0b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c81d601e-73a1-4779-a61a-b7e4596f69dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29a62ac1-bafb-4472-b3cf-6f4f3a18fe09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58bddba0-6bd1-40ff-86cb-c55177d38e33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46170a7c-c62e-4c8a-b950-f8018239a82b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80151d8d-5c7a-4c61-898c-54380c81883e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "407bc64e-eb5a-46fa-aead-741b74bc4d85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b64060c-fa31-4a69-90b6-c6328e27252b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27f1bd8f-266b-4291-a819-26127d7eedf8"
            }
          }
        ]
      },
      {
        "id": "d4bff500-e195-4b48-9c6f-0a0614259889",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "341e7553-c8ba-4421-aca7-e137086cafed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0aa6a6d-f1dc-45af-9d69-66e976516a01",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17694e45-1f22-4d5c-b957-2ab51ac19a9d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f522fd59-4327-4e06-8a6c-bad492903bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304ba543-1df3-447a-9802-3ada80ec2533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1130442-2b90-43fa-bafe-dcef5895bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "37411da8-5eed-4ec7-a0c4-ef43237c02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578bc6cd-f08b-4765-b7c9-cab6d7c5de83",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f16e0b-60ba-493f-926d-0ff1186c96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd34a08-ca3e-47ba-9cf4-f02ee26a8599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0e0901-a806-4f21-a005-e72ad58758cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8100c4e-678f-401a-877a-62ee2dd4d514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5be038-97c9-4387-a0ca-5dd3b4658556",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92fff69-2459-4b16-b9aa-cc0859ca4f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e366aab-6771-43f8-8ab9-5b859d9c25f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67698ca-82c7-4a38-a871-1c02da59dac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d74e389-f3c4-468e-8b01-ea2779e11438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19527da-5b85-4baf-be8b-03642a6d900b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86340251-3f62-4ffa-a564-b06487b0c1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c4ee5c-a47f-45c1-ae3e-8320a0ee37ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fade2c-5807-4e8c-aa1f-0f309e459b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3692b89-cb6b-479a-ad31-0c854add8bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ac2f84-c03e-4624-8966-0b3ea97f8e28",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d03310c-e4e9-4f90-822a-39dc012add48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156611ad-9ea7-46b0-ae62-0e1685e319f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ad81c1-ab99-4f4d-bd2d-82f7684cfde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a81a3e-e534-4411-8c57-31a69b21ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2852da-f5db-4572-b1c8-476fdc428ac6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e989d-3b19-4c04-895a-3cb5683fdb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7994aa-1620-477e-a7ab-34d98504d3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f72341d-0fae-48d5-bbbc-3c6ba6f491a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89c6132e-7ce2-471e-9f01-2c4a169f9a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02b4e1c-be05-409b-bd63-503a1ec0e630",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aada8e2-409c-4bad-8424-dcc9bc9b86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be7e3ed-522f-43e9-931c-5789aaa91283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9cafed-7b3c-4759-b395-e07663141175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec426fef-067a-4134-98a3-5f8e96fd04c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af01734d-207d-49f5-a13a-d5a221b51b1c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671947b0-f784-4a1c-9eb4-3172352236e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd53e43-9af6-48cb-97d6-e64b5babf6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d27304e-9d2a-4581-bfab-ffd25de27b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae90235-0dd0-493c-9c2b-e0902e3ba9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9865056-45bc-440a-8953-9481f399f092",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba65799-d762-4af5-a5f0-5aa9d36533f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e373038d-4886-4ad4-b624-452933e7db13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd5c17f-f4d8-4ff8-9521-dc48b336b402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e189a4f5-7dd4-4453-9c2e-acd812b53379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f142fab-2ad2-4323-82c1-76c17d8098f5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7d4b39-8ed0-4c9f-b9ab-77fa35a71896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dd48d3-2704-4165-890a-96e273fe5a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc05026-9380-45d7-b728-67873f1eb81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ad29f1-e628-485a-bb09-1aaede441d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f4ca6f-e9bf-4c57-b61a-36245aa8d09a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77e002b-346b-4f74-937c-9d32836cf675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6a869-9f94-4ed7-b413-636921a5926b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ce0ed0-1533-480f-be4f-96b84a142c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fc86bd-c6a5-4073-b721-7e4a35006d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74357272-803c-45e6-a0e4-01349d677700",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54410747-d319-4f13-a3da-335bbfe07bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f282fa7-41dc-40fb-b1f5-2638c5a46fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c22d59-b498-41be-835f-eb1ad917ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dca7116f-f983-410d-b15c-12bfb7e18377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668099d4-4649-48eb-9a03-8f440270aa31",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152ff21f-bf4b-47dd-8210-9efb0912c127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05df5ea-7735-4ec2-8fbe-c9b68a862834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f23147-a639-4272-8daa-99388123ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfba160b-032d-406c-b5dc-376407094bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac319c88-17fc-4f77-91d8-7b6325caf711",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394aa51-eafa-4ef0-87e9-9416080b9702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0343b441-27fe-41b2-b0bc-bfcf0834e362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0275e8a7-2f1b-4442-8386-70250ba90e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad47bfb-44e9-4193-bfd7-4e58ca3482fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d28c6-4e17-4aa9-a8c8-fed6a4c1b8e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d1a6e7-d7fc-4760-938e-6da7b549a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd424b4-bddd-45ce-9e51-f82dadf37f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dfd4bd-502c-4d40-9a4b-b81915c45558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14a65a5-8d48-4839-ba8b-76dc54049dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc103e43-ddea-4eca-a2d0-643873ede4d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7459040e-f074-4eb9-8418-37a95aaf0472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e5c1e0-1ecf-4253-be51-3e2855dc7348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeced262-f273-4eb7-a3c4-47f4cbd9fba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3de3ad53-9646-4908-a72b-4b2bee658179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a82dbaa-adcc-4e59-b6ce-b9bdffdd6e2d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cddb01d-2300-4620-bc93-0a3d746fb71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd964af-50fd-48a6-8265-95a61c639f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa602e-6c78-4255-b0df-9432f866e56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7cbbef-83c2-4a96-9727-329f7679e632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dbed66-d610-4d0d-bed6-49643159f014",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27c52b-0fbc-415b-bd9c-41968e80407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff06c43-c158-4c73-871a-153fb49e8343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48783d2d-b932-4532-bd9c-77b46a08e901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c78dd3-bd96-4d35-b555-3b998937251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4defb065-4f8c-4b96-82e3-719d397bb000",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128dbfda-8cdd-497d-87cc-5e6b91b25d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492c297e-892e-4bca-933e-26cba13138c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c425eb-4840-4a02-827a-8952e0c06dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b00adb8-9308-4967-8fbb-44d88b3114a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4695a245-062e-4500-ad35-de65a3b33d16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9623dc2f-750d-4aea-85d1-60fc2d4305f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edd50f2-2d5a-4746-8de6-cde66387f049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118124af-6268-455d-abcd-7e76752a2db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5b23be-fe80-43c3-a050-7aed9c1de62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b5704f-d709-409f-bba9-53f767ef35d3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e0a018-5ab7-4e9a-8e4c-1c47b78c192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a517f05b-8552-4867-9f2c-89db36f3f67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e95460-e621-45d8-9f47-569065c090d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cc4b31-b623-443a-a071-ab83fe30a454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02dfa50-e0ab-4884-baf7-144faa10af7c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9894dc-3934-4d24-8c38-85a23326d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66dbf69-b670-446e-9ec0-70c68eae8df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45d423-b1ce-48b7-95f3-060f9d807c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a8c2d1-203c-4c25-952f-1e04e578bcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81143cb-c901-42d7-89b1-2bd528f04a8f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde338c2-8faf-43a8-b460-4a403186a7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2299e8ab-0a21-49a8-8fd8-f17fdc2cd26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1869ad-9eb4-431b-9f68-4536d0621582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84b4d2cc-854c-4c17-9a6f-314ad7301685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d5423d-bd81-4377-9333-9509df7e2711",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f883e550-3abb-487d-b799-6228c0d8bf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6495913f-aac3-4619-8e62-a9155f2417ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f228ab6-5326-47e2-9571-20a16f528a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dedcab3d-2f7d-4e25-859e-e779b8c72d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2937755-5a75-42c9-84bd-ea7480e6446b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed302b-5c7f-4af7-9ba6-63da38db529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d979cfa0-1491-4f95-a7e2-d0281608e74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bffabf-96f1-4729-9c3f-08d2032f2815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d9f1d1-2ca2-4329-9210-231eb67f11bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b172231-7845-4b7d-8a9b-569ed7ad90cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe92e09-6b24-444b-b75a-b79750edec8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644df583-8480-4269-b8c4-09d883a79167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff6c818-a666-4f19-bff8-98ebb43c41b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb09845-b36f-42fc-8a6e-2301dc9bba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e964d10-baff-46e1-bca5-e696d4967e42",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24b18dd-afe8-4087-8fa1-809d390b792e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4efdbd-bf08-4796-9560-0599e5e16ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19331a0-1c4d-4c7f-9910-a8c9764d1877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a964d8-5052-4119-ab58-3b89675613a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522f0da2-1a80-4305-8612-96cbb61eca3c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c19ad9-e451-4b14-aca8-eafe5db45f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d953285f-dcd6-42eb-a6bf-17e94775ed76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f062acf3-05c2-45dd-81f0-1862eabb43df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc9f454-9d46-40ec-9edf-95017b3b1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2af413f-9e17-4485-a55f-cf1f30e349e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbab5865-c065-4dab-aa4d-9ee80121a1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138f62fa-13b1-4640-9737-5925810d3522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1075358-c1ab-4ef7-952d-97942cea4f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcabcdbf-115a-4bff-8622-550e506bb29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46df17a9-79ee-46aa-84bc-7fae532b17b5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18a057-8a90-4314-ac81-a5036f89402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2026adf-1a75-4185-97f2-9e208a6c3f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dcffd5-5c82-4729-92a4-d0ea8d4d1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a04cbd-499f-482e-bf05-2aba037a0a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29954f-4626-476a-8cf4-3d841a34aef7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a339e5-ff5a-4b0c-90b7-bceeb70f2d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b65db45-8852-4b31-adfe-641bb6bd7252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3bc07-1280-43d8-883c-882ca371b252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e20de90-e402-47c1-98fc-24339121d55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed68baa4-9127-408d-b7c2-fd70793e915e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b420430a-6248-4e0e-904c-134e5be7c74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34f6ffa-7327-4a2a-8874-13b3d04280d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9209481d-ee65-4f4d-aea8-a9a528702cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "228edcef-e9ef-44ba-b7f5-f00c02832e2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5840ced-37e3-40dc-8e14-effbf3562630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d880e36b-ac71-4d79-afd7-fe5d390a4c64",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fe8c24-735e-45fe-83a3-08656f14e42e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "96741108-1b7e-4478-aaf6-aab44c7fb25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c45669-e967-4f8e-8a9a-72e7d192be89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3946041d-0672-4ebc-a85a-7505c08d842d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2946389a-13b2-4a39-aa25-ab09684e7a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6490f5bb-ad20-4878-819a-3d9b1636cf57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec17946b-af86-45ed-bb92-c4ace320df5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a76631c6-fc6f-4385-803d-ff723cbb30a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ed15a4c-d993-4df5-8cb5-b4a4ff2f25b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fd5fda1-755a-4f91-a487-7e8195e3916b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29018a7e-3ae0-458c-8e80-ce7dd22eebe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c15bb78-f946-4a4a-9ce8-20c1d79102dd"
            }
          }
        ]
      },
      {
        "id": "626e3100-aabe-436f-8b18-22d603c99c11",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e0f5d0c0-0e7d-428c-b895-fa0b43c430d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc5454d4-c4ea-4a50-a5e6-c166461090a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5f92d3d-3432-4378-8f3a-0286c69b124f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391a4f53-92de-42b2-94ab-46fe423dd7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b3e3d8-a015-4a37-a883-56c1af330ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8432b1-2874-4900-9f34-4850d1a0e3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf3bf02-243b-4b31-8805-6731300cb95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b5266b-b2c1-410c-ae61-294fe97f0378",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715a3c23-bb7c-4895-a15f-a77e25f09344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e04dbef-8822-4d17-b355-578fa8a75b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c07549-9467-4745-b6b1-35339d3542e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db688381-9172-4a0f-ab40-398552d62fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e842c5c1-b498-40d5-ab3a-54bc246fe4e8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c68ab65-9f8a-41c5-8aa8-13adb1c9d24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cee6f7-72f2-429b-b682-5c5d7c6da881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2b5b42-929a-4df9-80fc-47c96790ce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8859e2d-0cd2-48af-984b-bfd2af31be7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bea18c-b86a-4fd4-bccf-99e5f016138c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e719d03-3ce4-4265-93d1-2c626481b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3034c3-4d37-4b13-b047-e2d25621a12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f475d52-dbd2-40f7-ad4b-39b7feba2a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c07db1f-09c0-44eb-834a-d08bad3c58d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc5313b-84ca-44c9-a49c-2baea130012e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72698010-8fcf-421b-be57-31c8a0994dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e638be-274a-47aa-a90a-bf46604ecdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf4587-fed3-4b90-ab62-36277bfd1aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ead503a-19bf-42e0-a6f4-ca939a8a4550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9380bf84-72d9-430d-b907-2ac1a216e545",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022d459c-0f77-4382-826c-e0b376b4d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49034608-105a-4004-ac9d-aa14b410f289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d43926e-731c-459d-aaa0-2570a49e53a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7adff02c-6631-4b83-b540-747d56722a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b8fb5e-3030-46f0-9b37-cc0b19816d47",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3570527-70b1-4366-9ae6-6036ba45c059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54c666d-6dff-482c-ad68-c28f5b3dfb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae86c34c-e861-4d65-92e9-67f7b052d62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "591bde3a-bdcb-437d-8233-8887c1e1de84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb1c82-2035-4aa1-8b14-d3cf719a0d5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374d5211-5229-498a-9e52-734ca7366a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f00206-29ce-4320-ad5b-fbe1fd9dbcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d101d4fd-c3db-423f-833a-1f18c04627e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "172a9bbb-4d4a-4709-b2ac-24b651092713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04e122-294f-4579-968f-9fef02cdba04",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2528db5a-ecc4-4baf-9277-1e268206fab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc5e8d1-4114-4043-845c-c1a636a2f40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184737fc-bf15-45db-816a-ce20882aa3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf182143-dff6-4dd2-b192-1438caf9ca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67362c3d-4ebc-4c7e-b797-9695edffb087",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db56adb-a788-41ce-ad6e-c2d7d9cfc0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a1eaf-2a57-4d43-85e6-5182024839ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6395000-0c51-46e4-8207-3d202336270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43081f4a-5c54-4344-a053-9312e8661471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ceccda-d8c7-4e3b-b798-f12c04a23f81",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f43c762-1723-4056-b924-181ad143f31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064a0526-51dc-473f-863d-bcd7a7665833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73562ad-2b4a-483e-b700-e45a9774936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb4bc2f-caaf-4586-a648-bf279295c9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4585b9-0829-400d-8076-69977b47e70f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5578ff6-4c45-4405-9708-32691cb26b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e424b4-26e4-4cec-b70b-f98c64180758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9ae19a-0d3f-4c90-adff-d94796a13d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20964440-8be0-41cf-8714-34670413be61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a81696-e03b-4941-b45b-ba8fe1551050",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6a39e0-f9d7-45fb-94fc-90e8f724f088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f28ba7-4bc1-4d86-adb2-57b6d7d7fa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3973186e-5552-492a-b899-85974b6559dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2257fe-fb70-4a2e-92ec-11d19597d387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2735a9da-6914-4303-8829-466d8125f8f0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7079bc55-023f-4113-99b8-680351fb91d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced757b9-5b8d-4187-80ab-8e370f6ebc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8037a505-8567-484d-bef0-6f997d1357f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9d53b0-951c-43c6-be22-5212c61ca1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c17e22c-8ad4-4654-a363-4003dff7d222",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abe531-2f73-4e34-8f6b-0bda1c91a54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8b346c-6fa4-4409-af75-193adf56ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9653d11a-1845-475d-8622-65f55a6855a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c32f59-4caa-4301-8035-da7d70db1895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d606a4d0-6017-4a92-a798-9bfeb07c28a8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d33cb9-2cca-449d-b06f-0742bdfa98fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7871552-c378-4d36-998f-b2e478ce72bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6d0f4d-92c3-44f9-80b2-21302d095102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e07023-bf6c-46e4-93d3-3aa018043350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cb9ec0-8aa3-419f-9572-dd3c072a0e2c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f61a292-af90-490e-8284-540c7e3b3131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d7f5e0-6af5-459f-a742-293c4bbd524d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26b1fcd-d323-4fd9-a107-c52e1e7e41c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "50fb23a4-0944-44ee-ad25-2215d1510088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217f9010-7ed1-44b2-b073-d664f8c43702",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4f6b27-79e8-4130-8948-3fa975d2d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63921a22-4768-4140-a31e-e1794b7c5152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5514ae22-22c9-43d2-b5e3-b264174ac178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc52746c-006b-416e-bb7b-65356330ffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a452c5-173b-47c9-b656-4450d2927ff6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59415233-2b30-4694-af5b-e36fbdddefa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2656fd94-2334-43ed-b31e-6b85fac7f995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60f181d-23ce-46f1-b865-00501a8ac804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632c40dc-e3d5-46f8-819b-77a52eca2664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9311cfbe-a583-4edb-8331-bd8bc645fb95",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a8d976-7f98-4664-ae00-582f30faa76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cb4f17-8476-4bdb-b60f-8b12690b6e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923efb1d-e7ce-4ad7-9a26-cd25d7bc0f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b80fb0-b38c-4327-a024-360a1d98cf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198acabd-6350-4073-9832-50c4756e767e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd41503-5b0a-4ed2-a2a0-9963308c82e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf069a26-d4d3-46a7-b4ae-101a0080082a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd28ad-7969-487a-917b-92a93b51c582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2f3d13-33e3-4b9f-bfac-362727b8a89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235d38ad-8697-4272-9b2b-d2d869a0987f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3375e0-9dd7-4786-83db-281b8d43ca50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089b6c12-d63f-42ac-a98c-62a750b0d394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b7001a-36f3-49a7-8693-aa0a18abb1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ac3ac7-39eb-4178-a80f-5f8c7aafc275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1726c1ed-9a1c-4056-a922-13205a24d18c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08fa13d-fc22-40e0-b7ac-d78f7dc0136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd9f68e-7945-48b3-8a38-1dcc71711df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4f0603-6122-454d-bbc1-4d69b36f26a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3ad5ed-e667-40db-8b03-40c756196e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93ca63f-5a11-41ac-aeac-6b83a3000b08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106a567d-706f-44ce-83bb-bce749d6c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdfa737-d8eb-4f7d-ac37-00b6ef599577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97fcf3-2d99-493b-8319-1de23a11c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6db64d0-d774-45f1-88ef-2a9be1b83bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95449d37-3160-445e-8783-19f500c497ac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a672beff-e7a4-42d4-a418-9cd5705d7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8a7fc9-4a10-4f32-9c27-5fdea68229c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87dcd39-6135-483d-8c37-d35e9ba3fc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef00c14-e222-44f8-92d7-3e2adab4036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f172ff-00f2-4b98-beab-6269c06f745f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34cea6-5cb7-4bf4-ba2b-30b6e26aaaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9b2284-f5f0-4da6-9a8d-193b163163a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a1c9d8-1b3b-4f48-b417-d7eaee892ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c2314a-a2ae-4c23-b5e1-3f788787c7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac83b11-cad7-4ce1-bd2f-8f2d98c6cb21",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb1ebf2-493c-455e-964e-2c1267861b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2e9f5d-c494-49df-b3a0-9b8744b23c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf381852-9837-42d7-98a4-a7880a9e86af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5a2db0-f828-4163-8846-b43987074df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee3673b-cc91-4c75-a5e4-d91da186b3db",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883094a7-9bfe-4467-b2ca-fc3378b8ba29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad31beae-a23c-4d4c-9908-61eea293d15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b9100b-f408-4ee0-b997-57c8175b20f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5914ac-e669-41b2-9f6c-5e699db9eb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8783453e-3998-435e-945a-f180e0e5301e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a8c7c3-b20a-4313-b45c-8ca853823dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b1af43-5195-4fa3-8106-fb6e664c0e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a34849-f1fd-4d0c-9b18-e1dc4ca2476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc3f31-e06f-4bcd-ba2c-aadaa7d094fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f027524b-d9a8-40c4-b17c-48cf3f764611",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37474ec5-d93a-4c39-a9c1-910f64f93ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702da187-3d9a-4b68-bb19-073092b804af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f652b8f3-7f3f-457e-a15f-eda51503ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01449a1-28ad-4255-b73f-08c72e68e66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fecd71-c9b3-41e3-9eb6-6798b1352414",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210414f7-20cd-4c1e-a8b2-eab0cae56db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e3e0ad-7f36-4d59-9045-2b51190f01c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5636b1-19ca-43b7-bd2e-fa7750eb4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78882f0c-bbf3-41a8-b86f-3c7d9d0918f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52c0b13-28ef-407b-b7e7-6a4bbec3d3c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f35c5b-3eff-47ac-912d-a62dfce8f575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af64b0f-2de1-4517-8229-893dd97ea2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ecec16-66c3-4d11-b7d2-5cb346387930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb46d3e5-3f8d-457a-8f1a-d6bc82dc8ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac6452a-2496-4b35-89bf-4d464370c074",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4108f0f-bbef-4655-9938-1065a8a54399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38ef56f-c968-4484-81f5-c3f10b21311b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0768ee-8f71-4388-b9cc-fcd1cb810f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f56dd2f-8d5b-4f12-8cc3-04584a75ad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4455c-ab47-4ee6-8bcc-84c1db5aa2be",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba78bb5d-28b0-4c51-9471-95780c0b86a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265961d5-86f7-4853-b57c-6aa2de471f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c95919-16cf-41ba-812d-58ca1be55e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4df376-6ca3-4a2c-a6e8-db6c2a5bea34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b842dd2-1a35-401d-9bfe-4cce4fb08841",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074daad-0cce-440e-a84b-615c22673d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9252ad-46df-4a73-a7df-4844cf57c8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328eabc4-5ef0-49d5-8839-367dfd1072f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74df8626-c44d-4170-9344-663eb3ecfdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2fe7fb-1495-4479-86ac-8b3036747e15",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac627d38-cf25-47bc-b73a-ad842a1733b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bf7ffa-ba30-44d9-98f1-b9075831ad63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3af331-8083-41c7-b5ea-7e662d8398db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72078be-f988-472a-805d-a64c6f54f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39385e44-78f1-400d-b8a6-615541f23cdf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60ec737-5dfb-4d16-b92a-72a624877cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d50cea-cace-4114-8cb0-666ec1a8a629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e541b0fd-bf0c-4b8c-90cb-5efd18d17de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1537ab1e-d195-4f7d-9139-c6ce3e0512d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9e9dc2d-edb0-44cb-89e4-d4e34ef04a58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffb721f8-5852-44ae-be39-c776a820b183",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85694f22-5864-4eba-b965-7b8644ff6c55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e506b643-5909-478c-8cb0-220fca010198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c06074-616c-4a56-9b03-eb16790cfdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e283fc9f-469f-4ade-a3a8-e5b9067eda9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a6ead9-5a92-4157-b98b-948ad0e9a89e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f16b694-19e0-4f7a-bc66-b0ce5b7253bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d854a8a-2acc-4c6a-b98b-28ddfb4aec4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb5bb2d9-8a7a-4b89-bce1-208eb06053e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cee1ff4a-ca1b-4b50-9cc2-db7337512a56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6826996-302b-41f8-b5c0-32a447d2f26c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f43df477-1bec-45d4-8466-bc29c260aeb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfb0c9a6-5704-4a9e-9ac9-a6fbc3e3dfed"
            }
          }
        ]
      },
      {
        "id": "82048920-c456-4a7b-9fc2-ca29c7975d4a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7815cb45-1686-41cd-b20d-466f7a3a6fb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3013ac27-9cfa-4009-84e2-d05cd3c932d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba458821-b1a0-4e9c-b117-ff4a02ad2f9e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758a4d9-f122-4bdd-87a7-14c2bcd1b337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8d7a49-ac18-46b2-bb5f-a9a73eae5643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4032cf8-f8ea-405f-98a9-7acecd7fdbf4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65ee409-fe13-4cf0-ae58-a110952a4e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee22c65-acdd-4325-87ae-284f6da8803e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548b9124-36f9-487c-8223-22a06df102e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926b536d-6dd6-4fa2-bce2-3f0aef18cb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd36f94-792e-4004-9604-9867ad07d781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d024897-a61e-4383-a13b-505c559b0535",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672cd82e-4ba6-4c2a-a9fb-d3b41b7c5273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f43e6f-4fb1-42e2-b47b-3d7c5b7df7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af5009-6849-475f-96a1-78c71a618fb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf59a14-4a87-4a3f-9343-fa28c2c623c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b72902-c460-4560-841e-be4cd7219349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1de53c-6da0-4210-b24f-ca880ca53645",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d139c172-3628-490a-b84f-8e33b2bd2272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b51c5d4-fb0c-4711-b600-b6bc460071fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5d15d8-e4ce-43fa-90ff-101c58aa6639",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61461dd6-6508-40aa-b9d4-2ffbe4b0aa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ff910a-cb1c-400a-8059-a971a089d407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed88d91-abed-421e-b7bd-f288ab2a8469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ef5882-b001-429a-8435-84f6cead3119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea079b-1697-4384-b06e-c87bed9ebb73",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72cb8c2-f4ec-4bad-9e44-307e08034b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9053dd3-5e31-48ca-b624-4fe1802ffc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890d5890-09d1-4ed2-8144-5627596b37e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f3d744-182a-4c8a-a495-955f13c327dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd5fdc9-1be6-4f56-8504-c79d55b24a33",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed978e90-d98b-47de-b547-f3ebe4f40bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d318877e-b1be-4cf8-8992-d108fbe74542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ebb4a5-fcc3-4c4e-aa74-c82c6b580846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cfbd82-1de1-41c4-b6d8-6d6f7eb2516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7efbcbf-1d80-46af-b154-b85326215c03",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f03c08a-f81e-4797-a987-9c4ee4134b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376d6540-dc97-4e32-8569-ce16afacba93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de7e0f9-7f09-496d-8b3c-20b6161c97f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcaa11b-00c9-40af-a2b3-c5c41139c7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358eb077-c82d-40f0-bf68-37d0905796a7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f568b73-b609-4374-a4c4-8aa9e80efac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c977cb7-aecd-4aee-b5e3-d6cf97b47f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa223a7-9a5c-4728-9cc6-9e648226a23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85382e37-feb3-40b9-9df6-a5d9697eebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bccc75-f3bb-4ef8-940d-ac92e9c701c1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8442ec7-cf63-482f-a1a6-340c02f3d8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d849b8-e9d5-43ff-8534-522cd336cc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae4d04-337f-42ed-b9f3-81c5be80e570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ca0ca1-187c-4205-b192-79ba22fb89d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687278cc-26e5-46c4-9c6a-cedbdd085b2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f583e5-cfe0-4519-a12c-7e79516124c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032a3936-5807-43d7-a574-cd1395539098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9682f0-f522-4256-9d5f-5018e00fb9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd34f368-a749-43ed-a84b-a3a3358bcb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84a77b0-eeaf-4c03-b81f-65fcb332f4d4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8d06f6-3458-4b75-876e-3dc4d8efa71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60168063-fe24-4c35-885f-a14c56d9ab0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433d22e7-b45a-4916-a3c3-167b40d8cc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a73d86c-55e1-48d9-85e8-e83b7141db50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6e93b1-d2bb-4eb6-a367-2c64a46305cb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e738b988-9acc-47ba-8213-7cbd379657a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc1be4d0-9119-4eaa-a8fa-a500ac157d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d261fbdf-344e-4a8a-a722-412bd5010466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16e57df-8bdc-4f0d-a581-cec775cbdd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0edb295-3530-41c4-b16b-ee6cb35b71b3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd17dbf-de3c-4eac-adeb-e157d3566cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feccb7ce-7773-4f5f-aae8-d64a98e53cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34afba-410c-4e6b-ac2e-2db6508f3674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaea3950-aaa8-4a3c-ada0-1fbcc692b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c70974-8964-466a-ac74-505749be8f20",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d415e2-5884-417c-8302-f8c0540d8d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c979ae91-774b-4057-8074-86212ecd8cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51f239-3aff-42f7-a51b-1b0c1d9b0ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9737485d-a636-45c6-aa20-942bdcbe84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319666ee-ca7e-4d9d-b1b8-92d48a8b1108",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332705d7-2e8d-427c-bebb-6f397e77e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce06a952-7811-4780-85fa-b886f3a7c83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f057962-8a27-4196-96ae-2683229a0f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef8526c-5130-4b8e-a319-1e1e24fac8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2ada8-df72-433a-b6ce-513491acba2a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25c265-f4c0-42b9-bc3a-f8a779390bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ad7931-1831-4f0c-9d9a-f55400568355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c54e0-1dc6-47e7-8959-8f6c6fb81960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd7b114-4ab4-4441-9f9e-c6a263d096b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aabda6-2a42-4855-974a-4effb5eb2b75",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc6f98b-58c8-4695-865a-a2cacad23d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c172afd6-e65b-4529-bf2f-8853fa2a2606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1530ddff-51cb-4606-b417-47a9a0d8bb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6130df21-bcf9-4bd3-9c43-318bd91d221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889b9143-089f-497e-ad9b-55a867f59b83",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf227d00-c242-4ada-96d6-cb66ee2923d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3940a24-7332-48ae-9d35-93a9e04ae1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8032ba-edde-4320-a709-2fe6e9858b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b69a59-491f-4830-a795-1c024085c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ed8d17-1a4e-4960-a7cf-d7798b98dcaf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e08b17-851c-4610-8561-53a32c3ce442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983f297e-b2f9-46a0-9d40-0b0ad2b1b265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9aad26-2c6b-4e24-a85b-5931cd6afcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6365dd5-6aa0-4989-98a9-77b8ffaa8a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307b70a8-ed3f-48f5-9342-0c3f89134f81",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9108aeb4-f151-4488-b4f8-246c18458a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17135fb-01a4-49f6-be25-14bd8e4f657c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44198039-23e3-4833-b04e-07ad83be2880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58263c4d-bd37-4602-854c-d6a572f1a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f078d01-52c9-4dc7-aebd-0c007ece5f8a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f29b7c7-bc6e-460e-a781-7eb655188333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4577b50-7aa4-450e-ba56-fa3d44a54bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52bf2be-8166-464a-a5f9-3b91aa221582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1fb3a8-962e-4bd2-ac47-bb57aed06891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64dc259-007a-46bb-85b1-6ceda0492c04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40a247-6c54-4e29-b220-4730a41d69c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e57ae8-5a84-4769-9e11-a73bcfeba45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8aae7c-2682-4dfb-b928-e9064eb29c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b84783-d8e6-4a2d-9810-4677fc28e9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98f7c69-7b3c-41a9-9e73-8bef97c7c39d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b6573-716a-465f-83e3-1b526f9c8c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b997041-52e2-4605-8908-b7fcaf1af411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c111ff8-d10a-4573-b5e6-e9a808fcb13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1de7e12-c765-42ef-b9f7-556647e91548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef63dcca-cd17-4730-8d56-cb05faf9672a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe568cc-42bc-4dff-b090-54103c650553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a463b4-8cf3-42f4-9b28-9b8a564323da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a653a-5c52-4a44-b9e8-a4f2f56aa9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f451a0-381f-4ce7-9c0f-89b130ae4d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126faab-cad4-45e3-b410-111cb21024d3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6401c0e6-0c42-4e1f-82dc-5d6db1a22c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd88dd7-98b1-4ec9-9ea5-f08ba28f14c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a849417-a429-4442-ad3b-5c7a6425ec23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c419746-a26a-46ce-85f0-6bb19ab9c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c409a3e8-cec1-4cfa-9da0-1273af13f874",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ce0179-ffe5-4eac-914b-dd3aa041e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62483ada-0a35-4557-b89a-09087cce8b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e11a80-b721-4a57-aeac-58f751a9b46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1616b6c-0060-45ba-8ee0-9c1af9e213da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add54dc2-6a38-40c9-9588-64af1683dd94",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e5d14-e26a-4ebf-85e0-253afeac17ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae220a65-e68b-4652-adec-22dfc859c200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fc9171-2cda-47ab-b3da-bf73d2a2d039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af94f345-6494-4eef-92f5-070074b21160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3465e3f1-d184-4c51-a815-6310400f5bf9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034637ec-7fd5-47d8-b7ec-7e0cde70c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a18bb6-5d9e-477d-a499-c65e210efa7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a83b74f-3b75-48ae-a079-f55f4a9b76b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65913d93-ad7f-4d8e-bad0-4f605bbf21ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b731a1-9873-42a0-bcd6-b5085517be58",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0225c3e-8e33-4abb-9814-0cdfd8a53c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36169635-310b-4c4e-a911-731efc520b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d09046-1bf1-4ac8-85c7-a451e890660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b821f171-f100-4135-a9db-2196abdd794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0164e79-07c8-4474-82da-9ba40a9efe55",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3530111-e9dd-4060-9d87-7f8de3dc8841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4457deb7-9668-474b-a39b-1af15eb672d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae66d89-319a-4628-ba1b-6570e31f6897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c589c28-76b9-49ea-98c6-70d4c7972027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e2b6d-5074-4e9b-b745-ab8ce7bb38c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af669a-b8d8-4dd0-afa1-99b9a1732813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c967f9-e3aa-4ba0-8ef2-9792f2ca3fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934761cb-e0e0-4998-9c4b-91f3241d3a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8024dcc-7b64-44dd-8649-5fdf6dca5c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9973784a-0a58-41e4-8290-0b96448907b7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e75bdc-2e06-4f58-a784-80664ac321e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202cb769-bb69-4e4c-9a2e-789d0881fc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d5cc8a-4d9c-4d92-890e-0858de0af17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6766c085-f6dd-4ff5-9358-46d82cdf68c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cba65a8-131c-4d7b-9c81-d1ee2ccc71ec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abc7ea-c2ca-4abc-9bfd-bc91e564a781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969c0471-5541-400b-9943-e5d16f864352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d45b6a-249c-42e1-9950-5b0a41e90116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f70301-c9f1-4072-97e5-65e4e4ff6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3700fd-2d29-4b78-b67f-14ba56772655",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f95368-4694-4266-8e83-b3d8c5472455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8fa170-f136-433a-acd5-9a3ef3d1069b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d92b78-5a35-4d0b-89c5-336a47e9f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f75114b-b5b7-4ceb-9832-7e9809feb725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518e7a68-7c4c-4230-980f-3d0aa0599dd8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c2390-cf99-466c-a5df-3d4cc89fe248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152374d6-ff56-4d69-91d0-c2e57c23fde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b634f2-4124-499f-a936-25a97c1d6b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b62010-ee5e-4bdd-b87a-4234c2b28952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260595f-ad18-4618-9d21-02615cbf2336",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fbf939-a71b-4119-999c-1c63c036427f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b523b5-27e4-460e-9c5b-f4f6e828e196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8835a98-a7c4-493d-ad80-773df0888878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26b0d34-bd90-47e7-b41c-6d636d2902e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50430e93-388b-4250-a178-9539e5e6f99d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d6554c-2d6c-4f6c-aa0c-223b3c96452e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f23d5e-335a-49c3-bed8-910afe325cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfa440c-b072-4b9d-8de0-5a4594df1fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0c5156-d23c-422f-af0d-5a0ff4959faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0e4fa-0852-4945-b6e6-f0cc822c9f25",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26073dd-a88c-4c94-97ac-87fe3e898638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910cd343-801d-421d-9bdd-f984e9c1e4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281d07bf-660d-4d18-a17b-f593e893c87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c812ba80-8e70-40eb-b994-4a6099378f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ad806-1c0d-44c5-a74d-fdde1383a599",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb32d36-9dc5-41e4-83da-4a445802048f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41846a97-26c4-4529-bd0b-d395b66d90f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a5e48-afbb-452b-8966-b24b58468371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49bd0a9-b757-400c-b518-b0b1a005568f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f7c0d-b8b5-4753-8d6b-b5a33a711d6b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa80066-3d4e-4360-9917-def3241ec710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156ad5ba-5b6e-4596-a16d-6a8ded4537b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b38547-21cf-403d-8e37-3bef4afdf7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803fe0d1-0eab-4183-a494-484983ea986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8108f7e-3653-4e25-8e5c-5a89dd94eba9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e2062e-5193-489d-8996-818ed4e8a8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb57efef-722a-48bf-9a89-659195672c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af259fa-b2f3-42b1-bfb8-eed59d5a8571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d1b186-a9e0-4b4c-9aa7-67efc702c55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d92017-083c-4b1d-b98a-1c62f0f0efc1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c78f7-a92b-4abd-8cf0-6c2d984e0c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9d91f9-f77e-4c9d-ae2a-d3cd536ad1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4243521-9033-4925-ac6f-a9fb6e848ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373e2432-a6c2-4422-9ee1-521dddde524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d2f69a-0a29-41bc-b888-d17807349d7b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8a034d-a48f-4825-92c9-50eed4d31336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c1560e-406d-4552-a054-d9f2d44bdc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c205ca5f-0f75-46af-950d-ee880013038f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02af9b9-9c69-40d7-b735-0553279948ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cc68c1-05f6-40d6-98b8-67d57491366b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735db8cc-024e-4f73-878c-94f0950b0fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1fa5b2-d7fc-4cbb-ae01-38318a5d08b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262a9d86-db2c-44a6-9118-760995f1539c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40158e5f-0207-44d5-9d5e-2d8fe0dc6119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67679364-c47c-4b91-b511-d59b2c7f1949",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc1c73f-673d-479f-921d-4744d6de28d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bd6307-611b-4f6f-bc55-ea01e84de776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58e3839-ec11-4c33-80c1-6cb7c8fc9249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9675193-3fb4-428e-b66b-7befde612e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e4fba-19c5-43ca-928c-32b8fc052196",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2b1103-ab09-4431-8b8c-cef1af8813d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d07f3f6-f56b-41e4-9ca2-0f33006188b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f921ad-684c-4a77-93d9-3e5394b08688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4480180-78f8-41ce-997f-5cc73cc53861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfcf166-3108-4d31-a8bf-fe58351a7498",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9553ded-6bee-4953-a92a-bf21c0f70be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31b661a-0d3f-4704-97c7-d5209e6382a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a5f0a-6ad8-4829-85ac-c808aca56619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74aa37d-0cea-4de0-a600-f70c991a5aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e958cdd-5f59-4666-a541-29ca75b17f55",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54be4801-2fad-4e30-85b6-897b1c722a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee7a6a8-ddee-40b0-ac4e-a9ad37609b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42610998-6c19-4866-886f-51c14387318e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8848eb31-0399-4f34-bbb5-9d46f40ba96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8645dbd-b374-402e-a32a-8782a5dd2ebc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9908e011-da7a-435a-8edd-9f0b17630bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84e074d-3e5b-45bd-be99-732167e2ddf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f423380-d1a7-45de-8610-1abd78d9552d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e28ebd-8dc2-45e2-aa5a-f757fc6906d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa3861e-9255-44c4-a47a-35f4430ec8e2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46fedaa-e9f0-4c13-970b-d7c6735f0794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5080bae2-c606-4ad1-b11b-c5acf407e793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51852cc3-42ad-4ef6-a533-fb6710bfcf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6910ff57-10ee-4d42-a32a-fff13e389f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5899ac-1f99-4b08-b072-5122402f1219",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d977d-eaf3-496e-95b9-d8253bcbb8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6688a8-b9fd-4d39-9342-8b9714f07917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de28f840-bfa9-4e90-b267-29cbaa67c694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2096381d-7e84-43cc-9451-e624f2daa96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ecc449-a391-4b33-99a6-fea0ce3070da",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e8675e-fc7e-4898-bce3-4f8461151044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0359c135-19f2-4f1c-a597-149ca8d8d332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc34c0-ee6d-41cb-bf73-7f0701316b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe49e4b-f0b7-4017-83ef-5d16bd53bcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a920707-24dd-4d5b-a738-2162f372deea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd8a01d-0779-4990-8894-36ea196295ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf90af8-d763-478f-99cd-356ea04a839d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8edb4fe-4de3-49f9-b633-da94eddf3768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f8908-2685-4cc5-9062-5670b85f51ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b59d13-f064-4280-b6ff-548e26962687",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476369a2-b910-45b5-a68b-d5e7f1c11aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedb5dc1-1d53-4486-bf19-a920dd3c81ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82edbab-13df-498e-a242-46fb640b663a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd9da6b-50dd-498b-ab92-76b60b593ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614a38a4-1e40-424d-8eb0-4f4863ba53fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519cd53-b091-4715-aadc-2aedf5b53c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf502b16-86aa-4127-a4c2-0a734caca771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820c173e-e1eb-4180-9718-c54608001add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58f9665-b0f5-4be7-872e-c88a71b743cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2d8859-c5ef-44bc-ae27-7d7546ae0ef0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ab9ccf-3d70-48eb-a5fc-46cab65af592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b401654-7102-46c7-b0d3-a12d71df50c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dcbbde-357d-426c-8814-098910ddac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22be08d-7e80-41c1-a7cf-0729138c6f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4acddc-990c-417c-8bba-44e0c4c9a26c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1fdfe5-46bc-4906-a462-3edb798ea1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da9247a-df80-4ef2-be07-933810ba9d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d11a01b-7843-4e6c-b8d2-703cc905c48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adfa534-2307-4cc3-80c2-14a2755b5a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df9eb74-500e-4473-8e8c-3ac949b1dfd7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2798440-9c8e-4147-a896-efb387e4eee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47561182-911f-4823-95c1-6c5dfe56f588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d5c37e-e5c9-40e2-8a20-d38db67ba520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b332a34-2c3e-4d13-87e5-896761475498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce74aff2-2557-47be-9fad-2547972c75cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2c42f9-7458-4945-b138-73309216f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b901663-a5e5-4b60-8d1b-3d7bcc86eedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8364805a-1d6a-4bc9-9de1-6cb9d93fa625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595c28de-cb20-46f8-8d53-c1241937d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0d0ec9-8048-4a74-b4c8-336e67a70ee9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d116f5f2-8542-4ca9-8c44-274ebc8a10eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d7b1a5-880f-4920-a9fc-71257f13a440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88c1d51-61d6-4d35-bc0c-c9eeb04264ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136a1f12-84b7-44a7-b7ba-0e22434f76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38736f4-167e-4bab-821b-e96926c7ab22",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6bc166-30db-418e-8000-87a852329026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d114d7bc-399b-44b0-b3b8-29843751f337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1bc076-75a3-406f-8e5e-d271315eeb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd39a58-4bc2-4bd8-9c60-b25a7fd26a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2892a56c-3777-4e7b-92cd-3a1ec753bea3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d224f-bf14-4272-bbe0-a7a75311376d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f19c34-9706-4ec4-8a9a-428132cc0ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05c5e9-235e-482c-aac4-fc7a87e0f45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946846d5-ef27-42cd-84b9-d08b3eae0820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936df1a5-502f-420e-9a27-d070dad438ec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abacae96-1414-4eeb-8e07-d333443f99fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fe8256-c69e-47e4-939e-e8593da0284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54466b36-a879-4185-9aae-16dff21e70c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a30065-4298-4229-9f10-668071dce28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c54c53-1adc-41d3-9be0-f5c5f76475ec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540c0bc3-f4ab-4975-9331-ebc409d98cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cae531-7183-41f4-bc9b-49c8ba83e093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75996e2d-91e0-42f5-a4b2-e89bb2d778b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cf4f9f-5514-4d3f-b436-fcf75fabceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629b396b-9029-4451-80c9-7b1dd3997c17",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaac30c-a8c1-4ce6-8099-247b9ca3e173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e9db37-7628-481a-a143-fe664f8bdedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c42de2e-ff54-4437-b5db-d6661ce8d3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31da482a-430c-4fe5-9bc5-bcaac16a20fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f0e24-9bec-4197-ae40-f2e1d3587c4e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b5d7bd-c3f6-4f76-9d06-f12ccd4d7c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4d2e87-1c24-46db-81aa-42a07699fdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c083ac52-310d-49e0-a2ff-06c0f63acc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fcfa51-4830-44a2-9d99-8e8672ddef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1ac77e-9587-4397-8555-6bbddcbc64ab",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2783271e-ee9d-435e-b1b5-92ee09028460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba46550b-4550-4944-b400-0937dcd21473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa561b9c-9894-4c46-8914-de1e94f19f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987942eb-0fae-42fa-b2fa-0ab35b8844fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e03e57-c9ad-407f-98cc-faa92e9c69d4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ff1268-83ad-44b0-a600-22787e63a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f45edfe-56a4-4f4f-ab66-50e00be771fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085fdafc-eaa1-4e0e-97c5-95c54d620e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669fa2be-bc00-4287-80ed-532c2a4048b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebcccda-fe51-47ed-9632-b93baf0266b6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b228bb74-b166-4ed9-85d3-c5e432f6e2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d32477-5374-456a-b585-b9c63ae322b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7f751a-c1ff-4c3b-8f65-996ae0a389ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b3d9e9-74b9-45d7-a058-381fc7c26c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae4085b-44c7-4eb4-869b-80b2dbd15f9a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adf67eb-0dd5-476a-b6bd-37ea37b78af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b913e26d-bb5d-4e67-a8e8-5596f79c33bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f887610d-4774-4060-b402-be1b3046c10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba038d0-bc66-4106-aad2-99f43305a0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f932c1-57f7-4341-b335-4d591e9d2978",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f4491-5dc4-4b2b-a13b-592b8fa7768d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5efe898-0ec8-4bb6-9690-f9b970dc7ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a29fd-667c-4836-bdb2-d316ee0c9969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ff6928-f65d-413b-8c6e-65173da0c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c30c94-604d-41c5-b41a-1475b6d0fd8a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6765a1f4-0401-43c4-9078-f42fd2aa6dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b358f1-3f3e-4fe1-b96d-147bbfc56f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8050534d-2fd5-45b0-91f3-a6ad449aa038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8989ce0-d5c6-4965-8396-db8ed21156e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353f2fa-79df-49b2-88fe-387a04199f9f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dbb683-388e-46ed-a75d-64f03e63892a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba8e4aab-5bcb-4291-8d86-8d3a18a006fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b65321-6c43-4fcf-b5bf-ef849f3924d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54af311-79ce-4df0-8db9-a98c7367f68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2758e11f-926a-4061-afae-62c3d28ccdd0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c322c72-55fe-47a1-b8ff-cc244dc67cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed32887-d4df-400f-8bd6-a633be1e5e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ba2f5-5e1e-4817-a16e-8cda40100db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03c91cd-1fb4-4e4c-934f-3b8e220e2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c91a8a2-b6b1-4d1b-b06f-00a24dec4591",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c02c76-6adf-47a6-a736-fe2c08a27203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0179f6-1a99-4457-91db-65865627524d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2179612-99ff-4dad-84e2-e205d306344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11cd73d-5341-4d85-9196-0871d11deed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a975387-ea94-44ac-8381-858df848e333",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8a37a5-9339-4373-a6ed-fbcd3d003f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17920b2-fcc1-4394-a457-d253ece4ab8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4983ebf-7aaf-4237-9f17-8c5e786ea078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960e1595-22e8-4455-ab88-41cfa82bf483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319d252b-97a7-41ae-8eb1-4df39752c5e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599e6d53-086d-49ac-91f8-85b38c943da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb7ffb7-edeb-43c0-9395-7b8a260b1c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e84fa7-8c7f-496b-980c-d22abed15f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a839e24a-b7d2-4468-9080-cf2bf4162bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150404be-0733-44dd-9684-6ab0998b9a82",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d61e60f-b299-4fc4-b65e-e553c20abec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad257732-ae25-45cc-ba55-5f54d2bd75c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d42a1a-c44f-47ca-9cef-7f82257ba791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027e6f7d-18d2-440d-b30c-6d9f94a94510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0254758d-78a8-49af-a7f9-1c3e586b8997",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd3d03b-b93a-4638-8842-1c73154926c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bb0304-6320-422f-a5a8-a282875d3b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f63c40-b0f8-4680-ba56-65173cf7b546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d339921-b48f-465e-bb12-48b319e182f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e845f4-4213-4dec-9423-cc3feca02ca4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d900d135-bdd0-47b6-8fb5-584a0095c028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e1a823-4aac-4006-85ef-32aaa403d875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14062f46-3321-480e-b91f-4c1d5bde5e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ed2caa-5d16-4c3f-af22-6d7f07519926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635e793e-f8e7-409c-8d12-c7683be18120",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea2578b-c2e3-4b02-a452-b0e337f7c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd74768-586c-4473-96e9-f53058a7bdd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09828904-ae2b-458c-8ce9-4c85c3cbbb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd9241b-86eb-4063-8912-66bf3038bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dce3cb5-3033-4c85-9350-7e22a444f9fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89722dcd-aaf6-4844-a7b5-3a7e99606e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06310be0-3e95-48bd-a02a-43993bdb79e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f2b8c3-f831-43bc-93ff-59a7592723af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6662d39-54c4-4487-af34-74185184ee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6bd34-944c-4e60-bfb3-cc281e871613",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858e784a-747b-43b7-ac1b-63d4f37dfe2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20128e02-693f-4ee4-bade-ebee095e8a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900078f2-785f-49db-9865-f0b837595652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57b74ab-bf99-4ae4-b1f2-eb3bacde9441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc13513-69b1-417e-b280-99b611006ec1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50073fa0-6e4e-4798-8cf9-181e5ac65fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a735faf7-e322-4cfc-8cb4-74102a080dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d867aca-5ef3-4aa4-8d8f-7bb8720baa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256ef578-b316-4cf2-90bc-8f7c4b18032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5c2db8-8eb6-4015-b23e-78bf0dfe0081",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd495b56-b47a-4388-bb63-7f065e81604f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a445dd24-87ce-424c-b4aa-d5b1a4a972e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde48de8-c483-45df-b259-d04cc69d911a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9170dc8f-13b0-498f-8546-1cadd098a280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0ab035-0386-4787-98f5-8ee9d6d6d7f1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd6cfc6-01a6-4b9c-ae98-a249061352e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1c1192-d6fb-4aa5-a086-eb7f659cbd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77765690-137d-4641-a773-1628eded27db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43eaaee7-ae1a-4321-a49c-9e5c4037df07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bc4407-737f-4afb-b568-0563e3031853",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766c6560-aafe-48fc-b2eb-595a280155db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1e2f3d-82fa-4122-a0a8-f0b04781ee73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bce61d-4e5c-4aef-89f3-4edf74ba470e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9262bba-4874-45f0-a5c1-31febe05ba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a623f3c-29f5-407b-8dce-d8a40cb69e9a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b955e3-96cf-492a-8e12-088d41592cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30f21a9-cdec-45f2-9260-ee5111309681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf430c74-efcb-4ce0-97df-de562524b563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e323503b-c5ff-4298-9b82-e94eff79086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266d0d74-e550-41a0-93cd-f1dbf2c44153",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06dd4c7-c1f2-4207-ada8-c019a968ee64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e764b0-bf95-498b-884c-c16af392ff9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d429269-1faa-4b3a-8f7c-3efcf2bc91c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8286f73-ba19-4adf-9f8b-8db0f1f579b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af218da1-7271-4d19-90da-23dfac4d2c81",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c33883-354e-49ae-a6b1-ca199106b4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8afde7-3c63-431c-bc7f-cf3987480c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b447e146-5f10-47b1-ab5c-97258e592bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0597f31-c0be-4889-b85e-fe9be978aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321dd766-3dd2-42d2-8aa7-eed65dc42740",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c244991-552e-4e93-a7d3-4280549ab9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17608da8-19a7-4013-bf8d-de3b72f1f801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac2ece-3e65-4115-a478-daf0a0ba7379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67d7c57-4eab-455f-b771-14df64ad20a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6764de9b-68a0-4aea-9af8-c0c435458284",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5f0ef7-82a9-48bd-b64d-5a65e88b1cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "135f852c-6d7e-4e0d-874e-e009179ff5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c805c145-e235-43dd-9fbf-17049524dcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764c0124-21ea-4844-b5ef-a21e5b1a3678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388ef462-0ebc-4778-9ba2-64bbd838a3ba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa3678c-675a-4dca-a01f-67a4e5a37fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65429cc8-38d9-4ee8-a428-a2a886d2b170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46538f89-b1ef-4e59-aaa5-73daecc78153",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de75a26-7e84-43fd-a7d9-4df89b02cb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb6bcce-9590-4cf1-92fb-e29ab8796e0a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94aa13d-f793-46df-b928-6b772c3a3bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9307ff85-b18b-4774-a381-dae707696d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562eabe2-628c-494e-bea0-5bdc8f98f22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a988cf2a-b130-4418-a985-e1a8b27d2f0d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeffd0e5-4ba7-4b95-bb69-5a47a3cebe72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16208b09-5fe0-4e53-aace-90c2fe9c37b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae40a15-9edc-46b1-a04b-4433867532f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09c6b5a9-1411-40bb-b09d-2037b3d2154f"
                    }
                  }
                ]
              },
              {
                "id": "c1dd69a1-f565-499a-82a6-9fdbea34b4f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "228aba55-ed9d-46af-8d16-753176f07cac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898c7e63-bc44-4619-9d38-1f07e31fd570",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2d81254-b613-462e-a2c5-9ee19b73633d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaba6e4-d06f-4214-93d8-1df77639ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9432423c-bf18-448e-9998-d4f62bb7601b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60056e5b-4d54-45b2-81ea-5a299fe9ffe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f4752b0-5279-4964-bf8a-f8bf7b815929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4838f4b-79ca-49fc-8177-aa6b75b8bd2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7fb88e-b437-48fe-85f0-7d065e59afdc"
                    }
                  }
                ]
              },
              {
                "id": "2468cfbe-03eb-44ab-b63e-d92f181d8e3a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7b12687d-e4a0-4d42-ba24-0919fd1babf7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42086791-00d0-4f50-b398-57f1bd6f62ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "02291eea-7b9b-4fc1-a036-246483caafc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62ead6f-baa5-4ae6-a8a6-915927bbf72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c413515f-0291-4170-ac2b-b1d51ec62ab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "732ecc21-af99-41e3-9305-12252d7c92f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9d09e6c-1b54-43e3-86fc-249e6e33b347",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cf3fc89-ce44-41d8-b9f2-0baa4be82f95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "393092ce-ccd9-425e-a423-b4ea162fd26b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8518bb28-6a6b-46a4-a546-b67bcab160a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55fce9d2-fff9-4cbd-9f6a-1b7e0bd6faa7"
                    }
                  }
                ]
              },
              {
                "id": "f54b2bb4-3554-4608-a3e4-2f5c9c76a6e3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36b4761-4c96-4099-abf3-2974a208a20e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f87ea3e-e0a2-4a68-bdf0-6fea85e59fba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55ba466d-eeed-4571-aacb-a6695bb36577",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f94bec5c-e019-425f-89fb-d4ee77af53cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "676efd9d-3389-432e-98df-6238d21f1b02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "977b8c3f-760d-4e71-a843-f5ba04479d3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60dfbe27-2d93-48e2-a58e-30ca617c251b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bbe68a3-aa9e-4387-be47-b8e98bdd0718"
            }
          }
        ]
      },
      {
        "id": "1f2e1dda-1da0-4902-b824-ce6b3d6ceacc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ce337fb7-3f88-49a9-9fe5-1b8551d2a259",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b9b571c-7ae6-4e06-bbb3-70ba051b5275",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bad4edfe-5a40-4f13-99de-1a44ee0fe452",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9752bf3e-d83a-4bab-a3f6-9596b8f9e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e1a7acb8-b904-4d3e-952f-899487cb051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066f1d7f-74c3-418c-85fa-272a7965d3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faadb78e-9e8f-454e-a63d-8e0a0e343a25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcdfc925-946f-4bbc-94b2-c5eddc4739ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f679c71-1727-40b6-a008-7b393b56fe0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64cd379a-fe3a-4b7d-9444-73da854c0165",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1445cf94-26d3-4f3f-a1e9-adb7569c5cc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01410ae2-be53-44e2-b2c7-f0eb1d089cd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e802d01-2da6-4432-b0b6-63b198080549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "437c68be-ff60-40a3-961b-de8fe0c1bdee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "284d423e-a17d-401f-9461-0186ed887fa8"
            }
          }
        ]
      },
      {
        "id": "75ee21f5-4d1e-453c-a6e0-63c42f06d55e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2f820538-ea5f-440a-8e8f-d309ac57ea5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0453d165-a440-4469-b49b-19ed935b32e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c264ee28-c1a6-4888-ae05-601a53462c11",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151eb7fe-1443-410a-a55c-3fb88beb55c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51033d28-e1ef-444d-bfff-f6ef87e2e67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c5502-e611-4f54-847c-96b37df71937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53d93fc8-ed92-4a46-b525-d53a75324d02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22ef97f9-cbd0-4e5a-be9d-3b8dd397c507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333fa801-b773-4417-84bd-77feb86e33d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84580061-054b-4436-99d5-b49fd3dedadc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e059c96-568a-4bde-aa29-2a8cb87135b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca0784f-edd7-49b4-9229-633f174521ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efba9283-d647-4355-b163-f81caad22c57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adc2dc6f-e56e-42d2-9afc-5d31e983bc98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2676bcde-ca42-4b24-ab71-aee0218431ec"
            }
          }
        ]
      },
      {
        "id": "985233ea-0121-4a65-b41e-5f29186df754",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7238df2-5d2f-4e4b-88ba-9594a9ec716b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43ac7212-991e-419b-9e8d-b420e5ba85e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7c06402-6e85-458a-9e70-5e1562664d19",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6ff691-ffaf-4587-82c8-1f1607ed04b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "191e783e-39a2-4792-bcf3-45f5e7f35884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e948326-48f2-4020-b9ae-55847d32c30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e754366f-d568-4122-b9a5-95bd26b5087d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7f1715f-f866-413f-b8fb-681f85e2f3a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b70c4f-12d0-46b8-b7e0-f8991a83e579"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fb91794-e334-4677-809d-9b0cfc594d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b97e76f-edb9-41f4-81d9-a40cfc0c916a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9886b5bf-01ff-4921-bdb7-3d2ed6bdb9bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3de9be3-c900-410f-b3c4-886b7809acb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b128c039-957b-41e8-a845-4ea0ac8dc668",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d9457e5-0746-40d4-818d-d99b15786962"
            }
          }
        ]
      },
      {
        "id": "1063ed84-1ad9-471b-bb55-8cd33239b09d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ffa5d92-f907-4f50-bd6e-2ce272cdabd6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fd56934-ad57-4dda-81dd-ac510b302f78",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "344f85ea-5fca-40d3-88ce-393976d886bf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c22d5c7-e420-4dbc-a898-69cc033b759d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2719c92-acf6-4f05-b24a-42fe07fcbf85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 261.9330985915494,
      "responseMin": 14,
      "responseMax": 8412,
      "responseSd": 874.9888484779807,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690850728651,
      "completed": 1690850817274
    },
    "executions": [
      {
        "id": "2dc5001a-19c3-4b9f-99e3-af3bb8d65921",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7ec198ee-4323-4719-8e73-15dee87097ec",
          "httpRequestId": "3959b7c8-4e89-454c-9e02-3f2ba43a9e5f"
        },
        "item": {
          "id": "2dc5001a-19c3-4b9f-99e3-af3bb8d65921",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e2be339a-7796-4e85-8d2f-8042ea246161",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "e8c002de-1407-40e6-9979-4c28351cf2e8",
        "cursor": {
          "ref": "0aa113be-ab5c-475a-bf88-03439693c808",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba276ebd-dedd-408d-b5d6-8ac62483d722"
        },
        "item": {
          "id": "e8c002de-1407-40e6-9979-4c28351cf2e8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "037b4178-03c1-4c69-9e85-6d496ea20463",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "4d085092-8b28-4ad3-a7e5-489b58647836",
        "cursor": {
          "ref": "54b77e22-9bb2-4c48-bef5-810ffec87040",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38763f27-dd22-4ee2-a364-1e527a1ed0f9"
        },
        "item": {
          "id": "4d085092-8b28-4ad3-a7e5-489b58647836",
          "name": "did_json"
        },
        "response": {
          "id": "32f7c2ad-a4c8-4663-82dd-b42eb327206f",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3b08b-c2ce-4dca-a11e-016bef0b9ca7",
        "cursor": {
          "ref": "82afa22a-ec6f-4c98-be92-c030a351b4a0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c76b383c-80eb-4d8f-9de2-f151d05e1b9c"
        },
        "item": {
          "id": "4ba3b08b-c2ce-4dca-a11e-016bef0b9ca7",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e792f30-31fd-4dc3-99b0-17ef26c3a081",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1017,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3b08b-c2ce-4dca-a11e-016bef0b9ca7",
        "cursor": {
          "ref": "82afa22a-ec6f-4c98-be92-c030a351b4a0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c76b383c-80eb-4d8f-9de2-f151d05e1b9c"
        },
        "item": {
          "id": "4ba3b08b-c2ce-4dca-a11e-016bef0b9ca7",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e792f30-31fd-4dc3-99b0-17ef26c3a081",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1017,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63ed12e-2c6e-4a8c-80db-1ca2341907b2",
        "cursor": {
          "ref": "59d6f5cd-8efa-49f1-8f9a-714716cd3578",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0c8c9320-5dc3-4bfd-a06f-cc1ad1d62bff"
        },
        "item": {
          "id": "b63ed12e-2c6e-4a8c-80db-1ca2341907b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e648f1cb-d541-43e6-b00f-bed3ee650537",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a89663-ebeb-44ab-8b43-f0e846a57eef",
        "cursor": {
          "ref": "4c5ad1e4-a888-4c75-bba4-334ac78a78d8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1c4ef199-d7c0-4536-af96-5bb71aa3cffc"
        },
        "item": {
          "id": "d3a89663-ebeb-44ab-8b43-f0e846a57eef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f3b9bc9f-10e8-4b49-9c43-7f801dd0ea34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790197d9-009e-42ba-b260-486eb3c07a79",
        "cursor": {
          "ref": "5b399694-7aba-425f-ab52-eef42b29921d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "54c8d43c-20cc-41e9-9dd2-34a73031f227"
        },
        "item": {
          "id": "790197d9-009e-42ba-b260-486eb3c07a79",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "adcb0bcd-865e-4740-9861-801f4ee54093",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 91,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efe80e4-320b-4a2a-a0ab-3b13866a1157",
        "cursor": {
          "ref": "cfec6cad-5c2a-4303-bfb3-c09ae3821f12",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ff72d5c7-2f8a-4ca1-97c3-25ab6ed8a69b"
        },
        "item": {
          "id": "7efe80e4-320b-4a2a-a0ab-3b13866a1157",
          "name": "identifiers"
        },
        "response": {
          "id": "c235a735-c7be-4084-ae5a-6cdb84882ef2",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf2052-1c37-468a-b7d6-c939e94ff41e",
        "cursor": {
          "ref": "48708342-22a1-4079-b785-e3bcb35b7aef",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "59445642-a9af-413f-b06d-d371c9446872"
        },
        "item": {
          "id": "6abf2052-1c37-468a-b7d6-c939e94ff41e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf355ff7-ad66-4db6-a7a9-81c4cd46660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffbc1b0-fa60-4160-b331-554295d7b096",
        "cursor": {
          "ref": "edc327dc-e8f3-4616-914f-5b0e94ed570d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9c537970-c059-4515-9cc4-bbc7185746e2"
        },
        "item": {
          "id": "cffbc1b0-fa60-4160-b331-554295d7b096",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d788485e-5fe5-4f13-bc95-8f92ec4cf5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0bc351-0367-4bd8-bf23-2790eade8fd1",
        "cursor": {
          "ref": "75e5acf8-0ce3-4ee5-be67-37e4b34e67cd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2ac1f8db-e7b2-4eb1-978f-764329d38d5f"
        },
        "item": {
          "id": "4e0bc351-0367-4bd8-bf23-2790eade8fd1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a598609-0807-4af0-9ba2-69d8dc10b0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c1ebd2-79ce-4f9a-80e1-3204f51cd2bb",
        "cursor": {
          "ref": "b8ba4b19-2aa9-4cb1-b385-c43947e0b41b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "89eca11b-961f-457d-886b-2c037da30607"
        },
        "item": {
          "id": "91c1ebd2-79ce-4f9a-80e1-3204f51cd2bb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "38e2b0e0-a530-4f3a-93b4-d4ff7024f759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe4d424-cded-4bb6-bc60-51400f84ac07",
        "cursor": {
          "ref": "ac767b6a-e064-4d7a-881d-6d9a315db3f5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a5e41bc1-fe90-4fdf-b8a6-6c78cceb1899"
        },
        "item": {
          "id": "fbe4d424-cded-4bb6-bc60-51400f84ac07",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "02a63530-05fb-4fc5-b530-e0559c58fa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725a2140-9ca4-4c16-9b55-a3236bfb8e7c",
        "cursor": {
          "ref": "e3127c77-7f4d-4817-b9bb-b0e536e19ada",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee459b4c-dd09-4f26-8787-93506dada13a"
        },
        "item": {
          "id": "725a2140-9ca4-4c16-9b55-a3236bfb8e7c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "70399d1a-026b-4439-a9ff-4eb2f79f5f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1613c5-74c7-4b1e-b36d-011402d06e2e",
        "cursor": {
          "ref": "8d407262-0dde-4914-bb9e-8cc4b3153db9",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5c2ec11d-6ddd-4fe4-96d8-6650c3448db4"
        },
        "item": {
          "id": "2d1613c5-74c7-4b1e-b36d-011402d06e2e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "13be4dec-309d-48fd-9fef-c06aa8946f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0005e34-a1d6-4e78-957c-1dc6463b7999",
        "cursor": {
          "ref": "1f751aaf-7676-4d1b-9e34-30796579ecdf",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ff7fc8e8-538e-4977-af1a-a57c1dd3e388"
        },
        "item": {
          "id": "b0005e34-a1d6-4e78-957c-1dc6463b7999",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c6a5ac0e-98a0-4b61-a744-f3d2f2989e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44e2b6b-3130-41fc-b95f-2906dbf2e625",
        "cursor": {
          "ref": "64e497fa-7e4f-4af6-b774-59a909e29f74",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "816ab8bb-a6f7-42ec-8a75-dc19573d571f"
        },
        "item": {
          "id": "a44e2b6b-3130-41fc-b95f-2906dbf2e625",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fd7e128e-0dcf-4f70-8824-1c9b1536e442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a95c03a-3f49-449e-a13f-9a592a69b836",
        "cursor": {
          "ref": "1871a22d-8bf4-42c0-9a57-e29eb9791e79",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1a398b6-5802-4342-aa38-58c3d5ffb005"
        },
        "item": {
          "id": "0a95c03a-3f49-449e-a13f-9a592a69b836",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "01e4912f-5389-4145-b004-7a1b57f8fcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40604694-fdeb-4e6f-ba0d-471db9aaaeb5",
        "cursor": {
          "ref": "af77c176-84f5-4ff0-b0a5-edcb5328f6c5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5a56221a-253b-4759-89b0-5b6dcf23c189"
        },
        "item": {
          "id": "40604694-fdeb-4e6f-ba0d-471db9aaaeb5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b31c40f0-8436-42e7-88a8-035725e52aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e99510-7d68-4412-9643-9883436d8356",
        "cursor": {
          "ref": "a79b21a4-42f6-473e-9ae1-5ea51ca58f6f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e67689d-5d75-499e-ac8f-9bdc2dcd9364"
        },
        "item": {
          "id": "e3e99510-7d68-4412-9643-9883436d8356",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eab9ca96-81de-4a3d-864d-9e53c794c3c8",
          "status": "Created",
          "code": 201,
          "responseTime": 2482,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "37b68c97-5433-4718-b4ce-a6accaf082bc",
        "cursor": {
          "ref": "acf52dcb-1eab-48f9-b50b-efe6954a033b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5be262dd-1756-4aec-9def-47c030df5219"
        },
        "item": {
          "id": "37b68c97-5433-4718-b4ce-a6accaf082bc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4353a337-2723-4e48-af1b-1732f8980473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19937f94-04ba-4326-92b0-1d4cdd12f315",
        "cursor": {
          "ref": "4d34941e-e054-4b75-a5f8-a514d2334ce5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d8134242-2685-46a7-858e-5171dc5c7c66"
        },
        "item": {
          "id": "19937f94-04ba-4326-92b0-1d4cdd12f315",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4da4c278-616a-40cb-a009-e015386ad5b0",
          "status": "Created",
          "code": 201,
          "responseTime": 6080,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "16794280-f0b4-4bc4-82bb-c6bef555de5e",
        "cursor": {
          "ref": "48308a6a-f76f-47c7-b74b-6ed43f54fc6d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a05ceba4-b051-4d43-a7fd-42ce1233f9ac"
        },
        "item": {
          "id": "16794280-f0b4-4bc4-82bb-c6bef555de5e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "12388e1e-befb-4711-bc24-d3750a50705a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f2f81-4b0e-4ba4-861e-59e958a0a288",
        "cursor": {
          "ref": "b1164038-488d-4536-8237-b1c0124984a9",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5fe8a44c-bf21-4997-94a2-24b72cbeb9f8"
        },
        "item": {
          "id": "833f2f81-4b0e-4ba4-861e-59e958a0a288",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cdbe1078-85e7-4c2c-90b9-a0429a4c2d07",
          "status": "Created",
          "code": 201,
          "responseTime": 4545,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "c4612dec-ba69-4923-aa7c-4fc0f718b19d",
        "cursor": {
          "ref": "87ee1582-5e9a-4b20-80db-80921d0af38a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "08770442-e537-4e55-84f1-c2a3354aec54"
        },
        "item": {
          "id": "c4612dec-ba69-4923-aa7c-4fc0f718b19d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8ad9e9ca-9596-43c6-8fa0-7cc398d5a8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a009d70e-7755-4b8a-a3b1-9420200fdec0",
        "cursor": {
          "ref": "e1b444f0-0115-488b-b0ee-778d1cc35feb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6977a68e-c24e-4bde-99be-85c35c0ea8eb"
        },
        "item": {
          "id": "a009d70e-7755-4b8a-a3b1-9420200fdec0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "26d475d9-553b-4939-8138-133d3369e00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78f55ce-7822-4424-8ebe-b07e6564c580",
        "cursor": {
          "ref": "3a7bdebc-0114-4065-9443-11bfa241e977",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4b4aae96-2337-410f-bb8e-17f652acae16"
        },
        "item": {
          "id": "a78f55ce-7822-4424-8ebe-b07e6564c580",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8a42588a-22f3-49a3-8a93-d573014003f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe974ff-7aaa-4a6f-9689-7004e44f72f3",
        "cursor": {
          "ref": "3a8e048c-bff4-4ec4-bd1b-7336dc4ddfbc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07ea1d83-5285-4f85-99dc-ac26a037d1ce"
        },
        "item": {
          "id": "1fe974ff-7aaa-4a6f-9689-7004e44f72f3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e2a0648-5283-427c-9743-6f3ff1df58d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89132f3d-fa82-40d7-98aa-7168f862b05c",
        "cursor": {
          "ref": "87d126af-249b-4052-b751-c82558dcb278",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7bc708c-efaa-4525-857c-54bea7b09d3d"
        },
        "item": {
          "id": "89132f3d-fa82-40d7-98aa-7168f862b05c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1c3ba3d3-e449-4b4d-89f5-ff015e3a1532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90f6e79-08b9-4336-b53c-6d8241c2d569",
        "cursor": {
          "ref": "9477bcdf-ecb6-4bcb-b3a0-1167996028ff",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "01595353-0d59-418c-8bf0-17e7e4c2d812"
        },
        "item": {
          "id": "b90f6e79-08b9-4336-b53c-6d8241c2d569",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f103cb28-4840-45f6-bf5b-aa65db6fc414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c495e42-76c5-4335-914c-3ff87fac2cfe",
        "cursor": {
          "ref": "ee672175-10de-4797-b4c6-f7d60a111cf5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4883a2e5-00b7-4b6c-89d2-c5f7baeea9c7"
        },
        "item": {
          "id": "0c495e42-76c5-4335-914c-3ff87fac2cfe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9bd0d925-ae5c-4e54-bb18-255c442060a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013ba75c-aef3-4fbb-be05-771e16beb152",
        "cursor": {
          "ref": "6300d42f-41a9-4f3b-bdfc-a090b7e575c9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da25c17c-2c3e-464b-b1ea-5a59b46ce838"
        },
        "item": {
          "id": "013ba75c-aef3-4fbb-be05-771e16beb152",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "870d5f14-4d17-4ae2-ba8a-ed69154bd0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1ed4cb-b739-4181-9ef9-e22bbaf3805d",
        "cursor": {
          "ref": "7a6005a9-ecc0-420b-bdbc-76d8d1aebfc2",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de916775-2c84-45d8-8773-1eebc016b402"
        },
        "item": {
          "id": "4f1ed4cb-b739-4181-9ef9-e22bbaf3805d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef837ab5-96e0-4c7c-a618-fc607639fa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4883058-00bf-4cda-9e8d-1d3dbfe328c6",
        "cursor": {
          "ref": "84250656-9221-4978-8942-664f5132cdc9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cdc7c224-57a1-415b-bca8-c358dcec315c"
        },
        "item": {
          "id": "b4883058-00bf-4cda-9e8d-1d3dbfe328c6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0242d34-077a-43ce-a036-85cce7125f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a41b29b-dc1e-4827-ae58-7bbe8a3d3444",
        "cursor": {
          "ref": "fcbe5360-e0ed-41b8-93ac-80a4f8e9bc82",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "54fc20d5-acbd-4046-b69f-2b0404f899e9"
        },
        "item": {
          "id": "8a41b29b-dc1e-4827-ae58-7bbe8a3d3444",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3d8518aa-509d-4f33-a434-d7c46064f0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f28dd7a-5ff5-4770-9e77-5a9358c4ac67",
        "cursor": {
          "ref": "efdc731e-3fb8-4874-8b95-ac184479f5b9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b217f6cd-579e-4542-9082-44ded26f78cb"
        },
        "item": {
          "id": "9f28dd7a-5ff5-4770-9e77-5a9358c4ac67",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4ebac7e0-344f-470f-8976-d1af9ad8bdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd9d8e0-5b93-4188-a196-c4919d49dc23",
        "cursor": {
          "ref": "d205593d-6f9d-4a2e-b710-b6198e92ca5d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "56e0fdd2-221a-481e-9040-0d364a34af3f"
        },
        "item": {
          "id": "ecd9d8e0-5b93-4188-a196-c4919d49dc23",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5a563dae-d63c-4b1a-8467-4e1265cde5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff58c5-07bc-4b91-8b1e-4a5102a7268d",
        "cursor": {
          "ref": "b8a50b9e-7dd3-469c-9bb5-384e3af0c49c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "60f89fe0-edb2-41d6-a8ba-871037a01e5c"
        },
        "item": {
          "id": "50ff58c5-07bc-4b91-8b1e-4a5102a7268d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "972326eb-b680-4816-90e1-b99be4958de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94410a30-8f2f-4397-b163-fa9d0031219e",
        "cursor": {
          "ref": "0cb3d3a1-c113-45c5-9b35-0924765d9f74",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4055e2a5-05c7-4ef5-a511-66963a87be54"
        },
        "item": {
          "id": "94410a30-8f2f-4397-b163-fa9d0031219e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "da943f22-3a31-4251-a901-f27fcd89c488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7424b2ec-ac24-4ac0-a70b-752a816abd5b",
        "cursor": {
          "ref": "af14ce59-6d12-4267-9924-602f5bd635f2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acb4412c-6d29-4bfd-8fda-0641f528cb92"
        },
        "item": {
          "id": "7424b2ec-ac24-4ac0-a70b-752a816abd5b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "87c41f72-1aa6-4bb9-bcb3-7274a08fc2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9a2df1-57f2-4f4a-9eab-5fb415e3f4ca",
        "cursor": {
          "ref": "56686c4d-f4b2-4c3a-8845-f0e5b8ab496d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "daea2d28-3bc7-497b-9374-c966a31325f4"
        },
        "item": {
          "id": "5f9a2df1-57f2-4f4a-9eab-5fb415e3f4ca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4f17f60b-de5e-4fd7-aa78-cdbe15dc329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65acc17-c28a-4bd8-88e1-a168aae89f2f",
        "cursor": {
          "ref": "3e62efaf-3ed7-43b0-8b03-91bd79b19929",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9478e17e-6f01-48a4-9add-8b26b0f3cfa3"
        },
        "item": {
          "id": "c65acc17-c28a-4bd8-88e1-a168aae89f2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6105a8cb-7f25-4c6c-baef-8e1d38ad2153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4cf3bb-a326-4220-8235-82cd311bca52",
        "cursor": {
          "ref": "bf1b1347-77d4-401d-8312-b75df9e9ac88",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8709e06f-67f0-49ee-b282-554035e1a817"
        },
        "item": {
          "id": "1c4cf3bb-a326-4220-8235-82cd311bca52",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "45651d3e-4274-48df-a81a-034dd7e7176b",
          "status": "Created",
          "code": 201,
          "responseTime": 2179,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "4fc91dae-4d87-4f1e-8820-9767358ce3a3",
        "cursor": {
          "ref": "31cb8f82-2b44-4cec-bb41-9ccb82ebf044",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6194ca7-8d12-4720-b862-f08c2f7385f3"
        },
        "item": {
          "id": "4fc91dae-4d87-4f1e-8820-9767358ce3a3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e5d0b1b7-2d14-4ddb-8b8f-6fdb0fc5c790",
          "status": "Created",
          "code": 201,
          "responseTime": 2919,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "5f044a2e-92f9-4010-b84f-b80fbc6eccea",
        "cursor": {
          "ref": "3d6bd8fa-dd31-482b-82ec-5ed6714d9bea",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef75d482-00d0-4d9f-96e7-327c23d4419d"
        },
        "item": {
          "id": "5f044a2e-92f9-4010-b84f-b80fbc6eccea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "201ea6e9-1993-48dd-9a29-65b540fd2cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feceeae3-e5dd-4842-bb58-24c442da5f55",
        "cursor": {
          "ref": "3d71a320-5d6a-4a2b-b1df-e5089a8f604f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6f3b5b81-7742-4222-ac45-029fc7391737"
        },
        "item": {
          "id": "feceeae3-e5dd-4842-bb58-24c442da5f55",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0230b648-f84e-4966-9d01-a4b41535e1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46951cf6-8943-46d5-a611-5f2495071c1e",
        "cursor": {
          "ref": "cd565afa-18d0-401f-8e81-03581b80681d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dcdd4b44-61ea-4b7d-81ce-0328375f5ac6"
        },
        "item": {
          "id": "46951cf6-8943-46d5-a611-5f2495071c1e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b89adb20-1aed-4e4c-bb8a-4545d3cf499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa9672f-11e9-45a0-ac3d-7c33af582b2b",
        "cursor": {
          "ref": "0fe362db-799e-4c6c-b766-25db662946de",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bcfefe5e-9a9d-4110-aa03-e4bf649f17e9"
        },
        "item": {
          "id": "bfa9672f-11e9-45a0-ac3d-7c33af582b2b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "930c1a04-30d2-45c3-b8d7-871ea42f7cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7be67db-d128-4bae-bccd-d1d41f640ce6",
        "cursor": {
          "ref": "a105de1d-1c7d-410c-8ffe-75c3ddb1dd8b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "862d71ad-a396-4da8-adf4-5260f93b74fa"
        },
        "item": {
          "id": "c7be67db-d128-4bae-bccd-d1d41f640ce6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b230a45c-01e0-4425-8405-a635aab2bc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f3f378-0a9d-43b2-8fc5-8ec2f05c698d",
        "cursor": {
          "ref": "b480a808-beea-4cd9-909f-55d4647ae1f2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5e25bbc9-9a0b-4d3d-9253-b1f63d16a7fb"
        },
        "item": {
          "id": "c9f3f378-0a9d-43b2-8fc5-8ec2f05c698d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6c741ed8-9034-4aa8-881c-463ef189b25e",
          "status": "Created",
          "code": 201,
          "responseTime": 2207,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "fe739d56-be4c-4c98-b106-312459fe5641",
        "cursor": {
          "ref": "bed70ef5-8709-440e-9cc2-5261f4d4cfe0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ca89e8c7-2c29-497d-ad41-7b78769fca23"
        },
        "item": {
          "id": "fe739d56-be4c-4c98-b106-312459fe5641",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5de59e2f-2ddb-4db7-ad79-b360b135e5e5",
          "status": "Created",
          "code": 201,
          "responseTime": 4645,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "d0953288-0d00-48b4-b845-3bd6d82584c2",
        "cursor": {
          "ref": "ee6dbd88-ed79-40d6-a25a-7bf9f9d98355",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6d5558da-a8f9-48a6-9beb-91051665c414"
        },
        "item": {
          "id": "d0953288-0d00-48b4-b845-3bd6d82584c2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "df113d6d-575e-477d-9dcf-2560860720ec",
          "status": "Created",
          "code": 201,
          "responseTime": 2644,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "9173af46-c4b9-4547-9620-0c0f4824c216",
        "cursor": {
          "ref": "78fd4452-9cca-4435-86fa-56cb71cf3068",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b0218536-6729-48ab-a0bb-c7632787f77b"
        },
        "item": {
          "id": "9173af46-c4b9-4547-9620-0c0f4824c216",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cd16c28e-64e7-430b-a610-295b91b63a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496d7b32-c2d4-4d77-ab7c-6c7c51bc0e5b",
        "cursor": {
          "ref": "2dd2e20d-06bb-4f6c-8ff5-d178090ae755",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f57a621f-8ecc-4283-b265-254026a1aeee"
        },
        "item": {
          "id": "496d7b32-c2d4-4d77-ab7c-6c7c51bc0e5b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9fee11de-5cb5-43dc-8293-5c30ccc35f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79effa4-f775-4114-9ebd-c8b103ca7b9b",
        "cursor": {
          "ref": "e0b4f94e-acbf-4927-a290-c23ebdfb2e47",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fb6c83aa-8ab0-4dee-b264-cdff8a953041"
        },
        "item": {
          "id": "f79effa4-f775-4114-9ebd-c8b103ca7b9b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0e683da1-d78f-4de0-af3d-2d0db5fc0258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a30108e-c4a8-4880-b893-6591287e9679",
        "cursor": {
          "ref": "1ba40a0a-f184-4325-bddc-898d9b2bdfcb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2bea3a75-d846-4e8f-80b0-66d7205efa61"
        },
        "item": {
          "id": "7a30108e-c4a8-4880-b893-6591287e9679",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "48d4d603-0d61-4c27-b9a6-9bb9c85fc2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb59c6b2-a723-4686-a303-305bfcd3c9e1",
        "cursor": {
          "ref": "30e993cc-6576-4c68-be30-e1a7142edff8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "246e539f-727d-4545-8b14-fb677e84486b"
        },
        "item": {
          "id": "cb59c6b2-a723-4686-a303-305bfcd3c9e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2272d31f-901a-4733-b497-dd3c14c5472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2971c6-0ecd-4118-9316-1cf8c0fc6940",
        "cursor": {
          "ref": "f7c18b7a-4711-4797-8177-7d9916eeee2c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9317bc5c-c26d-4cbb-826b-752eefb68b56"
        },
        "item": {
          "id": "cb2971c6-0ecd-4118-9316-1cf8c0fc6940",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ad1c708d-2ccf-4e71-8158-d15dbf5f21fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d5b2b-aebe-414a-bf8f-4edeb3dc05d7",
        "cursor": {
          "ref": "198e7c42-0f96-4f30-bdd8-d99f95ef1a5f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "426202f1-c091-484b-92b4-399efe7afab6"
        },
        "item": {
          "id": "a85d5b2b-aebe-414a-bf8f-4edeb3dc05d7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6e7eb43a-37bc-4335-b821-8e9111c9312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c927c7-2e7d-4c5e-8373-f7db663ba94d",
        "cursor": {
          "ref": "1b826ac8-382a-4004-8f18-905159944a82",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6662e87b-2524-4114-8ec7-ab1aa723ce8e"
        },
        "item": {
          "id": "d1c927c7-2e7d-4c5e-8373-f7db663ba94d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "746d87ea-6ddd-4024-b4f6-5fab61923a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c98037-7ff0-4697-9767-aee6f28e05d2",
        "cursor": {
          "ref": "38d63808-a9e2-4458-acc7-8bbe5cc60843",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "98aa7c52-6726-4c73-9004-6c54f92a4d54"
        },
        "item": {
          "id": "d8c98037-7ff0-4697-9767-aee6f28e05d2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9b9c1981-f602-4a0f-aea9-61dd49c86504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2da296-1c75-4557-910a-f51c5a7da42d",
        "cursor": {
          "ref": "d6303d00-7968-4e0a-ae46-829c9c3d7040",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8445e46c-0f50-40ef-b6de-bf76605380c1"
        },
        "item": {
          "id": "fe2da296-1c75-4557-910a-f51c5a7da42d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "804a66d6-dac2-419c-be50-c57906cfe1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c7fabf-1a6b-4592-8465-d211f48508a9",
        "cursor": {
          "ref": "2164286c-d930-43d5-82a5-cd4c8f1f57f6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "335d6aa4-4ff2-4c84-b689-4a64174ee6f5"
        },
        "item": {
          "id": "92c7fabf-1a6b-4592-8465-d211f48508a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "86e55809-fc5a-48d9-b032-7a13ad96d3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ce0eef-8b57-4ea7-8967-d35bc8becda6",
        "cursor": {
          "ref": "8b365d06-b435-4636-9259-f1b13ca4679e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "46e24285-f3cf-4696-b55a-ac04a11eccae"
        },
        "item": {
          "id": "27ce0eef-8b57-4ea7-8967-d35bc8becda6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "812e3870-f10a-4e04-ba13-f68be9435c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f99742-e1c3-4e6b-b1c5-16cb7003832d",
        "cursor": {
          "ref": "a110ab77-f5c5-470c-88f4-ca1b6e2e9969",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d6dfd9af-cec7-45ae-ac96-41df3c86ab06"
        },
        "item": {
          "id": "67f99742-e1c3-4e6b-b1c5-16cb7003832d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2bdb8ac0-d705-457d-9a5a-67bad03b159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c459b-7e7d-481f-9bea-47b785a2971e",
        "cursor": {
          "ref": "cface042-c5fc-40af-95b3-4c539444cea2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c16be44-82a7-4e3c-adc5-71986776f8d9"
        },
        "item": {
          "id": "359c459b-7e7d-481f-9bea-47b785a2971e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "618f4579-3fc0-47d7-9a27-a3bf8aee75f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa99c89-cfd7-4b1d-acdd-7df6d8294a3a",
        "cursor": {
          "ref": "520b3511-749e-4085-8b4f-5586dd5057e9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ae8e566-d396-4090-892f-d740a6102ca8"
        },
        "item": {
          "id": "5aa99c89-cfd7-4b1d-acdd-7df6d8294a3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "547564fc-80e7-4671-af5a-0a05efec1a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eec0402-891a-4196-b391-6ea351d90a74",
        "cursor": {
          "ref": "43feef71-2b16-4e3b-a8d8-e915f11edd30",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "065d413a-7196-4e9b-a294-54e58e57f1f5"
        },
        "item": {
          "id": "1eec0402-891a-4196-b391-6ea351d90a74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4a2046af-7486-475d-b668-2802109b9229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ceab12-a5ee-4789-b68c-dc38e890db2f",
        "cursor": {
          "ref": "2e777750-5d6e-4083-8ba3-4ea607c286dd",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c726605f-35cb-4de8-873d-c24d3654ee7b"
        },
        "item": {
          "id": "07ceab12-a5ee-4789-b68c-dc38e890db2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a2c523b-d232-44ba-9ca4-986cd5424809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb41cc3-c2c3-4da5-b4e5-9ca58c244979",
        "cursor": {
          "ref": "38888c23-a389-4b9f-abb9-62a22d0439cb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e0558ab0-aa50-4bef-ae03-a55e624fb7dd"
        },
        "item": {
          "id": "6cb41cc3-c2c3-4da5-b4e5-9ca58c244979",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "572ed959-c275-40f2-994b-fc9725be47ef",
          "status": "Created",
          "code": 201,
          "responseTime": 8412,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "c7d19284-d424-4123-9409-ef91f06dddb6",
        "cursor": {
          "ref": "e68b2fc1-cbfc-4e52-b367-b478e2ddcf73",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8f59aaf9-a055-45bb-a83c-6bef1b357f3a"
        },
        "item": {
          "id": "c7d19284-d424-4123-9409-ef91f06dddb6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3c4081df-78b0-4ec6-8e75-62bf54f159f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ca952c-d964-44ec-a322-925815d498ea",
        "cursor": {
          "ref": "e5923842-d38f-41d8-9cc3-831e0d5982c0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "38878496-624f-4f42-9e53-81728e9fba5b"
        },
        "item": {
          "id": "e3ca952c-d964-44ec-a322-925815d498ea",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d5488cf9-0d0c-4b1f-a05f-a09fb270e7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c638063d-b8da-4e5a-b59d-3fb29b9c04a3",
        "cursor": {
          "ref": "31824106-2be5-429e-b8b6-ae530397f940",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7bbf36cf-5280-4432-b25e-5203b2b5290e"
        },
        "item": {
          "id": "c638063d-b8da-4e5a-b59d-3fb29b9c04a3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6b8c1408-98e2-42df-86ab-12bb03f250bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38554b41-d7c1-4e2b-abec-57cdb94ae594",
        "cursor": {
          "ref": "8ca6e743-9d52-48cb-bbc6-05bee480e053",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fa490e01-2260-46bb-8d23-0baffd9d104c"
        },
        "item": {
          "id": "38554b41-d7c1-4e2b-abec-57cdb94ae594",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "43a7b4a4-8d60-4947-90c2-42c6409de041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f14158-88dd-44a7-99d3-7eef5744d0e2",
        "cursor": {
          "ref": "4423841a-6a28-426e-9c9d-6b9503014ffd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7b14e944-0703-4165-86ad-9912ebf39431"
        },
        "item": {
          "id": "20f14158-88dd-44a7-99d3-7eef5744d0e2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6391f03b-a92c-424d-9d60-a81b195e8c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ac760f-4c74-4d06-bf53-06f209a34cdf",
        "cursor": {
          "ref": "78434feb-5623-4413-b1a9-339365c14c5b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c1907d4e-59f3-456a-a0fd-739730441ba7"
        },
        "item": {
          "id": "45ac760f-4c74-4d06-bf53-06f209a34cdf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "420b8393-3e24-433c-8068-734d7e8dcea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f15c718-1bba-420b-bafb-1b265a5e1d7f",
        "cursor": {
          "ref": "c975e389-24c6-4c33-8f77-b5299bbc8fb4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ac3f4eb3-ea8d-4f4f-a357-18b9ebe872f3"
        },
        "item": {
          "id": "6f15c718-1bba-420b-bafb-1b265a5e1d7f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d7cd1f02-1b60-45b4-b50e-dfaac7a778d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5179b23-59dc-4c7c-8d1d-90a8a5dd403f",
        "cursor": {
          "ref": "bd1d39c9-27d4-4137-8124-85734895aeec",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6f5371de-244b-4893-a529-5c8c45b855e4"
        },
        "item": {
          "id": "e5179b23-59dc-4c7c-8d1d-90a8a5dd403f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6a02bdd4-7606-4e1a-91f6-4ad28e9b3bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c466a07a-055b-4e9c-89e6-008b4978bd66",
        "cursor": {
          "ref": "3ca9aaa1-85cb-4e57-87b1-3872ff1f414f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a7e9e9f2-71a7-4bd1-9abf-3a2248747fdd"
        },
        "item": {
          "id": "c466a07a-055b-4e9c-89e6-008b4978bd66",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "64d93325-0312-45d2-92a5-084fa2c516b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4653f1bc-02f3-4db4-bb3b-a691d4bb3573",
        "cursor": {
          "ref": "cd311942-21f5-4961-9095-a1931373a164",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a50568e4-1cae-4419-8b5c-9bd14ec56d17"
        },
        "item": {
          "id": "4653f1bc-02f3-4db4-bb3b-a691d4bb3573",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b7d1e6a9-fe03-4ef5-b9de-47f963c9c5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e58ce2-aac3-4a1c-9b51-48f490c39e82",
        "cursor": {
          "ref": "cf854afd-fb20-4af6-9340-353a17b9421c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "18e06a44-a9d4-4eeb-89c0-c1d31e8fd747"
        },
        "item": {
          "id": "58e58ce2-aac3-4a1c-9b51-48f490c39e82",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "41741469-6080-429b-b52a-881da634bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00c1af6-9588-4ff2-8b0c-d57cf8c5155c",
        "cursor": {
          "ref": "67294423-a35d-4c07-bcbc-ac3dd719800c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "695c6558-9e0a-4414-82f7-70eaa25dbf20"
        },
        "item": {
          "id": "c00c1af6-9588-4ff2-8b0c-d57cf8c5155c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "535f8f35-a2de-441a-b1ea-75ed237c0e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ca623e-64b5-4981-8924-1cd5d8a77fde",
        "cursor": {
          "ref": "5ef39451-eb96-41d7-8613-995178a1135e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8700e13e-d60a-4eaf-a984-2c70fbdeac94"
        },
        "item": {
          "id": "f6ca623e-64b5-4981-8924-1cd5d8a77fde",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f7660d3-28c2-4637-aab1-6f93779171af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d52c399-12e4-48f6-aa3c-5599176349e6",
        "cursor": {
          "ref": "86a28543-c16d-44e2-b9a0-7a7270eea784",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2ddd342b-0acd-4fe6-911a-6b6e21dc4261"
        },
        "item": {
          "id": "5d52c399-12e4-48f6-aa3c-5599176349e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "61af7aed-5548-4753-84e3-405124c46723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e8159e-83f7-4f1a-a494-621117d78387",
        "cursor": {
          "ref": "7000fc15-88bf-4844-ac87-a4350983d7af",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e25414eb-48f6-4a80-b0b8-09e517a5810b"
        },
        "item": {
          "id": "d7e8159e-83f7-4f1a-a494-621117d78387",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "62c53003-631f-46a2-9de9-0b1f0fd5392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d4ba7b-43b5-4240-a97b-b63fde68c54e",
        "cursor": {
          "ref": "6448da73-573e-457e-b77d-65be457af723",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4e5147aa-d68f-45ce-b705-494a1204b433"
        },
        "item": {
          "id": "58d4ba7b-43b5-4240-a97b-b63fde68c54e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52a76154-682f-4f4e-8e9f-0449ab96ce27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b6342a-21fc-4a46-8c4b-4d47cf53582e",
        "cursor": {
          "ref": "b4346bb5-4668-4e48-87f3-07bc1bfdbfd4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6464d169-ebf8-4e6a-9fa8-9a304b6a687b"
        },
        "item": {
          "id": "97b6342a-21fc-4a46-8c4b-4d47cf53582e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a870edd2-028e-42df-9226-17815514c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fcb452-e30f-4ed5-a07c-4e33732ade37",
        "cursor": {
          "ref": "1a88e154-a127-4ba3-932d-a3a41893a5a0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "46165830-1497-4f3f-9210-97c0c4925465"
        },
        "item": {
          "id": "60fcb452-e30f-4ed5-a07c-4e33732ade37",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b3e5c30b-5e1d-4383-a260-7855435060ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebee2281-4bc8-4ec0-8aec-d90a9fa5df1f",
        "cursor": {
          "ref": "725d6ff2-746d-40d3-8da3-fdd049166fe8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1c36a7e4-cf1f-4835-83c7-ea05870529c2"
        },
        "item": {
          "id": "ebee2281-4bc8-4ec0-8aec-d90a9fa5df1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db5e29b7-bb9b-4da6-bb19-1e25a2fc6a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72403b6-812e-4b52-9102-6c5ae503f59f",
        "cursor": {
          "ref": "7634633d-70d4-4a0c-86a3-81b66575cad5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6513b84f-ec0f-406a-87b7-628b7e65b783"
        },
        "item": {
          "id": "f72403b6-812e-4b52-9102-6c5ae503f59f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6ebfa068-e01e-44ea-b463-a9249db186ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631aa63f-fb59-4bd3-8e3e-f5afa097fa53",
        "cursor": {
          "ref": "6bce0976-2489-4afc-bda9-a9574878e392",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "915f917a-80da-42cf-82fd-348c5d6014f3"
        },
        "item": {
          "id": "631aa63f-fb59-4bd3-8e3e-f5afa097fa53",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "64384d4f-584d-4722-b4ae-3eee2ca05931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1d4daa-9539-42b2-b247-defe40b004c1",
        "cursor": {
          "ref": "61f09fa5-1f7a-491f-8df4-fdc413c874cb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b1da4177-6993-445f-a145-1e81b566f475"
        },
        "item": {
          "id": "5c1d4daa-9539-42b2-b247-defe40b004c1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f865507-0218-4219-90fb-bf059babae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c9b40-eacf-4102-a9e4-12876b70cedd",
        "cursor": {
          "ref": "39a01ddd-1b17-4f73-90b0-b9331ff9a3b5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c60d9e34-590e-490c-84ee-f07ad54cc178"
        },
        "item": {
          "id": "060c9b40-eacf-4102-a9e4-12876b70cedd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b4aee23d-267c-4e3a-a0c8-5639d6448653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae4a6d-0bf5-4ff9-ad3a-96a33a6b3029",
        "cursor": {
          "ref": "57477fa4-5d07-46dc-9841-67ca185ba4b3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5f966241-6b06-4443-a46c-95ab69bd78d2"
        },
        "item": {
          "id": "38ae4a6d-0bf5-4ff9-ad3a-96a33a6b3029",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c82e7ec-549a-4dbb-a7a5-2fd33c0ab50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6488c6eb-2335-4bf6-b6cb-261dccf354ac",
        "cursor": {
          "ref": "f6870421-9552-496b-a2ee-c3edccc74111",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd02a56b-fd12-4e2d-91dc-55bccdc68e63"
        },
        "item": {
          "id": "6488c6eb-2335-4bf6-b6cb-261dccf354ac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "33503afe-4069-4224-9bd8-bbcc9d25ffe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aa93d8-6947-4932-8782-c1a3c81b0cd9",
        "cursor": {
          "ref": "d7b2974e-2da8-41ee-a7c1-c0be1e5a8b80",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fd0731bf-99d2-4f5b-a22d-0c254e929904"
        },
        "item": {
          "id": "e0aa93d8-6947-4932-8782-c1a3c81b0cd9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4ae2c3d-9861-4f00-9863-3d4b4f723098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d330a921-d347-4ec5-847f-e39dc215b0d0",
        "cursor": {
          "ref": "48878e3c-4407-4fa0-96c6-aac6a14fbe79",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "68d7fa72-59f6-4089-b502-85eecc367963"
        },
        "item": {
          "id": "d330a921-d347-4ec5-847f-e39dc215b0d0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b571e73a-5e5b-4f30-a98e-4f5ef4598227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7834aa31-8615-4bf7-a67e-2950c8acb118",
        "cursor": {
          "ref": "0adba6d6-44cb-451e-a7f7-ac0b2fe2fb9f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f7457f43-88a5-4fb1-9261-0df849ce1908"
        },
        "item": {
          "id": "7834aa31-8615-4bf7-a67e-2950c8acb118",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7b3d0fb4-e599-4649-824b-8db15983cef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8914ce-5781-4d52-9180-c5daf32e7686",
        "cursor": {
          "ref": "62b139a5-1dd8-479a-979e-5f688aacec49",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e1df7666-b48f-4ff2-b889-36917247acdd"
        },
        "item": {
          "id": "7d8914ce-5781-4d52-9180-c5daf32e7686",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4d5bb325-509b-47ec-ad85-5a0c74b61e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d7f097-b791-4ad9-bfc8-4e053217425f",
        "cursor": {
          "ref": "8a92ff7f-99af-4a7a-a707-03d19ea361ac",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4723cff-07b9-413e-9097-2eeaa359e13b"
        },
        "item": {
          "id": "01d7f097-b791-4ad9-bfc8-4e053217425f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2607c7eb-a305-402a-97d9-4bb5ba4a6cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a10d753-c41a-4efa-851c-16941bdff36b",
        "cursor": {
          "ref": "ddb1ca0b-6310-47bd-9409-ba1902071b6f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0478d0c4-dc7b-4e0e-8aa3-8bbf1fd055a7"
        },
        "item": {
          "id": "6a10d753-c41a-4efa-851c-16941bdff36b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "83f1b093-fa6f-4525-8d23-f87c596ba1ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a89bd6-9204-4e85-8484-b2d37cf913d4",
        "cursor": {
          "ref": "a5d0a062-c47d-4631-a0e2-26c42391ccfc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "87b96929-dc07-49d2-b676-bcb7f616245f"
        },
        "item": {
          "id": "45a89bd6-9204-4e85-8484-b2d37cf913d4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23121a96-0629-41a9-bd8f-000c2ea26ad3",
          "status": "Created",
          "code": 201,
          "responseTime": 2306,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc7d841-f4bb-4e84-9faa-5abcf2a8977a",
        "cursor": {
          "ref": "4be578e5-4c1d-45c0-b019-83ddecc99417",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "364aa23e-870e-46b2-a445-f6b74a991585"
        },
        "item": {
          "id": "cbc7d841-f4bb-4e84-9faa-5abcf2a8977a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b4c2c601-fe1c-4542-9261-552f2950ec3e",
          "status": "Created",
          "code": 201,
          "responseTime": 2427,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97aebc2-8ea0-4b95-8a2b-48e6126bb1d4",
        "cursor": {
          "ref": "1285ef02-7ee8-4334-8a20-6697fdac5060",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0f752162-9bb5-4c0a-915a-a54dd1c139cd"
        },
        "item": {
          "id": "c97aebc2-8ea0-4b95-8a2b-48e6126bb1d4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b16f9651-ed6c-4ecd-81b8-71f3363b70af",
          "status": "Created",
          "code": 201,
          "responseTime": 2748,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c36bd4f-dcd7-4739-bbc3-daba63273470",
        "cursor": {
          "ref": "b63f0124-3e9b-4f81-8cb6-1d937b7421be",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "79ba1dec-77b1-471f-b121-3702b50e2247"
        },
        "item": {
          "id": "6c36bd4f-dcd7-4739-bbc3-daba63273470",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5abf9165-9694-4a80-919d-a570d8f09a5c",
          "status": "Created",
          "code": 201,
          "responseTime": 2395,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49119348-ba54-4740-9a08-e93172c6717e",
        "cursor": {
          "ref": "d2994654-8589-4ce7-90f1-1b1561b7839e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0ce87dfc-3b24-48be-bde9-58d1b8255015"
        },
        "item": {
          "id": "49119348-ba54-4740-9a08-e93172c6717e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ec362f9a-a125-4931-9c62-5b73daf02a1b",
          "status": "Created",
          "code": 201,
          "responseTime": 2809,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-01T00:46:31Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-01T00:46:31Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4671a660-bedf-4077-aa79-b59be044db9c",
        "cursor": {
          "ref": "cc4b2ea1-386a-4ce8-9a70-e45f460720b3",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "901f4c25-9b61-4111-aa53-672043b1bd8c"
        },
        "item": {
          "id": "4671a660-bedf-4077-aa79-b59be044db9c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6fff96fc-20d7-4e14-aa36-e09e8b60267d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "17694e45-1f22-4d5c-b957-2ab51ac19a9d",
        "cursor": {
          "ref": "a0d17d59-ee66-46e3-99db-5c152b13d9ed",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a033162-0b08-415d-a5d8-6fcae7715c12"
        },
        "item": {
          "id": "17694e45-1f22-4d5c-b957-2ab51ac19a9d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "46aacaf4-27de-4691-af32-080077633cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578bc6cd-f08b-4765-b7c9-cab6d7c5de83",
        "cursor": {
          "ref": "e4e31840-58f8-42a7-8c33-9435614dba1e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a169e2ea-707a-42f1-bc29-4dfe357c02e4"
        },
        "item": {
          "id": "578bc6cd-f08b-4765-b7c9-cab6d7c5de83",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "774be2f0-d892-4a66-b4f3-9fed79a219ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5be038-97c9-4387-a0ca-5dd3b4658556",
        "cursor": {
          "ref": "8124d764-81b2-4fa1-9199-119feddba030",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c230479a-a2c2-4648-97e4-5d03075fcd09"
        },
        "item": {
          "id": "4f5be038-97c9-4387-a0ca-5dd3b4658556",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49fd47b1-f718-4775-a44a-dcdae9afbb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19527da-5b85-4baf-be8b-03642a6d900b",
        "cursor": {
          "ref": "ad018802-4dc4-4459-8d50-4de3e804370e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5f42b398-2ce8-4f70-b1a4-285a9b97bad4"
        },
        "item": {
          "id": "f19527da-5b85-4baf-be8b-03642a6d900b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e75764c-536b-45c7-a797-2e029600082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ac2f84-c03e-4624-8966-0b3ea97f8e28",
        "cursor": {
          "ref": "792cf41c-fc6a-4d8a-b83c-8d811bc1e7e2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e28f1baa-3475-476c-ba32-f9e37dc3ac98"
        },
        "item": {
          "id": "11ac2f84-c03e-4624-8966-0b3ea97f8e28",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "799bc019-6aba-4428-950a-5a0ccf163875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2852da-f5db-4572-b1c8-476fdc428ac6",
        "cursor": {
          "ref": "b076ed83-68cb-4e32-9bd0-029ccf6b08b6",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5c4a6bcf-ab27-4327-b885-466166894677"
        },
        "item": {
          "id": "6e2852da-f5db-4572-b1c8-476fdc428ac6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5566276-9a99-4386-88e3-a5162b45b60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02b4e1c-be05-409b-bd63-503a1ec0e630",
        "cursor": {
          "ref": "0bb1749e-b83c-4b4f-9264-c159c5aa0ec1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "61468ad5-92fb-442a-9761-c137190fea44"
        },
        "item": {
          "id": "d02b4e1c-be05-409b-bd63-503a1ec0e630",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c742e00-2d56-4e94-a5a1-efe7efcb8401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af01734d-207d-49f5-a13a-d5a221b51b1c",
        "cursor": {
          "ref": "853e790e-2e13-4a77-b567-5bf3c17075f5",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d427e288-62f1-4fb1-a488-8cabcc20ab17"
        },
        "item": {
          "id": "af01734d-207d-49f5-a13a-d5a221b51b1c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4a2c5399-bbae-4d8a-9250-7d3119ead063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9865056-45bc-440a-8953-9481f399f092",
        "cursor": {
          "ref": "af3062ce-9115-417e-9578-41ea4ff41fa1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f1aa38d2-7f6a-4491-a1ea-ead1ede2be00"
        },
        "item": {
          "id": "b9865056-45bc-440a-8953-9481f399f092",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69bacc18-2816-4c2d-836f-192dac7720bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f142fab-2ad2-4323-82c1-76c17d8098f5",
        "cursor": {
          "ref": "2109efbb-bb56-40c7-88f5-521c78627f32",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "47eb46e2-6497-4961-ac5c-8a4670fac131"
        },
        "item": {
          "id": "5f142fab-2ad2-4323-82c1-76c17d8098f5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "899382eb-8d1c-4bc7-b79d-56de30e4813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f4ca6f-e9bf-4c57-b61a-36245aa8d09a",
        "cursor": {
          "ref": "2923a359-dd4c-4cc7-a80b-b6086b920bc0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1dad0a35-39c8-479c-91cb-04714588027e"
        },
        "item": {
          "id": "52f4ca6f-e9bf-4c57-b61a-36245aa8d09a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "78235a4f-49ec-4e2b-8973-786723386b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74357272-803c-45e6-a0e4-01349d677700",
        "cursor": {
          "ref": "e4e0f0d9-3bc0-4552-acc3-181eb1cfa750",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c827aa2b-1c5e-49c9-8c53-e997aa8059de"
        },
        "item": {
          "id": "74357272-803c-45e6-a0e4-01349d677700",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b6202921-5aae-46d4-910c-a70f7163d743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668099d4-4649-48eb-9a03-8f440270aa31",
        "cursor": {
          "ref": "d1236f27-f06e-46ee-a514-d3cf53f785cb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "71eb3a6d-8a95-4051-bfa5-0f1c452f4319"
        },
        "item": {
          "id": "668099d4-4649-48eb-9a03-8f440270aa31",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "508ef5a4-9336-47b3-ab71-d51314eab421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac319c88-17fc-4f77-91d8-7b6325caf711",
        "cursor": {
          "ref": "511dc9c4-a91b-45a4-a41b-b70eb26254f3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "131c2919-fc98-4964-9f30-1f23ca36460d"
        },
        "item": {
          "id": "ac319c88-17fc-4f77-91d8-7b6325caf711",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a38a8d84-b954-4379-876a-3475200a2518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d28c6-4e17-4aa9-a8c8-fed6a4c1b8e4",
        "cursor": {
          "ref": "c31820b5-0a6c-4dec-9fa8-05fbe5e81c33",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ad9d4227-5860-43a8-8a42-171bffa36aed"
        },
        "item": {
          "id": "4e5d28c6-4e17-4aa9-a8c8-fed6a4c1b8e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa632d28-22b1-4dd3-844c-285dd3e6460a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc103e43-ddea-4eca-a2d0-643873ede4d9",
        "cursor": {
          "ref": "b36a43fd-5cb4-4dc5-9b1b-c4b2e7571e91",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "886b29aa-0001-4a4d-9906-cc2572d4ba0c"
        },
        "item": {
          "id": "dc103e43-ddea-4eca-a2d0-643873ede4d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "66e55e1f-8591-4866-8060-4a327c26c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a82dbaa-adcc-4e59-b6ce-b9bdffdd6e2d",
        "cursor": {
          "ref": "ec425f58-de88-415c-a302-673c6faccbd8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6334690e-48cd-4ad8-9f9b-4b80b5f6d2e8"
        },
        "item": {
          "id": "3a82dbaa-adcc-4e59-b6ce-b9bdffdd6e2d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c00db4a8-55eb-4a39-a623-788c471cde50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dbed66-d610-4d0d-bed6-49643159f014",
        "cursor": {
          "ref": "958049c9-89e3-4f0b-bc95-d8238a98a783",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee7dee72-08c5-4e29-8b56-6cb66a512086"
        },
        "item": {
          "id": "f5dbed66-d610-4d0d-bed6-49643159f014",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1be8ba92-3d20-43ef-98f8-c1bb730eb11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4defb065-4f8c-4b96-82e3-719d397bb000",
        "cursor": {
          "ref": "5b250ea7-09c2-4c3b-b77c-cad3238b38c7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18f2d01a-f8dd-4191-bcd0-88a45ae635e6"
        },
        "item": {
          "id": "4defb065-4f8c-4b96-82e3-719d397bb000",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80682854-28b3-4d26-944e-ec41f679a9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4695a245-062e-4500-ad35-de65a3b33d16",
        "cursor": {
          "ref": "a4c19cd5-bd44-48a1-b66e-678dcd172bd6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bd6a2f82-2124-4a48-8ef0-fbbd03a9db0b"
        },
        "item": {
          "id": "4695a245-062e-4500-ad35-de65a3b33d16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f8b8953-3ba3-4a9d-9354-98fd92bd7207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b5704f-d709-409f-bba9-53f767ef35d3",
        "cursor": {
          "ref": "9536d6e7-b89b-4802-b998-9e84c137ec31",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06941fae-3ba5-47dc-8746-8f81ab73e176"
        },
        "item": {
          "id": "a3b5704f-d709-409f-bba9-53f767ef35d3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90cecbdc-791e-4577-a2ca-ce563bc6f530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02dfa50-e0ab-4884-baf7-144faa10af7c",
        "cursor": {
          "ref": "d19a398a-8fee-44e8-b998-8a0c424d5365",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b59aae0-ed7a-422e-bf31-e4faf83bebb8"
        },
        "item": {
          "id": "d02dfa50-e0ab-4884-baf7-144faa10af7c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e35d4f8-0e46-44c2-988e-3a1dc1fa7fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81143cb-c901-42d7-89b1-2bd528f04a8f",
        "cursor": {
          "ref": "027d59b5-6eab-49af-a352-12860f797bff",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3f5eb9cd-f52b-4b87-9346-bb01d441288d"
        },
        "item": {
          "id": "c81143cb-c901-42d7-89b1-2bd528f04a8f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "70cc909c-0221-4ff8-a9bf-019e7d08bf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d5423d-bd81-4377-9333-9509df7e2711",
        "cursor": {
          "ref": "cf34969f-8f1e-40c9-8a8c-efda8521a941",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56b28b5e-5036-4d3d-9437-f35795006f62"
        },
        "item": {
          "id": "21d5423d-bd81-4377-9333-9509df7e2711",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fba09beb-dcac-47ad-a8d0-f697a5c33e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2937755-5a75-42c9-84bd-ea7480e6446b",
        "cursor": {
          "ref": "793c09f5-5018-4190-84c1-be066bb4f9bd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d708b25-773d-4ab5-b5b0-92581132dbe3"
        },
        "item": {
          "id": "d2937755-5a75-42c9-84bd-ea7480e6446b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01933fe0-0bdf-4d9d-ad61-b454f768a5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b172231-7845-4b7d-8a9b-569ed7ad90cb",
        "cursor": {
          "ref": "43b16e84-efe0-433f-898b-ddc7475b9455",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e393a78a-5a82-42a9-ab7f-fef5143a6646"
        },
        "item": {
          "id": "9b172231-7845-4b7d-8a9b-569ed7ad90cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "15444a35-e80a-45d2-a455-26375eb1b09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e964d10-baff-46e1-bca5-e696d4967e42",
        "cursor": {
          "ref": "db7fa904-b188-4c26-aabe-8c103a74ee54",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21010939-784e-48ff-ac90-fa8f2ac89eb5"
        },
        "item": {
          "id": "9e964d10-baff-46e1-bca5-e696d4967e42",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "557e6501-017d-4736-9a9b-dd1f193330e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f0da2-1a80-4305-8612-96cbb61eca3c",
        "cursor": {
          "ref": "634f392d-63c8-4a17-8683-02bba0f9ea8c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "566c2148-4714-4256-918c-7cd55b453353"
        },
        "item": {
          "id": "522f0da2-1a80-4305-8612-96cbb61eca3c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f1e618c-3b12-4bc6-b729-d8d298fbf2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2af413f-9e17-4485-a55f-cf1f30e349e9",
        "cursor": {
          "ref": "d09941a4-0964-466e-b2a1-36dfd11a74da",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0d9aa872-ba73-4e5a-b84e-d9956a040165"
        },
        "item": {
          "id": "b2af413f-9e17-4485-a55f-cf1f30e349e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5214baf3-9f1b-448f-86e8-1dc199c6a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46df17a9-79ee-46aa-84bc-7fae532b17b5",
        "cursor": {
          "ref": "e657b348-a0f4-4109-bbda-842cb2bc1f63",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0958f6fe-2465-46b7-852f-f1a789cf3077"
        },
        "item": {
          "id": "46df17a9-79ee-46aa-84bc-7fae532b17b5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7869ae29-0ce5-406e-842f-a5d0829a9177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29954f-4626-476a-8cf4-3d841a34aef7",
        "cursor": {
          "ref": "7f3de462-8083-4b59-a49e-c667158f2320",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f0401c18-6933-40be-acab-f5ad23fa8b9c"
        },
        "item": {
          "id": "9d29954f-4626-476a-8cf4-3d841a34aef7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b5c1f07-4b02-4a4f-b0fc-24212ab29b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed68baa4-9127-408d-b7c2-fd70793e915e",
        "cursor": {
          "ref": "79450a69-8f08-480d-9d9a-f2e15cede1bb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9fd0497-7eff-4c12-8521-1e0de626acc1"
        },
        "item": {
          "id": "ed68baa4-9127-408d-b7c2-fd70793e915e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6a2c6768-8eec-435e-a06a-87f7572edeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d880e36b-ac71-4d79-afd7-fe5d390a4c64",
        "cursor": {
          "ref": "9897eeea-f058-4109-b92f-756e0d274ceb",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1d2be27a-26ca-47b1-82af-2ce9698d3f39"
        },
        "item": {
          "id": "d880e36b-ac71-4d79-afd7-fe5d390a4c64",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9814d5ce-2984-4fa7-b893-62e05ac0f78d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f92d3d-3432-4378-8f3a-0286c69b124f",
        "cursor": {
          "ref": "765ef6d8-aa47-4538-bcf5-595cacb8b54d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9162038-c323-494e-81b8-e4970d175f80"
        },
        "item": {
          "id": "b5f92d3d-3432-4378-8f3a-0286c69b124f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc44dcf0-e1e1-405f-9d4b-bbae3eb61ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b5266b-b2c1-410c-ae61-294fe97f0378",
        "cursor": {
          "ref": "3f9d0711-beed-4954-9a5d-4f6a1ce804f0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d8e431f7-9dde-4e91-8082-395a9ce529f9"
        },
        "item": {
          "id": "24b5266b-b2c1-410c-ae61-294fe97f0378",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a665309-2baf-4bde-be86-618d36e4651a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e842c5c1-b498-40d5-ab3a-54bc246fe4e8",
        "cursor": {
          "ref": "49542b99-60e4-4a10-b8c7-f6dd6acf21d2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "55ed1fd8-91d3-4efd-a60a-24fad621d04a"
        },
        "item": {
          "id": "e842c5c1-b498-40d5-ab3a-54bc246fe4e8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98ec14cf-cfbe-40f5-b2fd-e3ebb76f0877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bea18c-b86a-4fd4-bccf-99e5f016138c",
        "cursor": {
          "ref": "805bb634-0f48-48f4-8831-f21065f8eff4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "94e1397a-ac8c-4cab-a0ab-bc6fdb87ba46"
        },
        "item": {
          "id": "43bea18c-b86a-4fd4-bccf-99e5f016138c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bcd442e1-1bad-43ed-ba64-8910ab7c6558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc5313b-84ca-44c9-a49c-2baea130012e",
        "cursor": {
          "ref": "c38261c3-c786-4d13-a513-3bd71a8d3629",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "15c6d9fc-2434-4197-aaf0-850f4220be5c"
        },
        "item": {
          "id": "bcc5313b-84ca-44c9-a49c-2baea130012e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cbfd0d30-0d45-4556-b62f-a59c9995187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9380bf84-72d9-430d-b907-2ac1a216e545",
        "cursor": {
          "ref": "c8efb5b3-3c1b-41d6-882b-66d6febef8e3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c303bb52-75ca-4e54-abe5-3582e3182985"
        },
        "item": {
          "id": "9380bf84-72d9-430d-b907-2ac1a216e545",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8aac82c-11b1-42b6-a508-73a39766d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b8fb5e-3030-46f0-9b37-cc0b19816d47",
        "cursor": {
          "ref": "5670feb5-a7d3-4d4e-a8db-2454d4b3c969",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "be72fecf-d73d-474e-88f4-d2e7b1253762"
        },
        "item": {
          "id": "35b8fb5e-3030-46f0-9b37-cc0b19816d47",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b45f4a93-aa14-4907-babb-f55b6a5fc723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb1c82-2035-4aa1-8b14-d3cf719a0d5c",
        "cursor": {
          "ref": "e40ede72-9835-422d-a064-b202572e1f71",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "356b6202-b5e6-4184-ad31-c6ec18d92839"
        },
        "item": {
          "id": "5aeb1c82-2035-4aa1-8b14-d3cf719a0d5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a7261f7d-b27e-470a-a938-6c5591183986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04e122-294f-4579-968f-9fef02cdba04",
        "cursor": {
          "ref": "2ea2fd45-4516-410e-8e58-23503c9decee",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f2386afc-ae58-420c-9fbc-aa4c8f514028"
        },
        "item": {
          "id": "3e04e122-294f-4579-968f-9fef02cdba04",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c0ff8d4-b87e-4624-b38e-6b1c2c491e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67362c3d-4ebc-4c7e-b797-9695edffb087",
        "cursor": {
          "ref": "f9f2ea27-195a-4e14-a627-711f6b1d93f2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "999b1d22-9698-42b4-b39f-01b68ca3e52b"
        },
        "item": {
          "id": "67362c3d-4ebc-4c7e-b797-9695edffb087",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9b20da4-5f38-4ac4-ac83-847e1c4f9a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ceccda-d8c7-4e3b-b798-f12c04a23f81",
        "cursor": {
          "ref": "0538d237-378b-443d-afba-26f024f1e41f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f33018e8-7b79-40b8-bf81-61364ee69c0c"
        },
        "item": {
          "id": "d4ceccda-d8c7-4e3b-b798-f12c04a23f81",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5503f044-4e52-4300-a4b8-8ff9c6fd0720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4585b9-0829-400d-8076-69977b47e70f",
        "cursor": {
          "ref": "58d0c2dc-2aee-4d03-9707-57f1bd32afb6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4860e4e8-8f5f-423f-adaf-ce50b580abbc"
        },
        "item": {
          "id": "2e4585b9-0829-400d-8076-69977b47e70f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1a8e6dac-94b7-4e1a-a5ac-57c1bac7c287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a81696-e03b-4941-b45b-ba8fe1551050",
        "cursor": {
          "ref": "9a200697-f068-4e0a-893c-3b001586f3e2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e1238923-5394-4cbd-9a0f-86936f80d230"
        },
        "item": {
          "id": "d1a81696-e03b-4941-b45b-ba8fe1551050",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bdef3fc8-bd46-47aa-93e2-20a9d6a65cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2735a9da-6914-4303-8829-466d8125f8f0",
        "cursor": {
          "ref": "7d22b61b-352b-4d30-a4f0-0e05df095abe",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f5f030c5-68f4-44f7-8428-ac241be87f6b"
        },
        "item": {
          "id": "2735a9da-6914-4303-8829-466d8125f8f0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "58c4f632-1a02-4e39-bebb-1492351f7b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c17e22c-8ad4-4654-a363-4003dff7d222",
        "cursor": {
          "ref": "7a2043c1-f46d-4adf-9b94-6294d99db60c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "04e3d193-30cf-440c-b4c7-17e6dc01156f"
        },
        "item": {
          "id": "5c17e22c-8ad4-4654-a363-4003dff7d222",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5aab2466-bf2f-4725-ac99-e6f0a985da98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d606a4d0-6017-4a92-a798-9bfeb07c28a8",
        "cursor": {
          "ref": "cb1eb1ea-a333-4633-bdcb-1721476381e1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c1708b36-aa5e-4197-b153-dfadb5043fc8"
        },
        "item": {
          "id": "d606a4d0-6017-4a92-a798-9bfeb07c28a8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5510e4ae-bc61-450e-bd77-79afd76f8ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cb9ec0-8aa3-419f-9572-dd3c072a0e2c",
        "cursor": {
          "ref": "0eaaf3e9-a7dc-4cb9-b72f-113fcb1dcf00",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "38ed08e4-e507-420b-beca-cd5e9f30ff3a"
        },
        "item": {
          "id": "c6cb9ec0-8aa3-419f-9572-dd3c072a0e2c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6444850c-ddfa-46c2-ab9b-ccd950833395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217f9010-7ed1-44b2-b073-d664f8c43702",
        "cursor": {
          "ref": "1f5b752f-aac8-40ee-97b0-0f4d30358010",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a0333de2-c4db-48e1-9132-9409315e4ee9"
        },
        "item": {
          "id": "217f9010-7ed1-44b2-b073-d664f8c43702",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "becdf8ac-01a2-4959-a700-336b0dad3bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a452c5-173b-47c9-b656-4450d2927ff6",
        "cursor": {
          "ref": "80a86634-97a5-4e36-a149-1384f8c81bb7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "579ee442-d580-419a-a6c0-820a1aa9bc70"
        },
        "item": {
          "id": "35a452c5-173b-47c9-b656-4450d2927ff6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38744e8e-5f87-4c6b-96a7-d69e9987f6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9311cfbe-a583-4edb-8331-bd8bc645fb95",
        "cursor": {
          "ref": "386a54ec-bc33-40ea-b5da-d8bd7b6ebf9e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "56ba9140-a4a7-48f1-aed0-31ce61b47eca"
        },
        "item": {
          "id": "9311cfbe-a583-4edb-8331-bd8bc645fb95",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6a3d31d8-48e0-49e5-b032-53e58b562a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198acabd-6350-4073-9832-50c4756e767e",
        "cursor": {
          "ref": "b27b1def-57a2-4f6c-bcc6-7648168de1ce",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "573f7612-7818-45d4-a1bb-4965d8ef67d5"
        },
        "item": {
          "id": "198acabd-6350-4073-9832-50c4756e767e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d7fbf9c-d1ef-4e2c-8dea-0892ccfe9171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d38ad-8697-4272-9b2b-d2d869a0987f",
        "cursor": {
          "ref": "70c57dfa-27d8-423e-a3af-af41869f7fbf",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "777326be-d7ce-47f4-86df-7872d0579e87"
        },
        "item": {
          "id": "235d38ad-8697-4272-9b2b-d2d869a0987f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b1fd3e6-3f9a-4d59-8725-04f548a05144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1726c1ed-9a1c-4056-a922-13205a24d18c",
        "cursor": {
          "ref": "d2fea532-1f57-4096-a1c6-78f772a6f1cd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b3f09484-96f8-4150-8562-3e34382882c7"
        },
        "item": {
          "id": "1726c1ed-9a1c-4056-a922-13205a24d18c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "80ef87bc-111e-4539-8791-7bef08f35dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93ca63f-5a11-41ac-aeac-6b83a3000b08",
        "cursor": {
          "ref": "fc68c637-03bf-42c1-ab69-0e8a93930de7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "54c1d421-0c97-40aa-9b4a-d5965f734e25"
        },
        "item": {
          "id": "f93ca63f-5a11-41ac-aeac-6b83a3000b08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67d65a86-0760-4ff9-bd31-3626206fb1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95449d37-3160-445e-8783-19f500c497ac",
        "cursor": {
          "ref": "38be0f1d-6d0a-4025-a4c9-5313fb7e9b15",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d29cec4a-8d5d-4989-bc5a-fa2d796d9f74"
        },
        "item": {
          "id": "95449d37-3160-445e-8783-19f500c497ac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cbdc5585-089e-4793-aca2-8d877dc5c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f172ff-00f2-4b98-beab-6269c06f745f",
        "cursor": {
          "ref": "41ddd737-0870-4602-967f-ffd0f2598e50",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e7508dfc-6617-47ce-9b24-5e77ae30277b"
        },
        "item": {
          "id": "b4f172ff-00f2-4b98-beab-6269c06f745f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "adb5e030-2f84-453b-a456-5e0ea1687726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac83b11-cad7-4ce1-bd2f-8f2d98c6cb21",
        "cursor": {
          "ref": "dd43fefc-3b77-4aa7-9fe0-afdf68002122",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d357f77f-58f1-4522-91d3-17504b312041"
        },
        "item": {
          "id": "bac83b11-cad7-4ce1-bd2f-8f2d98c6cb21",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8ca0ccc3-8286-417f-8103-22d1b9bdcd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee3673b-cc91-4c75-a5e4-d91da186b3db",
        "cursor": {
          "ref": "362cf3bc-980d-4071-a07a-94e705be0515",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "acff611f-bc67-4702-be73-ab1c30fde78f"
        },
        "item": {
          "id": "eee3673b-cc91-4c75-a5e4-d91da186b3db",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5fa185f-422d-4028-83a7-5e6adcbc40a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8783453e-3998-435e-945a-f180e0e5301e",
        "cursor": {
          "ref": "a360e70c-5f01-43cc-a480-3cf606e746d7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eb1ef526-86c2-4126-af5b-4c6d654e5412"
        },
        "item": {
          "id": "8783453e-3998-435e-945a-f180e0e5301e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6a28bea-406d-4dd4-8167-69d473b5c94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f027524b-d9a8-40c4-b17c-48cf3f764611",
        "cursor": {
          "ref": "fe884bf1-3d7d-4305-888e-3f30d4e82bdc",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf9b060c-5e83-4f71-8b55-9ff5b8cc34a2"
        },
        "item": {
          "id": "f027524b-d9a8-40c4-b17c-48cf3f764611",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90a01058-988e-4cc1-8ce4-e51b9978f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fecd71-c9b3-41e3-9eb6-6798b1352414",
        "cursor": {
          "ref": "8840b43e-25a6-4aec-b145-78a2e8cbe1d4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "92dabd4f-94de-44c8-b6fd-b221c039ef3f"
        },
        "item": {
          "id": "45fecd71-c9b3-41e3-9eb6-6798b1352414",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c3270d9-88e0-4178-885c-055059ad1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52c0b13-28ef-407b-b7e7-6a4bbec3d3c8",
        "cursor": {
          "ref": "6714e203-306b-4e37-bf5f-01b358337179",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18a30ec5-1ef5-411e-966b-346f771df72f"
        },
        "item": {
          "id": "c52c0b13-28ef-407b-b7e7-6a4bbec3d3c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "915ae5e0-80b8-4436-8a7c-ee505232177b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac6452a-2496-4b35-89bf-4d464370c074",
        "cursor": {
          "ref": "b6c050d4-9867-4c48-842c-3de2dc6377e9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d2ca7d66-53a3-486d-93ce-2ca4e653bf42"
        },
        "item": {
          "id": "fac6452a-2496-4b35-89bf-4d464370c074",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3eb22d70-1964-4948-9a63-d72ccca7d7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4455c-ab47-4ee6-8bcc-84c1db5aa2be",
        "cursor": {
          "ref": "bf16f9db-5814-4c84-bb6f-f84273f538e7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d813dbfb-fc87-4e78-8a1c-c502b1a386aa"
        },
        "item": {
          "id": "c5e4455c-ab47-4ee6-8bcc-84c1db5aa2be",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "accc0774-4379-4c1c-82cc-4d79ef9fa337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b842dd2-1a35-401d-9bfe-4cce4fb08841",
        "cursor": {
          "ref": "fc592787-7bc2-4efd-9326-3ef91de32f4c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17d829fd-975f-4caf-9922-39b744dec407"
        },
        "item": {
          "id": "4b842dd2-1a35-401d-9bfe-4cce4fb08841",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2292b945-67a5-4904-810e-a4e51adde05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2fe7fb-1495-4479-86ac-8b3036747e15",
        "cursor": {
          "ref": "d1dd398e-13c2-41de-a2f7-7c51921ccafa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "006c7d11-e994-4059-adbc-58221abb21fc"
        },
        "item": {
          "id": "bf2fe7fb-1495-4479-86ac-8b3036747e15",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3f8d8d39-a26c-4159-97a6-a5f83f9f49b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39385e44-78f1-400d-b8a6-615541f23cdf",
        "cursor": {
          "ref": "74c5361a-4c69-4c58-a810-73e40eefeb3f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d99d9bf-f780-4a82-bba0-e998c5bd92fe"
        },
        "item": {
          "id": "39385e44-78f1-400d-b8a6-615541f23cdf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "97b72172-e98b-4c98-83e3-378ecf4d6e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb721f8-5852-44ae-be39-c776a820b183",
        "cursor": {
          "ref": "2da317da-fab9-4489-b66b-56d1e6806c04",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "871d9fa6-3b38-409e-8297-78b5291e6872"
        },
        "item": {
          "id": "ffb721f8-5852-44ae-be39-c776a820b183",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89139410-49f8-436e-9fd8-e238937443dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba458821-b1a0-4e9c-b117-ff4a02ad2f9e",
        "cursor": {
          "ref": "3e8d0ae7-4f41-4842-a7be-2290d6e7ad29",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aaec22a6-e98d-42bc-9893-7ee543ad2b9f"
        },
        "item": {
          "id": "ba458821-b1a0-4e9c-b117-ff4a02ad2f9e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "294795b1-d98f-496e-8d30-74254d7c10f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4032cf8-f8ea-405f-98a9-7acecd7fdbf4",
        "cursor": {
          "ref": "ac1b6ac6-aa4a-4aea-813f-d775b122465d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b549f8f6-4e27-497a-bd55-dad339d48dd7"
        },
        "item": {
          "id": "c4032cf8-f8ea-405f-98a9-7acecd7fdbf4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22dde6d3-57f6-4621-b555-aa92aeb8d387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548b9124-36f9-487c-8223-22a06df102e8",
        "cursor": {
          "ref": "3597f275-0e5f-427b-b86b-746c76f58dfe",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3b7ed408-95bb-424f-b37a-43b21d24e421"
        },
        "item": {
          "id": "548b9124-36f9-487c-8223-22a06df102e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "160b22c4-229f-4b7a-87a9-d9da137e0b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d024897-a61e-4383-a13b-505c559b0535",
        "cursor": {
          "ref": "23f7a887-7759-4686-a069-6d298738c3cd",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ca5f2330-212c-4524-967f-ca2ef95caf8f"
        },
        "item": {
          "id": "3d024897-a61e-4383-a13b-505c559b0535",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dd579f06-86ef-47d5-8d12-628bfa81bdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af5009-6849-475f-96a1-78c71a618fb5",
        "cursor": {
          "ref": "0df07411-c6d6-46b9-ad66-13560857a606",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c83abb3-4d60-4328-aa57-13257e80230c"
        },
        "item": {
          "id": "13af5009-6849-475f-96a1-78c71a618fb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b83a2179-2644-4ccf-87d2-55f7b084ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1de53c-6da0-4210-b24f-ca880ca53645",
        "cursor": {
          "ref": "961eb3b4-ece4-484b-8e7f-9afc82e6dbb4",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "966ed03a-dd2b-40ea-9129-941e0d4d3124"
        },
        "item": {
          "id": "8d1de53c-6da0-4210-b24f-ca880ca53645",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "18f52565-863e-4e66-a816-c3a54dfd08ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5d15d8-e4ce-43fa-90ff-101c58aa6639",
        "cursor": {
          "ref": "ddd13839-5e69-4558-a394-be30aea527f6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a52eed18-689c-4c4f-b5be-c036c0a04d1d"
        },
        "item": {
          "id": "3a5d15d8-e4ce-43fa-90ff-101c58aa6639",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "68aaf544-e4fb-428f-813c-c2ffb7c40579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea079b-1697-4384-b06e-c87bed9ebb73",
        "cursor": {
          "ref": "c22e0627-c7f9-4696-a65b-962011a72888",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2fb3745a-e08c-4083-b01f-cecc6bff7922"
        },
        "item": {
          "id": "a6ea079b-1697-4384-b06e-c87bed9ebb73",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "be22ad67-fe3c-48d4-a9ae-d96c1a3640bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5fdc9-1be6-4f56-8504-c79d55b24a33",
        "cursor": {
          "ref": "452f5645-7bd3-47e1-8165-96feb871e46d",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f0b19e69-bc23-4e5d-b2a7-23d72a0d77a6"
        },
        "item": {
          "id": "abd5fdc9-1be6-4f56-8504-c79d55b24a33",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7077f617-6c27-4fee-9208-dd26450cd680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7efbcbf-1d80-46af-b154-b85326215c03",
        "cursor": {
          "ref": "5b0443fe-7f03-4c74-90c5-8ebca01192dd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b7546063-38f2-4731-9d7f-0ac0a99fc7e3"
        },
        "item": {
          "id": "e7efbcbf-1d80-46af-b154-b85326215c03",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d99eacf-1eda-4344-aab8-56a1e072b2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358eb077-c82d-40f0-bf68-37d0905796a7",
        "cursor": {
          "ref": "65ad8d55-2e67-4f44-8193-713f3c491cf1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ab307632-36e1-4ad2-8925-f7b7a897af89"
        },
        "item": {
          "id": "358eb077-c82d-40f0-bf68-37d0905796a7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae19e18b-9919-4ca4-80a1-89594478d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bccc75-f3bb-4ef8-940d-ac92e9c701c1",
        "cursor": {
          "ref": "74680e0c-d4e1-4045-b312-e76576a0ba67",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "446eb8e2-affa-40df-9056-17b5b04ac786"
        },
        "item": {
          "id": "c9bccc75-f3bb-4ef8-940d-ac92e9c701c1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cfc12cc4-e0f0-4225-8c7c-fc8fa06ea700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687278cc-26e5-46c4-9c6a-cedbdd085b2a",
        "cursor": {
          "ref": "2dd797ff-eda5-4869-b463-fcdce8dfce76",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bed69945-3caf-47a3-9aea-3b5432ddb5fd"
        },
        "item": {
          "id": "687278cc-26e5-46c4-9c6a-cedbdd085b2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f3e42fe4-8dc8-4ed8-851c-8c43d1513a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84a77b0-eeaf-4c03-b81f-65fcb332f4d4",
        "cursor": {
          "ref": "56d4bbea-497d-4187-a089-e8d8b58adc19",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba68d2a7-9563-4721-82de-daf25d6e06e9"
        },
        "item": {
          "id": "d84a77b0-eeaf-4c03-b81f-65fcb332f4d4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5245b70f-b0a4-41a9-be3d-95e4726b093e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6e93b1-d2bb-4eb6-a367-2c64a46305cb",
        "cursor": {
          "ref": "419db2f3-94fb-4f4b-a899-d64791912b4d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "db218da2-a659-4be0-be06-66c125b1366b"
        },
        "item": {
          "id": "6e6e93b1-d2bb-4eb6-a367-2c64a46305cb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a150f048-91d4-41c3-a367-7d022cb649b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0edb295-3530-41c4-b16b-ee6cb35b71b3",
        "cursor": {
          "ref": "2e710a0b-5074-46b4-8752-46368bd621af",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "068a4918-5f94-4f72-b779-4db5ee25ed90"
        },
        "item": {
          "id": "d0edb295-3530-41c4-b16b-ee6cb35b71b3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb156f0e-728c-4fe5-b9a2-ecf74662151b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c70974-8964-466a-ac74-505749be8f20",
        "cursor": {
          "ref": "6f5c722c-79c2-415f-93ec-c163310989af",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "827b4088-2fc6-4a4f-a3ec-70250c36ef50"
        },
        "item": {
          "id": "c9c70974-8964-466a-ac74-505749be8f20",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d123c2e9-64b5-40fc-b576-ec23c3316b27",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "319666ee-ca7e-4d9d-b1b8-92d48a8b1108",
        "cursor": {
          "ref": "b03ced85-9c4f-4b7b-9a1e-904c1fafc1b5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d97f2de1-7f13-47df-bb39-9af689ea8684"
        },
        "item": {
          "id": "319666ee-ca7e-4d9d-b1b8-92d48a8b1108",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "802a77fb-050a-4ca7-a533-6a14b9a4d4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2ada8-df72-433a-b6ce-513491acba2a",
        "cursor": {
          "ref": "5d2ba171-1962-452e-b469-aeabad434581",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "793cdbe4-5905-4d87-8187-d039cb480633"
        },
        "item": {
          "id": "60b2ada8-df72-433a-b6ce-513491acba2a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "43e8cffc-017a-455e-88e8-1f4416db9f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aabda6-2a42-4855-974a-4effb5eb2b75",
        "cursor": {
          "ref": "76c81eb1-9db2-45fc-bab7-e2f196b33b9d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "acb999d1-a748-4dca-b5be-417c8e208f4a"
        },
        "item": {
          "id": "d5aabda6-2a42-4855-974a-4effb5eb2b75",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bc1e49f3-2382-4cf5-9be7-48ca55fb38a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889b9143-089f-497e-ad9b-55a867f59b83",
        "cursor": {
          "ref": "2440d265-474d-4bbf-9e47-8dca6445604e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7b7a4040-e490-497b-9445-1f182d6f073f"
        },
        "item": {
          "id": "889b9143-089f-497e-ad9b-55a867f59b83",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5763cd02-1c93-4bff-80d8-eb6f18b4cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed8d17-1a4e-4960-a7cf-d7798b98dcaf",
        "cursor": {
          "ref": "2eb7d1c6-0a42-4619-b8f2-674ba2558667",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad65c37b-57b3-4e59-a905-44b52671b42e"
        },
        "item": {
          "id": "60ed8d17-1a4e-4960-a7cf-d7798b98dcaf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cab4af32-f2ca-433e-86b8-e71447eaed13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307b70a8-ed3f-48f5-9342-0c3f89134f81",
        "cursor": {
          "ref": "4b317f12-c288-4143-b5e8-dbbc182b81aa",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bc3f7489-87a4-49f3-9573-8cf80c174a5e"
        },
        "item": {
          "id": "307b70a8-ed3f-48f5-9342-0c3f89134f81",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7003f171-f1fd-451f-8e72-c9170a42414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f078d01-52c9-4dc7-aebd-0c007ece5f8a",
        "cursor": {
          "ref": "c577d305-2924-4572-aa72-16c679133573",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3197b46b-2d72-4d99-8f3b-2ce5168c7b29"
        },
        "item": {
          "id": "2f078d01-52c9-4dc7-aebd-0c007ece5f8a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c01b13c1-8fd4-4107-b1a9-78047f791680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64dc259-007a-46bb-85b1-6ceda0492c04",
        "cursor": {
          "ref": "2108666f-be5d-42b3-90ea-7968661c45b3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "57b65dc3-2e48-4e6a-8185-4004b3d4be7f"
        },
        "item": {
          "id": "a64dc259-007a-46bb-85b1-6ceda0492c04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2c5c966-5f71-4c60-b0cf-d6fe8726c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98f7c69-7b3c-41a9-9e73-8bef97c7c39d",
        "cursor": {
          "ref": "67a04945-3b3f-46c6-b61e-667f63fc0778",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd72d697-9314-44e5-8e06-28e94c0d08bd"
        },
        "item": {
          "id": "b98f7c69-7b3c-41a9-9e73-8bef97c7c39d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "26338610-ad73-4299-8625-19bab0d58e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef63dcca-cd17-4730-8d56-cb05faf9672a",
        "cursor": {
          "ref": "124b1a50-1ff4-45ad-9c30-5c00a4bce311",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b6229f53-71c4-4c2e-8107-cfa4a97a722c"
        },
        "item": {
          "id": "ef63dcca-cd17-4730-8d56-cb05faf9672a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a92f08c5-c910-4bd0-8067-0f00df358a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126faab-cad4-45e3-b410-111cb21024d3",
        "cursor": {
          "ref": "cba49984-dfff-4e52-bc3c-3de9ffb3cbcc",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fcf6d3dd-73c9-415e-8aee-a6a5e7ad1277"
        },
        "item": {
          "id": "d126faab-cad4-45e3-b410-111cb21024d3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "32694ed9-f54b-4aab-928b-f9d8bb508884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c409a3e8-cec1-4cfa-9da0-1273af13f874",
        "cursor": {
          "ref": "701391fb-2cce-43f0-84d0-f4b522e4f50d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "adb0c08d-627f-426d-8efb-83d8bd8b369b"
        },
        "item": {
          "id": "c409a3e8-cec1-4cfa-9da0-1273af13f874",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b963286-8307-4195-86b9-98e105de9c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add54dc2-6a38-40c9-9588-64af1683dd94",
        "cursor": {
          "ref": "63e321d4-065f-401a-b5ff-0933550d67e4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "77566260-12ba-4e79-8542-17e846bcdee8"
        },
        "item": {
          "id": "add54dc2-6a38-40c9-9588-64af1683dd94",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06e94881-c79e-48c2-b9b0-6c48d4e26f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3465e3f1-d184-4c51-a815-6310400f5bf9",
        "cursor": {
          "ref": "2fa389fe-dcf2-42ab-8769-f31440cb5ddf",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6d901de9-7107-4c3d-9626-aacf2c496583"
        },
        "item": {
          "id": "3465e3f1-d184-4c51-a815-6310400f5bf9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b3ade3b0-e246-4e83-8b98-c7ba4dd7201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b731a1-9873-42a0-bcd6-b5085517be58",
        "cursor": {
          "ref": "f8288f6f-9a65-497e-afab-a28e647a811f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2f90d257-8eeb-4321-9f2c-ac7d1738e327"
        },
        "item": {
          "id": "24b731a1-9873-42a0-bcd6-b5085517be58",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b286a97d-6b72-431a-b52b-671479099b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0164e79-07c8-4474-82da-9ba40a9efe55",
        "cursor": {
          "ref": "6f505e40-5fc5-42f0-8fb9-3efe86f599ff",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "acde504a-60a5-492e-abd5-5360605e9e59"
        },
        "item": {
          "id": "a0164e79-07c8-4474-82da-9ba40a9efe55",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "20ce5ad3-da17-47a6-8f97-161f3f0f41b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e2b6d-5074-4e9b-b745-ab8ce7bb38c4",
        "cursor": {
          "ref": "bc7db953-d3d5-4908-b50b-9665a008cdf2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "21e05888-fa75-4a45-a023-dcca8e904ffc"
        },
        "item": {
          "id": "250e2b6d-5074-4e9b-b745-ab8ce7bb38c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5dc9c15b-1707-42a9-8eb2-94299c46ba15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9973784a-0a58-41e4-8290-0b96448907b7",
        "cursor": {
          "ref": "8f74918b-1d5a-465e-8350-1d7c5ad6a9f1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2df509d0-e98b-41f0-bb0b-c997418992d5"
        },
        "item": {
          "id": "9973784a-0a58-41e4-8290-0b96448907b7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b981f54d-bd44-42a7-ba64-c59df82b12e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cba65a8-131c-4d7b-9c81-d1ee2ccc71ec",
        "cursor": {
          "ref": "aab4b662-2397-4223-a819-7aa45c395a70",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2117c687-0b4c-4883-94eb-c7159e82640d"
        },
        "item": {
          "id": "8cba65a8-131c-4d7b-9c81-d1ee2ccc71ec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3583c3d6-fa86-416f-a690-d9c024ec5ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3700fd-2d29-4b78-b67f-14ba56772655",
        "cursor": {
          "ref": "019c2874-6333-4109-a7a3-d6330872ac33",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5ec2e465-61ca-47f5-82c8-d7619cbb165e"
        },
        "item": {
          "id": "be3700fd-2d29-4b78-b67f-14ba56772655",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8eb37603-9010-4813-8772-2c392d92978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518e7a68-7c4c-4230-980f-3d0aa0599dd8",
        "cursor": {
          "ref": "9104bc37-8632-4164-8692-9b668293e1eb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1fc5fdf-3b34-40ec-b16c-60f70f8f1735"
        },
        "item": {
          "id": "518e7a68-7c4c-4230-980f-3d0aa0599dd8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dabb1b82-2d69-4e5d-ad5b-4a9910755bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260595f-ad18-4618-9d21-02615cbf2336",
        "cursor": {
          "ref": "64ccf808-aa27-45b7-a7bc-58a6fdd6c97b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d8a395f7-e359-449b-a723-644c6f4d9020"
        },
        "item": {
          "id": "9260595f-ad18-4618-9d21-02615cbf2336",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a1bec4c-83cd-4f3c-8fd0-a9a1c28f1ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50430e93-388b-4250-a178-9539e5e6f99d",
        "cursor": {
          "ref": "946f3f9e-d103-4881-b858-53b1188309c9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9d880bc8-7573-4445-853a-117e44dc2a53"
        },
        "item": {
          "id": "50430e93-388b-4250-a178-9539e5e6f99d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "167ad298-0a70-4d84-ad7f-efda9a52030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0e4fa-0852-4945-b6e6-f0cc822c9f25",
        "cursor": {
          "ref": "717b6247-fa5a-4cf4-8beb-4ff39a8a1408",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a980eafe-4614-426f-a3ee-55f7387a83ea"
        },
        "item": {
          "id": "8dc0e4fa-0852-4945-b6e6-f0cc822c9f25",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c3881d82-ab35-4405-8449-cd53373951ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ad806-1c0d-44c5-a74d-fdde1383a599",
        "cursor": {
          "ref": "198e7cfd-9b0b-482a-b416-d6dc6630bbe2",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "062e12e6-92aa-49d3-b2dc-9413410ccc13"
        },
        "item": {
          "id": "629ad806-1c0d-44c5-a74d-fdde1383a599",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "21b8844e-73e5-46b8-be67-1bc289354dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f7c0d-b8b5-4753-8d6b-b5a33a711d6b",
        "cursor": {
          "ref": "a34c7640-0866-4d23-80f9-aca42c774fff",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ee328576-999b-45b5-aa49-6ad75e14fd6d"
        },
        "item": {
          "id": "255f7c0d-b8b5-4753-8d6b-b5a33a711d6b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bb92807b-22e0-4cb8-8521-8c2cedee6511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8108f7e-3653-4e25-8e5c-5a89dd94eba9",
        "cursor": {
          "ref": "5a8667df-76e3-4b7d-b867-bd189f74e2f8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f9df095a-e999-46c5-851b-aacbf06497a0"
        },
        "item": {
          "id": "d8108f7e-3653-4e25-8e5c-5a89dd94eba9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b96cf7db-72a6-4ba5-abc9-e2292a17e343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d92017-083c-4b1d-b98a-1c62f0f0efc1",
        "cursor": {
          "ref": "b49c4d12-32fc-45cd-90e3-cf5ad3e8d0a7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "78d79444-c741-4d95-b2d8-e4941ce5b55c"
        },
        "item": {
          "id": "c2d92017-083c-4b1d-b98a-1c62f0f0efc1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ffdc7b7f-ad34-434b-a3e4-f75d23c1353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d2f69a-0a29-41bc-b888-d17807349d7b",
        "cursor": {
          "ref": "3be6d7e5-79b6-42ca-8614-273f17a4e39d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7a5ff6bd-d1b6-4cd0-b2af-d13f4ab497e3"
        },
        "item": {
          "id": "49d2f69a-0a29-41bc-b888-d17807349d7b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ab627a50-32d0-4e97-b1ef-063b06a1357f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cc68c1-05f6-40d6-98b8-67d57491366b",
        "cursor": {
          "ref": "0a69b0d2-9e55-4f8b-91f1-1632c490cc1d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "211b7784-807f-4bf4-a936-9c8db3d0e87b"
        },
        "item": {
          "id": "82cc68c1-05f6-40d6-98b8-67d57491366b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e9e4bda-4e48-47ec-b4c5-d50debd30867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67679364-c47c-4b91-b511-d59b2c7f1949",
        "cursor": {
          "ref": "316e93a2-5ee1-4582-b51a-cf8894d28044",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd117345-a844-4fe5-bb7b-fc0514b3af35"
        },
        "item": {
          "id": "67679364-c47c-4b91-b511-d59b2c7f1949",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c3df8c1-c898-45c0-8bdd-c8a1fe366b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e4fba-19c5-43ca-928c-32b8fc052196",
        "cursor": {
          "ref": "a46b1ee7-f282-4225-8bc0-662e3fc21741",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "68840eb5-9369-4aae-bdfd-e192c1a291ad"
        },
        "item": {
          "id": "340e4fba-19c5-43ca-928c-32b8fc052196",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5913076-8480-4176-9eea-5a90193f6fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfcf166-3108-4d31-a8bf-fe58351a7498",
        "cursor": {
          "ref": "3b89c442-a8a2-401f-b7e8-32b6d9508ee3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "decefceb-3fb5-4cff-a185-a9eab1def16f"
        },
        "item": {
          "id": "4dfcf166-3108-4d31-a8bf-fe58351a7498",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7cf64b7a-d1b4-4bad-b0fe-2659f06ecb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e958cdd-5f59-4666-a541-29ca75b17f55",
        "cursor": {
          "ref": "da2103d1-6291-44b2-a93f-fda225a2fb12",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dcc4cf8d-b06e-4d92-95a5-1929907fa806"
        },
        "item": {
          "id": "0e958cdd-5f59-4666-a541-29ca75b17f55",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d5d98723-8b66-464c-ba56-ec4da5781ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8645dbd-b374-402e-a32a-8782a5dd2ebc",
        "cursor": {
          "ref": "32bf24f9-dce2-41a5-b54d-0fec8defc6ef",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2cac97b5-5019-42d2-86a2-571b5cc19c2d"
        },
        "item": {
          "id": "b8645dbd-b374-402e-a32a-8782a5dd2ebc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c33a9cca-a59c-4c33-aa0f-0d04e92f09d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa3861e-9255-44c4-a47a-35f4430ec8e2",
        "cursor": {
          "ref": "9e261ee7-c199-4ccc-b97a-4c6faab04872",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "15b42ec7-56d1-4620-813f-464a77dc3165"
        },
        "item": {
          "id": "3fa3861e-9255-44c4-a47a-35f4430ec8e2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9908b90a-4b43-4049-86ad-129e0ae1f845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5899ac-1f99-4b08-b072-5122402f1219",
        "cursor": {
          "ref": "e171b01e-af3d-422b-816c-2d88179e44b4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2c5f9181-1b11-4e01-9048-4560e71e6356"
        },
        "item": {
          "id": "be5899ac-1f99-4b08-b072-5122402f1219",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c64afe36-5533-4ce7-96e8-b8785dfe220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ecc449-a391-4b33-99a6-fea0ce3070da",
        "cursor": {
          "ref": "b22fe476-22a1-45f3-9516-923c5b2b33bb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4e1fcd1b-9da0-47cc-b97e-c43fb37c7d1b"
        },
        "item": {
          "id": "47ecc449-a391-4b33-99a6-fea0ce3070da",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c9651339-823f-4de8-9f14-87772ced2d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a920707-24dd-4d5b-a738-2162f372deea",
        "cursor": {
          "ref": "3696abf7-8602-4257-aee9-db19de340fc5",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "165c0b9a-d1f6-4691-b560-787818e9fb7e"
        },
        "item": {
          "id": "5a920707-24dd-4d5b-a738-2162f372deea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f1f880df-389d-4191-8178-c927eae057ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b59d13-f064-4280-b6ff-548e26962687",
        "cursor": {
          "ref": "f443a22e-7e03-4624-b0b8-10f812dadd11",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "86b942cb-8b16-4b22-8a96-52ec915d012b"
        },
        "item": {
          "id": "97b59d13-f064-4280-b6ff-548e26962687",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5f894b9d-2869-4156-95e0-885a03d28630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614a38a4-1e40-424d-8eb0-4f4863ba53fb",
        "cursor": {
          "ref": "1755bbd2-a557-4efb-b385-aaa80fb4aec5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "395a3911-03e0-4b5d-8337-d2b951c804f2"
        },
        "item": {
          "id": "614a38a4-1e40-424d-8eb0-4f4863ba53fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4d44da0-971e-4cfd-af1b-91d7279ae18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2d8859-c5ef-44bc-ae27-7d7546ae0ef0",
        "cursor": {
          "ref": "7e4e112e-8d2b-43be-89fd-9409f8221014",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67e7dfb7-c114-4324-880f-2435c4af528d"
        },
        "item": {
          "id": "db2d8859-c5ef-44bc-ae27-7d7546ae0ef0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f6cd1e54-b82c-4ccf-86d5-7cc081c4000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4acddc-990c-417c-8bba-44e0c4c9a26c",
        "cursor": {
          "ref": "989dee1c-8339-4e93-9b40-e6dd2f59d6cd",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "239a22e7-da04-4009-81f3-32245a787d8e"
        },
        "item": {
          "id": "9a4acddc-990c-417c-8bba-44e0c4c9a26c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e345fe37-28c6-485e-a144-3d07e2d2c22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df9eb74-500e-4473-8e8c-3ac949b1dfd7",
        "cursor": {
          "ref": "7ac92596-9cf5-4002-b5fd-2c2c73ddb5fa",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31adf0a4-dd65-4010-bfd9-3e7be72e5552"
        },
        "item": {
          "id": "6df9eb74-500e-4473-8e8c-3ac949b1dfd7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "512bcbb2-c3b9-43e7-9248-fc6b22e1b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce74aff2-2557-47be-9fad-2547972c75cb",
        "cursor": {
          "ref": "ba246341-1ba4-4023-9533-2375657a783b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b1fcad62-7cea-4728-867a-a6a738c7e6bc"
        },
        "item": {
          "id": "ce74aff2-2557-47be-9fad-2547972c75cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2a494067-b75d-4d51-a5f3-5be7d1570be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0d0ec9-8048-4a74-b4c8-336e67a70ee9",
        "cursor": {
          "ref": "92e80826-2805-494f-afd3-f77f3a038b14",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "974f56a7-b5f9-4aca-8031-e5ad34e5dbcd"
        },
        "item": {
          "id": "8c0d0ec9-8048-4a74-b4c8-336e67a70ee9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "af34dc0f-d556-4a4d-ad2f-7640f44c4bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38736f4-167e-4bab-821b-e96926c7ab22",
        "cursor": {
          "ref": "c619e568-afd1-4abc-ae36-4c82a73be203",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b8c7fa63-c314-4c7d-b3a4-424dededfd1f"
        },
        "item": {
          "id": "b38736f4-167e-4bab-821b-e96926c7ab22",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e61cc06-fa33-4d1b-b15a-1ba5f60fef87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2892a56c-3777-4e7b-92cd-3a1ec753bea3",
        "cursor": {
          "ref": "aaa01c72-6e77-4b94-a130-9a62bcf6b290",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8763766-efa4-4e7e-8abd-8a0d8add90a8"
        },
        "item": {
          "id": "2892a56c-3777-4e7b-92cd-3a1ec753bea3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32269e41-b7fd-44ba-8efc-13968f7eccc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936df1a5-502f-420e-9a27-d070dad438ec",
        "cursor": {
          "ref": "1bce2a0c-f8a4-4eca-b167-69875a01cc89",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6527f083-727f-4f05-b873-906c4133b905"
        },
        "item": {
          "id": "936df1a5-502f-420e-9a27-d070dad438ec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c61e6efc-0415-44b5-8388-72f8b7aaf670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c54c53-1adc-41d3-9be0-f5c5f76475ec",
        "cursor": {
          "ref": "8426209c-61ad-423a-80e6-5c71cf797fff",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "489c7fae-3031-4531-ab4d-f05798b62a65"
        },
        "item": {
          "id": "d4c54c53-1adc-41d3-9be0-f5c5f76475ec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "45a9d587-e41a-446b-b7f1-baf652e9b09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629b396b-9029-4451-80c9-7b1dd3997c17",
        "cursor": {
          "ref": "cc88b6f8-89bb-41e7-818f-9a45481c6351",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "85906064-9889-4eb9-ba3e-75831cd925a0"
        },
        "item": {
          "id": "629b396b-9029-4451-80c9-7b1dd3997c17",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f6674c85-961d-4e53-b16f-814c3742fe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f0e24-9bec-4197-ae40-f2e1d3587c4e",
        "cursor": {
          "ref": "15d810d1-82e1-4162-9e96-ed2071a2cfdc",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b5f28a41-49a8-4791-8d16-f9220c768588"
        },
        "item": {
          "id": "045f0e24-9bec-4197-ae40-f2e1d3587c4e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5e8bc616-621c-43f6-b38d-38e85ca36a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1ac77e-9587-4397-8555-6bbddcbc64ab",
        "cursor": {
          "ref": "86e42bf6-4bdb-4cac-bb12-c286c13c4b8f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b6452a7f-8df7-4c8b-a6b3-fbac9776d1c7"
        },
        "item": {
          "id": "2b1ac77e-9587-4397-8555-6bbddcbc64ab",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cefd4e24-1e92-4f2d-b920-e498cec543cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e03e57-c9ad-407f-98cc-faa92e9c69d4",
        "cursor": {
          "ref": "3b310f73-ee74-4af5-9b4b-6030326f433b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3c6bdeae-7575-4686-97b1-2c5064c9de07"
        },
        "item": {
          "id": "a5e03e57-c9ad-407f-98cc-faa92e9c69d4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "16a26f48-b80d-4982-8543-833e1bfa6f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebcccda-fe51-47ed-9632-b93baf0266b6",
        "cursor": {
          "ref": "fc4ae821-6d18-423d-9af3-8f530eef9aec",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ec30041-113f-429d-a60d-9897f7f0901b"
        },
        "item": {
          "id": "eebcccda-fe51-47ed-9632-b93baf0266b6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fe202397-53f7-4e7e-ae5f-78224c698a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae4085b-44c7-4eb4-869b-80b2dbd15f9a",
        "cursor": {
          "ref": "40a5c5f8-e69e-4a55-a5e0-28d5b11af8d4",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7b206cc2-d2aa-4cb2-a69f-fee88497834c"
        },
        "item": {
          "id": "9ae4085b-44c7-4eb4-869b-80b2dbd15f9a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6953d099-a7b6-4086-af09-640a792ac357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f932c1-57f7-4341-b335-4d591e9d2978",
        "cursor": {
          "ref": "7bfbf1b4-69d8-4bc4-bc40-1445e411103a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cadf6eed-0b5e-4079-b2b4-faf745e3748e"
        },
        "item": {
          "id": "04f932c1-57f7-4341-b335-4d591e9d2978",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a2e8cf37-1784-4933-8644-a80ec15a7dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c30c94-604d-41c5-b41a-1475b6d0fd8a",
        "cursor": {
          "ref": "0b10b558-7a86-4c2c-bf15-73a8c54acddb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3d6e70f0-d36a-43e4-975b-3e8220f61ffc"
        },
        "item": {
          "id": "10c30c94-604d-41c5-b41a-1475b6d0fd8a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba262d26-0ece-42b0-b895-c6665f32b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353f2fa-79df-49b2-88fe-387a04199f9f",
        "cursor": {
          "ref": "16f80111-fc85-45cd-9ff7-a2fcf3517b66",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b33b2445-8fc6-461d-9b07-7a4ff3c76470"
        },
        "item": {
          "id": "0353f2fa-79df-49b2-88fe-387a04199f9f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eefee442-407f-49e9-a0ed-7873e07312ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2758e11f-926a-4061-afae-62c3d28ccdd0",
        "cursor": {
          "ref": "c89db2ce-16ae-4a16-934b-e9b8ccb8b47f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "97932114-0163-491b-bb91-35151e596b80"
        },
        "item": {
          "id": "2758e11f-926a-4061-afae-62c3d28ccdd0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "508f82a4-b84f-4b38-8417-28868e26f52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c91a8a2-b6b1-4d1b-b06f-00a24dec4591",
        "cursor": {
          "ref": "2da57493-60b2-448a-8920-ac7ea775f918",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "80f39b44-eb62-4a2b-a729-65970704216a"
        },
        "item": {
          "id": "1c91a8a2-b6b1-4d1b-b06f-00a24dec4591",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3580490d-3380-415e-9bfd-d2e735fafa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a975387-ea94-44ac-8381-858df848e333",
        "cursor": {
          "ref": "d2cf0c9b-2c42-4ade-bbe5-71619f6a7ff0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e858b6e6-6292-44ab-866e-9a81e3c98a80"
        },
        "item": {
          "id": "9a975387-ea94-44ac-8381-858df848e333",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ea2ece7b-ca1d-45b1-a33b-9e11750eb9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319d252b-97a7-41ae-8eb1-4df39752c5e7",
        "cursor": {
          "ref": "b499ea1d-220c-4fc0-a8cb-9f7805f7de77",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "95f5e170-e944-4e80-9d97-34cc2ad4dc92"
        },
        "item": {
          "id": "319d252b-97a7-41ae-8eb1-4df39752c5e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "958cb6ef-b538-48fe-b5a3-c1d836447bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150404be-0733-44dd-9684-6ab0998b9a82",
        "cursor": {
          "ref": "627e7dc2-d4a1-4260-a282-5243c7ae2f5b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "60c67df2-a2ea-45f3-a845-534e5a2cb77b"
        },
        "item": {
          "id": "150404be-0733-44dd-9684-6ab0998b9a82",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57389a79-802a-4c6b-b43b-a6009e0c0f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0254758d-78a8-49af-a7f9-1c3e586b8997",
        "cursor": {
          "ref": "eda9a1c3-69ed-4337-b6de-45450469797d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "72feb513-174e-491f-bb8a-e2206be4a1cf"
        },
        "item": {
          "id": "0254758d-78a8-49af-a7f9-1c3e586b8997",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b5615ba7-1e5c-4617-b828-d64f28604027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e845f4-4213-4dec-9423-cc3feca02ca4",
        "cursor": {
          "ref": "538d1ca9-ebc3-452c-956a-5a9a2040a925",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bf830f29-f597-4dfd-b3a7-48c5ea64cc3c"
        },
        "item": {
          "id": "a1e845f4-4213-4dec-9423-cc3feca02ca4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "72ed302d-e8aa-43f0-921e-9db37b0f41bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635e793e-f8e7-409c-8d12-c7683be18120",
        "cursor": {
          "ref": "eefbf6bf-ae04-4fb5-bf42-8cf55a528c5a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "dfe194e6-6afc-4d24-a801-e9d3429cfae7"
        },
        "item": {
          "id": "635e793e-f8e7-409c-8d12-c7683be18120",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd19e68e-92d2-4fec-91fb-9ee06025c8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dce3cb5-3033-4c85-9350-7e22a444f9fa",
        "cursor": {
          "ref": "59a461a5-f04a-4c7c-8878-1feaea1baadc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ccc6f630-cec4-4ec5-9900-94da6560b1c6"
        },
        "item": {
          "id": "8dce3cb5-3033-4c85-9350-7e22a444f9fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16c2243c-909f-4ee2-aefe-dfd002e27079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6bd34-944c-4e60-bfb3-cc281e871613",
        "cursor": {
          "ref": "c9f27e23-dbd8-41aa-b13b-e4be20758776",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5f05da20-876e-448c-847f-9db9d0d6bcbe"
        },
        "item": {
          "id": "4cf6bd34-944c-4e60-bfb3-cc281e871613",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6bb3f3af-7040-499b-93f5-eff59a11bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc13513-69b1-417e-b280-99b611006ec1",
        "cursor": {
          "ref": "d0591fbb-2733-4006-8a38-b0bf1272f2a6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1a4b3446-ac10-4059-b6f2-ae157d032010"
        },
        "item": {
          "id": "7cc13513-69b1-417e-b280-99b611006ec1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f62d6310-cdc9-453c-ab3e-1ba7416725ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c2db8-8eb6-4015-b23e-78bf0dfe0081",
        "cursor": {
          "ref": "6b3113c0-2228-4d1a-a7c8-24450ca9f314",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "65164745-add2-4591-9578-0ffe8ba2028c"
        },
        "item": {
          "id": "4c5c2db8-8eb6-4015-b23e-78bf0dfe0081",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cb765402-78a5-4d10-b32c-8f4aefd8fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0ab035-0386-4787-98f5-8ee9d6d6d7f1",
        "cursor": {
          "ref": "9512a915-f4b9-4121-bdf6-afb7e1f131c0",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ef8601c4-1f45-4e7d-b426-5f785cfc674d"
        },
        "item": {
          "id": "9f0ab035-0386-4787-98f5-8ee9d6d6d7f1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "24b66586-36b6-403d-9183-a31db2e2263f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bc4407-737f-4afb-b568-0563e3031853",
        "cursor": {
          "ref": "c9ffa806-e96e-4bab-9ce1-0d85e1234829",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "60756130-471a-414c-8e2f-a6d2c9b7ba56"
        },
        "item": {
          "id": "d9bc4407-737f-4afb-b568-0563e3031853",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "618b2616-0005-4807-8943-288631deb105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a623f3c-29f5-407b-8dce-d8a40cb69e9a",
        "cursor": {
          "ref": "c8cc0839-a7be-4019-9498-94785d102bea",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9d96dc65-cdc5-4358-8afe-591a89269530"
        },
        "item": {
          "id": "5a623f3c-29f5-407b-8dce-d8a40cb69e9a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e68f04e8-a8bd-4760-a23d-1a1d4a0a69b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266d0d74-e550-41a0-93cd-f1dbf2c44153",
        "cursor": {
          "ref": "9221698a-7375-4425-a3d2-7799b0d3d0aa",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "13132a6b-1f9c-4e75-861d-adc4ecacb379"
        },
        "item": {
          "id": "266d0d74-e550-41a0-93cd-f1dbf2c44153",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "45004f7c-e71b-4376-b97b-d25522c66164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af218da1-7271-4d19-90da-23dfac4d2c81",
        "cursor": {
          "ref": "7af57acc-f3bd-40f1-9cc8-f9b15d064d63",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ccc8747b-826f-41dd-aa38-49ac5fd9c9fc"
        },
        "item": {
          "id": "af218da1-7271-4d19-90da-23dfac4d2c81",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e347460e-8303-49ff-a09f-bfb1fe636853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321dd766-3dd2-42d2-8aa7-eed65dc42740",
        "cursor": {
          "ref": "533c1739-4fef-442f-b70c-6cbd9e26e1d8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0b6badbe-60bf-4eb4-a2ad-4b55996ff86b"
        },
        "item": {
          "id": "321dd766-3dd2-42d2-8aa7-eed65dc42740",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf94e08f-f24c-4b90-a6a5-560eca78e70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6764de9b-68a0-4aea-9af8-c0c435458284",
        "cursor": {
          "ref": "06674754-0b79-49d1-a838-6718170d932b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3bb54fb7-68c5-4717-a9e0-6c36db1c269e"
        },
        "item": {
          "id": "6764de9b-68a0-4aea-9af8-c0c435458284",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "303dfe40-b9dd-4871-89a3-bac058a39797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388ef462-0ebc-4778-9ba2-64bbd838a3ba",
        "cursor": {
          "ref": "f7e66bd3-8222-4889-b661-1c60f8d0af0e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "197fc49a-db48-4d92-97b9-a633262ff326"
        },
        "item": {
          "id": "388ef462-0ebc-4778-9ba2-64bbd838a3ba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af9b0cdc-84ff-48eb-a2c3-25cedc41b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb6bcce-9590-4cf1-92fb-e29ab8796e0a",
        "cursor": {
          "ref": "29051d45-3766-455c-b03f-f48f3b879c58",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "48039a71-6186-4a76-be78-b7c849049ab5"
        },
        "item": {
          "id": "9bb6bcce-9590-4cf1-92fb-e29ab8796e0a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0c38de0b-14a6-424c-8ef7-ceab3b3ebba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228aba55-ed9d-46af-8d16-753176f07cac",
        "cursor": {
          "ref": "0a928b4d-df88-4b0d-b577-9eb8f0253256",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e9ffcfef-1773-45ba-9230-e31edc5c7fc4"
        },
        "item": {
          "id": "228aba55-ed9d-46af-8d16-753176f07cac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a104b46b-a99e-48cf-9804-605778ce2b0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b12687d-e4a0-4d42-ba24-0919fd1babf7",
        "cursor": {
          "ref": "6b27921b-cbba-40b0-95b5-a75051938e93",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d544c46d-34d4-4b29-ad65-430d956a7a0b"
        },
        "item": {
          "id": "7b12687d-e4a0-4d42-ba24-0919fd1babf7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dc083fc6-a7d9-4dfd-8154-98333c439add",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d09e6c-1b54-43e3-86fc-249e6e33b347",
        "cursor": {
          "ref": "62486404-65f0-4d1f-933b-4d65c01f734a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e7e693a0-e9b3-4b8d-95d6-0bd1d55e809f"
        },
        "item": {
          "id": "c9d09e6c-1b54-43e3-86fc-249e6e33b347",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cb60ec6a-37b0-4e1a-8f67-97b8d3f27238",
          "status": "OK",
          "code": 200,
          "responseTime": 2129,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54b2bb4-3554-4608-a3e4-2f5c9c76a6e3",
        "cursor": {
          "ref": "b330d596-ed3c-412d-a39a-48193b0ae379",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bcd3f4d3-3c04-44d2-8361-071b267c130b"
        },
        "item": {
          "id": "f54b2bb4-3554-4608-a3e4-2f5c9c76a6e3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "13d8d6c7-a475-45ee-b6b3-151568a35c19",
          "status": "OK",
          "code": 200,
          "responseTime": 2765,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad4edfe-5a40-4f13-99de-1a44ee0fe452",
        "cursor": {
          "ref": "db73b7d0-ae85-43f2-b0e0-b9c38618bb01",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8644c732-195e-43d9-bbcf-9893b7186843"
        },
        "item": {
          "id": "bad4edfe-5a40-4f13-99de-1a44ee0fe452",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82dcca7c-7241-4cd1-ae9c-af09ff52b209",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad4edfe-5a40-4f13-99de-1a44ee0fe452",
        "cursor": {
          "ref": "db73b7d0-ae85-43f2-b0e0-b9c38618bb01",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8644c732-195e-43d9-bbcf-9893b7186843"
        },
        "item": {
          "id": "bad4edfe-5a40-4f13-99de-1a44ee0fe452",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82dcca7c-7241-4cd1-ae9c-af09ff52b209",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c264ee28-c1a6-4888-ae05-601a53462c11",
        "cursor": {
          "ref": "2b309c3c-97b0-41d9-bf7d-1d1fb1f9a5c7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ee8378e7-fc6c-4363-8464-22ce35fe189d"
        },
        "item": {
          "id": "c264ee28-c1a6-4888-ae05-601a53462c11",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8d1032ef-5936-4fe7-88cc-e2bfa780f303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c06402-6e85-458a-9e70-5e1562664d19",
        "cursor": {
          "ref": "6506540c-a5c9-44dc-be34-619a6e2c5c5c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "726984b3-3244-4f58-951e-8cc893807c81"
        },
        "item": {
          "id": "b7c06402-6e85-458a-9e70-5e1562664d19",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "30807b70-78dd-49d0-9bb0-6828c68d716d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}