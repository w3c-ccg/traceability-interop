{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5ab706c5-9e39-4dbc-a2c5-e4f83ecbb165",
        "name": "Clear Cache",
        "item": [
          {
            "id": "545d3955-5012-4d2c-95db-dcc5770abc8c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4bed4f1-c5d9-4a09-95b9-397396f1278d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87dd89ba-016e-426f-89bd-100e129e130a"
                }
              }
            ]
          },
          {
            "id": "2db34f19-20b2-4d88-a0c9-7a1c73d82604",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b481815-b232-4ea2-b0f2-3586d2374b54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c386c21f-993d-4f17-903e-7624e29e562f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c88a35fe-4b87-4994-b49c-69beb9eae2c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "480406fa-2b50-4cac-ae60-238fb3fbaa82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9a15131-66f6-4a5a-8683-f787923c5328",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "616c7380-5824-4e57-9d94-11b9dc0b0937",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "284d084d-0a86-4710-ba8a-41b6f7b8902e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "032d2fef-5585-4b37-b550-3ded61753625",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8639b951-c231-4a2b-b6b2-0b067587ab04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f30a153-c277-4a55-8a68-fca41a2bcf13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45d63d90-af94-431b-881b-1b47422d9c4d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e77c69-a5ac-4464-8ab3-ad5f0e823149",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cff8210c-473f-401c-8e77-832894eebdd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59e549ff-5f49-43d2-a7cf-2a8f23bc9252",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12a6b3f4-c653-4b64-91f1-5cb8b75de6ea"
            }
          }
        ]
      },
      {
        "id": "9cd25f54-d89b-4f7a-a1a6-f16bdb11facb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c04d14fe-fbb7-4242-bd9f-93d9f757fb59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4889f80-2210-43b4-9a96-987136502a3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da89ea80-28dd-4d69-be2d-a0f2c5705ff5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e0a5a-9481-43a6-9498-8f5634756369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c96e09df-702b-43e6-a615-19bb51f3ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae7dc2-2733-4528-9900-6d01faa8d8e1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f51c3-e923-4500-92b8-5bb33f33ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc6eeca7-75ae-4ea6-90bc-e0c4f1b4100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acb7356-5449-4ec8-a229-08db5888c7c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ef4c28-6e48-4f7e-bb90-f5d98b0ddbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96acdff0-8835-48a8-9f85-309b73174881"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb1d66c4-d1e9-490e-aefd-da55e5f35e0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "398f0d48-5cbe-4e1c-a070-e1f5ae9b2543",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa65d19-6ae7-419c-8ce8-1fbefb1fd775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f053f37a-067f-40b7-b9a2-91e171fd548c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485187a5-5851-4125-b6a3-e80d82a5d9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d93a3c9-c140-4320-b6cc-d62a63d2efd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac5dd8e1-c2ea-40db-9b1d-06f340243797",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f13da12c-1b22-4179-bff7-a02517a1b81e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "478f0560-7a27-477f-b424-781fd4ea3f07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "06e595c9-b80b-49c1-a0d0-089db705079f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0985fab7-5ab9-43f6-8045-7e699b9aafea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "802f61e9-379b-496f-b281-c58b79bb17fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bff5e57-b009-44fc-9743-929219593015",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba3c8a10-e069-43c1-aa26-d87d638d9ae3"
            }
          }
        ]
      },
      {
        "id": "8768dc23-82c5-4871-b58f-5917963f66dd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88fbfecf-0b1f-4568-baaa-32f439942530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "befa170b-0db4-4499-a2ef-50c9fa22cb1a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "274ade12-9e63-4ef8-bd4a-fe898feb2cb8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f858e92-a5b7-4e8e-a83c-9a3f4525a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde19251-6acf-434c-a51c-d4e7b7d98985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8925e24c-5c1d-4a26-82ce-88e503e727ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b3c5f8-da96-43aa-9510-3c7e78a9e088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16827cc-8dc0-4e9d-b3f6-b5200958f047",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf648e3e-da07-46a0-b5ed-be6f675d46ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84147c8-1d6c-450d-aac8-6a152e122223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca856c56-60da-4972-ae80-ed767032a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76af816d-783d-42d8-8f0a-6389a176d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adec084a-5608-44e1-8ab8-4caf65b8e854",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d1c075-82fe-426a-8b3b-a5f27440d316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ecce5d-154f-4aa3-9a46-9aef96d7c186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb34fab0-732b-45ac-921c-70b1492da4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcc0450a-2a2e-4cd1-9e3b-391caaf2bd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c800cb-cc6c-4747-b923-1c3734b4e59b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6861cb1c-fe97-46b8-895f-61652e767868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479cd646-2fcf-4682-b52e-4357a81f7d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ee8ede-c795-438a-a68e-aad7e9d063d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5dd3ce2-d856-4d9c-9d52-bd805275ddc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e2f313-8ad6-45dc-a297-c6e3a8db6943",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5604bbd-ab3e-47e8-aa54-800ebfdc9c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eefda2-e229-4b8b-8b33-bf93eb9e9fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af53c55a-fd07-44db-bac9-454a2458ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9552303e-0612-4dea-8be6-2903db245839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f0744a-b721-41c8-a7b7-0564e0bb01a4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9460bd8-d8d2-4c0c-bed2-6c874f0bb777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79245daa-1ad6-428b-bd57-dcb1fb028582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137a17cf-ca85-4ed5-8e22-4785507463fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4367b9f-1b3f-4aef-bbb3-401efa3dac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bc6de8-12e2-4da2-b75d-5e6df0506cf2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968acb9c-907e-4e46-83c0-6c379682f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb13a56-06e8-4488-82f2-a300277544b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5467e51-2920-42ce-a525-c3933f92de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b3ed9a4-cca3-4031-91fd-a47f1d90a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b1e810-15d5-4f53-8fbb-aab0ec81f5b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7d6897-109f-40d3-a46f-55d2a736120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246e09c4-63c8-4b22-860c-a41b330bd735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3963c6-2316-4379-aa30-44d6a7058da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc5ae838-e7ec-4812-8cff-d336411312df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d87808-2b76-424d-b080-8ccc5bc81e0d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef201049-eb80-4ebe-aa54-1304fb1c97b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58866c5b-21ef-4caf-8364-72cd6defbc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a6229a-1d15-4b2f-8df1-5abbc61c3cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc148aaf-fa2b-4500-a28f-60474ec9dcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742df9a7-74bd-41e6-ad38-af055321f045",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adb2024-b593-4364-a0ae-060dcc1d5796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3986d39e-b580-416f-ac92-993022011549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5400ec1-ad34-4968-8930-e8ea8e4bba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a7e05cf-6191-4a11-9cd0-ebd94bc32e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad5838c-e5bd-4df4-93ac-d2f266debd27",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8a9757-9579-4959-be81-eaff291812dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845da6a0-e3d4-4265-aecc-2d8f44ca4622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63761cfc-e1eb-4861-b112-6840c67077d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c4cda0-ba65-4623-abc6-2c58a42b11bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba530e9-2db4-472b-bc89-776d56c30a2d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dffeec-fba8-486d-8c10-a4c15d4e2812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8a2a26-8a79-4a69-a6a6-65212e0c8338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2f3418-aa2e-4b11-bc34-f3d8af9d8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05878120-ff00-4743-b93b-ed2b4cfd2a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad91f26-0aff-4c42-99ee-39f097699146",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38fbe0d-6181-46c2-9f50-f998f69b63e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fca5f46-4fe0-4bcd-b74c-e0c27252335d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff91b87b-1d34-474e-b728-8457ef761296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a33ec4b6-b28a-461a-8968-447709eac14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d1b8a5-91fa-4ba2-9dc4-ddc5083d0ab7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dee5d24-3162-44e2-a1d5-e141c69a5db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5121a8c9-99af-4a9b-bd11-013ad6de13e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b014e1-c771-4f06-b6d2-40c3a762a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "656e19aa-46ce-4ea7-80e2-b3312d8e379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75427407-b406-419f-aefa-f25ef53ab3de",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8996e61-ebc8-486e-a9e8-e8a0887afb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae74989-579c-4a69-b5f7-3b0a7e808e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317fb6a8-8c5d-4c85-bcee-c339acdea06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe712161-c6de-486e-b6d1-51ccc3338ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39f2d67-f418-4a56-a855-0ace00d49479",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e093e35b-323b-4024-ac43-9c14327565ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65889b2-b68a-44f1-8265-c57fb5437e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404296d9-1d57-4cd9-af46-00a00c2d0945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68afcb70-620d-43ff-a5ee-e88e875d2cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7211007b-c276-4c4f-a043-743d50c0926e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f29a0a-2947-44b4-be81-e160b22be97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87499179-a460-49cb-b5e8-c5db4671d7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630868e8-45d8-4f52-a6a5-b9347089ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd629f70-13a4-4022-9edc-21b1b364b854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f7c28-a2d7-416f-9b34-5d54d4f10028",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8bdbcf-56ff-45bf-9b73-865c90bfe45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a65288-3bc5-4c6d-b782-bfa8201cf02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5953f738-2701-4ab5-8024-b4d84d74304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8e16a8-c1ac-4dcb-8b91-0d4d4e4182e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d552f3d8-3151-4c47-aac6-3ef44f851246",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a14929-67cf-4c88-b931-c4666d4a0a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ede2223-e86b-4aff-aad3-562a2d1a7724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bad93b-e589-42f8-a56a-ebda21760cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a1e66a-9bf8-4437-b448-4687f9f3e7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eec083-be0a-457f-9fb7-fcdfeaed5496",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a891305c-5584-4227-804e-f477f193b8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d292e933-802c-4a50-a626-87f5ffe5b485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c9be85-84ce-4e5d-9a2a-1a5e91618965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e0a54a-56df-4d1c-b583-29c87f7a9b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b35f4-aaed-49c5-9b90-660e4a0dfc61",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d1b41-fdcc-4346-8ecc-d06ca06de0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae3e7b5-b87b-4454-bbdf-36b6c6e582da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592450d2-4fe6-4e3b-bdbb-f40087e896f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcee570-bd73-4946-bbc5-6e23de318a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d2c64a-2da7-4da8-a22a-41c9884b0f6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19d18cf-97b8-4f3f-8452-54854281c49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5993244-1d96-44da-9cbc-1768ea30f6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d300f8c4-8751-4eb5-9f14-c647f761eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c0ae60-8cba-4da6-b72d-07635b8beb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b299c11-843c-452a-bdb1-c699525b4dbe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45667e64-bd2c-4c5c-949f-08d6c40e5d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ceba2a2-d561-4a19-92b1-b3461194b907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296dfeba-4264-41d2-90a3-c1813c57fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4f12c8-e712-43ad-804f-b54fd73330b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97a745c-a2e4-43fd-920d-29260604b63b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa9ed54-cd2c-4296-b60f-2db07acb5378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15906ba-a533-4fd2-98e6-371bb97dda29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a0759-eca6-45a8-beed-d158a341a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ab06a3-df25-4395-8207-523aafbf2419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c180f0-f111-416d-8476-5a582a528335",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffbf687-d1e0-4e85-8a3d-c3d2a163e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1825302b-3a0f-460d-82ea-1414a8a6cd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa0beca-20a1-44a7-8860-5b0fee627382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b725249-9382-4e9c-9d73-32705ad9358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959d9b5d-14ab-4c1d-8fb2-6af788ab9c39",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eac609-5ecb-4dcc-a41c-8e6d1213f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f3cb38-d7b2-4779-af48-a65bc1859353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a52960c-4cb4-4176-b9c8-a1de2e74fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d912ec2-723d-46dc-a3ca-b888f476e359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad2ebc8-de84-4099-aaf0-aca5a16db9c0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a571bcfc-372a-4231-a405-e446de225e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99c6c3c-87b4-4cb6-a489-3aa02b99451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b05f455-6980-41c0-9230-4c38554aad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf478a7-be3f-4b8d-8f02-a4ae333ce6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8edbc7-f32a-4588-8837-14f2a5864afa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18e2327-a914-4120-a6d0-54354a300137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f53c39e-d539-4d3d-9e5f-02c0f12dce52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8df4057-44a9-4188-b8f8-dadf7932b74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf831e0-6187-452a-b665-c24fffd8c8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3c4ee8-40d1-4350-a904-40d62f7e01c3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b2214-2c98-4e3a-8500-a4d28aa07175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56db79fb-0e36-4524-a832-dbc061e5b329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0b5ea8-6304-457b-af0f-aebf19f1b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9845052-463f-4f6f-beb7-c825fa3163bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1057813c-0fe6-4741-8387-252df73ffb4d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e90e5-cf9f-4950-bf71-4dd8ec43f478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1251bd86-590a-4fff-84a1-5f03a66278e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c006253-36b7-4ed8-90f6-4c3fd07b5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a46cea-4e88-4ef5-a0cd-01a16cd2aed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d72d2e6-4da4-41a7-bf43-331e3f9f5898",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc461a-cd23-478c-923b-67d432ed577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9893c418-38f6-4426-bc46-72ef2ca13d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd3fd4-7378-4461-a19a-7abfa3c7810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8172574-e778-483d-a5bd-376af805a026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb93fe5-9ae3-454e-b7aa-67b89ba77476",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c532b214-44be-4c1f-a867-c05335a0f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bcc48e-5a24-45fe-84bf-fccb1371115e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9f1e6c-cb8b-4490-b142-72d951357acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72be465f-0db4-4e48-8aa8-26f600f55724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15133c43-5667-495e-9cf1-1715f2b53c3a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680012b-5737-4fa2-af1d-0913a55a7dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7ccb7a-73d1-4cf7-bcdb-cda6fd97a22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2e15b-f7bd-4107-bf20-f424b993f949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36a9df2-9a65-47ce-85bc-a876f3f364ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f205dcd-af5d-4c38-bd98-30919457897a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45660835-ced3-4de0-a21a-588a7fd4a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c3976c-8222-4ce1-a587-33688c5c8757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb213e2b-6418-4f11-86d0-1abb9e72f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d328dd7-d082-4594-ba85-a9ae5e206896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288f8711-772f-431a-8623-53b8feb6c694",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feea299c-b0b1-444e-8337-27b9552471b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17d6502-0106-431f-a589-4f27a7384700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f62219-5e74-41e8-8af1-83c3b91be2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f75bb235-1e9e-4716-af75-524e20355356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bad2755-f08f-4895-baf8-52ec6c6ce75d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce23a14-a8c5-472c-93d9-e455a5122639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "573d1f56-b806-4966-b216-84a5ada04d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a286df-acee-4fc0-a972-fd14334173e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97139118-651a-4cbd-b20e-9852cd843157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a34584-b075-4f48-9df7-1dc0ffefb6d6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a408a253-d318-446e-badf-427e8c705748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d6cecf-5c04-470a-9d4a-93bcf2fa0187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571ede7e-5a38-4281-b2a3-c6add542a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc530907-327d-4f9f-ae3c-50f0d652274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72dd5b-544a-42de-bf77-a05ba52679b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82b5c51-e80e-4c4a-a08f-58abea2554a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bbfc31-e300-4592-8022-983c22ab0b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81476e0b-6d2f-4abf-84df-95cc3f3b8723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f02920a-5c40-40c6-9fe7-50edc1ebc2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f718e-e2fb-4a4f-97ae-65d664fd1ec8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84436660-181c-431e-b7b7-5f2ee7e62615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0355a00-453a-497f-9732-087924599117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469ee6bf-9b2c-440c-b8b5-eb248b19d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0015974-9714-4917-b82f-b90b89632775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc78a5b-3f12-42d7-b33c-2aeedc5ec039",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb65b1-ccfe-46a4-a6e8-db83ffd85c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e88e16-6481-4890-9fcb-89d6ba5a07a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69eac4-972c-4b24-88e3-8a9726f42035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5027ae-0a17-47c2-a9e0-92e1608bb83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9461729e-a5b3-4d6e-bd4b-87d4f434881d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30ad455-de3e-4087-899f-5a3706c14aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ffa904-d1fa-4b7b-8277-e1ffe6c4336e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989bd6fa-4bbf-4c76-b7b8-04528c465eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4588f8c7-c1df-4193-873b-5869b844bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703b4afb-9ba2-42c9-ab40-afb08079d072",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81cde11-517b-42fa-bb9e-8e42337af725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6292d-1844-4a9c-8d84-e9789af20f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f4a9cf-3997-4756-8b28-61488b20ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6290f597-0c8f-4b8c-aa0d-c561cec2942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5036539b-3a77-48d5-a931-683fd735b571",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400dbd2f-7efb-4762-8d51-7a8c11d6103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cbf501-90ec-4e33-a25c-da62b86274c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d678bd-f43d-4b85-99f6-5b4056227acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cda8f4-7b5a-4fcf-88e3-81bd42ce8395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a4b8f-f866-4006-a9a7-64571728f838",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a2468c-8ba6-4518-ab5f-1cd8f10870f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59931e2-24bd-457e-ab71-a045457c15bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2dfc40-a83d-47ab-b60a-30c298c1cfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9a2db4-58a2-4e06-bd7a-357172fee6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c7aedc-eccd-47fd-85bb-62080d01f176",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd35c0c-ee03-4881-84e2-56a270bcc2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2242eefc-7ca3-4fd8-a60c-9bb5974a8999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c3ee47-250d-4ddf-9021-4e2112580df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b22bff2-b675-42e4-977c-8c2a0165927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a891ee21-c94b-4e9a-a30c-661ec02202e2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e1f3f-853d-475c-a092-0fd6fbaef872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7980cb8b-d296-42a7-885c-49bdabf9459a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9bbcd-9fae-44a2-9c73-f4f19c0c1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cabdec7-53a8-4f43-9c86-de96296ea3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756bdafb-15aa-4070-b098-aa8d466a9a4d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f8c6f4-7555-4b70-a4cd-7c90a2ab79ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2445e7-74a0-4667-949a-cb5ebb28ed06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d726e9a-163d-494b-ac46-71e4a571f535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6012ded-d1f5-420f-8280-6456f8930f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e39b46-c671-44e1-9568-ad955824faf4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8586ec-7e3f-4789-ba4e-3a3ff1b232c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb227b9-42cc-4a71-989c-2e005ea04b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff14d03-9add-44d1-abed-ec3a9cfb97d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "313d108d-3689-4cd5-ae8b-d2b80739651b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c49c00-118f-4f59-9b23-047c96878e8a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c657b8-6577-4154-8d16-d1908b4c579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39526ebb-b56c-4078-8651-16b8c7a9757f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c524bc0-fd9d-48f5-bedf-06975f2a5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81875a3a-b3dc-4e7a-888d-554d42a7cff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a022c516-4999-46ff-9660-1819d51f3a21",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aff220-c6c8-43f5-9b3e-2911b14962a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23ed761-01af-4ed3-8dca-986496818fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d048cf37-9610-4b48-9417-1aebcb09092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cf7d23-745b-4a44-b9b5-ec608a2c29c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2432f9c-fff2-4b8c-b23c-e9f3d201c612",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeb39e8-8ee4-4ae2-9c42-9a8d7927e6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f090a5b1-b115-4db2-9d0c-dac93dafc566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabae5bb-ef9f-4535-b681-5ec27378512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebc2c1b-2c2f-41b8-a660-ff1f7758ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adebe368-2bfb-44c0-9e27-1e177d967e14",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802c8e2d-0534-4b5b-9151-b94ba7617307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d3deb0-1197-46d0-9377-df8121ff12f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822c1382-da23-40b4-8231-79aa62a27de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd3ade4-f470-4434-bfd3-4fe1f4e329ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfaf3ce-d0b6-47fb-9927-6dbeb76c5a72",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150df5e8-92c5-4f7e-874e-f036e3e86f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ae8e8d-c2ea-4842-bf35-b7c3f54d46bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76304b9-902a-4e01-b9df-b5c3ccd66df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e987019d-dbf4-4c82-ba98-f4032da72318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca18d61-036d-422b-8153-6cf902d0d087",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfa75d0-c214-4c1f-8073-f214099f2509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a470009d-b1b3-4d18-a6c1-8b560358361d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c9835-1041-4dcc-96b3-ee432b45ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3af1ef7-ebef-4944-aa2c-1db6dd7dabe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250a0b7d-730e-40d2-b916-48784c7ff97b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b9e31-8fd1-43cb-bae1-a6acc7221ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00fdded-7694-47db-93b2-a69fd7a2b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76d683e-d382-4abb-b217-f5a96a55bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2463558d-3d96-4aed-ab72-de61f063b986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c43253-2a8f-4a39-aa8d-31f3a6395d34",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a391e-cddf-4cee-ac94-93244ff7c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecede03-fcbf-4b66-8d2a-a3e2b2bbc656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a80a1e-886b-4c38-b46c-34e5c8b2082e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ff308f-7256-4cdd-b083-2c0249b90de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eb02f9-58b6-46a9-9363-ed6ab401a67e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886eba16-6053-4349-a5c6-6673b9260c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8716601f-1b42-48dd-8bf3-3b5be9875f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6789f1f7-fd20-431f-a459-3d40dcc0d40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a226a626-0c30-43f2-bfbb-a85969a41dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e6a47c-828c-427b-ad3b-0910be240661",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754a41e-646e-484e-9dc5-6a3e4e806d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e86f09-58fe-4ba9-9af3-b320164e022c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b6d339-f39f-4f85-bd17-f689b3541001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a154bb2-2f1d-48ed-b62f-948d1fc6c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf0b310-6444-4c27-ba86-97ecd7be3d9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d9dbbf-e015-463f-a538-ade459f3890f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6170acf7-c9b5-466c-a697-268ef16beb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8114435e-2694-49a6-8a40-b0eb0d28a0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af686288-f857-4b99-a066-98b5161255b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcc14e8-1e4e-43ed-b747-72ab44afff93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519aa659-214b-4edf-aac1-6d8cdcae7620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbf302f-4754-45a8-8662-f6652b46ae56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2d5f60-fa80-41b9-99a6-106bfbeb9b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79cc13a4-310d-41a8-9929-bafdeef331e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e1fb0b-c3dc-440f-81f4-21001fe9171e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445fea4b-a736-42b9-b1d0-e74cfb6a757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb55a1c-3e46-42e3-979d-c1f3b680006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7e01d2-d2e2-4008-8259-557cc9eb843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "390b33f3-d4fe-4295-8bbb-03e996516fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87a9faa-162c-4d6c-bf7b-f60822f53888",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dacae62-7854-492c-ae99-491850b88025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f131819-ff79-4f20-8e83-501f0c30361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c65ba2b-04db-41eb-b2fc-ff9e8abc52bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a89eb6-c399-4041-bbd9-6d056a300d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f9c16-34dd-47ec-ba9b-7fc3534c57bd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a1a3d3-13d4-462e-9db8-d4e3510f1a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcc4c21-bf3f-4e65-8984-7e4553b13631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7800fac-2049-43c5-8827-d5709331360d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfbd04b-bada-4916-b4ef-093071d4f799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784f1e20-6927-45fa-bbf9-750b8cedaff9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a5956c-cefe-4fe1-af6f-713db8a57719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a75e656-5796-401f-9e60-f483d3a8fcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a775b1-2d86-4b7d-b04e-4ea0adae9a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c549a8a7-1597-4be9-95b9-56257ea01ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077dd42e-0842-4e7f-83ca-1982a7786ff3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de3f62f-38d2-4de9-9c6a-f5b9c50c4059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45b5000-7564-4936-9b7a-8e7b517dd650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a52a6-c70b-4dbe-a80f-23bb15a727ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e211e014-85c2-424e-9d6d-1d5a6e20f18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0128f758-90cc-4ba9-a1a8-5a8c6f27ccf3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0a5d70-4a72-418b-8ccb-398122a8bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f3030b-6fe9-4584-82b8-efb8de803e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6af8f9-a2d7-4739-9e6f-173937610942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6288f197-2aa3-4b24-983f-dcc56709e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb392ce6-c300-429f-8f83-c8be2fabcccb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72b7fcb-9b52-4173-9756-43cb56f0619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f9708-1f65-4e03-b02f-2ac5bf79abb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2ab58a-310d-4a92-9187-1f80e72edff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3161ff-11ab-48a7-a1c2-89ab3b11576e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6defd237-12c0-4044-ad73-7f08bf2f259d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884222b-0017-4afa-bec3-24bd5113f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644ea51d-b5bf-41f6-9310-00cc143798f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26cd37d-2705-47dc-af0c-bbbccfdb394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51dd17b4-a99e-46a7-95d6-d566a52e7d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687ef32c-a3aa-4189-b8db-b6e0ab6089d7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaafc099-967e-4c5f-ad38-0293f0001fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f29859-5c2f-4efc-a78b-bf2b93fa22d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c301c197-3d80-4ccd-a825-d31493fc1d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1529725-7368-4165-a121-d0e780a74902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7080de4-ba46-42e0-bf7e-3c44e2ccabd5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b726b2f-3ef6-485a-9981-e251da02f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924a5f45-f95b-423d-9440-f749197eecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d301a3-f527-4cb9-b80c-8a4f0163d9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96725386-7ec5-4820-b1d6-382680b4767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02308b6b-6117-4f34-938d-6afe207ae84b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936ffbb7-8f38-4653-86cb-9b5c58bb61c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0e3315-195c-40fb-a4b3-fa62100f5824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3603d97e-b6d3-441f-a834-b73e7067b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43702f23-bddf-4d2b-a000-bffba3aa2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0259b8c9-d415-4310-8842-6b697117e6d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e586e6-17c4-400f-9df3-a44db03671d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf938da-9459-4762-ab07-4c0ceaf9b0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c29d914-95c0-47d2-94fc-2ea72e952552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de3bec9-01ce-4ec4-9bb4-ec75274740f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7236749-d577-47da-8b05-26d84b96a21e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66503b6b-4375-4b93-88f8-af406eea9e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27ee75e-bbc1-4738-8278-d3edca95ed99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1820be0c-dab4-4b0a-b111-af46e1836be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68d7e5d1-d89c-413c-9c8b-7f8c63768a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9061b5-942e-4a9a-a4f6-3afca7a947ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a799c208-5136-4fdd-a9a3-41cea70adb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d175339-5868-4720-80e4-922e99b52e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a3d6fa-430f-4bf5-aea3-b2bb9f19f032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac31e77a-aa81-4774-8fce-6dc676c92aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a831c6-0bd6-40b5-b78b-b940a41ed3e4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f810caf2-220c-47ed-b896-e76b1aea8904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05671d6b-7f9b-404b-b71f-11b08f99bc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a1bf5e-5bc4-4a78-a47e-c5ec991cd68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c625f0-0145-4e59-8ebc-b0c3ef3bff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3266f31-bb2f-4ab3-93a0-0fde471fdfb2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad40ab8-d947-4873-a75f-f9e4adb46155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d105649-4b69-435f-ac43-d55cb3e12785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453d79f4-8b25-47ae-be00-af66870adde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5042c1d3-b0f5-4e46-86ca-3b8d21d1a644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6fe5b2-095b-41b2-8ea9-3ff5890f318a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2417f8-ceea-4c19-a30c-28302f8ed8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa33800d-4593-4a38-b8f3-a5f40b5b2c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f4e70-b478-476b-ba99-54ba023505aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd136174-13fd-48bb-9e37-90045bf702a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f5557-288d-4db7-a323-be60c644fb11",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e6bd64-295f-4f76-93e0-975fe0fc6514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97903a8-4423-4762-a4e6-849b050dfda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ef2711-05f5-4a30-9b45-817b22732ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d17f586-94d3-45cb-b065-56cfd8c8e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e198765-da1e-4fde-92c5-a24730b9ef19",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32476c6-4821-4290-95da-cc56422bdb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03119ac5-9444-481d-ada0-5b87d1adb004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997a45b-c626-413c-90db-284d6aeca852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1993230d-3fae-45a8-95fd-312dfa9669c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4bb36-c8bf-40e9-8e5d-989dcf3e7923",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9beb17-2377-4ee8-aaf1-dbdcc605ff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dc7e20-1140-4ba5-aa09-26c938fc43df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280f82d-9a86-4400-9b7e-722ebab1d878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "597a4bd6-189c-4df9-b82e-281e73854040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a2decd-5b2c-4142-82d1-a67215eb5a8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f49dced-1995-4b05-9aa7-b202d0ae6104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bc3a5d-e45f-455e-a465-f235577d7cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2995212b-d668-4880-a9fd-0b77ad02ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5219baf3-7fb3-42f7-bc87-0e7f8d7b3165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce75ed-7675-482f-87f0-53e6e5c63985",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe1880b-f799-4aea-ba7c-24e4e25015a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa6804c-7160-4b3f-8e3d-955bd27d342d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907e583-553d-497f-8651-d8b3f4b9014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31077ae3-4f13-40eb-b39d-614e7c2aaac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeabf0b-e368-4b2c-a681-97ca41bc8f4d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bba5603-2fe0-430d-9ed2-25cc8f2d116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591914c6-b265-47b0-8ed3-3ee10887319d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378cbe57-f95b-4fed-bfa1-14594e088cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c1fc7b-09f9-4bb7-bbee-5340b0699e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb5be7-d833-4434-a387-6516d6b0a47b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f0a1e1-ac91-417b-8e0a-ec731f3a0d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c37133-52ce-45b2-bead-a8cb7e5557b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb1d2ed-1b59-4a77-a275-5444320a4fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c86667-bdd9-41ce-8762-78f6b06e4469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09374be9-5ccb-481b-8a44-b03768eff0e9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa454d-61a2-490d-9c42-62c0f566df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c8adea-de6e-4550-9325-1ee6bfa9221a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277bbf4b-dc8b-44a8-97ea-2a507670cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee464767-f209-487e-8a2e-b73b88f40f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082c04c8-1a6c-44b5-b9ba-e5907a4decbd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f457b377-ee06-4b5f-902a-aeeec737ff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6013b2-1110-4d42-9d93-f1e2e90fffb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede69285-e9f2-4c2a-96dd-56ab30e53c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c462a3c6-8f2a-43be-99b4-55cacc95693b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef135798-a073-4d39-b033-565104eada82",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8cd516-458c-42f0-9150-505f265037bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc93c77-2e98-4fd9-a35d-e082eeb16dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a74285d-f67f-490d-8fae-eae71fb5e629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26bc5338-2936-48b6-8fb7-4cc3b1a6600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7a11f2-563d-447f-aeb1-c3572280730a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0443f47d-527f-416d-b5a5-3d6f0c6302e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3c20be-acba-48f0-9e05-0f5d791a5114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b05a71-e454-4624-b1a3-5251969f111a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a57b44-8a9b-45c8-958c-b8cb1502caef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8128169e-7686-440b-80b6-2f60fefc3093",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfdbd88-4e6a-4efa-942c-ebb144c267ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8eaeaa-ce42-42a4-bb8e-31a23d8622e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70a4a2c-b566-435f-9095-f8ff4d53f445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "02950622-ae21-4cf2-8f26-bab0d165b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c23ad40-1138-44ef-9137-a09084c4d4b4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fcea53-6797-4983-b1f9-dc769e88ea3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c08ac-6792-457b-ae31-71e67a67318f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a060f1ef-d324-47a8-b13f-b75b2586a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6c64ea-668e-493a-9d75-e0d6f3c2134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c7fb9f-282e-49e3-93e2-650087319cd8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a0984b-70c1-4248-9fa4-b09c6a958d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8514a9d0-6e81-453f-b333-a75359368e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f67767e-4bd9-4c0a-9962-c47a95d8ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7e73b1-1dda-471b-834c-2a54786d6ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aecf35-28f4-4d87-bb5b-cff29903ef64",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b453713-99a5-4344-9307-a8855f0f9bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44520b0b-1f5c-4378-b552-b21c3aab7c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dc6607-ae46-422b-8101-0e90815b0071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8861aa27-4052-463d-b876-3c10d3dc2f00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "129cdd06-f9a6-4958-8cc9-4c993228d36d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f03a0de5-de16-4e4a-bcf3-bce344a4998c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8729178e-37c8-47df-8c0b-12ebf9df9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d776983-ca46-46d6-aafa-3991770afc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c02cb0-2083-48a5-b997-3d8a473b4303",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea2a58f9-6278-40e0-87a4-54edf5b584cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f193bc6-c2ed-45ff-a3af-6790b2772bfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10ea8cc7-11ba-4106-9569-7b1ca2444eb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c60e75a-0fe5-442e-8bea-2673eabacd6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64d965b4-7408-40bf-95d4-e33746279d01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7a7b9b0-fc2a-41af-bcfb-4b77d2dcc4a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a77265e0-7b6b-44a2-b50c-266b275b3e6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c76d056-db79-425b-a2df-15db3108f976",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e71ca2e-7df9-49e8-8cea-623b3928c1c5"
                }
              }
            ]
          },
          {
            "id": "4ad6277f-9201-43de-bec9-3824d7be932a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60747726-e270-49bd-bbc5-a321ec9057eb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05a38be8-6605-4ca1-ad5e-98127747e5d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "708985b4-33d8-4e8e-870f-35c25f80e7a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d1e98d-d1a3-418e-b190-fe7f858f5371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f03c70f-f90c-4c01-9755-4bdeb7010f49"
                    }
                  }
                ]
              },
              {
                "id": "0d0fe698-9cd5-427e-8d35-0f0ded26fd3e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f841e0e-9be1-479a-9fdc-76d2cb0e52f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "002644e6-c645-4e8b-8e5a-e45140114b98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0140f5a-80d7-4b48-a617-443e9804b9b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93a7324b-de91-45f2-83b4-d6e1e6039450"
                    }
                  }
                ]
              },
              {
                "id": "a70471b9-c65a-4965-ad95-9d0fc510c44a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2552d198-5c56-4405-8d5b-4751671a5b11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f96572b5-0c36-4013-a85c-4ca41839672d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a98c3327-671f-4c6d-b3eb-d5cf9857d77e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7458c327-ce04-4e86-9dc9-9fd183c19bf5"
                    }
                  }
                ]
              },
              {
                "id": "9891a435-74bb-4288-aeba-6efbe4cfe939",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9875f890-04a4-4070-8380-2c8bbf86d415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5981382f-8953-4088-95d5-3bfa5d06060a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3282438d-51b3-45e5-9b49-9e4a0e6ed780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d6213832-4fec-47ba-8885-1ea96a8c3304"
                    }
                  }
                ]
              },
              {
                "id": "e9510a89-21df-4db7-a74c-34e57fd9943e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3856620-36bb-40ec-8637-18d440138707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5b0c9dc-ff92-4ecb-871d-c8252a4419bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a4a7b12-fbdb-4380-85df-06974b77db6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "abf38f99-0521-44d2-aa45-1cc5e4a0250a"
                    }
                  }
                ]
              },
              {
                "id": "c6fdc52a-ec40-49ab-ac21-f35eefa38d23",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e24c22-a282-490c-97f8-9c085ed42e0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d7bbbec-0d54-49d4-aa1d-e0ad3b913c9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e14676ec-e270-4089-9a09-67fb112ae1aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8ba5d5b-e677-4be5-9e23-144ba15eaed3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2326e4cc-4b40-4ca1-8d66-0a5c343d201f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cac9a12-afb0-42d8-aa63-b58d556846aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1923e36-beb0-41c6-a298-26418c6c60cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fa9d008-4994-40d1-8701-122097c0f3ca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ff57108-3a4f-48fa-8f7c-03adb62296ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "da800eef-31db-41d1-a312-ec6e53d83797"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afc1071c-1f80-401b-939e-0061a8327e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10bcae18-2a91-46ab-9ff4-c919a23b6f6b"
            }
          }
        ]
      },
      {
        "id": "3e18d6f9-5953-4b4f-865a-4ab6e7315b1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b638785a-057e-492e-8b31-939d5f3bd117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b45a112-c09d-48e8-aa99-e4ffbedd13cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77b68b1e-5812-4828-9736-d56ca37546dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb83034c-b3d2-4108-88ff-dacf47c2811e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ae90bc-b112-4237-abfd-e9ed3878e808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51a08c2-a938-4327-986b-17c7492a22f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39de22c5-4a71-4e13-abd2-8a6bdcfa836e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93176306-92f8-470b-8375-0db8dc066d26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8ec59-8c52-45c1-8fe1-675f00290af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b547140f-dba6-40b6-8072-aaadadf0611e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c13b14-a040-40bc-afac-be016419eaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ae854e-b51b-4126-aa7e-0bc99b2c8599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b768424a-ed63-44f8-8c27-ee178a9403ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659b8d35-c7ef-4794-ba14-4dbca9b1c607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f335f1c-15a7-4044-bf47-f9cf00a9cab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64135377-0c21-41d6-83b5-ce8034cded1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0622ec7-ee98-40e7-b29a-c2c856b69e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61818d4d-b880-4f62-a381-b11fab01c1aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee143032-bbf4-40c6-9f67-84197dab388a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91eff863-eaf0-496a-8908-20913e454f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993e1884-3104-4af4-aca1-9afc261fd695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1fff79-bb33-4b74-8f59-0e6773e52a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dec527b-cc52-4a01-9025-b7e405f914b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e3a710-f7d0-4179-9a81-afb26b5460ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a58955-f5af-4136-970f-26202b4260b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2413dc6-d0a6-423d-8105-54ddd34433f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51de76c2-9d6a-418a-b0f0-98cd9d8f6d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ce2fc7-f029-41ef-bc4e-5c5fcd0b07f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2448f9-b847-4650-be58-be2996864ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97993f6c-35a4-4b6d-bf20-3fd63734fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7012b3a-9054-4aa9-b443-afb7cd16f120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a13751-8ba7-4b36-919c-facb92217449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7361e352-dcc9-437c-bed0-ce899a682bad",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03626d-dfb2-4a6a-9db6-613e27e1ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f04473-9d0b-4c44-91ab-050f19a859b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94f0b8-c506-49e2-8072-2651d439b6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abb333a-258d-4a26-8f4d-cd5811591d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013c5f56-9d71-4c20-9f6c-2388d6904f87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce05709-9520-48db-9361-a87e6104e97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128149a-8f89-4e23-9445-cfa93f428f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc8ede-1777-4e11-8aad-991d8fa25126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0702fd3-86cc-4df6-bcdd-65a07cbf8834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32acb88-998f-4ec7-ae75-a8af82d9d25b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a1b935-123d-4333-a57a-f2b39b0a951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86612bbb-b5ac-465d-96d7-4eca29afdb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b56f828-b1b6-4595-b767-73edb39fb2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ec7cb5-3f54-4002-810f-636791a124c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe0e6d-0f91-45ff-a3e1-c24fa8591f43",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2675cae2-190a-4196-b38f-27362f017a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f110d8-15c5-4c57-9776-eea180828661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533e5be9-d857-4182-aabd-8dbfcea6e871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0e4c48-5076-411d-b219-cd19f9a8279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc53d1c-a66c-484e-8f15-a9dabc5cc621",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee960d5-7ab6-41f1-a5e0-b3b9356e92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18579d39-20ba-4066-a3ff-d097411b0734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73fb659-9c34-40f0-ac9f-7324f7bc4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8d862694-c712-4a7a-b28d-aac825463bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2446ad-42ee-4ff0-a10b-01f55208995b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fcbe38-e7e1-4b27-acc2-10b3321784a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3041810d-5f69-4885-9c69-5d7f106e1899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c051917-22cc-4168-8655-d58731d33a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d05c869a-887e-4fbd-ab0b-770f3ecca6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74f0a38-c70f-4bb5-af20-e2d1c220a3ff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc650c7-7c14-48cf-8272-52ed3ec5313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053abeec-d77b-449f-bc27-c64e323e9448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f056439-3c42-4694-9efd-ae497b74701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d224e375-0ba6-45ec-9f75-7cd7ad31472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b322bb-c2ee-4823-9132-57a7e0c66cda",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f0277-963f-4bb2-b0e1-79921d1f6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2e9f16-8805-4200-abbc-e9b01a57be87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3070059-c3db-4354-9def-153457620ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9307d5-8c18-4187-b82d-71fd835235e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138dba0c-7687-4e79-bc03-559ef7c270f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d874c2b-d791-4340-901f-1f74809aca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34e9fa1-cd4e-4f2b-b3e0-450d0902a5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cff13d-6fef-4be0-8745-5f19ae947997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5f6441-f5d5-4835-a46a-2342ee44c206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ef6f3e-7640-4f14-823c-04326fad6003",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25d08ec-5334-445e-aac9-3fa8d035412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb4065d-3289-4e09-b772-e668ccd99cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa822df-8463-4283-bbdc-5427617792d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad44c62-4073-4ea1-a7dc-09cacf1444a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190dbd16-d9a4-4101-8390-89b36d24a40d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a92908-1741-488d-8bf2-98f58061ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c531ce6-c47c-462d-9a4c-6c91767c9182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9922941-1d87-4324-becc-8d68e6998af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6f45f0-1655-4f6d-bf80-b123de14815e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7e670e-6f53-4bad-86c7-2f96c6399310",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b3dd39-36ab-49d7-8cec-be494491410a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b92655-2e0e-4156-8be7-1732dc801b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d00de5-ff8f-4c73-ae66-5829cbb87a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a71bda8-46dd-4638-816d-42a6c28006c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7843c7-8117-4de0-87ed-f1e69b362fe3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdadde71-6f70-4826-a644-7d0f4760a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bd6091-f31d-4d2b-a159-dadc743bb840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa678b97-3c31-40d4-98cc-79411cd9f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337adccb-ede4-4fee-8ab5-e8251dd995c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d8b6e0-2c4d-4ac7-bc37-47a35e3f19b8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b497cbe-a530-4653-8dd7-f3895cf5187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5fb21-2889-4f80-baee-6ed725131eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6289c052-92bb-4651-868e-d431f5143c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5262870-9050-4acb-b084-dcc5a1cdfac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a38f516-da64-4b42-bbce-89d3bf2aa42f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0a04de-b6f1-4447-84fd-30106a25a9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894cc086-39a8-4640-8eea-a4c59ea58801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f4e702-1e0d-4885-9a92-aae5c1b70846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1d7341-7705-4a2f-a635-bd14065556e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4399678b-b471-4b62-ab5b-ccf28032a431",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9cd717-6517-4897-80e8-2ba3f22b9b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d833f9-667e-4ea8-89e2-fbcc88fa477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7292fc-275c-4c14-8315-93df9c5a6739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac1d23f-f0f6-4a26-ae8b-938cd79c033f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5795659-2ee1-49a2-8264-a1f0700ab405",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01523f8-9f39-4c52-a9e2-f85c1b72b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c257838-088d-4f1c-8af7-92a9f9d2bc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dbbe66-a808-4ce6-8f66-ce9eb5a68cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a15cbe0-2afa-40da-b982-2df5fe80396e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff1fd5-376c-4356-b66b-48c193b92456",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78e636-53e7-448c-92fd-47e78738e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ace214-ca80-4c68-8151-0e0f3a59c45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf690932-7846-4f2a-8785-f653498fd042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "578a71b7-548d-44c8-bcba-635638b1cd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc9009c-1b82-48af-9da7-9e55e362bff4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223572ec-6514-45a3-b3d0-028251250980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a125f996-2dcc-4550-a882-86081288a0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45be6a-0126-468a-bfa9-ab381b591629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13cbaf8e-f5e0-4f57-bf55-159021162fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af760db9-4247-4188-b529-b95718f03ce2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d898157d-6aa8-40a9-af33-6db5bba480f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a1ce98-cf2d-4e79-a044-fb53045a902b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1cc001-2220-46a8-867a-0765e688bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb3db8-6e8e-4821-9953-96e946bb924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f70985-c36d-44ff-af82-237be4413738",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ea6580-b6ee-477b-8b41-19b2f0d6a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433d446a-d5b0-497a-8bca-e65a21412a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72a2f96-f091-4c16-abc2-9f72b4366283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "877f1c66-215e-4783-a24e-a9f03cb8ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a6a9b6-096b-4307-8341-01ce3142c579",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379903af-1e8f-4634-b8f6-5314eb080191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ced057-13d5-4102-8260-662ea12fe8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea17a26-e754-4e80-80e0-25b8331675fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a010e930-26b4-476d-9971-1b104df0a074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9252a0e0-6213-4507-92b7-28f171b323b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1faef8-2759-4fb4-a1d0-6a5e243004d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bfaae3-6c28-4ee2-a47e-4bdb2ced35f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f916e00-2e77-46e2-afe3-f7b6d934779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d5b67a-6011-454c-8186-8f5b60ee1b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756faa7c-e6e8-4ada-b4b2-062d487dd87e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e0c73-f064-4043-8d89-a3edff9d34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddceb697-2039-42aa-9fc0-324a635e3d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a769ab50-5b95-47c9-8ea2-e534a4c001d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a765b9cb-8b30-4a27-8935-bc405dd1c69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9c98cc-8262-48a6-a619-16b69de0c3fd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13255615-8fcc-40fa-b334-a63336f3637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba7f579-beaa-47bd-a080-8806ba5ada7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca964d89-1e35-45ee-8334-9246272617da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa779ad-012e-4de4-9d98-b9db1fd0fda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb11e64-2aaf-41e7-a127-319d1e130428",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18e7c7f-3c01-465b-bcff-deb88e7c6924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3412a7-e262-4d29-b8b8-657e6872aeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130ef428-33dd-443c-bdd1-2196240d7796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b891dc6-e635-4569-9a03-cf587cbb290f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d942272e-ae49-452c-9742-9b8bc379dae5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74a92fdf-0b60-407f-ab7e-ff31d18cb612",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885bb7c9-3ee5-4c63-aea8-c9d763570414",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "08c3a62a-5c1c-44cf-83ec-50d8ed2a5f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552ef3c7-2f77-45c6-bda7-a04e886e5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35172967-d2f0-45a7-b575-d0f553cec00a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4101c3a-cc09-4098-bff6-34d86d0f0883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "234b7553-a5c7-410d-9d6d-85a3cbec5784"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b63726e1-155d-47b9-89c9-3296229a5cb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d4acf00-8977-4d05-9f54-2e24ad704782"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cf11c0c-4f51-4445-b458-aa322643a33b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca02142e-b911-482f-8005-1e1ef11336bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e9afc4-ea05-45fe-be6c-7f7e20822ed5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bcedd84-32c4-4f92-807b-b7eac99f20d3"
            }
          }
        ]
      },
      {
        "id": "ed8ea43c-10fd-4f8e-bd1f-4c048da53e48",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2c3cd1e8-d299-4be8-b358-fc7a08220c7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27d37485-9c74-4208-b9f5-fe414f2e155e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29fff9ab-4287-496f-9fe5-2bf6a6cd24da",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a5339-dd5c-4247-a498-bb57d3504f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68f7542-d55b-4bb7-a523-4afaf63ef672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee286472-0842-4d6e-8496-a384a0d3f2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "000b7dcf-a22a-458b-9fc4-d98e4c230c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69387c4a-4278-49b2-9a8f-26ca11b8615b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebedd0df-aa62-4d51-a4d1-f443035d3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0474bb-6a7d-4560-933b-2579dd94294b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd367d9b-0ddf-4197-a8b3-8e09f1900448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1e48bd-36fa-4a77-90cf-4311581211f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2f11da-9912-4341-9108-158e6a70c8e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f444ba-c901-4e88-b609-e13577e51843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1767333d-55f9-4b47-9606-b386143f7731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84474d1-fcbf-4260-a4e5-c0c93a596ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81436b0e-ff22-4e43-90e8-4b6faa3cd644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee037f98-876d-4604-8b6a-0fd6cfc43be4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fdbd07-4a41-448d-b7e3-6804f2230835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b8eb76-7a3e-4ca7-b06d-e07f17ed9ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56def0f-8df8-40a5-b657-efb6b2e2daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5909bd4-8852-4f6d-a58f-ce37590b31cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227701d6-1451-4c40-9135-25372b0ef288",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db770c-218f-4c52-82cd-a6c51eece56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86868854-9c1c-4560-b949-5a2640a936aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9715fa10-1e80-47ad-ada0-1f1d72a861cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18dee518-b1c7-43e8-8de5-ddcae4822c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ffbaa1-d75e-4bcb-a3d7-68c6327b3137",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936270f8-4218-48d3-ad87-8a78cd06cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1117fd94-4cc6-4be3-a758-8e883b314ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467e9c31-c707-4285-8b25-f88fc8d4d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf125c80-97b0-4d3a-b9ed-e6e1fdbf39ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dd8c2e-eca8-4f0c-a52f-e9b4865d67e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186fe10c-8b91-4e80-8e12-2b091b4c58e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a40b89-5e50-43ee-a128-b67a3c488906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b986ab-7261-4aec-ad76-48ab6bd43203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a838393d-00cb-4c07-9ff1-418dfed40c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e3a270-c11e-4dd5-8b71-79e7b50a6145",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1285d959-668b-43ed-8e08-cec99ae7cc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cbf9d4-bd86-4da0-a93e-e9b723adb8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc049aa3-3438-40e1-bfc8-e0eb674e8a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8831be8-b3b8-43c1-879d-9e09695ffb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b650adf3-8f1d-4fec-bd0c-ddd83334cbe2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d0d78-5164-461b-948d-29778bfbc10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e043703-7905-4128-a0b3-2a77e32989c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e413bd0-eb82-4140-82c8-bf87060b0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8107d49d-2fb7-456b-a2ed-30a4ed38f765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc9e3fe-eafe-472c-82e4-f9ed3559dba7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e17694-5bf1-4755-8ee5-b56b5f43740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a1949b-b58f-474b-a0cb-d632db1d10bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1d174e-c661-4a7a-9ad2-903ba7258617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61105076-2e85-48ec-ade9-9b81f6d840f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bf9a41-6f5d-4ba3-8dfd-7aea1dd1f273",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d4b742-a58e-41a8-969c-74589ed44ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b806b5c-21b4-43d2-82f4-137fc0a3945b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00293cd-c228-45c9-8029-a0fa0020ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3480a5-6278-4330-bc8a-30c157a6919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2b90e-b942-4642-aa32-08958a87c960",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56e289c-1442-48d0-813f-45531ce31ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79e73b0-baf1-41d6-af17-80e947ff24d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731ec652-307c-43e2-9d2d-f363de3898ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a277f72d-cc47-4cde-80ac-a308c67bb824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb33e1af-b10d-4346-926f-5f8827703cf4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c58d29-490b-47e3-8ac0-f6306175d111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7038f3bd-7b93-4922-a162-26d78ebd65d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5bbc6-c147-4069-98ae-7bd4b05e613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d54436-7925-4e0f-8dc0-1069832e414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03166a1a-c605-4e07-af7f-9faf5fa6ba2e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d9882a-9cfb-4cc2-befc-5fcc4cc6cb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e388619-421a-4bd1-bbd8-161cb3cb805c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d309683-3073-4c6c-8369-1f67d54a2d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5745f084-0178-4e4c-a93d-7d95fdb5170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41628ed8-5350-49c9-92e3-82a52fa6a1d2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5ad312-109b-41f2-9eaf-8b0444f2abfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24ce828-559e-4742-b7f6-5df69db5beaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73858025-a88b-4d1a-84b8-d04b9ebd309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "60249619-fa3e-4c58-9cc9-4eb8dc27681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b95848-4802-4ff7-af28-64e00e0b1e41",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cface2-d0a1-48ba-a341-fc2d988d0710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ce6c33-004a-45ea-b2ac-9fe991990805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3826aa-6a4c-4cc4-9c44-1823d35112e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aba43ac-bbf8-4bfd-be10-ad06e980079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37735849-7621-42fd-bc2e-b3d9bf1ac43e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3861a5-953a-4504-b283-043668d1649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fcae26-3f42-449f-87f9-d5d736c37d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34efcc3-462a-42be-b80c-9e8585d09feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e3078-51b5-4920-abc0-c61465f43d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd422a-2c22-49f2-90c2-04db4d3b58ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77117551-faa8-470e-804e-53af590b4761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbd8b42-857c-4dd7-b36d-69f5101e3e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e46643-3cd9-45bd-b408-1113cf2e3af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a2b671-7c3d-4665-ab4e-caae2f5e206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de183f2e-03e1-48ac-9894-ef4141d6e8a5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b063ec9-730c-4ee8-88e1-b4790849424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd81a485-b981-4a61-a1e5-dac4cc2eeb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06ebfa7-c34c-42c7-8a72-ab74db78bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e379df-dccd-48ca-ad4b-b5cdd95144c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f4cd5f-ab89-42a4-b53e-13505d745ac3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdeaff2-de2a-439f-81b9-5187db846e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8756f3a0-ecd0-4247-9728-ab6812d1f856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b1c6e-84ad-40a5-abd1-44da5eb2a0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe816f07-e160-42ba-8127-be18561364be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c7a384-ccf3-468b-b5b5-993df1526f0e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f31cdcf-d91b-4b55-97b1-142ddc409925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ba8691-fe34-4056-bbdb-f21a970780c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97bd301-248a-4429-8900-2315c5408453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd523a2-b111-42b3-94ce-cdf864a10822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae63fd5b-7d20-45fc-a8b0-d249187f6281",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf3b1f6-ae52-409f-8a53-cbc5fe13f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c141a661-c255-41eb-8d83-17dbd3442b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a96949-d36b-4cc7-a2ee-4db337a9ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed958906-4d96-449b-a6e8-59221f055dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e186f672-1e6e-410d-a9fb-3bdfa378f527",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee074765-87ae-480c-a79f-46c0344bc688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12d1481-50ef-47c3-b626-c7593b310703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d28440-01e1-42e4-9c5b-e7aef0de8346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c55af29-3add-48dd-a1d9-f838ebaa4ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043a37e3-cb4d-45a6-b8e0-f9e3cda7cb17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13170024-473e-4547-9934-60332ed8f23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3bbf5d-1b2f-470f-a6c6-ca26c143af0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623866a7-fc27-4759-a345-e2f0bf6858cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e2d3aa-a2fe-4f30-b434-78ddb9beb820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e267aed-87a4-4aac-913c-85eb047f190c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fd0e9e-e59e-4972-a583-082fadacc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd2ab77-9c33-4642-b70c-e1bb502bb4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a35033-44ce-4ca4-ada6-e5a9baa4ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a250ac-e26e-45f4-aca3-9429dd835921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a11f2c-05e3-4423-87d8-b18c5053ab6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c6a7e-4fbb-4436-b40c-95f6eef3e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2ff2d1-2c4b-4e2f-8fb9-389d0995404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0957f48-b51d-42d8-8a9c-4f0a55b5e4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d413b71c-d773-46bc-b5ef-1b9ec6107e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a2707f-0c3d-4f95-9fe3-86cf6968837e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb4148f-1ca4-49bf-85f5-2be34092b395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00947e87-5345-488b-aef0-14db6f523389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b772327b-f7d6-445f-a97b-91d4d406d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "370330bb-60ba-4a21-8b11-1ed2cef5736b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c8c38b-fca1-497b-b458-9e03360cf1a6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49561595-257b-4479-a9f7-a92877f57cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d5ed46-5e50-4abc-9a1c-34ee9fd5bfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f640056-5a63-4f5b-ab5e-1c648242ac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851271c0-e709-4c33-9488-210b6148aba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27838029-451d-4e88-a59b-fbe6c228cc07",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58058d23-1e96-410b-8a6f-6ecc1a70a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caae4982-61ca-4f7a-b4ad-97c3ed5c99eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff6c731-eef5-488b-a226-be1e8a45a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e150da-6453-429a-8ddb-db19cbc1fe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fd8455-8c9e-4b34-962d-68d52b8d4d8f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3033ab57-4f55-4948-8cf3-0387772590fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a97e05-b91b-43db-8a8a-99d5e1e6b6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4442fc37-3952-48b1-addd-f873bbc06747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b48c9d9-01f0-44fc-9f47-04e268967e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8972cd3-3688-423b-af86-c07a7978b800",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e51264-ac91-4fa0-9849-a562601ef8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7aa91ac-02d0-42b2-87c8-930491bd9048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f213d509-38c3-4364-9fb3-3c61a644dcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b098eb3-af68-4941-af54-9279c552afe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957d90c5-faa1-4d9b-a644-58d66fbc9d7f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b375fe-9024-4381-8b86-dcf022ff5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b159984f-2263-440b-8fba-f711f06f236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e87eae4-bb29-43f4-a7e2-342f45ff1c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb299897-a21f-4602-a1ff-6762a3e6e114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518d859a-2abf-468a-8aaa-754f457a4606",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e13b96-7cb8-4f1a-9efc-8ceb6b29d26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17491f73-c10b-449c-9256-90bff3d87ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb92de2-6977-444f-86b1-a611df623d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88094a7b-597c-41cd-adf1-f72f7380193e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c666dc3a-9fb5-4247-8963-9809fd4230e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d4c106-7a64-45d7-8dc3-0552c719eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ece185-d02f-4f8a-835f-317861c66ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a399fd0d-96a2-4b9e-9f66-89105ef6155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4707788a-1fd6-45fb-916f-8de31ea3b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a888b0-0835-4bc6-836d-5a3bd9723879",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94248a14-31ca-4aa0-ad67-0565716014ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0f7cf3-5eb9-4746-89af-e58c66072953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b522b3f8-d1e2-43b3-ab47-4a2414faadfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9b2979-de83-4b87-9e56-15d1531e3a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0b6d80-e11b-4754-910f-a1ab163ed4f1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d58756-457d-47d0-9c5b-7396df792766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7518439a-b40e-43bd-8ee3-453b0da54ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e707a-7027-4bb4-8eaa-70d8dcfee079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db826248-b1ef-40ac-a004-11b893033e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b1152c-0d4b-4b0c-b58c-9848a96c545a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a150cbeb-bea4-499d-9137-e805699b9dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc55879e-16c2-45d0-b185-0a54c411f195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a04c86b-b6f6-4d33-825b-3e0e102abdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b230d3e0-a56f-4875-8533-b7dd640bf0d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1535d0e1-245d-4620-9e9b-514fab86f54a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f42db6c-ea1c-49dd-8415-8b337877929c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1c6925-5f49-43f5-8eca-f78be17ce13d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2023ed4-2390-4427-ab71-2ad762af9358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e19e9b-662e-4a25-a60a-443e28de61e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fba7d7a-6668-4669-8193-aebc6b980d06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "712f38ef-d5b0-4870-a229-5161f5692e62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa81d48a-f66b-413a-b3f1-f42bb7b46180"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10bcb38c-405f-468f-a140-4085ccdd7789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a759765-8e5b-4eca-b844-297fe7f2b837"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df21450e-106a-4007-ab2d-c9d49aeb9b38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07a3e70a-39af-47b4-bb7a-8c71734d9212"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35580560-fc99-4875-8599-8b7444d6a7e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6962c2f2-2fe8-4fdc-9f5b-c83a3d2fb7e5"
            }
          }
        ]
      },
      {
        "id": "cb95f8bd-dcea-42c4-bb88-7c0d639cc374",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "427cdaa8-4449-4b6a-adaf-41102658024a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "894400c4-7106-43e3-866f-cbad176dfef9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dedc0bb0-d2be-433c-b657-a438c672f085",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cad62-2b3f-4f20-9b4c-7b4213b45082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1324df95-4627-422c-918d-a3bde7ce8eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39624f62-5cc9-44a9-a90c-2286b64e83fb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf0b1b4-c4f3-48c2-a8c0-30b7e94f5a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb062a6-0a6f-442f-ba4a-ffef73429210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f662452c-d867-4040-9ab3-6dd61de72292",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d89f911-6f95-426f-a387-d54eaabbee5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa3dd4a-90e6-4720-bbfc-0f6fa85edf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d722d3-624d-4645-9be3-e64d2eee6a1b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7018895f-42b6-4512-b1ae-1ebd3146a086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc8b19c-f412-4913-904a-548e6d291e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ed7371-9c01-46db-b09d-aff39db5c31f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d56874d-e9ea-4acd-9836-06269d7a91d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee397de1-d7c1-4dd6-a82c-d69bcd11aa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3d823-ecca-4297-a525-f8ccae6c1a89",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b99262a-9120-4b4d-8094-3dea1f9694db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b7921a-a3f1-4460-99cd-971268db0acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801d3251-1afd-4765-ba54-72e338d14c86",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da70a6c5-e99f-46c2-bd44-536b1c1bb3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc049154-0bbc-48f2-a055-c9ed9d5e8855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38287e79-b55d-48f6-b110-1953ce315718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88ccb38-a6d7-4154-8f9f-f5e77143e857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67178387-8837-456f-a97a-a27788c2db54",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b0b5d9-a305-4d6b-9e45-664e459756ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd16fa22-2048-409c-8e8c-f32fd342aa24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69981a5f-ed8c-4dfe-b354-75a5b8ecff02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd6a63b-5da1-4cad-b57c-437b36a45465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab69150-a488-4c75-a97d-eb688a5c9756",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f655e-5b8f-4579-af90-5c0056e1f16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71ddccb-d7da-46e8-81d5-237434531cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea8a7ce-9ed1-457f-b475-4c37f63ac07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a511de77-2626-4fa0-a7cc-ea86a7671b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b448227-6d3e-4b10-aac0-19f324491e2a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaa8c5c-8b9f-425b-a0a0-c0e5d18b8d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220d733d-a8fe-4691-b20f-933e95f2fbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b256250-559e-4f10-9678-08cefd72fa2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a02e8f-d6f9-424f-96af-9c30e582407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d46b8c-b3ac-4a0a-9506-5e66798c71f5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3be4b8-1a2a-4769-9b6c-5f828e46d123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356c06fc-7ab7-470c-ba67-6e40052b1eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e095fcd-e44a-417d-a451-be53187ba0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66970166-b2bc-43b1-a290-5961a182648b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44638b37-8b14-46ec-9ea7-12e83bc0b01e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391e528b-0df3-4c56-a827-286b2a5f574c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db33631f-7fee-457b-9210-9d32e5947c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509cfbf2-e0c1-4f16-bd0d-5d4260b76d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b027f7-5644-4d9b-90b6-14765318e846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa8784-a59c-4e26-9c80-9629898d3d6f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b71dc3-354e-4a4b-827d-e1dfd3a9fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725143d1-77c9-45d1-9a95-9a48da6a6b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298a2192-ad76-4dd4-8212-3912cafdbc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf18a02-b97a-4a6f-8317-43f29dd70226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a8c59c-177b-4d97-81fd-574b45d607e4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea156647-00e0-4f5e-b6f9-a9c484c84c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bb1f47-1713-4b0b-9ddf-1a5520dc21a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b85663-81ce-46dc-8422-e71a2237e531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ec5015-d900-4eb7-914e-b64c3fdbce22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55de3e07-30dd-433f-83ff-490bb2ae7399",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e6e68e-821d-40c3-8c50-83454865ce34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eec72a6-e810-464d-8f4d-b9b89ef0f068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7e098b-a523-4313-8364-e14e305c0b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2756243e-56e8-42cf-8fa3-d0658e8a419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c1bfe-e0b6-4c9b-a170-243e179340a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7083034-4b02-43ce-ba03-884bde012981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fcdd19-81e0-4b6e-a8ab-5c7f9f92089a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b854615b-3064-4bbf-90aa-78832a36e6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4e219b-55dc-465d-8c43-d97c6d903a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45c0fe3-2e34-4214-ad6c-35f6d4ec9c47",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a422c4-3f4b-4869-977b-6cebc3c51533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397fddb2-cd60-45c6-a419-c1fc35cc3064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96a6d45-dabe-415a-b77f-0d020bbd8e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af508a8b-a24a-4ce0-83b5-19dea272d8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27eb4c1-b923-4303-9688-61f547ba20a4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1984ee67-bae6-4939-a006-f9e690c04bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c2212a-e0d3-43d3-a9e4-fa21443863ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e1e11b-b455-4b9e-b5ce-cee8ec7d1caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f772cb-74c6-4f28-8fcf-016360a78acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e242197e-6dbc-47b9-b276-4a4439d4ac5a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c0decf-63db-4527-a6da-ad39ff9a2d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8f7640-5ac5-433a-919c-af23e39ee931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5376c4-f845-46c4-84a2-da72585dbd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15ae523-9fa3-4e39-a30f-bb85accdda14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb2c0b1-8b21-4221-9809-274ab5f9d889",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf1392-e1d1-4349-8a2c-b1747bbc4769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e19c105-a08d-4f39-9a3b-c32d216fa491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f452e079-3a76-4f2b-90df-80a828cb40be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaa7276-6f10-4a1e-89fc-79e49a551cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e0a214-ed34-440f-818b-515310ccd492",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceacc7a2-ba3c-45b6-9bf8-e04b27447d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea10e2c-1436-4347-8422-7fb7aca9f1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b9717f-d24f-4098-8fa7-a34641eed395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113244d0-0d9d-4dbb-8bb6-5f35bf4fa6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433b9db3-50d3-4787-ac4d-98347d989e4d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd685f9-8ec9-45f2-b38d-601754ff7bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359fdcd8-22f2-4c08-98af-167be67553fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c546e76c-ac92-40dd-96da-ad84790148f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a65fe3-91cf-42e5-94e7-37346d5179c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0196035-300d-4520-89c5-3b76ec8b718d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e4dbbb-27c5-4cf0-bc10-1dc69ad0d6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7afba18-55c2-4435-85ec-0214502eee4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7abd953-e2f7-4b65-a62c-f515aac9b944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b830569c-49cc-441b-8582-024a8ddbe1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe854e7a-348d-415a-91b9-1d75d03fb256",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f7284c-4055-49e0-89a8-01e08e0b1af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6eb34b8-3738-44f2-8918-0c0912783097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32971df3-cbb5-4030-8d66-d6b6beb768eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04289f6-5d5d-4036-944f-9967cb52177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4de3db2-dc32-43ce-a834-d72e3f2271ea",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773680b9-4b2a-4a93-ade2-4bf807667885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3edd839-93e0-4e45-a80f-1f24b20ee247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396bfb9d-f549-4dfc-8dad-de04a0b91294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0dfab8-82b7-4b50-a6e1-711437b013f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2efcbf4-e42c-4d2f-8e7c-71a6e61774ff",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5aff33-d9d1-4158-b102-89b20abe4d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e867a9-2720-4d81-bea4-c219180d85c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9869bfbc-066c-4263-b218-558a1b69cfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3971b851-7ec8-47e3-be98-080799b3ffb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2291cc9-aed3-4e96-9ede-e40704e9b389",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b89d06-a83f-41e0-b6cb-aad92cdb9626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80a5b05-9a70-414b-9f3a-e8d8c8dc158b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010745a4-bea8-4cfe-9625-13ce5f99ab32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ee998b-e8ba-4010-88ef-3fdcbb307758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a119449-a56e-421a-99b0-8fc5008c4ef9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a64bdf-edc1-4c7d-9cb4-ef83365d6612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be9586d-13b1-4235-865b-cacb4734e0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383b7210-7ca2-4a65-ab3f-f76e22871ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544c4dc4-c6f4-4249-adbe-2e07975fd533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afe9e25-9279-451c-ae42-d848d523078d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d2dbb4-2122-4811-b864-de86c4fd7513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd33055-6594-4d9f-84a3-0127d0f998d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa203aa4-5b75-4205-af1f-9d604fe3ae4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd498a03-dddb-4fdf-9a54-490ab42b68b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc73f4d5-bade-4073-ba47-c655dc61f650",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248a4f9c-0110-4827-b084-eb24cc57555e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0952663-0cbc-470c-b0fb-68d67b6ed406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e061f928-481e-4c03-a7ef-a3c2f49ad7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005b08cd-be8c-48f5-975c-8edb06159946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08586740-e337-4a46-8afb-a0afd48ba333",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad25a83-b6fe-4f40-8811-27880c5d042a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835a52f1-acbe-4843-a084-202c7071ce7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111dd1b-beca-4309-830d-fb24e31a1e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e01ea46-2da7-48f0-945a-71f93c4a00f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f577f3-9cfc-421e-a1f9-ec2ec1e2eb6c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e280a54e-08e6-4812-abac-73a6e541f1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe24f15-f71c-436d-8667-6a5687e70594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57594925-b689-4032-a832-ee5c7204c6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69513dd7-e923-40e9-9bda-dcadaf4bc7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8cde19-d222-450c-9796-6782abc852d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649b667a-dcae-48a1-af4a-167599d6981d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd414bf-57c9-4756-932a-e0db6b75d6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904b9c25-4723-469f-8486-2f60f4866c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50b50e9-0275-466b-9d2f-908b96278fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe437c3-b18e-439f-aad3-18cfccf1be1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ae04d-4f7f-4aec-b14a-b11c5635a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21c6210-4b50-4e10-9b2d-3105f86bbd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dab3ff-5423-4e02-bc9b-ab55a3d33b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3566e0c9-95e1-47fd-9abf-61e3c142aaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24281011-f899-4fe2-a9cd-ef07dbadc3e8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2353db4-104c-4c94-8c66-3ce5a94338bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3607e7bd-9d02-4f8c-b048-7df3faa02c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a6492-5401-4f2f-9dd0-39d4cdb1893f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b92c0c-bfb6-4221-a5ad-b8f6b8b9f0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240f979c-2ea0-4784-8152-5222f5df35f9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ba46f9-65f4-4ad0-8bbb-41bb19c79ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676f9ddd-b27f-460d-80c2-de8154be3071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88afe61b-6924-474b-926d-65b74b0d6c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2adfec-2d51-439a-852f-eea41e621f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146b08f9-a7be-47aa-b38d-9a728774e3b1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345e86fd-0c2c-4fe6-b234-4b9c5dc2f39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ff104b-62f7-47e6-ae0b-dc0aa33be556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dd1b3a-c4f8-46f1-886c-91941dcd1423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb9344a-b595-411f-8f1a-4f56c0763010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5634973-7c4f-466a-b648-9946d78d151c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5b9863-1460-485f-9662-41139f71db4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa874da8-7abd-47c3-8041-6551c941d930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3b5e50-aadb-48f6-9efc-09c9146aba78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f365ca47-781d-44b3-974c-00cd4230fae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261854fd-c1cf-46a8-8115-c3aa38e18100",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3738d2-1f0d-4ba5-90f7-3bf88fcceac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023f5ab4-ce8c-4229-a1db-8df9f9e99f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598bd1d8-4b88-4b8b-ba79-7ced746ed6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81499a8-6df1-4e45-9cb2-b926f187d192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45064a1-3264-40f8-9452-513458069072",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158987e-af1a-450b-9e94-b488790a784b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fb6783-3397-4831-831f-7378a09847c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931500b2-bf55-4118-9904-280dff747587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468751ad-0f72-4856-a3c1-7bbcdade21a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f284b551-6da8-425c-abe4-8a5537743f80",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809a465c-506c-4a80-ac14-e21a035d0919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22476b8d-9138-4ad4-8e50-5d68fb03ba09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb9a6ad-4aab-4302-8966-a3969dc1958d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f53b87c-2299-47fe-8afc-efdc0de054d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbd3085-7365-4788-b90b-181c4618044d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d81167-3965-477d-8e66-f2e0b1ea4244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2859525f-9acf-4d8a-b15a-ba759d610ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76bb84d-3dd7-4dc3-906f-4e6608e5961c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37fd063-3949-4dd9-a979-a3d1dcfb2b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151e1452-8f7a-4b8c-88b3-8cec187b5f67",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19df429-49b0-46be-a5e1-c6c290a61fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c6d159-d354-435d-a9eb-973319950a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926b94d-e028-49c0-afdc-df4790d3ed94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a709e4-24ba-45e1-9c23-d41b66304c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378951f0-16d2-4157-a280-1a8f8dc6b73b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a07b1fd-dcb9-46f9-b865-4a67eea459e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565ca131-1185-4e6f-ae8c-9e87d6785663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e53a3c-26b1-49a2-b745-afdcf4a8a4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80d643c-da4c-46e9-a16d-d0f8ab8dca72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d57f47-fc38-4294-a1c6-a98fd3fd45e5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6c192f-6fec-493b-816f-34071c83737b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a4b585-e65b-477e-8d75-f7afa45af913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef0f6bd-70cc-4e07-a9d2-20c2ba7c9e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9449932-c696-4f78-a28e-951cd216ea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b692ada-fc2b-4a63-8a87-2c6febef2965",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa441d-879a-4eb8-9aac-6d9a673d06cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83ba0ad-42a1-459d-91dd-aa7754216be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186cbad6-7530-494a-9c5e-b2412b3aa3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8513706b-9c93-4523-858f-0066229779d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5d5eb9-6eb1-46a7-89b2-1757d2a7290e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2938f2-1efb-4066-bb03-517319162c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48664c91-f3d3-494d-80d1-05eb5ba45c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c8d93c-aa03-44cf-bd97-3b3b9870b004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e027842-f759-4c4e-b75f-7ed5a2eb3d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48f2c4d-e70e-4b67-a21b-6c44f959f348",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153d814-28e8-4238-894f-52151747c340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dae9edd-eb66-4120-8ec8-7965753259e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18e6d6e-ca29-4df4-b6f4-11746b222c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e84596a-e6c7-4c75-8419-466269430a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95d7463-7e57-4c3e-8b2e-db52401e2dce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5330e531-13f0-4bc0-9fd4-8a9a281200ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e483b9-4c15-4801-a4d7-00f0bdec19e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc90e491-656c-438c-b368-c7e52e315434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35131844-7f6e-40b7-8e15-39742d893c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537ae2fb-918b-4450-b18a-3da7473bc17b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617e9756-1046-4879-b338-3ab7b9cdb19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46869ab3-278d-4672-b983-7413f3b5c21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0c2752-3bb3-4c59-9d34-610a9eb4b99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40569cb4-50ed-4382-94f2-20f72c89557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f502c50-7f5f-4eed-8ad0-64660756022c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85d1c56-62f4-434b-bbfb-d279a5c36c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc36b62-6061-4d3d-94c9-b36b9c17cc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b5300a-1370-466a-88d9-45e2494994b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691bb5c1-4ad6-4d1a-a600-8876d234b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb10b05-6ccb-4eb6-827a-8be434f859ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f833e13-f2ae-444f-b370-e6cbc7ec525b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a3b61c-6aeb-4ac2-b3c8-e74519ecdd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec5509b-9f42-40bc-bf08-e8e4fcac6d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f683a8a-ee8e-4adb-b5fc-11e058c838ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee92ac9-26a0-4d4a-90f0-747fd22e750a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e82fd56-ff5f-446f-8578-ef198bdce508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2129e03e-dee7-40e8-829e-aa4990e8f169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992dbea0-49a3-4ce1-8bf9-a57a5fb07fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19949156-c572-4caf-83f3-acca0dbdbdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15751afd-6e03-4daa-95b8-cd774effe23b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469adf98-b0c5-45c6-a213-78176e9db3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c353083-e369-4b99-a096-ddf998663b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c86c2b-4030-45a5-90e7-b96c7eff9845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aca5706-fda9-4d89-9b48-fb36692660e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85666802-ac74-436f-a96e-4c8d44068e8c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011e7a51-4e45-4492-b244-17273f4e3f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10670a70-004e-44db-9095-cc5eebf1fe4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b51a87-d05a-4c90-96fe-f1c16c82c88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df70ef6-ac85-41fa-94e3-910b57b7409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e9620-a674-4fa8-bc3a-de20fe33b251",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e8a486-a09c-4f56-bac5-f0e849cb1d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc80ff06-bc8a-425a-9fd5-2917c8c19d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a8fee3-8af6-4fce-a6b2-7045ace732ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1aeac7-7602-495f-865e-0653dfc89c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884b8b1c-828f-4d87-8fba-631a17fcb4f5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610de845-6ea3-41af-a398-1f081bb8212b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7aff32-10cd-4c41-84d8-f54c299590a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bec83cf-da96-4237-ba5a-457ed03d078e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e164552-9d45-4a5a-b297-326253129731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e8e97-6918-4b81-832c-81eba550658f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c71b9dd-40d5-453d-bf2d-477c70433cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fd250a-6fe5-44a1-9658-1672e75f285b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eed5e6-510c-4e20-9dba-80031fde1659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeaf3de-5544-4a9c-bf58-f4f534fa9754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9829b7-df1b-4e48-b335-9d3075d6f191",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87c92d-7d5d-420d-82aa-5ab5124ce5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1786145-f9ce-4c99-8cdf-1cdc7f15ada3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b08a36c-f5ff-4968-bda6-3069264446e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719bf8ac-f2a6-43b8-a583-ac6054abe38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab71e85-517e-4048-9851-3768c70656bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e18ed1-adeb-492f-9024-7b4b2f97e22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d130b07-8cb7-4c87-aada-c1324ce488ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559e2244-ddc7-456f-bf10-c47790eb8d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee50079-81db-4875-873b-ce194a671cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ed727b-6966-4c79-b6e4-4915d09cfd0f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fbdd09-a70c-4e42-bdd2-cd238dd2766d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1da05c-b985-49f2-a7d1-885f8cedf057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0e3291-e4af-4c44-b158-61f7d85c589b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4944d0-dce5-4586-a24f-e1fc32367725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af835f70-4dda-49ec-affa-a7afc504eafc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638bbd7d-64d1-43a1-9c44-6d495b2dbb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdca3f2-4f56-4f4b-a11a-18885fc28d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf33ae-3fd2-4823-afa6-50d708075bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d98933-2693-40c9-9121-c7b27ec081f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163abaa5-c12a-49d4-9779-60a1850d20c5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d4670e-7fb8-4c4e-9748-870c126fb0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a8c3e7-8835-4276-b352-1a2024fc38b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e8758a-1acf-4a7f-8428-11e1a2514bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32013977-e2c4-4446-8887-eb4e0f3185ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bf1025-8c05-4a6c-8d64-e72e32d7a5d9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697b63ff-e56c-41c9-9c33-54dea8a2ca24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "defad81f-c1a1-4a83-9f6c-98fefbe17f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8de516-f06e-45ae-9c59-f9c6a0d426dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae907e1-bd06-46a8-acb0-891641c0e452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e47697-6de9-4f92-860c-9e3c457f60be",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c4d02b-456b-4273-8d2d-4dcca832adf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10d88a4a-28b2-4779-a453-1937a247ba8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9945e21a-854e-48d1-be8a-2ca6894065eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aeea2f7-3f54-465a-a607-c4ed5fe0c48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8ff7a1-a3b4-422b-afd8-b549220e0a36",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99d72a-5649-4986-bd97-948e6494d266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f07e4dd-f5c4-4974-95f4-5cb6d47e7e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451171dc-eb87-4362-b518-956a12c608b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1422c7-7f96-4225-b486-1d1744fa1762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588e4da1-f764-4898-92ef-ea22d39b052c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9f896d-8b47-42db-8783-81da1ee1704b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd6e301-8050-4cf1-b06d-b74562a06701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37d6161-0ed5-4c52-bae6-bd244211304f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f00089b-ff62-4bf3-98d0-00833a6109fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8805213b-8c33-47b5-8e11-fd4a84970514",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144c594-1a82-434f-be5e-2c9d5448801d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb70de2-3f7a-4cf1-8325-1752dbed1fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2d96bb-1e49-469d-ad03-f8f50602ee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9979e961-cd73-404f-8286-8565bd7cedf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df29cb7-700f-45cc-b255-d0fbae1960ad",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e22af9-7f65-46d0-b8bd-1e66dbb2cf27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3b2c4a-62c0-4f1e-8299-df667d26b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935b1bb4-0a67-4c5e-8fa9-83b27f3a3ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac4f92f-cc17-4530-b501-88fa58ec4b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04220d63-3513-4b40-86a2-71703df11d9f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff91da-0aea-4d08-a6ca-aaa6a3742740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025e5027-74a7-4490-ba3e-8f00af137643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b617de09-8ef1-4e02-a406-0f2721893f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd6dbdf-67de-4352-b99a-e0392e8ed3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293a7ed-02f4-4276-9007-97706ec28e25",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f223a53-729f-4646-bf71-cca19f24a293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a87b017-a463-4d6d-99e6-81e602726a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e7b121-4f79-4e79-aa37-38aec3e8cbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2f2c34-f342-4f73-92ef-80c5703ab94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733b6755-8660-4bd2-a7a2-28a00fe9003f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda26405-dc64-4cb1-bc42-2598dcf4d82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ab2abd-53c5-42e4-909f-4b528816823f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6737b88-75c6-4dae-94d5-a6cf83f7e9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe103594-6c9c-4307-b0a3-f104e2f1c688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc8a09d-d617-4340-8103-cc4586a16ce1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d0e5a5-69f8-4091-8416-08319288ce07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15e7aad-1a62-451f-b850-d4ba3e69f053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4dfc56-c409-4248-83d6-278513644644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659fe61c-0cae-46c8-a3d2-ab4a331699ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81580cf-9cc5-4d8c-bd67-2b2eab1a57da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01ca27d-80ca-4475-9146-0631aedd3600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78e32e0-1412-4dbb-a7a1-1d162130d1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef5c501-1fd1-46fb-8e38-8c628122b15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62190a8-c1e0-416b-8aee-4c3ef085d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96210cc-7eb1-4b06-8c29-ab87d09ae4c8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e447e3a-5afd-467e-9fa5-a958eeac2088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29786ba2-4e53-4d2d-95d4-fc536335c0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72d17c6-e7a8-452d-a5f0-5a72266a8ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c621b5b-f3e4-4bc1-9d3a-242f9110b4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69902f06-0e7b-4ce6-b462-53d7312f76a6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9014cbb7-11b0-4480-90d3-23828ce8fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2b432b-f3cd-43ab-8759-d46fa5364404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc0091c-cef0-4bdb-b4dc-449a07468ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd00dd4-721c-4b44-9c11-7a5fa3068b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ea8527-d7d6-4da0-b0ce-28a6acf8cdf6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd83e696-8102-4b7f-b6d9-316caea935a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e74a5b0-cbbf-4bc8-8000-d033ac605211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fafce1-352e-4dcd-ae4b-fde42c93c984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442b8b1d-fc45-495f-bdf5-65bf88edebca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16dcf3c-66d4-478b-8bd5-3f15107534e5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bafede3-2f8c-4ca8-b6ac-7eb699719f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03061f5-ec57-4ed1-af50-0fb1d519af5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d960908b-c0ca-44ca-9cf6-9c596cad8269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d04a94-336e-42bc-aec1-9403333bad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aea169a-aff6-457c-bb11-020caf51462b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5b5bbf-7c76-42b5-a954-268fe2285f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba76ff2-7495-4f8b-a5c7-a24d4ea2a549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58111f94-e82e-4576-ba54-89d3a2d9de69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a033736c-c227-4dc6-90b4-20bcf7eb1b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbf6217-6b65-4dd3-afe4-126caef15d6a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f8797-21f1-4e27-88a2-f6020dc6ffde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4655d9-48e0-4726-bce2-7e342b7cdff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2bc0b4-8a09-4a31-85ae-33c9de37c4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ec57d5-6026-416c-a55b-65feb3fd1d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737787c-205c-4263-9316-cb0d640fb8e1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346f182-07a8-4cdd-803d-87b82626f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a1ddfc-f45c-4821-8cdf-d2fe7e80ef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e7770b-49a6-4eff-a55b-2374cc4fed6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a65fe2-ce72-442e-ae18-8bb28bc804c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc000e1d-9898-4f35-b2c1-cf1dc57a9baa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a43f9be-75d2-4abd-b2d1-0391620bd793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea3aeae-667c-457f-acf1-db5d6cd224b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75942d05-d81e-4797-b5d2-00a29d619122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602a41dc-28c7-4deb-bb7a-9361fb8ea867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99356cd-bd02-4a94-bbb5-d4c56ebc78da",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68352411-715d-4d9d-9837-4e15fdcb2d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70f18bf-1b8f-4e38-8d26-994ffddf99b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de16c6e7-0426-432c-9934-2d0498fdffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e684ec6-d305-4e51-b756-b6998395344b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113332b-3dba-4dda-aa7f-86f70f0365b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4e2493-06f0-4b1e-8ea8-9235df6062cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6384c81f-7fe5-43d2-829b-831f3131f5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b02a63f-20e0-4394-993c-b71c9a4a3f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a28e826-2c8d-4007-8e9f-cd678c20f9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4b8053-50e4-450b-824c-1f203397659a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b69385-42b3-40c8-81f7-891acae74708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc030e21-f933-4e5c-b204-5553cee201db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a18637-15fb-4107-b6ff-d56631d764ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9605e681-16d0-4ee2-9c46-3cd4bc97b151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0ca51b-2cea-47f1-a6d9-d4be7d4dab8a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4503643-2d9c-4199-bfff-aa6d83c1bb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ee66a3-2963-47ed-85d3-bd02bbc021e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613ac64f-66a3-4a62-82fc-142a3c699ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f6d6fe-4971-464e-a027-64d04913dd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe55ed2-8281-4a26-91ec-6809d0286965",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79c407c-aa3e-4dab-8fd3-bec06f664bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af591f7-8738-40fb-9283-5207c4fd3e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e10be9-31d2-4ff7-a442-0ae32de4a31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0fc0ea-c4a5-4cc7-ab34-beff6bb5a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df754a0f-5e5d-4108-9cd5-685f89e9f7d8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757fbbbf-c67a-4a65-837c-f39984f35d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8887e79-f4a0-49b8-bbf8-d20e0871ffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436cb82-5d1e-4451-9a29-eafe38b90535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb2dac-a188-4cfc-9cfb-4a553466457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bddb2d-93de-4f38-8f42-570f3da51930",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641348de-a6eb-40a5-b6b1-7622b3ecba49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0d2634-f252-40aa-87a0-f1d294838923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d434e688-0913-45ac-8f1a-ada76a8c2fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe42750-12c4-438a-84aa-c31131708c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d70910-c023-4d2a-bf24-6cccfb2bde87",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4c5007-df42-47ea-b1fa-653dd1e8c97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a36ba23-104d-4d55-9d9a-9fa4a19bf65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dcac6d-ec25-423e-a8c3-9749633d9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452a1c4f-2797-4788-8b1b-957295cdbce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b315a0a-55f3-4cd0-95e4-ad5066e863ac",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9ab48a-cf3c-4bf8-9201-58c4c30c23dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5debe1-2e97-4aff-829e-64ab680fa0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc90c08-7a30-41bb-a6e0-402c9447f4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fb7278-a06f-47dd-9912-7e4d2431c51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc9439-5a4e-47a9-9523-2b089340f8eb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eef9ebf-efd8-4d7c-9385-c732dd501471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622f2006-80db-4559-8244-7a12a7018176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac98a08-1aa9-4c98-9300-1a8ee7e54577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab735f4e-acb9-4164-b73c-640079a81b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f38d9b7-1175-4433-ac48-acd94cfb2b4d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6a3836-a1a7-4378-b6c3-bcb06f325153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987dc0e8-7c26-4b69-801d-e689ba60b0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c73c1fe-229c-46f9-a953-cf8368050e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1584f956-b964-49f2-a929-5162d8a61acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67db645-b5f0-4edc-b7b4-4ae5f48a70c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d2ca0-7826-4b0c-9bcc-bf21ea6cde1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a1d2d9-2d35-43ba-a9b9-ce3800384e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1d9ec8-11e8-4130-80a6-ba7a47c006fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a719fb04-5450-49f6-a1ff-48bdb059b132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab9a966-a509-44f4-b752-b32f540950a4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7c75b7-07d7-4c9f-b565-aaec9ef9d881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afc11ec-c2e4-4cc8-9efa-d7478751da07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd6bcf-3b20-4d4c-8627-cf0d1d982979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3b1ee6-4856-4059-9d95-3c7c39a2a93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98abcd1-64b5-4de4-ad92-15ee2f9fa6ea",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531429e2-2ca2-4e2d-b52e-7994fc2b5c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137c2d03-33f7-40fc-ac4a-efeb33f32524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9680253-40aa-44e8-8da8-9c847a88b613",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ece248-acc9-4488-b54b-107898dc5958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a2431-c024-49ce-92c1-66ad7a618aff",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d0f881-0331-42ad-82bc-a3df3677fc40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116a8c40-5972-4a60-a65d-ed9767e0bac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7602da-e5f1-4dc7-a42a-ec5b051b5040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c11cb8-84d1-45b3-a6be-74567cff8ca1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9916870-5631-4a1e-b299-86a8c9158b49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f99b00-00da-4231-ab49-df22bd35a39d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deeb08e5-adbc-4ce4-a468-513d59dbc637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cabc26f1-c9f9-4756-8a6f-2538f38e4fce"
                    }
                  }
                ]
              },
              {
                "id": "954c0576-61b6-4fc0-932d-62340414145d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fd67599-59dd-4089-a675-3a86afad5e1f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc3b296-3e88-4465-a183-dce60981fae5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3c86a336-b27d-4aa8-bbe7-ab811ef4817a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac75c4d6-baec-4367-a692-924b003197fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c5efd76-804f-417e-9b09-7eac4a1a6ea2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88e11beb-a146-4f88-ba9a-0fd4afa9f292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c19e19b-00ff-4031-b024-8b51e83adc05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1e4a99d-60c4-426f-92bc-1bba43dcb4d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "689ef0d5-f430-4771-84ba-90d1bd7b9b4d"
                    }
                  }
                ]
              },
              {
                "id": "f03664d2-a980-4086-bb42-a1dd1394ca6f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c2954a08-50dd-4d95-b37f-480a0a43478c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e539935-165c-416e-b3ce-697cf0978db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "48d275ee-7ef0-4eaf-b138-394e2bdb0c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a7aab-47b0-45a5-b7e3-b4bc7afbff00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a6af6a-95fb-45cd-9582-402b916ee85e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52e87144-18d5-4113-8cb3-7431068f0fd4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e08f9834-f017-4178-8d82-bca1a7603ab3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab440870-a997-4060-ac10-b154234985ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b27b4a32-0159-4c31-939c-60d649e1e698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf5099f1-6c8b-455a-a252-497b3498ed92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb2a2f08-d450-416d-bc58-e541d0f78e38"
                    }
                  }
                ]
              },
              {
                "id": "75689b38-d51e-4eca-ae28-314195e2fc9d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bb70607-fa3a-4a77-8da7-1f583fb23f49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "29877c0b-3c98-4f83-8ede-9167da96692c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a42290-0174-4851-9cff-5319720587a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92e7b8f6-7c21-4b8a-a9f1-11bd136cf566"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee74cd1a-ea68-4141-8434-6376098c4497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9d7451b2-62c4-451b-bdcd-9732c0ca15a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de4d349e-03ec-4262-a130-c0ddaa5af4e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf7b2511-099a-4d54-b9f3-4d419f5b86af"
            }
          }
        ]
      },
      {
        "id": "538f4406-39b9-44a5-b2d7-cf42638ed527",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2852400c-2a72-4626-afaa-8f5d6e3aa423",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e7f0c83-ff86-47d1-aa51-855619cc519c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc3f62a2-8bba-4ab9-b7b0-1aaf3bb7170e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4436c4-d3f5-4a40-aa82-7b0b8314a75a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1b4d23d8-f32e-4b39-85e6-119e1c016937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73429361-ba97-4a21-95ef-bf35ae5b8b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32387e59-00fb-499e-b65c-eba12a0800c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7716d48c-e63e-4c56-b797-814db2efd5b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20e0191f-634a-447b-88be-6680464ec6c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09206cf9-97c4-4e71-87ea-316b4322003a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd8e25b-ac45-4b3c-88bf-3530fd62b67c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac3627c0-91b4-4cef-b785-9a7d5a024105",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "87834817-f1f1-4b0d-a520-f0a101d6827c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e09112-ec72-492b-9a62-142b789100fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7efd1e9d-8395-4383-bb2e-fc6e6cb54db1"
            }
          }
        ]
      },
      {
        "id": "9b3f3847-5a5b-4ade-92c0-6454a3abe5f0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9f564aab-18e7-4aac-9fab-0341400b7580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c7ebd1c-1a27-4663-aba7-28d2a4979ef5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "671749da-9748-4d1e-9275-ab610f87230d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29c6e97-aea4-487d-9e94-28afccd2325c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1770100-59f9-4e49-b2bc-f628ac2a8c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1857a57d-8974-4f69-b5e0-ad0777b7246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d90dc0bd-79de-4e41-a6c5-63cb6cdf37c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c650851b-9236-4490-8a24-bdfa17d36bea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c1612b3-edcb-422d-b28e-f864a187c57e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23b1148a-df79-4056-963f-9759b57c8d85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e9ff6e-6989-4bf4-aec2-db8046b74e3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50a9c259-e7ca-4036-97e9-882229e0c354",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3995f2d-527b-4bf6-948f-5a222dd35177"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d315608-f38e-4d06-a925-276b369df587",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdc49c20-d125-45a0-b94d-38d765d4c4ec"
            }
          }
        ]
      },
      {
        "id": "503ea228-d944-4b36-93d5-44ceeec5da8c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "509bda17-91d6-437c-af19-f67164768319",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2d6a7cb-2120-42bc-8ebc-ddc2bda24910",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "241ef0aa-2857-4554-85cb-37f2cddab109",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5060c96e-66e8-4538-8b26-45278e083284",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4236157f-4be5-4619-a4e3-a7b79e34e1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38a0b6a-ef57-4ef6-9c8c-5ba96bbed82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5bace56-c898-48c6-a7e3-32d86a8ce1d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e15fa0b-6414-436f-b8f5-a36502050967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d594463-7354-48ce-ac07-f455350d2d70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ed48f0-fa96-4976-beb9-d833a933b6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9df1791-a550-4350-b63f-4518d3443b11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93df388f-13f1-4cac-bdd7-37d47df75c94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc1a929b-7d27-43e5-919c-79d428abf03c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d24c0331-cddb-4959-808f-69180a872ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffafb250-0933-470b-abb4-3380c9d34305"
            }
          }
        ]
      },
      {
        "id": "bf860918-c502-4619-ba2e-d45d2b48a04a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "563debd2-169c-41f3-96f9-9293ed3a6a96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39a3ada6-35eb-49f6-ae39-a436f98fc391",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "68abe1e9-58d0-4c1c-84b7-3f1850ed951d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26262d85-e3eb-48d1-bd92-3158eaf3b5c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "171bd197-ed04-4fca-a31b-6dbac7c9c3f3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 620.9823943661971,
      "responseMin": 9,
      "responseMax": 7831,
      "responseSd": 837.4366423627121,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687913332299,
      "completed": 1687913525534
    },
    "executions": [
      {
        "id": "545d3955-5012-4d2c-95db-dcc5770abc8c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b1cb632f-7713-462e-85e0-81d2a1c7589d",
          "httpRequestId": "4f18bec0-30f4-4e7c-a9c1-7ae53b2bb382"
        },
        "item": {
          "id": "545d3955-5012-4d2c-95db-dcc5770abc8c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe424ce9-40ba-46a8-9385-dbf6d45ec1ac",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "2db34f19-20b2-4d88-a0c9-7a1c73d82604",
        "cursor": {
          "ref": "a049e0b2-d101-4966-a1dc-f42f88dacbe1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "90dea131-ac83-4bf3-b9dd-ccbe61cc1171"
        },
        "item": {
          "id": "2db34f19-20b2-4d88-a0c9-7a1c73d82604",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "31eec6f3-b54f-4189-a8a6-27ff56eb5790",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "b9a15131-66f6-4a5a-8683-f787923c5328",
        "cursor": {
          "ref": "91ae8319-3369-4578-9bcf-27332c02b9a0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "53104a1d-4ba5-44e8-9be1-11df634fdbe6"
        },
        "item": {
          "id": "b9a15131-66f6-4a5a-8683-f787923c5328",
          "name": "did_json"
        },
        "response": {
          "id": "e17b4b4a-c17c-434e-877b-38c94ae802e7",
          "status": "OK",
          "code": 200,
          "responseTime": 1208,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89ea80-28dd-4d69-be2d-a0f2c5705ff5",
        "cursor": {
          "ref": "34c880b7-de09-49e8-994f-d9e91462f8a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "671e722d-81a7-4dc6-b8c3-d3ac24a7cfa7"
        },
        "item": {
          "id": "da89ea80-28dd-4d69-be2d-a0f2c5705ff5",
          "name": "did:invalid"
        },
        "response": {
          "id": "00341a31-825a-47cb-8dee-9758665c8326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89ea80-28dd-4d69-be2d-a0f2c5705ff5",
        "cursor": {
          "ref": "34c880b7-de09-49e8-994f-d9e91462f8a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "671e722d-81a7-4dc6-b8c3-d3ac24a7cfa7"
        },
        "item": {
          "id": "da89ea80-28dd-4d69-be2d-a0f2c5705ff5",
          "name": "did:invalid"
        },
        "response": {
          "id": "00341a31-825a-47cb-8dee-9758665c8326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae7dc2-2733-4528-9900-6d01faa8d8e1",
        "cursor": {
          "ref": "8887e4bb-3877-4c2e-8e96-c7615517e383",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2822702b-87c3-4c99-a166-72faec59679e"
        },
        "item": {
          "id": "18ae7dc2-2733-4528-9900-6d01faa8d8e1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "16deb9b5-d2c1-4666-a468-e54588557219",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acb7356-5449-4ec8-a229-08db5888c7c4",
        "cursor": {
          "ref": "8b1e754a-3b58-4853-9152-7c29e31c9c73",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c87f1638-8668-409c-9f24-3ca2522a29ea"
        },
        "item": {
          "id": "0acb7356-5449-4ec8-a229-08db5888c7c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4cbb81ca-3f36-4e72-9677-39ac6f62d0bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 591,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f0d48-5cbe-4e1c-a070-e1f5ae9b2543",
        "cursor": {
          "ref": "71f64e1c-267f-456e-a39c-c056736ff4af",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4a33511f-7472-4c48-9914-2467ea217893"
        },
        "item": {
          "id": "398f0d48-5cbe-4e1c-a070-e1f5ae9b2543",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e75b3447-9e0f-4b96-bb87-4dd4b22eab1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13da12c-1b22-4179-bff7-a02517a1b81e",
        "cursor": {
          "ref": "a8ac0df5-3205-4da2-9270-41f1bcf327b6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bfe851a1-af2f-43a2-943f-03c93f87fbd4"
        },
        "item": {
          "id": "f13da12c-1b22-4179-bff7-a02517a1b81e",
          "name": "identifiers"
        },
        "response": {
          "id": "cfeec6aa-8d19-42f2-bb26-1496bd0d66df",
          "status": "OK",
          "code": 200,
          "responseTime": 1308,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274ade12-9e63-4ef8-bd4a-fe898feb2cb8",
        "cursor": {
          "ref": "9254f021-8f61-47a3-b9a1-1b41d77e325f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7ba71cd0-8269-46b7-a85e-a60e715f4d5f"
        },
        "item": {
          "id": "274ade12-9e63-4ef8-bd4a-fe898feb2cb8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc3e6354-c204-4d37-a182-f529b32f4b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16827cc-8dc0-4e9d-b3f6-b5200958f047",
        "cursor": {
          "ref": "3e8e2dd3-4fa9-4cca-99c0-7ff6329d95d8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d4a83a8-e05c-4d78-8be5-b97b2a1c2919"
        },
        "item": {
          "id": "f16827cc-8dc0-4e9d-b3f6-b5200958f047",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dba2a47a-0138-4b2a-9926-5810c915391d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adec084a-5608-44e1-8ab8-4caf65b8e854",
        "cursor": {
          "ref": "5f688ebc-b594-432b-9259-5fcc1487c4f8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7212dc2e-6b83-499c-88a1-2bdb95a13b49"
        },
        "item": {
          "id": "adec084a-5608-44e1-8ab8-4caf65b8e854",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f8345310-7356-420d-898d-b0c9c2d8efdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c800cb-cc6c-4747-b923-1c3734b4e59b",
        "cursor": {
          "ref": "ef074047-7149-4f62-835e-3b77b8e6261d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "980ea343-d18f-4e99-a28b-74df018c9e7c"
        },
        "item": {
          "id": "64c800cb-cc6c-4747-b923-1c3734b4e59b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2204305a-6b70-4a03-99fc-ac042a956d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e2f313-8ad6-45dc-a297-c6e3a8db6943",
        "cursor": {
          "ref": "17eb445f-eba0-497c-b17b-82cb87d25f87",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "69b0a1ed-26ae-494c-a2f6-6872e8c07054"
        },
        "item": {
          "id": "96e2f313-8ad6-45dc-a297-c6e3a8db6943",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "481d3607-9eb5-4905-8169-63b9593d9399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f0744a-b721-41c8-a7b7-0564e0bb01a4",
        "cursor": {
          "ref": "d5608821-c7f3-4d49-a6e0-d77e422e6b3e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "faca1a6b-f44a-4269-90e3-e971a500cf59"
        },
        "item": {
          "id": "c3f0744a-b721-41c8-a7b7-0564e0bb01a4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9c291313-10c9-4507-8615-14bc0570068b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bc6de8-12e2-4da2-b75d-5e6df0506cf2",
        "cursor": {
          "ref": "43dee53a-15e7-4446-b717-deead56f9a53",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d642ff59-1d92-4d08-aa8f-a7a1e75883df"
        },
        "item": {
          "id": "75bc6de8-12e2-4da2-b75d-5e6df0506cf2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b86e28a-3f3f-4e80-a8c5-473e698f3e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b1e810-15d5-4f53-8fbb-aab0ec81f5b9",
        "cursor": {
          "ref": "bc2c1673-505f-4319-b834-26f1c80fc3d8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "732ed11a-8ead-4c60-abc0-7f32ef3900fe"
        },
        "item": {
          "id": "68b1e810-15d5-4f53-8fbb-aab0ec81f5b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cb1f3e06-25e9-47a3-a379-6cb80c33afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d87808-2b76-424d-b080-8ccc5bc81e0d",
        "cursor": {
          "ref": "a489d866-b30d-4aee-aef6-2d08d26192f2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9fa4ea39-6b75-4114-8e32-3655f8357548"
        },
        "item": {
          "id": "99d87808-2b76-424d-b080-8ccc5bc81e0d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1b22c789-9cd1-4918-9100-2a38c67d6d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742df9a7-74bd-41e6-ad38-af055321f045",
        "cursor": {
          "ref": "f97dcc1e-3adf-4272-bfce-4ddb010e568c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab4cf301-fa15-4c56-a520-4cd7464a8a6e"
        },
        "item": {
          "id": "742df9a7-74bd-41e6-ad38-af055321f045",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ccbfa4a4-5dba-44f8-9a40-bf1ccf940c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad5838c-e5bd-4df4-93ac-d2f266debd27",
        "cursor": {
          "ref": "aa8db3d7-8cd3-46e2-9450-a8859379a2b5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7d314e41-bdc2-4735-ae5f-445240439910"
        },
        "item": {
          "id": "7ad5838c-e5bd-4df4-93ac-d2f266debd27",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "24117c15-0a65-466e-bf24-9e31409e9f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba530e9-2db4-472b-bc89-776d56c30a2d",
        "cursor": {
          "ref": "c6627f2f-ab6d-4d87-8c11-b04d3e44fb80",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "82e7cb7d-a35b-4f29-8296-8a2d7dd1c234"
        },
        "item": {
          "id": "0ba530e9-2db4-472b-bc89-776d56c30a2d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c471eebb-a961-4a7b-90e5-ae3050d8170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad91f26-0aff-4c42-99ee-39f097699146",
        "cursor": {
          "ref": "f8dc5ee6-fe8b-4f53-b81a-c7b94f299a96",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b70188c8-bcc6-484f-9d8c-e578b292ce43"
        },
        "item": {
          "id": "2ad91f26-0aff-4c42-99ee-39f097699146",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4f294070-0749-4440-8e30-2ea088a0022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d1b8a5-91fa-4ba2-9dc4-ddc5083d0ab7",
        "cursor": {
          "ref": "0e899740-5567-46cf-913f-8bb5b2c8b0ae",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1691e613-94d5-4c7d-b100-489dd1e85756"
        },
        "item": {
          "id": "43d1b8a5-91fa-4ba2-9dc4-ddc5083d0ab7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cb3b7dd7-5a25-4105-90d3-c9d001beea06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75427407-b406-419f-aefa-f25ef53ab3de",
        "cursor": {
          "ref": "e8eecba4-9856-41ff-b320-8ca36df8d98c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3fd7f07d-2cf1-4a14-94fa-6c846f579b8f"
        },
        "item": {
          "id": "75427407-b406-419f-aefa-f25ef53ab3de",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78429765-beed-48b9-92e1-42f43c694473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39f2d67-f418-4a56-a855-0ace00d49479",
        "cursor": {
          "ref": "33043060-e449-4312-82c0-ec399949dbb5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4105d6cd-eaf9-47b3-a905-0bb9e5528a48"
        },
        "item": {
          "id": "f39f2d67-f418-4a56-a855-0ace00d49479",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9dc0d647-0a05-44a2-bdae-bd7a7176ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7211007b-c276-4c4f-a043-743d50c0926e",
        "cursor": {
          "ref": "b0b3c86c-4018-4251-8207-3e5b29ea797a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "546f0452-913f-4178-b09e-03a79a9e76fa"
        },
        "item": {
          "id": "7211007b-c276-4c4f-a043-743d50c0926e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "072071ec-dfe1-4e4f-a798-22c60bb57303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f7c28-a2d7-416f-9b34-5d54d4f10028",
        "cursor": {
          "ref": "cb713983-de81-4bd3-b4f3-a57ddcbdf5d0",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "88528151-6b67-4198-96d8-1cffa4f47e6f"
        },
        "item": {
          "id": "957f7c28-a2d7-416f-9b34-5d54d4f10028",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a6ae1b75-a415-4c3a-b7f8-3891858a4f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d552f3d8-3151-4c47-aac6-3ef44f851246",
        "cursor": {
          "ref": "b5c7d672-cafe-4c4f-b824-21ff8895679f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "236d9a4b-da72-43be-b947-589f657a3227"
        },
        "item": {
          "id": "d552f3d8-3151-4c47-aac6-3ef44f851246",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "368bad11-151e-4853-bb66-5d284f3985e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eec083-be0a-457f-9fb7-fcdfeaed5496",
        "cursor": {
          "ref": "43986a8b-0c41-40b3-81da-93797152a850",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f14b7897-7394-4aa7-a9c0-e7e62b9044bc"
        },
        "item": {
          "id": "33eec083-be0a-457f-9fb7-fcdfeaed5496",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f0a4bcf5-90ea-4676-95ed-6cd5bb482a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b35f4-aaed-49c5-9b90-660e4a0dfc61",
        "cursor": {
          "ref": "00305846-2524-4821-b010-4a7c96cfb7fc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0917f70a-8a70-4f7e-bce8-a592a88cfc6a"
        },
        "item": {
          "id": "2e4b35f4-aaed-49c5-9b90-660e4a0dfc61",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "acc3f361-4765-44df-9eb1-2764bc649d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d2c64a-2da7-4da8-a22a-41c9884b0f6c",
        "cursor": {
          "ref": "b953aaa4-4031-495b-8142-a4a89e08a00c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ff68bf4-06d1-43d7-8221-3ec3d94236b9"
        },
        "item": {
          "id": "05d2c64a-2da7-4da8-a22a-41c9884b0f6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "76b5e820-4d6a-43b4-8c38-38ec921e4ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b299c11-843c-452a-bdb1-c699525b4dbe",
        "cursor": {
          "ref": "afa91a07-1c09-42f7-80c2-38fcc6dc406c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "841f117e-1e4e-4c18-828e-90c4cb02a4e6"
        },
        "item": {
          "id": "1b299c11-843c-452a-bdb1-c699525b4dbe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2c116c7b-43b0-478b-9437-80cb6e31c04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97a745c-a2e4-43fd-920d-29260604b63b",
        "cursor": {
          "ref": "704757f7-c989-4dc3-973f-015e2909e7ed",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "78fbb5b6-b0ca-464e-8576-2b619b955fe8"
        },
        "item": {
          "id": "b97a745c-a2e4-43fd-920d-29260604b63b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f5534871-628a-41de-baa8-563b9a1da2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c180f0-f111-416d-8476-5a582a528335",
        "cursor": {
          "ref": "1f977667-e081-4fec-8d87-55019c803dd6",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "02c1441f-895a-4ef5-810b-6a4936797c4a"
        },
        "item": {
          "id": "83c180f0-f111-416d-8476-5a582a528335",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d69b18e-d8af-4f81-8529-6a9bb9eb4125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959d9b5d-14ab-4c1d-8fb2-6af788ab9c39",
        "cursor": {
          "ref": "1a014e4a-2930-40c1-94d8-6fa8046cad38",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "716b231b-af82-452d-9f68-95ca56d9fede"
        },
        "item": {
          "id": "959d9b5d-14ab-4c1d-8fb2-6af788ab9c39",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1add5ffc-64a5-4c5c-97f9-ac4a4a4ec22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad2ebc8-de84-4099-aaf0-aca5a16db9c0",
        "cursor": {
          "ref": "353297dc-4775-4e23-982f-776b37bfb330",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5dba9171-4880-45b5-930f-2c48a3a2954c"
        },
        "item": {
          "id": "1ad2ebc8-de84-4099-aaf0-aca5a16db9c0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ebab083b-6398-4cd8-b44b-b2170d7a6187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8edbc7-f32a-4588-8837-14f2a5864afa",
        "cursor": {
          "ref": "b2bfdfa3-29f3-4feb-8467-fcfbf61af78f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "75c178d7-7b38-4ce4-9287-ec6b1ce5cd1f"
        },
        "item": {
          "id": "5b8edbc7-f32a-4588-8837-14f2a5864afa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d536ed5b-f7eb-4d05-b9a6-c695f63589c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3c4ee8-40d1-4350-a904-40d62f7e01c3",
        "cursor": {
          "ref": "5b8f8aef-c6cb-408c-b3b4-d7f2e3c500d5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4871830a-0ef5-4324-a5ca-b0a63d77c6cf"
        },
        "item": {
          "id": "8c3c4ee8-40d1-4350-a904-40d62f7e01c3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9f5e6fab-d61d-4983-b926-83c5cb352657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1057813c-0fe6-4741-8387-252df73ffb4d",
        "cursor": {
          "ref": "dccbc7f5-7727-4df5-b5f3-61ba5a4d5b20",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e9639799-7061-4ff0-ae22-327ed7135e10"
        },
        "item": {
          "id": "1057813c-0fe6-4741-8387-252df73ffb4d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69b49bd1-82bf-4627-94b7-6abbcff8b7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d72d2e6-4da4-41a7-bf43-331e3f9f5898",
        "cursor": {
          "ref": "d0e5fb34-5412-4e89-9918-e24bae21dd6c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c8fda135-7aec-4df1-b1aa-6a925be7f4f0"
        },
        "item": {
          "id": "0d72d2e6-4da4-41a7-bf43-331e3f9f5898",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b1897ec3-7e66-4d5c-9613-49f637533e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb93fe5-9ae3-454e-b7aa-67b89ba77476",
        "cursor": {
          "ref": "2b7680a8-7652-4926-ba31-2d47180de7e2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "82670f26-7027-4c33-bc2c-e4b7c3e712ad"
        },
        "item": {
          "id": "bfb93fe5-9ae3-454e-b7aa-67b89ba77476",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24b63be6-a564-4d29-9e6e-531ede83e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15133c43-5667-495e-9cf1-1715f2b53c3a",
        "cursor": {
          "ref": "88dad48d-b6eb-4f16-b7de-8e624a9c6f49",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fb5fd3c0-acc4-4b01-b2b5-34ec051be6cc"
        },
        "item": {
          "id": "15133c43-5667-495e-9cf1-1715f2b53c3a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4d402739-8e21-410a-8c47-d7fde6445f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f205dcd-af5d-4c38-bd98-30919457897a",
        "cursor": {
          "ref": "df18f906-f3e9-40de-9fa6-9dad48b7c470",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2493c42f-54db-459c-8cd3-9f25619f7d66"
        },
        "item": {
          "id": "6f205dcd-af5d-4c38-bd98-30919457897a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "07afe425-3c52-457b-9d3d-e82585fe0e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288f8711-772f-431a-8623-53b8feb6c694",
        "cursor": {
          "ref": "c398a7bc-7dd0-422d-af53-4473a14ae5b0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "303b5f56-dc36-4cfb-8239-2b5c2edd9542"
        },
        "item": {
          "id": "288f8711-772f-431a-8623-53b8feb6c694",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2fb63e37-da50-44b5-9481-e453129700e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bad2755-f08f-4895-baf8-52ec6c6ce75d",
        "cursor": {
          "ref": "2f139c93-7232-4ded-83cf-b464d7e1083e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4495321a-c6a0-4c3d-8b4d-5ea3089b3619"
        },
        "item": {
          "id": "3bad2755-f08f-4895-baf8-52ec6c6ce75d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "45a51d69-4ce0-40e3-a871-f194743a2786",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 808,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a34584-b075-4f48-9df7-1dc0ffefb6d6",
        "cursor": {
          "ref": "0a0ffa20-ae25-447f-b1e6-c600e4e7386b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b190538a-da45-46c5-9165-f02f75ad93fa"
        },
        "item": {
          "id": "a3a34584-b075-4f48-9df7-1dc0ffefb6d6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24c1500c-eb03-4048-8210-a56c9dc0aee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72dd5b-544a-42de-bf77-a05ba52679b8",
        "cursor": {
          "ref": "b55b7ed8-9089-41a5-9063-70e884191c9a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6717a768-7e0f-4b48-b54b-2fb9a7a7eb61"
        },
        "item": {
          "id": "4b72dd5b-544a-42de-bf77-a05ba52679b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "70222926-f94c-4088-9289-b8ba3075d65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1364,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f718e-e2fb-4a4f-97ae-65d664fd1ec8",
        "cursor": {
          "ref": "be41a452-d5ac-4ef6-a238-562a3295d865",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fcd1f19d-52dd-44d4-849e-9bc94d9a026d"
        },
        "item": {
          "id": "2a6f718e-e2fb-4a4f-97ae-65d664fd1ec8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d582cc2-c21a-4713-8bb4-0718e30cee10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc78a5b-3f12-42d7-b33c-2aeedc5ec039",
        "cursor": {
          "ref": "b6194b05-18e0-4f8a-969d-0882e841cbf2",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5da2255c-5cea-4fd1-b5ed-1371cb4fcb7e"
        },
        "item": {
          "id": "afc78a5b-3f12-42d7-b33c-2aeedc5ec039",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d92b449a-05ec-4b04-a3c6-325bf278a565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9461729e-a5b3-4d6e-bd4b-87d4f434881d",
        "cursor": {
          "ref": "ef574d5d-3f1b-4e6c-a33c-e8c9101a3f53",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a1fde32-25e9-4c02-87cb-84d5d1cf200e"
        },
        "item": {
          "id": "9461729e-a5b3-4d6e-bd4b-87d4f434881d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7c0ba938-b0e8-4460-9b81-4b58b1e93ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703b4afb-9ba2-42c9-ab40-afb08079d072",
        "cursor": {
          "ref": "033c027e-ec17-4b8c-92ba-985bca430496",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02021791-7890-4200-b72d-3175d157db59"
        },
        "item": {
          "id": "703b4afb-9ba2-42c9-ab40-afb08079d072",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e018255b-c0c8-4231-bb0f-b4df6f595c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5036539b-3a77-48d5-a931-683fd735b571",
        "cursor": {
          "ref": "e2eb5204-5e9e-4ed1-8011-a3a9104c8bec",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a040976-97f2-43c7-b703-cc8f72bd8da7"
        },
        "item": {
          "id": "5036539b-3a77-48d5-a931-683fd735b571",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "295d38a7-04db-44a3-853e-4208d902e82e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 770,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a4b8f-f866-4006-a9a7-64571728f838",
        "cursor": {
          "ref": "bbbb123f-61c6-4471-8774-c13d08addce7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "74093f91-9efb-4947-9cac-6d59398be0c4"
        },
        "item": {
          "id": "ec3a4b8f-f866-4006-a9a7-64571728f838",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bf2a7d92-72ed-4b76-8946-285a6702b17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c7aedc-eccd-47fd-85bb-62080d01f176",
        "cursor": {
          "ref": "c403123b-6ed4-4606-a1df-3784fb6f0d4d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8a66fbf5-af2c-46b7-b009-b19e27d8ee86"
        },
        "item": {
          "id": "85c7aedc-eccd-47fd-85bb-62080d01f176",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8922ebd2-a7d3-4dff-9c7b-e697c18c3856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a891ee21-c94b-4e9a-a30c-661ec02202e2",
        "cursor": {
          "ref": "f4375fe6-814d-45c8-9d3e-a0f715ab09d8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "78a6e640-e090-416b-8a20-ef0b598e07ad"
        },
        "item": {
          "id": "a891ee21-c94b-4e9a-a30c-661ec02202e2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cf4c740c-a805-49a8-a683-76bcef3e59cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756bdafb-15aa-4070-b098-aa8d466a9a4d",
        "cursor": {
          "ref": "75da26d1-d470-4838-bba7-e689da555ffb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "27fbfa0b-2422-42c7-a1cf-8ae1fec2e14c"
        },
        "item": {
          "id": "756bdafb-15aa-4070-b098-aa8d466a9a4d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "29bb3dd5-1aee-437b-909f-83aa4f48c26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e39b46-c671-44e1-9568-ad955824faf4",
        "cursor": {
          "ref": "76eb1ba5-29da-47e4-a8aa-fef49e824444",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "252dd345-f461-4d43-8866-1ba2193bc238"
        },
        "item": {
          "id": "b4e39b46-c671-44e1-9568-ad955824faf4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c4153d4-b9f9-4d40-a1af-a6b2be7476d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c49c00-118f-4f59-9b23-047c96878e8a",
        "cursor": {
          "ref": "51f1651d-5739-46d8-acf4-d4509be148d1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4eb2a3e3-8c51-43ca-a70f-3f49c13f4ca2"
        },
        "item": {
          "id": "56c49c00-118f-4f59-9b23-047c96878e8a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "64e57a49-49dc-41bd-9534-5e2b6ca7e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a022c516-4999-46ff-9660-1819d51f3a21",
        "cursor": {
          "ref": "1a5a0b24-1fda-4e1b-b615-390404bf87eb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b5a9adaf-505d-484c-8d18-3a0eb467ab9a"
        },
        "item": {
          "id": "a022c516-4999-46ff-9660-1819d51f3a21",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39d1ef6a-f7ce-4027-8f00-ce20eb64411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2432f9c-fff2-4b8c-b23c-e9f3d201c612",
        "cursor": {
          "ref": "7d5c2aa1-4fa4-4173-a677-e629a2fa7c03",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9650e223-057e-4b1e-90d0-899be4a731c2"
        },
        "item": {
          "id": "e2432f9c-fff2-4b8c-b23c-e9f3d201c612",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "49457ea9-02a6-456c-baed-7ab2223f2846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adebe368-2bfb-44c0-9e27-1e177d967e14",
        "cursor": {
          "ref": "2ca50b62-fe5d-483d-b223-f6a02b9d4094",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44fee78c-5ab9-4793-87a5-fb3b01693599"
        },
        "item": {
          "id": "adebe368-2bfb-44c0-9e27-1e177d967e14",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "146f4e83-ff53-4269-adaa-6b4fc13c5126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfaf3ce-d0b6-47fb-9927-6dbeb76c5a72",
        "cursor": {
          "ref": "df6bf5d0-a887-4033-a8a6-6379b2623c27",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94031d4b-f926-4d81-b5fb-2ed9c6ae42ce"
        },
        "item": {
          "id": "6bfaf3ce-d0b6-47fb-9927-6dbeb76c5a72",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d160361-fe7c-4c77-9752-143be143705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca18d61-036d-422b-8153-6cf902d0d087",
        "cursor": {
          "ref": "27a481e2-790b-4498-823c-156a22bcd451",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4bef5b95-758a-4c8e-9505-b78212e2d9ba"
        },
        "item": {
          "id": "5ca18d61-036d-422b-8153-6cf902d0d087",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "893676a7-8175-4f9b-b4ea-4b27f394d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250a0b7d-730e-40d2-b916-48784c7ff97b",
        "cursor": {
          "ref": "a80b05d2-bccf-408d-b027-9dbe99b315a6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "51b2b43c-78e3-4921-b68e-6d99a37939f3"
        },
        "item": {
          "id": "250a0b7d-730e-40d2-b916-48784c7ff97b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29a3e6b1-4637-462e-8627-594e437417a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c43253-2a8f-4a39-aa8d-31f3a6395d34",
        "cursor": {
          "ref": "2ccb6bc2-1bcf-4345-b13a-f887d4638f7c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7c4a8bc3-5766-4cad-9787-8d43363030bf"
        },
        "item": {
          "id": "a1c43253-2a8f-4a39-aa8d-31f3a6395d34",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ee0afb34-5a6a-4662-b36f-e29106000116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eb02f9-58b6-46a9-9363-ed6ab401a67e",
        "cursor": {
          "ref": "e2fff309-9cb5-41a6-a3f2-26d81997f3db",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "512df171-8832-4423-9f19-63be541ce7df"
        },
        "item": {
          "id": "40eb02f9-58b6-46a9-9363-ed6ab401a67e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "02d41426-8ad8-40ed-8b5d-ba023bdd0fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e6a47c-828c-427b-ad3b-0910be240661",
        "cursor": {
          "ref": "9095f4ad-a4f4-4042-9eb1-5cbd3f61ce52",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7b42bce-c42f-4088-8474-236358502ef6"
        },
        "item": {
          "id": "a4e6a47c-828c-427b-ad3b-0910be240661",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f359bb36-ad43-4b1e-8822-3cabb8ca839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf0b310-6444-4c27-ba86-97ecd7be3d9e",
        "cursor": {
          "ref": "c66e41d9-a46d-4e71-8133-fd740c9dee18",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7a350526-2158-483e-ad64-0d073043f729"
        },
        "item": {
          "id": "edf0b310-6444-4c27-ba86-97ecd7be3d9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b46cdb5-9508-4a33-9337-7b6195eae8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcc14e8-1e4e-43ed-b747-72ab44afff93",
        "cursor": {
          "ref": "6de9eae2-9061-49d3-8511-00f3b0a4fb2b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2c1ba12-98ea-4b19-9297-4ee1f538e1ae"
        },
        "item": {
          "id": "0dcc14e8-1e4e-43ed-b747-72ab44afff93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d2460330-4048-4cb1-8562-b3d1dfc35dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e1fb0b-c3dc-440f-81f4-21001fe9171e",
        "cursor": {
          "ref": "948b1865-9e75-476a-a786-c7e993955995",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7a0c07bd-7bd4-472c-b5d1-2c6880a9c875"
        },
        "item": {
          "id": "c3e1fb0b-c3dc-440f-81f4-21001fe9171e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a2f87c6d-4c42-4213-938f-251575ede81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87a9faa-162c-4d6c-bf7b-f60822f53888",
        "cursor": {
          "ref": "3a41c4df-aaf5-4de4-a6cf-8945f67286b6",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c5d19d3-35e4-4cd2-84a1-4f0dd0e26028"
        },
        "item": {
          "id": "e87a9faa-162c-4d6c-bf7b-f60822f53888",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "034823ca-748a-4153-8d93-96d38ea0d803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f9c16-34dd-47ec-ba9b-7fc3534c57bd",
        "cursor": {
          "ref": "46469ea6-e94a-4dd2-a13d-a8406cdd44f8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4e472bfd-d696-43e3-bc5b-09c77316b7f2"
        },
        "item": {
          "id": "a80f9c16-34dd-47ec-ba9b-7fc3534c57bd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d2b402cb-1dad-4849-af4f-f48342c9a656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784f1e20-6927-45fa-bbf9-750b8cedaff9",
        "cursor": {
          "ref": "5da60973-8d52-4e70-97f4-96280dc3488d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b7897ada-39e7-4bf4-85b0-8b8efb14a6b4"
        },
        "item": {
          "id": "784f1e20-6927-45fa-bbf9-750b8cedaff9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dcd359b3-a7fe-479c-be72-8439322c139a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077dd42e-0842-4e7f-83ca-1982a7786ff3",
        "cursor": {
          "ref": "39afde4b-9076-497f-83c0-80a6734a836a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e6bf8cb4-b20c-449a-85e8-fd567effbc07"
        },
        "item": {
          "id": "077dd42e-0842-4e7f-83ca-1982a7786ff3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f7e6096b-8aa8-47e7-a059-7aec655006bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0128f758-90cc-4ba9-a1a8-5a8c6f27ccf3",
        "cursor": {
          "ref": "1a23f647-8362-49df-9641-466ba590ad7a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16620a93-69c6-4deb-a348-4e54db31784f"
        },
        "item": {
          "id": "0128f758-90cc-4ba9-a1a8-5a8c6f27ccf3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "385cf383-760c-4fd0-ace2-0ab4c53b873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb392ce6-c300-429f-8f83-c8be2fabcccb",
        "cursor": {
          "ref": "d91a92ab-9c2f-4b00-aae3-ccb08e74c7e0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "27c19934-c600-4353-a862-945326cfde6b"
        },
        "item": {
          "id": "eb392ce6-c300-429f-8f83-c8be2fabcccb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66eb7ee3-3b89-4bfb-8f5e-eb642915d303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6defd237-12c0-4044-ad73-7f08bf2f259d",
        "cursor": {
          "ref": "2a493dc4-f8e1-40f8-9459-9243b8de7558",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9cef510-31a2-4d3d-a754-e8bc2906f5ad"
        },
        "item": {
          "id": "6defd237-12c0-4044-ad73-7f08bf2f259d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "29f718d4-0df7-4593-8528-56f7b2af68db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687ef32c-a3aa-4189-b8db-b6e0ab6089d7",
        "cursor": {
          "ref": "627e94e4-0cca-49dd-81b4-41f54b619e97",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3a0e73d4-cfb5-42f4-a20b-77311307e99d"
        },
        "item": {
          "id": "687ef32c-a3aa-4189-b8db-b6e0ab6089d7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dd791375-cf4e-41b3-a070-9685353116d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7080de4-ba46-42e0-bf7e-3c44e2ccabd5",
        "cursor": {
          "ref": "0abd640f-6092-4274-a61d-7dffde180a01",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ce9960c9-580c-4bb4-9f59-bbb8ed7bca01"
        },
        "item": {
          "id": "c7080de4-ba46-42e0-bf7e-3c44e2ccabd5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0342f958-5788-41f8-bf91-58e3ef9a8e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02308b6b-6117-4f34-938d-6afe207ae84b",
        "cursor": {
          "ref": "ce249c5a-1159-4124-af99-3b6b16d91ba9",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f26c8c82-b2bb-4bcf-b340-71d91daecf25"
        },
        "item": {
          "id": "02308b6b-6117-4f34-938d-6afe207ae84b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3d772135-ba23-4248-a7c8-1b95d20a5184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0259b8c9-d415-4310-8842-6b697117e6d4",
        "cursor": {
          "ref": "c68ee6b3-962f-4d13-97ea-b40550717a32",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e443529-99fd-4658-b542-60649ed66df7"
        },
        "item": {
          "id": "0259b8c9-d415-4310-8842-6b697117e6d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9e39323-3146-499a-beb5-1c330830278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7236749-d577-47da-8b05-26d84b96a21e",
        "cursor": {
          "ref": "4e976165-ad24-40f5-b076-da382ffe823a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c4e530b-5f2a-48c4-9711-57cd748d7216"
        },
        "item": {
          "id": "c7236749-d577-47da-8b05-26d84b96a21e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4dd3d974-637e-4f5c-a10c-f8b4a9168b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9061b5-942e-4a9a-a4f6-3afca7a947ef",
        "cursor": {
          "ref": "8966c10a-a8c9-4c32-b911-3966f187b05a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4cc20f92-7fea-4c21-aa8a-164aa9109d65"
        },
        "item": {
          "id": "9e9061b5-942e-4a9a-a4f6-3afca7a947ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3af0a383-d775-475a-9548-3e92b1bacfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a831c6-0bd6-40b5-b78b-b940a41ed3e4",
        "cursor": {
          "ref": "f7720304-5ba2-490a-82de-f64467cdcbab",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "204bda47-e8e3-4da3-93c8-c6b3417eab1e"
        },
        "item": {
          "id": "a7a831c6-0bd6-40b5-b78b-b940a41ed3e4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4fa5ce3d-c971-43a5-b567-8b87400a5585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3266f31-bb2f-4ab3-93a0-0fde471fdfb2",
        "cursor": {
          "ref": "761564cc-e3fd-4ad0-86e9-cc0bb44a683c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7318e2d8-1634-4210-ba3f-1e0bb12e245b"
        },
        "item": {
          "id": "a3266f31-bb2f-4ab3-93a0-0fde471fdfb2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d378a2ff-6286-4f60-bdcf-18b8e5ba8c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6fe5b2-095b-41b2-8ea9-3ff5890f318a",
        "cursor": {
          "ref": "42c8ea33-0fa0-4c00-b1a5-a8ed04a5a857",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "54b2be65-f9ea-45f3-b8e3-d8dc56888680"
        },
        "item": {
          "id": "be6fe5b2-095b-41b2-8ea9-3ff5890f318a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "788a92ab-3e80-4e14-8a1f-6f82fb7e5165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f5557-288d-4db7-a323-be60c644fb11",
        "cursor": {
          "ref": "2246f443-e5d6-48e6-8e3d-e89dd56c9a5d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ccde6904-c6da-40ca-8eb4-524074cb95c5"
        },
        "item": {
          "id": "518f5557-288d-4db7-a323-be60c644fb11",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d70b082b-8815-4d7f-a892-df86e248ae75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e198765-da1e-4fde-92c5-a24730b9ef19",
        "cursor": {
          "ref": "29d25eab-1038-4d93-8a6d-2787e14c23bb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b32e863f-9e59-4293-a97c-e0b924674d37"
        },
        "item": {
          "id": "8e198765-da1e-4fde-92c5-a24730b9ef19",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "79885f42-21e7-40c5-8962-a7ee7ae634d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4bb36-c8bf-40e9-8e5d-989dcf3e7923",
        "cursor": {
          "ref": "144e3b7b-abe6-4383-8056-065433165226",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "30746988-f721-4d9f-a52e-7b9b4feedb8c"
        },
        "item": {
          "id": "32f4bb36-c8bf-40e9-8e5d-989dcf3e7923",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "70b49a18-6776-4eb6-9fb7-c04c96c57c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a2decd-5b2c-4142-82d1-a67215eb5a8a",
        "cursor": {
          "ref": "617c5d21-4b83-4d21-9fa5-5a1918492487",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4636e392-c798-4cc4-ab0d-38655f3979cb"
        },
        "item": {
          "id": "65a2decd-5b2c-4142-82d1-a67215eb5a8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "40462f4b-0603-400f-b1a4-85c1d8b84edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce75ed-7675-482f-87f0-53e6e5c63985",
        "cursor": {
          "ref": "9501d0ed-fc20-4fa4-be7c-a8cca25e85bc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5681d3cd-eadb-40f8-a605-462fd33a6df3"
        },
        "item": {
          "id": "03ce75ed-7675-482f-87f0-53e6e5c63985",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0ec35d4-4e80-42ad-9bb0-df1253a57745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeabf0b-e368-4b2c-a681-97ca41bc8f4d",
        "cursor": {
          "ref": "0eb6568e-56a9-4495-a9d9-6f2326726ae9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9700051b-16bf-4ca6-b9bc-f354f80d03ff"
        },
        "item": {
          "id": "1aeabf0b-e368-4b2c-a681-97ca41bc8f4d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e4beae87-e515-40b2-83e8-ba8f8b6b78a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb5be7-d833-4434-a387-6516d6b0a47b",
        "cursor": {
          "ref": "ade0b90b-d659-4422-99a0-fbc9ccad3b5a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fd3e08e0-212d-4f6c-9cfe-2cafb1723edc"
        },
        "item": {
          "id": "d5bb5be7-d833-4434-a387-6516d6b0a47b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86fa481e-d17e-4227-952b-24bab2c6d21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09374be9-5ccb-481b-8a44-b03768eff0e9",
        "cursor": {
          "ref": "75fe4ff2-9367-4520-be5f-f489b9c6e2b5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "06debf2c-e68b-456b-b62d-c5e95fb3898b"
        },
        "item": {
          "id": "09374be9-5ccb-481b-8a44-b03768eff0e9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4d044923-6ec9-4684-b571-e7139c5c61ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082c04c8-1a6c-44b5-b9ba-e5907a4decbd",
        "cursor": {
          "ref": "508b779c-0882-4702-ac4c-48eaa9e53cc1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "48b711f8-9e91-45b2-acd0-c5f85404473d"
        },
        "item": {
          "id": "082c04c8-1a6c-44b5-b9ba-e5907a4decbd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8dce728c-4fc8-42c2-b9b9-6f33ec02a625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef135798-a073-4d39-b033-565104eada82",
        "cursor": {
          "ref": "7591d46d-a7af-461e-af37-2a41af9cee7f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a28763a8-0247-43c5-9eae-8cd29a12e9de"
        },
        "item": {
          "id": "ef135798-a073-4d39-b033-565104eada82",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f691fc78-b25c-4b38-a3cd-9f3849ad24be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7a11f2-563d-447f-aeb1-c3572280730a",
        "cursor": {
          "ref": "410ddb1f-3230-458e-9256-911283070080",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0b7e041c-6126-4ae3-b458-487a15b713e5"
        },
        "item": {
          "id": "6e7a11f2-563d-447f-aeb1-c3572280730a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "84f4e220-a18d-43a9-afd8-14c183eda1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8128169e-7686-440b-80b6-2f60fefc3093",
        "cursor": {
          "ref": "a7b77a89-7b19-4971-8730-c0afd4538f6b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "31639495-cb92-4a15-8994-c5595dfbe885"
        },
        "item": {
          "id": "8128169e-7686-440b-80b6-2f60fefc3093",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7124617e-e0dc-4df9-ac61-d90c68f3eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c23ad40-1138-44ef-9137-a09084c4d4b4",
        "cursor": {
          "ref": "c07e47cd-8fa5-45cc-a3f4-a657ad3f6125",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7e0c3571-f553-4a51-b1b3-f875bef41d7c"
        },
        "item": {
          "id": "1c23ad40-1138-44ef-9137-a09084c4d4b4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "744a6b80-3924-4389-a4ca-a258b855f539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c7fb9f-282e-49e3-93e2-650087319cd8",
        "cursor": {
          "ref": "9d7b9e61-8d74-4d18-adda-55eed757f413",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4159990c-470d-4ae7-ba2a-20802172a30d"
        },
        "item": {
          "id": "d9c7fb9f-282e-49e3-93e2-650087319cd8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cdfb7608-df1d-4e40-90fb-54de4902d1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aecf35-28f4-4d87-bb5b-cff29903ef64",
        "cursor": {
          "ref": "e551f3f2-6db4-4c8e-94a1-971b6f4528d9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6177ca1f-f496-4db0-a5bc-7fd9e360362b"
        },
        "item": {
          "id": "e2aecf35-28f4-4d87-bb5b-cff29903ef64",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c8db78ec-52be-4a00-93f9-a89e545d2721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03a0de5-de16-4e4a-bcf3-bce344a4998c",
        "cursor": {
          "ref": "36e6b227-e033-4f40-9269-4ec658abd31d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b1bbac5e-9705-45af-b074-692a4a61622e"
        },
        "item": {
          "id": "f03a0de5-de16-4e4a-bcf3-bce344a4998c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e475c6d2-351c-463f-87a1-9f85153eab9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60747726-e270-49bd-bbc5-a321ec9057eb",
        "cursor": {
          "ref": "5e84f87a-fc56-4c52-8c37-f426818d5fba",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8f01ec00-6711-4590-8ed4-ae3bceaf2b2b"
        },
        "item": {
          "id": "60747726-e270-49bd-bbc5-a321ec9057eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b87d3393-0277-421d-8448-ce22ce4bbcba",
          "status": "Created",
          "code": 201,
          "responseTime": 7831,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0fe698-9cd5-427e-8d35-0f0ded26fd3e",
        "cursor": {
          "ref": "08257bfd-f10c-4a92-99f4-9b6b7b6e52c5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7d03f6cc-4895-463b-abd4-1af71ab46ad7"
        },
        "item": {
          "id": "0d0fe698-9cd5-427e-8d35-0f0ded26fd3e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39f1f30f-6d22-4342-9793-d9307827a89b",
          "status": "Created",
          "code": 201,
          "responseTime": 7818,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70471b9-c65a-4965-ad95-9d0fc510c44a",
        "cursor": {
          "ref": "5c6f75cf-5ac2-4eda-96c7-a2b61a2e2a97",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cc2bbfbd-96f1-415d-bc96-74ba5da26710"
        },
        "item": {
          "id": "a70471b9-c65a-4965-ad95-9d0fc510c44a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f8d258cd-ef5b-4bdb-b031-04a0b8a5c85b",
          "status": "Created",
          "code": 201,
          "responseTime": 6291,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9891a435-74bb-4288-aeba-6efbe4cfe939",
        "cursor": {
          "ref": "fffa6c5e-6984-4329-83d0-a833840da979",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d33ae466-1764-4685-914c-23ca599edbf7"
        },
        "item": {
          "id": "9891a435-74bb-4288-aeba-6efbe4cfe939",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6937b03f-ce21-4b75-9ecb-b760e40bcc6a",
          "status": "Created",
          "code": 201,
          "responseTime": 5477,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9510a89-21df-4db7-a74c-34e57fd9943e",
        "cursor": {
          "ref": "1dde5656-46a6-4055-87ca-d61613f810b0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4d81488b-4143-4f6a-88a8-c2c47f29394b"
        },
        "item": {
          "id": "e9510a89-21df-4db7-a74c-34e57fd9943e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6390d7c5-4cfe-4515-a05e-60feb641422e",
          "status": "Created",
          "code": 201,
          "responseTime": 5774,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fdc52a-ec40-49ab-ac21-f35eefa38d23",
        "cursor": {
          "ref": "38b06b5e-f43c-4c96-87fc-dc309356e322",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d66d5ece-71c5-4853-9d03-03ada9e32a7a"
        },
        "item": {
          "id": "c6fdc52a-ec40-49ab-ac21-f35eefa38d23",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "55b38ad5-38ff-48bd-9309-bb65bd18b9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "77b68b1e-5812-4828-9736-d56ca37546dd",
        "cursor": {
          "ref": "f9708338-ed50-48d5-8027-b6bb6ac08372",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "eb15165e-6717-4333-9527-bd6ef39b258d"
        },
        "item": {
          "id": "77b68b1e-5812-4828-9736-d56ca37546dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a00e559d-1689-44d4-bb60-919810bcf474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93176306-92f8-470b-8375-0db8dc066d26",
        "cursor": {
          "ref": "e833720d-a907-483a-ac73-ad5306023dda",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "09ae1edd-2f07-4c84-9557-c59d12696bf6"
        },
        "item": {
          "id": "93176306-92f8-470b-8375-0db8dc066d26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7bccc25-da42-46af-8a8b-a18751451204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b768424a-ed63-44f8-8c27-ee178a9403ee",
        "cursor": {
          "ref": "8b805e95-f477-4784-b9ec-66e024eabf2c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6290203e-f628-4c11-a473-30a0561ee994"
        },
        "item": {
          "id": "b768424a-ed63-44f8-8c27-ee178a9403ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3a2caeaf-7ae1-4a46-87c4-2b5f84b2be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61818d4d-b880-4f62-a381-b11fab01c1aa",
        "cursor": {
          "ref": "4aca7c75-72f9-4bb8-8798-88c43b100886",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f3af1812-fbe5-4f08-9453-4165fbe2a018"
        },
        "item": {
          "id": "61818d4d-b880-4f62-a381-b11fab01c1aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "652362bb-8b62-446b-a48b-3dc3145191df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dec527b-cc52-4a01-9025-b7e405f914b5",
        "cursor": {
          "ref": "409c61b2-a458-41aa-985f-c48dfa3350d3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "45366f9b-2e7c-43d8-a385-84f5d5713121"
        },
        "item": {
          "id": "9dec527b-cc52-4a01-9025-b7e405f914b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e046bd37-0987-4810-ac9a-2557065ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ce2fc7-f029-41ef-bc4e-5c5fcd0b07f5",
        "cursor": {
          "ref": "c75409a5-6994-4ea2-85ef-8647c245566f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b16cc1b5-c8fb-4d7c-b491-84f4bb08ddd2"
        },
        "item": {
          "id": "d8ce2fc7-f029-41ef-bc4e-5c5fcd0b07f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "92abb62e-9541-4aff-a74e-8209b5c4b20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7361e352-dcc9-437c-bed0-ce899a682bad",
        "cursor": {
          "ref": "1a35e874-ddf6-42cd-bd03-b91503a15d05",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1df9d309-c2ee-47ef-932c-ce5cf20bec24"
        },
        "item": {
          "id": "7361e352-dcc9-437c-bed0-ce899a682bad",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9147b2e1-3c91-4a70-a8b2-59e1307c1a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013c5f56-9d71-4c20-9f6c-2388d6904f87",
        "cursor": {
          "ref": "c73b5e06-1600-41a6-8c38-608cb0792ae3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d71b4b0e-3317-473a-8af5-07f35e550d0c"
        },
        "item": {
          "id": "013c5f56-9d71-4c20-9f6c-2388d6904f87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "31f9b03a-9678-419b-8cd2-c3ede131a5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32acb88-998f-4ec7-ae75-a8af82d9d25b",
        "cursor": {
          "ref": "57695d5d-c348-4573-b2ae-106c93f6df45",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a1de5ab9-9285-41a4-8c04-59ce85979ef6"
        },
        "item": {
          "id": "d32acb88-998f-4ec7-ae75-a8af82d9d25b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6adb3db5-627f-4fd0-91c2-1905034d638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe0e6d-0f91-45ff-a3e1-c24fa8591f43",
        "cursor": {
          "ref": "38835d65-09bb-4f0c-9bfe-16ef6a1f19e2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f53cb217-2bbe-4bcb-88a8-5e451a38445b"
        },
        "item": {
          "id": "bafe0e6d-0f91-45ff-a3e1-c24fa8591f43",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "93745699-840c-4728-9521-58b7e185f96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc53d1c-a66c-484e-8f15-a9dabc5cc621",
        "cursor": {
          "ref": "6da610e3-8394-4e4e-9792-c89cf42cb6df",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c5ed3a05-d845-4e47-a510-0d1e4cb30995"
        },
        "item": {
          "id": "0fc53d1c-a66c-484e-8f15-a9dabc5cc621",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3c62e451-884f-4224-b74a-795509ae8525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2446ad-42ee-4ff0-a10b-01f55208995b",
        "cursor": {
          "ref": "0a6661e3-1e98-4b01-a94d-64f9562a0750",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4be88498-6185-47ee-945c-0089eeec70d0"
        },
        "item": {
          "id": "1d2446ad-42ee-4ff0-a10b-01f55208995b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e818b4a-fe34-42fc-b062-efda98a30513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f0a38-c70f-4bb5-af20-e2d1c220a3ff",
        "cursor": {
          "ref": "31e8cd8a-2dfd-44b6-a983-180d5fb0c474",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2ff1556b-049c-4f7a-bf3d-ab56dc8c756a"
        },
        "item": {
          "id": "b74f0a38-c70f-4bb5-af20-e2d1c220a3ff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f9634ac-4585-4127-8ae0-ec3a2d45b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b322bb-c2ee-4823-9132-57a7e0c66cda",
        "cursor": {
          "ref": "c3a67431-dadb-405b-a2d2-3feb142b96f2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5c595163-c2a2-440a-adc8-54ef048a7aca"
        },
        "item": {
          "id": "33b322bb-c2ee-4823-9132-57a7e0c66cda",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8819b1d-2c60-48a5-b8a4-5eb19a3cf486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138dba0c-7687-4e79-bc03-559ef7c270f6",
        "cursor": {
          "ref": "d6b0e7d6-46cc-44b0-ba78-9a4155a8fbf7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0dbdc8e5-d645-4491-ae25-4d956135722b"
        },
        "item": {
          "id": "138dba0c-7687-4e79-bc03-559ef7c270f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3bc2bb87-ba43-4c77-b257-d34f04eaf13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ef6f3e-7640-4f14-823c-04326fad6003",
        "cursor": {
          "ref": "8f5991df-6dee-4e2b-a643-4e66ffc786e2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "64cd09da-ed2b-4f10-a8ff-e445d316ccbe"
        },
        "item": {
          "id": "61ef6f3e-7640-4f14-823c-04326fad6003",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "26c43411-dbf8-4d1b-84c5-c43e8637741d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190dbd16-d9a4-4101-8390-89b36d24a40d",
        "cursor": {
          "ref": "8572eec7-890a-40ad-84bb-9f02155c186b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c8c8236b-27cd-4183-b7fe-0fdb406b90fe"
        },
        "item": {
          "id": "190dbd16-d9a4-4101-8390-89b36d24a40d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "94c24378-8381-4541-831a-a7692225e4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7e670e-6f53-4bad-86c7-2f96c6399310",
        "cursor": {
          "ref": "4858c2c3-dce9-4041-808a-9cdb57d128ed",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c20dbfd7-6d7c-4cb3-8679-b4f79d0a56d7"
        },
        "item": {
          "id": "2e7e670e-6f53-4bad-86c7-2f96c6399310",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee32fb0a-5314-4562-85d0-e9dabe30108b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7843c7-8117-4de0-87ed-f1e69b362fe3",
        "cursor": {
          "ref": "05f0226d-4388-4b8f-aafa-daffab77639e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9f4d41eb-51c3-4d2b-964a-bff4195e2329"
        },
        "item": {
          "id": "bb7843c7-8117-4de0-87ed-f1e69b362fe3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e6aa445a-c58b-4f29-8e54-0bc5e65c8f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d8b6e0-2c4d-4ac7-bc37-47a35e3f19b8",
        "cursor": {
          "ref": "c6b3a003-9b18-43bd-be3e-f027289e6f3c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1176a844-b262-44b6-a159-67fc45060340"
        },
        "item": {
          "id": "19d8b6e0-2c4d-4ac7-bc37-47a35e3f19b8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81023e01-dff3-4856-bee1-ee2689a78c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a38f516-da64-4b42-bbce-89d3bf2aa42f",
        "cursor": {
          "ref": "e950c89f-0515-4cac-8c66-99602e8902ee",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0c106c97-ceb9-4a8d-b854-3e83a99fd8f5"
        },
        "item": {
          "id": "5a38f516-da64-4b42-bbce-89d3bf2aa42f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4e14346-ac91-4548-af88-d2a8c03ae030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4399678b-b471-4b62-ab5b-ccf28032a431",
        "cursor": {
          "ref": "2303716a-52b8-4678-95ef-3c99c486be10",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2bd45f0f-fb2d-4302-af3d-3fe36e08b1a8"
        },
        "item": {
          "id": "4399678b-b471-4b62-ab5b-ccf28032a431",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "56f2ecfc-e0e1-45a6-a376-f183fb7c4682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5795659-2ee1-49a2-8264-a1f0700ab405",
        "cursor": {
          "ref": "a2c399ec-aca4-4f21-8c36-465af34f89ea",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b9d97a55-6a56-4733-871e-627edab7c2c9"
        },
        "item": {
          "id": "e5795659-2ee1-49a2-8264-a1f0700ab405",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7265dbfb-0740-46d4-8aab-e7783ef976a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff1fd5-376c-4356-b66b-48c193b92456",
        "cursor": {
          "ref": "f447d6d0-2560-467f-9962-970f75137ec4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e31bd7a8-8bd0-4f00-84c3-6cd2b7540df3"
        },
        "item": {
          "id": "c5ff1fd5-376c-4356-b66b-48c193b92456",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87171a8a-409a-4653-81a7-88bf7fa4202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc9009c-1b82-48af-9da7-9e55e362bff4",
        "cursor": {
          "ref": "ea51e98f-2f9f-4e0e-81c7-623f88859933",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8c5b383d-1f4e-4edf-8bb5-1f00f01494a7"
        },
        "item": {
          "id": "bdc9009c-1b82-48af-9da7-9e55e362bff4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bf6f2757-2c06-41b3-8e55-80f736faa6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af760db9-4247-4188-b529-b95718f03ce2",
        "cursor": {
          "ref": "0750f6f5-6a2e-4972-b027-f57a3b571770",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4a41b09f-fba6-45cd-b7e8-d3ede5babda8"
        },
        "item": {
          "id": "af760db9-4247-4188-b529-b95718f03ce2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "844c9d7c-32e2-405f-966e-bf90a173252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f70985-c36d-44ff-af82-237be4413738",
        "cursor": {
          "ref": "4ccad644-4e4f-4d48-888f-2bbdac96c4a3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f74e5327-e4e7-4ef4-bf8a-a7c53c35b029"
        },
        "item": {
          "id": "f0f70985-c36d-44ff-af82-237be4413738",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "33ae83a3-6a96-490e-9686-267e210a2fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a6a9b6-096b-4307-8341-01ce3142c579",
        "cursor": {
          "ref": "607310d8-5c00-438c-b45f-b7784bdf31a4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "13d2ade5-1d2f-4096-84b6-3a26cedc3521"
        },
        "item": {
          "id": "45a6a9b6-096b-4307-8341-01ce3142c579",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7502d470-f89b-40a0-90e1-b96c3ba4819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9252a0e0-6213-4507-92b7-28f171b323b8",
        "cursor": {
          "ref": "a2d48f3b-da80-4b69-983c-0cabaa54bb8a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "da7f018a-26d5-4408-a133-1983dbbe50f0"
        },
        "item": {
          "id": "9252a0e0-6213-4507-92b7-28f171b323b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "202f91d9-7c2d-4b17-a996-008cf273b5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756faa7c-e6e8-4ada-b4b2-062d487dd87e",
        "cursor": {
          "ref": "3c7e4f66-a97f-4726-8fb7-c573fe753fe4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b4d0c35-35f3-40e0-87eb-6f16f3804d28"
        },
        "item": {
          "id": "756faa7c-e6e8-4ada-b4b2-062d487dd87e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a168b3ee-0126-4e12-9244-18c1d3adb671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9c98cc-8262-48a6-a619-16b69de0c3fd",
        "cursor": {
          "ref": "8c63e9ae-56c5-4add-992a-bf8ca4d75466",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "17c93a53-97e9-4771-bf9a-3b5531c782ad"
        },
        "item": {
          "id": "4d9c98cc-8262-48a6-a619-16b69de0c3fd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20eb33e4-5aab-4d62-94e6-b7fd2c91ab39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb11e64-2aaf-41e7-a127-319d1e130428",
        "cursor": {
          "ref": "3cc15dbb-6ffc-4453-8e86-70273d80a358",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3f1c5616-daa2-4ba7-8a47-45786c711104"
        },
        "item": {
          "id": "afb11e64-2aaf-41e7-a127-319d1e130428",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4c495f9f-578e-4c58-8a25-f2c6e44f89b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a92fdf-0b60-407f-ab7e-ff31d18cb612",
        "cursor": {
          "ref": "0a1ee956-583f-4825-83b9-9f631276ec1d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cb0913d5-a286-410d-a054-596621773971"
        },
        "item": {
          "id": "74a92fdf-0b60-407f-ab7e-ff31d18cb612",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b04492f9-e497-49b3-9084-52989d4727b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fff9ab-4287-496f-9fe5-2bf6a6cd24da",
        "cursor": {
          "ref": "f3da30d2-dc86-4340-890e-176e02d2ac73",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3898a4c-e806-4c0a-b6a2-7bc9c7b32e1a"
        },
        "item": {
          "id": "29fff9ab-4287-496f-9fe5-2bf6a6cd24da",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bac78249-8ae5-497e-9865-6b90a2e050c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69387c4a-4278-49b2-9a8f-26ca11b8615b",
        "cursor": {
          "ref": "4308f192-1e07-4294-a4fe-5d96c7f3ca40",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ea1d548-9c32-4139-bd6b-476f0a183e03"
        },
        "item": {
          "id": "69387c4a-4278-49b2-9a8f-26ca11b8615b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5b4d245d-4629-43c7-bf70-17f202f3de23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2f11da-9912-4341-9108-158e6a70c8e3",
        "cursor": {
          "ref": "eea41eeb-74dc-4718-a294-55d61894e13d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20e6fb97-7919-4297-91d0-f03987d7dcc2"
        },
        "item": {
          "id": "da2f11da-9912-4341-9108-158e6a70c8e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2271d7ca-5661-43c7-95c2-524a733569bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee037f98-876d-4604-8b6a-0fd6cfc43be4",
        "cursor": {
          "ref": "1c2d9668-e04d-45be-b59f-7dd7287c8c96",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "045ea658-0d0d-4ddc-9090-3c9d2c2df230"
        },
        "item": {
          "id": "ee037f98-876d-4604-8b6a-0fd6cfc43be4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "be6e28e0-cacd-4c22-96ec-9d7603e06535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227701d6-1451-4c40-9135-25372b0ef288",
        "cursor": {
          "ref": "b9bbd537-8fbf-463f-9948-10d38542f083",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4a6f7327-0825-4ce0-82f8-f229407c7c70"
        },
        "item": {
          "id": "227701d6-1451-4c40-9135-25372b0ef288",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bf7380df-19c3-41f9-aa46-f53850e9e68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ffbaa1-d75e-4bcb-a3d7-68c6327b3137",
        "cursor": {
          "ref": "aa8ce964-2edd-462b-97e3-c80265b2a6cc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "958b9b6f-497c-486b-afd1-505c4231a3ad"
        },
        "item": {
          "id": "31ffbaa1-d75e-4bcb-a3d7-68c6327b3137",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1bcbb0e8-70e2-4875-95e0-d00002fea07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dd8c2e-eca8-4f0c-a52f-e9b4865d67e5",
        "cursor": {
          "ref": "e0858b99-1e24-4910-96b7-702ff8832447",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9303af86-c964-412e-8a2f-176a928c89a0"
        },
        "item": {
          "id": "d6dd8c2e-eca8-4f0c-a52f-e9b4865d67e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f1ea2e0b-5bf5-4de1-8621-bbe34cf9eb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e3a270-c11e-4dd5-8b71-79e7b50a6145",
        "cursor": {
          "ref": "37da068c-01ca-40d7-b70a-12eb4adce39e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b354162c-6d7e-4911-9f61-f1194d4d7041"
        },
        "item": {
          "id": "36e3a270-c11e-4dd5-8b71-79e7b50a6145",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8e9a6b8-0bee-4f36-9dcd-76803ab4e5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b650adf3-8f1d-4fec-bd0c-ddd83334cbe2",
        "cursor": {
          "ref": "07f0c554-a236-4258-a140-d90db0ad3e20",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "93800a87-a18c-4fbe-8af9-3081166f738f"
        },
        "item": {
          "id": "b650adf3-8f1d-4fec-bd0c-ddd83334cbe2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "44baa848-5e71-49a2-aa62-e0704a53aa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc9e3fe-eafe-472c-82e4-f9ed3559dba7",
        "cursor": {
          "ref": "c5c6fb7b-0040-453c-b1d9-a8cb682977d1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7d6404df-8179-43c0-a176-0b2338cbd804"
        },
        "item": {
          "id": "1cc9e3fe-eafe-472c-82e4-f9ed3559dba7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b627ef44-688b-4546-9caa-2f27fb2f98ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bf9a41-6f5d-4ba3-8dfd-7aea1dd1f273",
        "cursor": {
          "ref": "31a30cf1-d2a5-450f-86db-5a08681779eb",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "329fb2e8-5c7b-48cc-8998-b38dfc0120dd"
        },
        "item": {
          "id": "e4bf9a41-6f5d-4ba3-8dfd-7aea1dd1f273",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3fd87b96-4f14-4f26-a77e-96cc9e0e084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2b90e-b942-4642-aa32-08958a87c960",
        "cursor": {
          "ref": "5465c872-b99e-4086-b22a-2af7adf49873",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3ebcb3c4-5d86-428f-a27b-6781dc6a4c6a"
        },
        "item": {
          "id": "42e2b90e-b942-4642-aa32-08958a87c960",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d8ae77d-c60c-4cb6-af6e-4973dfbd4114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb33e1af-b10d-4346-926f-5f8827703cf4",
        "cursor": {
          "ref": "1e416ec4-4ea9-4239-8f4a-dd39667c16bb",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d695187-2e29-41ad-b43b-a0ddc46524a2"
        },
        "item": {
          "id": "cb33e1af-b10d-4346-926f-5f8827703cf4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75e6dbe7-5271-4571-97ba-ca0b0b44faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03166a1a-c605-4e07-af7f-9faf5fa6ba2e",
        "cursor": {
          "ref": "ff494fb0-b187-4964-9324-f897552c727a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4bd46b43-5da6-4b22-b710-b254c73f270f"
        },
        "item": {
          "id": "03166a1a-c605-4e07-af7f-9faf5fa6ba2e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dbd5f81-09c4-4c74-afed-823540c759b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41628ed8-5350-49c9-92e3-82a52fa6a1d2",
        "cursor": {
          "ref": "ed718dd8-3a20-442a-9ad1-89fefd19e2c3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "346c64f6-c730-4fac-b9d3-090f532494bc"
        },
        "item": {
          "id": "41628ed8-5350-49c9-92e3-82a52fa6a1d2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8af3acad-c4f2-470b-a651-0b1b6aec7693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b95848-4802-4ff7-af28-64e00e0b1e41",
        "cursor": {
          "ref": "b2e2546d-8169-42bc-9230-ecff4f202189",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8b6bf517-39bd-48c8-b43a-caecc112ec7f"
        },
        "item": {
          "id": "c6b95848-4802-4ff7-af28-64e00e0b1e41",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5166e901-5cf9-4214-8cf8-b23ebb18bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37735849-7621-42fd-bc2e-b3d9bf1ac43e",
        "cursor": {
          "ref": "e3e79473-896d-478d-bac8-902b0c5ede98",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ec2ef2f-3d92-49bf-b451-b8140de811ad"
        },
        "item": {
          "id": "37735849-7621-42fd-bc2e-b3d9bf1ac43e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84e86ef2-d6d2-4cf7-94a8-150bb908bbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd422a-2c22-49f2-90c2-04db4d3b58ee",
        "cursor": {
          "ref": "52d59f5f-9407-413b-ae9e-ef1b0e86cce9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3069fe3f-7cf9-475c-bec2-350842c411e1"
        },
        "item": {
          "id": "03cd422a-2c22-49f2-90c2-04db4d3b58ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70e100e2-24ad-449d-9472-b09ef252a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de183f2e-03e1-48ac-9894-ef4141d6e8a5",
        "cursor": {
          "ref": "1259d19e-dd59-4632-bb9b-48d828be9738",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0813e82d-c1f1-445b-be73-c09a6a73c639"
        },
        "item": {
          "id": "de183f2e-03e1-48ac-9894-ef4141d6e8a5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ee67f08-09a1-4356-90cc-6ee7ec722161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f4cd5f-ab89-42a4-b53e-13505d745ac3",
        "cursor": {
          "ref": "5b1d1a42-e5f1-4dcb-83a4-e3a608454084",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a8f13ab-d8b9-411a-b3a4-1bf505c03cb2"
        },
        "item": {
          "id": "d4f4cd5f-ab89-42a4-b53e-13505d745ac3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b477419-3163-4e37-82df-b0ab049d79d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c7a384-ccf3-468b-b5b5-993df1526f0e",
        "cursor": {
          "ref": "cd83db4f-5c27-4da1-9fe5-9d8d15870f24",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "23bd534d-304a-48c1-96cc-31bbc8b62886"
        },
        "item": {
          "id": "97c7a384-ccf3-468b-b5b5-993df1526f0e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "951dd461-5de1-4338-9ae2-a1b1220bdaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae63fd5b-7d20-45fc-a8b0-d249187f6281",
        "cursor": {
          "ref": "c044fb75-f20a-43c1-9a0a-2c7a79a4696c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d0f42a49-2d33-488c-a6d2-cacb6bed8b7d"
        },
        "item": {
          "id": "ae63fd5b-7d20-45fc-a8b0-d249187f6281",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ae5d4a5a-c307-442d-afb6-d0d6b5f7515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e186f672-1e6e-410d-a9fb-3bdfa378f527",
        "cursor": {
          "ref": "674ad0ef-e486-4584-abe9-2418ac07e060",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6873a104-5c92-455c-a63a-eb4e3c586506"
        },
        "item": {
          "id": "e186f672-1e6e-410d-a9fb-3bdfa378f527",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7855a287-c55e-4abd-aa8d-b911abcede06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043a37e3-cb4d-45a6-b8e0-f9e3cda7cb17",
        "cursor": {
          "ref": "6043eac1-59cb-4c08-9f4d-bf31e9dc6dcd",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7c05a9b6-a37d-46a9-adaa-f2b98e4facf9"
        },
        "item": {
          "id": "043a37e3-cb4d-45a6-b8e0-f9e3cda7cb17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e045856e-073b-4ce5-a668-6431736474a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e267aed-87a4-4aac-913c-85eb047f190c",
        "cursor": {
          "ref": "e6592276-6e68-4679-a1d9-d3159112ecac",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "01b44615-eb3f-4abe-af11-e803fa45a6ee"
        },
        "item": {
          "id": "0e267aed-87a4-4aac-913c-85eb047f190c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ff01307-ffe8-4363-817a-1899912d052c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a11f2c-05e3-4423-87d8-b18c5053ab6c",
        "cursor": {
          "ref": "e01e8a55-ddf7-447c-b342-54ba06f66819",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da757e6a-cdcd-452a-8830-ad6a46484d7e"
        },
        "item": {
          "id": "47a11f2c-05e3-4423-87d8-b18c5053ab6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab3144ae-00e8-4960-a102-2dbaaa9efcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a2707f-0c3d-4f95-9fe3-86cf6968837e",
        "cursor": {
          "ref": "c7993443-5a0a-427f-ac63-f3154c401202",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "27ac8742-c0dd-4e0e-9528-c076648f01be"
        },
        "item": {
          "id": "b9a2707f-0c3d-4f95-9fe3-86cf6968837e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "892d6739-3c9f-4efc-965d-08c7ab5c277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c8c38b-fca1-497b-b458-9e03360cf1a6",
        "cursor": {
          "ref": "7c017bb6-80d2-44a3-8676-a570d26d671b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "baec4897-0532-4c16-a0d9-f30f691c61de"
        },
        "item": {
          "id": "35c8c38b-fca1-497b-b458-9e03360cf1a6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db8b506c-d340-4b11-8fa0-a13a1c3590e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27838029-451d-4e88-a59b-fbe6c228cc07",
        "cursor": {
          "ref": "496089d3-b174-4b33-9048-19bc4a4e5bfa",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d11daa69-7af8-4cab-8b5d-308e621b4668"
        },
        "item": {
          "id": "27838029-451d-4e88-a59b-fbe6c228cc07",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d8c999bd-56c2-4856-92fe-74d07eafc846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fd8455-8c9e-4b34-962d-68d52b8d4d8f",
        "cursor": {
          "ref": "bf461c09-a19c-4baf-9df7-d2133eb2eb14",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0a495d4b-e994-45cc-a8e4-45b1fb935519"
        },
        "item": {
          "id": "f3fd8455-8c9e-4b34-962d-68d52b8d4d8f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb7066f0-b7cb-4b91-9672-8c2920785320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8972cd3-3688-423b-af86-c07a7978b800",
        "cursor": {
          "ref": "440a8f3c-6931-4c4f-a29c-3fad91267d72",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f8c5eba8-6239-4a23-9c11-c8e3c1bea41e"
        },
        "item": {
          "id": "c8972cd3-3688-423b-af86-c07a7978b800",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e993eb54-9dc1-4154-ba53-2e9e0aa769b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957d90c5-faa1-4d9b-a644-58d66fbc9d7f",
        "cursor": {
          "ref": "9bc3561e-16e2-4efb-8b71-6fd0b5e4ad1a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b00a5c7-61ee-4707-ae54-af00a3537f77"
        },
        "item": {
          "id": "957d90c5-faa1-4d9b-a644-58d66fbc9d7f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b61d0ee6-58b9-4638-b5c8-fdcb3785fa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518d859a-2abf-468a-8aaa-754f457a4606",
        "cursor": {
          "ref": "66b85452-9c78-41d9-aa75-4d749ee09629",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1109c462-b6e2-4db2-8274-1a75fa402b14"
        },
        "item": {
          "id": "518d859a-2abf-468a-8aaa-754f457a4606",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb0bddef-f0c7-44f0-bb11-31b33e7fcd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c666dc3a-9fb5-4247-8963-9809fd4230e1",
        "cursor": {
          "ref": "cdc6e2a9-8403-42a0-a5b6-e27e57a5dc2b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "33c4dd59-1f99-43a6-82e0-7b36c8c5ccc8"
        },
        "item": {
          "id": "c666dc3a-9fb5-4247-8963-9809fd4230e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "53c3d294-a9bc-44d6-a44e-9afab803f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a888b0-0835-4bc6-836d-5a3bd9723879",
        "cursor": {
          "ref": "a67ac54c-4481-4848-95bd-8b014659339d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84c3044d-fedc-4bf1-a290-38efaea826a3"
        },
        "item": {
          "id": "96a888b0-0835-4bc6-836d-5a3bd9723879",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "046a2c3d-2065-4573-9b45-afaea628c05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0b6d80-e11b-4754-910f-a1ab163ed4f1",
        "cursor": {
          "ref": "4bf94a94-74e1-42d5-a613-1611fe9b4495",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e34d3028-dc04-43fa-b3cf-57d708285365"
        },
        "item": {
          "id": "4c0b6d80-e11b-4754-910f-a1ab163ed4f1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f253912d-b9f3-4428-8891-f4b9f9fd9827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b1152c-0d4b-4b0c-b58c-9848a96c545a",
        "cursor": {
          "ref": "400c02bc-2b72-4f5e-994d-976888a2bd14",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fcfdafa6-171d-4630-b995-7866cd5175d2"
        },
        "item": {
          "id": "b7b1152c-0d4b-4b0c-b58c-9848a96c545a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b268825e-262c-4d77-ba9a-86360ac59b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42db6c-ea1c-49dd-8415-8b337877929c",
        "cursor": {
          "ref": "159ad4a3-e7ca-46e8-8cdb-f2769771f39c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0020a185-6e99-4d2e-bdc3-3d82018822ed"
        },
        "item": {
          "id": "9f42db6c-ea1c-49dd-8415-8b337877929c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3c95b495-383b-4b07-ab79-996c39fd8435",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedc0bb0-d2be-433c-b657-a438c672f085",
        "cursor": {
          "ref": "e4323266-af53-4ffc-8aed-81a79c498652",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "04a25a3e-ce17-483c-a410-cc8b92a7b5e1"
        },
        "item": {
          "id": "dedc0bb0-d2be-433c-b657-a438c672f085",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "704daa57-20fa-4195-b807-aad1e41c2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39624f62-5cc9-44a9-a90c-2286b64e83fb",
        "cursor": {
          "ref": "128e41c2-aa86-415c-88ea-4f4c51e3c590",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1939c622-234b-48a0-8619-dc380b6d90b4"
        },
        "item": {
          "id": "39624f62-5cc9-44a9-a90c-2286b64e83fb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a11d1502-15b2-4679-8119-2b798cd894c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f662452c-d867-4040-9ab3-6dd61de72292",
        "cursor": {
          "ref": "85e6edf9-ce5a-49db-a90d-c258d9343d8d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8b40cd9e-8caa-4f92-9c80-285011b1d7ae"
        },
        "item": {
          "id": "f662452c-d867-4040-9ab3-6dd61de72292",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fbf003da-c10d-4699-8b57-8e2274144e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d722d3-624d-4645-9be3-e64d2eee6a1b",
        "cursor": {
          "ref": "1671c4f1-28d8-47e5-bd6e-3d0cb69d9ea3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "66c9d1b4-fe49-4be9-91b4-d92fc2577ed3"
        },
        "item": {
          "id": "83d722d3-624d-4645-9be3-e64d2eee6a1b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4de3e1f-694b-4999-98df-6a99a16f7e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ed7371-9c01-46db-b09d-aff39db5c31f",
        "cursor": {
          "ref": "c0d383f8-082e-4f75-84a9-5d737d444a1c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e1eb631a-5f88-4397-9c01-96cf4ae239db"
        },
        "item": {
          "id": "c8ed7371-9c01-46db-b09d-aff39db5c31f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dcd70f72-293b-4aed-8788-71537e231c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3d823-ecca-4297-a525-f8ccae6c1a89",
        "cursor": {
          "ref": "c5b1d601-a7d1-403d-923a-064eb79239ed",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "952d9462-33bf-4e02-a869-14bdead296b4"
        },
        "item": {
          "id": "aea3d823-ecca-4297-a525-f8ccae6c1a89",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c1711a6b-30ea-4c69-9b11-d609c299f8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801d3251-1afd-4765-ba54-72e338d14c86",
        "cursor": {
          "ref": "ef2977d6-8a0d-4682-9f3b-1e8ef2465783",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "486de600-3aa5-4a95-a2cb-239f2f742675"
        },
        "item": {
          "id": "801d3251-1afd-4765-ba54-72e338d14c86",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ee9dfe75-1ac9-4f05-94db-0e1c18286094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67178387-8837-456f-a97a-a27788c2db54",
        "cursor": {
          "ref": "95dc17a3-d2c2-456d-8423-26c62834c4e3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44d4b9d4-f0b3-417e-95e5-72b1fe1c26de"
        },
        "item": {
          "id": "67178387-8837-456f-a97a-a27788c2db54",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75e2e9a6-8dcf-4475-9550-5a832df217f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab69150-a488-4c75-a97d-eb688a5c9756",
        "cursor": {
          "ref": "27165d43-59ea-422f-b9fe-508b6a8c9c1c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8bc3b891-9dc7-4e0e-9534-c76ecb3513f4"
        },
        "item": {
          "id": "9ab69150-a488-4c75-a97d-eb688a5c9756",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a415c9ef-513e-4d66-ac40-85ee2709cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b448227-6d3e-4b10-aac0-19f324491e2a",
        "cursor": {
          "ref": "6f31dc30-dc24-4377-bdf2-352e22dff7c8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95caa787-3ecc-43f8-beaf-51c7042f6286"
        },
        "item": {
          "id": "5b448227-6d3e-4b10-aac0-19f324491e2a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "08f54359-fdc5-4f4b-ab71-ffe7288f9efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d46b8c-b3ac-4a0a-9506-5e66798c71f5",
        "cursor": {
          "ref": "51fb5c41-8093-4f92-bcf4-e42475a3ee45",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "db7e182a-8579-41b5-8519-838105b0e15c"
        },
        "item": {
          "id": "63d46b8c-b3ac-4a0a-9506-5e66798c71f5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e4cd62da-0821-4bef-9727-33d18b9ecf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44638b37-8b14-46ec-9ea7-12e83bc0b01e",
        "cursor": {
          "ref": "f307d8d0-fd73-4911-b80e-c44c1b5af01b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7de90d68-a711-41a5-ba2c-3b3eb7da5f50"
        },
        "item": {
          "id": "44638b37-8b14-46ec-9ea7-12e83bc0b01e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "45bf5c4d-c584-4a40-b8b6-208d0e8532e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa8784-a59c-4e26-9c80-9629898d3d6f",
        "cursor": {
          "ref": "38410edd-b990-4607-b2f9-5ea2c27887de",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4a8c93d1-e608-411a-a19a-64796ae1c230"
        },
        "item": {
          "id": "7dfa8784-a59c-4e26-9c80-9629898d3d6f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2c9925cb-2caf-4cd1-9c3b-c5142949ca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a8c59c-177b-4d97-81fd-574b45d607e4",
        "cursor": {
          "ref": "d199e66e-f8dc-429b-b16b-3b88442c7dab",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e442f923-c3bf-46af-955c-609b8b9dc3ee"
        },
        "item": {
          "id": "30a8c59c-177b-4d97-81fd-574b45d607e4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ac8bc1b-148f-4215-a945-ab3d4e71564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55de3e07-30dd-433f-83ff-490bb2ae7399",
        "cursor": {
          "ref": "00be0e2c-bd92-48d2-967a-03d807578e04",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "42423edb-861f-4111-bcf3-3b0426aeaeac"
        },
        "item": {
          "id": "55de3e07-30dd-433f-83ff-490bb2ae7399",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0c2e382-77e4-4337-be47-dc462dcf5ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c1bfe-e0b6-4c9b-a170-243e179340a5",
        "cursor": {
          "ref": "7049ed96-5de6-4aae-83f1-30bd490f1a98",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9c8da755-e9cb-49f6-a3db-5431c724cd22"
        },
        "item": {
          "id": "5b5c1bfe-e0b6-4c9b-a170-243e179340a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "497218ca-2205-4d96-b192-c64e8ed9a2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45c0fe3-2e34-4214-ad6c-35f6d4ec9c47",
        "cursor": {
          "ref": "b908999a-4e69-4810-bbef-64629b228f7a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e1e9b23f-d619-4b4f-85d5-903a79ed4223"
        },
        "item": {
          "id": "d45c0fe3-2e34-4214-ad6c-35f6d4ec9c47",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8349a2ef-079b-413b-b469-68de79528f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27eb4c1-b923-4303-9688-61f547ba20a4",
        "cursor": {
          "ref": "576af008-4b5f-43f5-83a2-c97ebc64ed5c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67c0d245-b9fa-4d59-b0f7-346c7bcc5f11"
        },
        "item": {
          "id": "f27eb4c1-b923-4303-9688-61f547ba20a4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eff16151-76a4-4cd7-bb2c-c3cbc72e1f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e242197e-6dbc-47b9-b276-4a4439d4ac5a",
        "cursor": {
          "ref": "32942b3d-5a0a-4fe2-8f58-5cd0b437a1ea",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c387e052-35e5-4f06-8740-c06f27271803"
        },
        "item": {
          "id": "e242197e-6dbc-47b9-b276-4a4439d4ac5a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bee629f6-41dc-48fb-9fdb-1531026caf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb2c0b1-8b21-4221-9809-274ab5f9d889",
        "cursor": {
          "ref": "70f5097f-6b2d-43dd-b9e9-026d04ed7e77",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ac727ff6-4946-4e6b-bebb-bfe3ce1b33c5"
        },
        "item": {
          "id": "feb2c0b1-8b21-4221-9809-274ab5f9d889",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "921dffaf-8fb2-4a3f-9233-08549b87d0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e0a214-ed34-440f-818b-515310ccd492",
        "cursor": {
          "ref": "1ca2d91e-eb7d-4b48-a615-fb47338208da",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "987b6f75-17d8-49ab-a513-b195820b5441"
        },
        "item": {
          "id": "a5e0a214-ed34-440f-818b-515310ccd492",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3ec7bde1-9b46-4473-b078-34916e4bd314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b9db3-50d3-4787-ac4d-98347d989e4d",
        "cursor": {
          "ref": "3c1c73d2-ce50-45bf-9a32-84e59d62d940",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b2fd7e2f-4543-41a4-a115-67cb3e1967e8"
        },
        "item": {
          "id": "433b9db3-50d3-4787-ac4d-98347d989e4d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2ecb1beb-cf20-4f1a-8ce5-0ee75840bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0196035-300d-4520-89c5-3b76ec8b718d",
        "cursor": {
          "ref": "8d841367-26d3-43d6-b84c-f64976357f2c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fc11c6f9-2c04-492a-b1f3-29703cca016e"
        },
        "item": {
          "id": "e0196035-300d-4520-89c5-3b76ec8b718d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04d96fdc-4fde-4c11-b2a6-7cf109ceedcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe854e7a-348d-415a-91b9-1d75d03fb256",
        "cursor": {
          "ref": "f5cd33d0-ce7b-4474-b74a-c103925c0fe4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5edf17a0-6150-4eb7-922c-0ebc354fdbaa"
        },
        "item": {
          "id": "fe854e7a-348d-415a-91b9-1d75d03fb256",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3a183e3f-08cf-4748-8886-071a6bb4af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4de3db2-dc32-43ce-a834-d72e3f2271ea",
        "cursor": {
          "ref": "e5b4e1f3-ad93-4720-a3a4-5a8dfbc453a6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f09a5777-9d97-408a-84c8-7399d0c299b3"
        },
        "item": {
          "id": "b4de3db2-dc32-43ce-a834-d72e3f2271ea",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "46ba36a7-1d9d-4864-9303-6ff17af3a741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2efcbf4-e42c-4d2f-8e7c-71a6e61774ff",
        "cursor": {
          "ref": "08c909c3-e0f9-4f6a-8735-79a77eab00eb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "15a6eedf-6890-4b09-a864-3cc282f9c5c2"
        },
        "item": {
          "id": "f2efcbf4-e42c-4d2f-8e7c-71a6e61774ff",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13a6ade2-da89-43e6-b354-e194cc1d2380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2291cc9-aed3-4e96-9ede-e40704e9b389",
        "cursor": {
          "ref": "8502e92f-cdda-4a52-b8e3-49ebaec0914a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0fbdf9ac-aa58-4ccb-a5ee-3603a429c6c7"
        },
        "item": {
          "id": "c2291cc9-aed3-4e96-9ede-e40704e9b389",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6f24dbd2-f84f-4776-8daf-c33d803f62e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a119449-a56e-421a-99b0-8fc5008c4ef9",
        "cursor": {
          "ref": "2e344413-a9c7-4aa9-b7ea-836df051bd8e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c2441920-312b-4dc0-a6d3-9c8882db61a9"
        },
        "item": {
          "id": "4a119449-a56e-421a-99b0-8fc5008c4ef9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e3d7b877-9dc5-401b-b57d-5fa3ecd3ca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afe9e25-9279-451c-ae42-d848d523078d",
        "cursor": {
          "ref": "94c50ecd-70ae-43b0-8cbb-ebd649dcee8c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "420c8cad-8d31-454a-a83a-74936c222f64"
        },
        "item": {
          "id": "2afe9e25-9279-451c-ae42-d848d523078d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "67feaa6d-af52-433d-9107-77a155c25d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc73f4d5-bade-4073-ba47-c655dc61f650",
        "cursor": {
          "ref": "a24c4f91-6c4b-4247-819c-2f0302db4e5b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8e29912c-1eed-45c3-abfe-b51a48991753"
        },
        "item": {
          "id": "fc73f4d5-bade-4073-ba47-c655dc61f650",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8e8c7ae0-b453-4b20-ab37-245a11995440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08586740-e337-4a46-8afb-a0afd48ba333",
        "cursor": {
          "ref": "9dc06e81-8342-46ab-bd00-8a6850553f73",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8241f914-73b5-4053-9c95-e5da1e24a272"
        },
        "item": {
          "id": "08586740-e337-4a46-8afb-a0afd48ba333",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "86822ad0-86b2-4d94-89fe-4e1237cb671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f577f3-9cfc-421e-a1f9-ec2ec1e2eb6c",
        "cursor": {
          "ref": "e894d176-b295-4546-b3ca-97732d6797b5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "64e00452-3d77-4063-a08a-2554be33d197"
        },
        "item": {
          "id": "34f577f3-9cfc-421e-a1f9-ec2ec1e2eb6c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c1d6b462-0db3-4727-977d-fdced69aee6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8cde19-d222-450c-9796-6782abc852d8",
        "cursor": {
          "ref": "05ab1972-0ffd-414f-8cfc-fd7e8a4bf924",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e25fddf9-4d31-4728-ad09-d415b5fa28f0"
        },
        "item": {
          "id": "1e8cde19-d222-450c-9796-6782abc852d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a9046f2e-5b48-4b14-8372-bccd156c12ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe437c3-b18e-439f-aad3-18cfccf1be1e",
        "cursor": {
          "ref": "4f660e11-ab19-41c9-a4d8-cb80c69a7fce",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "945dcf20-5b2a-4166-8836-92f6fe49a99e"
        },
        "item": {
          "id": "6fe437c3-b18e-439f-aad3-18cfccf1be1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b7e4022-418e-4671-b5bd-fc0be299963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24281011-f899-4fe2-a9cd-ef07dbadc3e8",
        "cursor": {
          "ref": "9d3c800f-6959-474d-9a0a-6e241fa8ceaa",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "19749dd0-44a5-4ea3-a544-20da7cc17eb8"
        },
        "item": {
          "id": "24281011-f899-4fe2-a9cd-ef07dbadc3e8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc3f3ac1-f017-4e06-b39e-b3ec7d4996d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240f979c-2ea0-4784-8152-5222f5df35f9",
        "cursor": {
          "ref": "61e9d802-4f91-4f03-8683-17d4790600eb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "af7752cd-7e91-4d4c-aef1-3d39f4b1480b"
        },
        "item": {
          "id": "240f979c-2ea0-4784-8152-5222f5df35f9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8216581c-d615-4dfb-8856-d5eff5d9f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146b08f9-a7be-47aa-b38d-9a728774e3b1",
        "cursor": {
          "ref": "5d8e411c-290f-4167-904b-adadcd7ce5d0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f581e31-69a6-4782-a3ea-45f4bfa3d9d9"
        },
        "item": {
          "id": "146b08f9-a7be-47aa-b38d-9a728774e3b1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1e7863b1-b4e3-4590-95fb-df7238d83230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5634973-7c4f-466a-b648-9946d78d151c",
        "cursor": {
          "ref": "05cde4f6-fcad-47a1-96b7-2ed84721cc03",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a9bbf99-1dcd-4659-8b1d-553b25980004"
        },
        "item": {
          "id": "e5634973-7c4f-466a-b648-9946d78d151c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "19491117-c9ee-4180-a677-5178217a00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261854fd-c1cf-46a8-8115-c3aa38e18100",
        "cursor": {
          "ref": "a741740c-a256-4a30-9c14-a64b29de81f0",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c32d995a-3eeb-48da-902a-5f4b2d1b580a"
        },
        "item": {
          "id": "261854fd-c1cf-46a8-8115-c3aa38e18100",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "71b8d2ba-6386-4c13-9165-36a686b0e8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45064a1-3264-40f8-9452-513458069072",
        "cursor": {
          "ref": "80419dce-4e99-4dc1-b0a6-bab47bce93f8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1dcbdcf0-fa43-4b23-a20a-b25ba261f972"
        },
        "item": {
          "id": "d45064a1-3264-40f8-9452-513458069072",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ffb9faa0-ef22-4966-bc2f-44cc28e0c47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f284b551-6da8-425c-abe4-8a5537743f80",
        "cursor": {
          "ref": "b589b44a-c8a1-4ef2-b61e-1c56dcfd06ee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "914da7bd-964d-434d-84d1-c418f6e79cdb"
        },
        "item": {
          "id": "f284b551-6da8-425c-abe4-8a5537743f80",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f4899241-04d0-4d71-ac2b-af86348c241c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbd3085-7365-4788-b90b-181c4618044d",
        "cursor": {
          "ref": "7131afbb-29e4-46d8-b487-5d7a3bb8519f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cea5d65e-45a8-4f14-8d0b-5b2f20a4dcc0"
        },
        "item": {
          "id": "abbd3085-7365-4788-b90b-181c4618044d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0212f669-414a-40af-ae77-3e85fedc6dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151e1452-8f7a-4b8c-88b3-8cec187b5f67",
        "cursor": {
          "ref": "a60075ca-db78-46a1-91a3-6e08bdbf610b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "177d0c51-44e7-4d9d-97f1-16fafc488f3c"
        },
        "item": {
          "id": "151e1452-8f7a-4b8c-88b3-8cec187b5f67",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2174c6f-a1ba-4bb8-8cb3-be9265af48fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378951f0-16d2-4157-a280-1a8f8dc6b73b",
        "cursor": {
          "ref": "69fede96-9242-4b79-b41f-3b70a7d3798d",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d45d1678-98ee-4371-a4a1-05da73b743d9"
        },
        "item": {
          "id": "378951f0-16d2-4157-a280-1a8f8dc6b73b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f4f6607f-68b8-4f7c-86d4-47552192fb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d57f47-fc38-4294-a1c6-a98fd3fd45e5",
        "cursor": {
          "ref": "903594c8-3cf5-44f2-9c24-a74f6f35aaf4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3aac2c13-4214-4792-8e04-44358d3cbe62"
        },
        "item": {
          "id": "48d57f47-fc38-4294-a1c6-a98fd3fd45e5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "44ee0948-7f19-4d62-a3de-29a465219cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b692ada-fc2b-4a63-8a87-2c6febef2965",
        "cursor": {
          "ref": "70da8fcc-7346-4de1-b5d7-3db1d318f0b4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "60f32349-694f-4e29-b507-db020a9b191e"
        },
        "item": {
          "id": "0b692ada-fc2b-4a63-8a87-2c6febef2965",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d8bf94e5-13ea-4d3e-a44c-1159ebbace70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5d5eb9-6eb1-46a7-89b2-1757d2a7290e",
        "cursor": {
          "ref": "05112f05-3172-4eda-a653-8475d8feb9a8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23885ce3-72e9-45ff-93e6-43b2117c512c"
        },
        "item": {
          "id": "2f5d5eb9-6eb1-46a7-89b2-1757d2a7290e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e5adaa79-9cfb-4b50-b97d-86fe9ed8ee16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48f2c4d-e70e-4b67-a21b-6c44f959f348",
        "cursor": {
          "ref": "4585a5fa-a4e9-4b8d-b56d-02a8cb718f8b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a771ebb6-17a0-49d1-b81c-cf14b8b1e18e"
        },
        "item": {
          "id": "f48f2c4d-e70e-4b67-a21b-6c44f959f348",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "88506002-1391-4c9f-8dde-1548d842cfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95d7463-7e57-4c3e-8b2e-db52401e2dce",
        "cursor": {
          "ref": "142dbe4b-d755-47cc-b2f3-d4febd8687ea",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fdadac4c-9885-4c2d-89d5-02cb959c5b9b"
        },
        "item": {
          "id": "d95d7463-7e57-4c3e-8b2e-db52401e2dce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1bafdeac-770a-4533-82ae-2388c3d916d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537ae2fb-918b-4450-b18a-3da7473bc17b",
        "cursor": {
          "ref": "caa57e12-a59c-4faa-a754-916ba338a6dd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d611aff1-846b-4ad6-a804-e1dfe1559c4b"
        },
        "item": {
          "id": "537ae2fb-918b-4450-b18a-3da7473bc17b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "70be31e1-e8c6-48e6-a7ed-59cd4783f6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f502c50-7f5f-4eed-8ad0-64660756022c",
        "cursor": {
          "ref": "76eb8b70-d673-406f-b4a6-f9612ce5e2b1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9dfafe4c-67fc-4983-9be0-abf64ba9bafe"
        },
        "item": {
          "id": "3f502c50-7f5f-4eed-8ad0-64660756022c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "621e0484-fbd2-4870-a6b1-0e1468531b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb10b05-6ccb-4eb6-827a-8be434f859ce",
        "cursor": {
          "ref": "3a8f35aa-4ebe-4342-be6d-e656d137b48c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "03fd289b-16b2-42c7-9df7-b929051b5c9f"
        },
        "item": {
          "id": "efb10b05-6ccb-4eb6-827a-8be434f859ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "97adb305-1009-4354-9d49-1a1cb6645906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee92ac9-26a0-4d4a-90f0-747fd22e750a",
        "cursor": {
          "ref": "e4c9f953-4d51-4a20-ae0b-6e46820fcdc8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "31cf8252-6c56-4193-8d56-a0285fcc8643"
        },
        "item": {
          "id": "eee92ac9-26a0-4d4a-90f0-747fd22e750a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "22dd01f8-22ae-4527-be7a-e22d6d1d89be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15751afd-6e03-4daa-95b8-cd774effe23b",
        "cursor": {
          "ref": "60d8b216-00fb-4336-87ad-a0992939e5fa",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "83a4c241-c18b-4cea-b084-f38497bec761"
        },
        "item": {
          "id": "15751afd-6e03-4daa-95b8-cd774effe23b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c588645-8b22-423c-baba-3fb1709f3bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85666802-ac74-436f-a96e-4c8d44068e8c",
        "cursor": {
          "ref": "5d3ae6c7-09c8-412e-88f3-65ddff57bc5d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "18f75af4-b481-4472-8632-cde9d12ee130"
        },
        "item": {
          "id": "85666802-ac74-436f-a96e-4c8d44068e8c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02768972-454a-4f93-973c-8eccfd6c0d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e9620-a674-4fa8-bc3a-de20fe33b251",
        "cursor": {
          "ref": "6ae760b1-cf76-4ecf-b2ff-232d4b32220e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "11484b34-f2aa-4215-9e21-68b0b66cc197"
        },
        "item": {
          "id": "447e9620-a674-4fa8-bc3a-de20fe33b251",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ff11cc7-2ca2-4eb7-b20f-066f033c8f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884b8b1c-828f-4d87-8fba-631a17fcb4f5",
        "cursor": {
          "ref": "1f5e788b-0c0d-4aa1-85a8-9e66c409070d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c9ef2f9-6697-466d-ba3f-3d140e1f2ceb"
        },
        "item": {
          "id": "884b8b1c-828f-4d87-8fba-631a17fcb4f5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa79e781-9d08-464d-892b-8c538e106837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e8e97-6918-4b81-832c-81eba550658f",
        "cursor": {
          "ref": "b7d78ebf-ac4f-40ab-b5cb-0147be060070",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "663ad1b0-b1fb-44e8-8cfa-b40868f05143"
        },
        "item": {
          "id": "991e8e97-6918-4b81-832c-81eba550658f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "afcce24c-15d8-467d-ae66-428d46941b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9829b7-df1b-4e48-b335-9d3075d6f191",
        "cursor": {
          "ref": "af114d1c-9799-4716-b524-f7aabf091fca",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fcc1514c-3b2f-4b7f-a9c8-7dd4f56ddeb4"
        },
        "item": {
          "id": "6e9829b7-df1b-4e48-b335-9d3075d6f191",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dd4b3180-6556-48c9-91db-5edfcbe3fcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab71e85-517e-4048-9851-3768c70656bb",
        "cursor": {
          "ref": "f6668644-3db3-433d-b032-dab734ea0632",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e650242c-8fe2-4766-86ee-07900f5c6c91"
        },
        "item": {
          "id": "7ab71e85-517e-4048-9851-3768c70656bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "28bf4219-a877-43c0-ab64-adbefa52898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed727b-6966-4c79-b6e4-4915d09cfd0f",
        "cursor": {
          "ref": "ebb58674-4f1b-4c98-8eb8-58932544e46d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8bf36d03-75df-4018-a1e3-98ba039e4f41"
        },
        "item": {
          "id": "18ed727b-6966-4c79-b6e4-4915d09cfd0f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "20f6ab3d-4286-4a10-bb84-613d6e72b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af835f70-4dda-49ec-affa-a7afc504eafc",
        "cursor": {
          "ref": "ebaad764-b51d-41af-8318-428cce5fa9ba",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8aee354-955e-4c1d-ad52-f80034446bff"
        },
        "item": {
          "id": "af835f70-4dda-49ec-affa-a7afc504eafc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85c88cb6-5886-44e8-b7f8-37d68e0e6fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163abaa5-c12a-49d4-9779-60a1850d20c5",
        "cursor": {
          "ref": "dafc5e3a-5b0a-49d4-aa3f-5284155b580b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d721fa06-616c-4afe-ba2c-8f9e3ff87ddd"
        },
        "item": {
          "id": "163abaa5-c12a-49d4-9779-60a1850d20c5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f588e3af-aa97-418c-867f-7981b58bc77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bf1025-8c05-4a6c-8d64-e72e32d7a5d9",
        "cursor": {
          "ref": "67487223-bc2d-40ff-89f8-9184993c8c7c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "12a02cfd-0553-499b-b9d7-db1eb803eaf7"
        },
        "item": {
          "id": "10bf1025-8c05-4a6c-8d64-e72e32d7a5d9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "998ff247-8119-465b-86a3-ef88a1cea348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e47697-6de9-4f92-860c-9e3c457f60be",
        "cursor": {
          "ref": "286426fe-5f34-4757-84f1-257790b407b0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4a176b5-1b44-4ad5-819b-d10d42f9c569"
        },
        "item": {
          "id": "f4e47697-6de9-4f92-860c-9e3c457f60be",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "87c66b33-133c-4cf9-a434-3bb12465ea2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8ff7a1-a3b4-422b-afd8-b549220e0a36",
        "cursor": {
          "ref": "0bf8b8f0-f335-47ce-8d1a-2d3d78aa455f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec7561b2-4399-47d6-96f6-0b8770dbfb76"
        },
        "item": {
          "id": "0b8ff7a1-a3b4-422b-afd8-b549220e0a36",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e34a7db5-830b-4595-a4c7-4f848a9355bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588e4da1-f764-4898-92ef-ea22d39b052c",
        "cursor": {
          "ref": "6cb4558f-0aa7-4cb6-a9b4-0ef9baf450e4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0b054caa-d9b1-4584-b0ff-c9515f408960"
        },
        "item": {
          "id": "588e4da1-f764-4898-92ef-ea22d39b052c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd195273-c76f-4915-bb1c-cf159da42cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8805213b-8c33-47b5-8e11-fd4a84970514",
        "cursor": {
          "ref": "f070867f-46ca-4ccb-b5bd-fa61312d47db",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0ef8f2e7-bdc5-47e8-bcbd-b970ae443297"
        },
        "item": {
          "id": "8805213b-8c33-47b5-8e11-fd4a84970514",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd06e2d2-7d3e-448a-8ed6-2f6e63f03954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df29cb7-700f-45cc-b255-d0fbae1960ad",
        "cursor": {
          "ref": "ddf30268-ca81-4d3e-8f12-df18338f5c40",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "598c421d-486d-4c05-887f-5185286e5597"
        },
        "item": {
          "id": "1df29cb7-700f-45cc-b255-d0fbae1960ad",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ed31ece0-92c3-443b-aecb-b0458d4cb8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04220d63-3513-4b40-86a2-71703df11d9f",
        "cursor": {
          "ref": "5c313ade-8c09-4443-9a6c-c8ee42621c37",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "851e10db-ed54-4071-b872-08f02145812f"
        },
        "item": {
          "id": "04220d63-3513-4b40-86a2-71703df11d9f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba6192a6-3538-42e3-a966-44576b4fd3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293a7ed-02f4-4276-9007-97706ec28e25",
        "cursor": {
          "ref": "1714f2b8-d8a9-4c3d-904d-83aca707062d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "daa3aca2-6f0d-4407-b595-7ff89a988559"
        },
        "item": {
          "id": "a293a7ed-02f4-4276-9007-97706ec28e25",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5b7c8946-765b-44eb-8e9a-151e1aa63e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733b6755-8660-4bd2-a7a2-28a00fe9003f",
        "cursor": {
          "ref": "3144920f-069b-45f9-acf5-3b3058a3c190",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4db14931-585f-4dd6-b568-d052a2bacbac"
        },
        "item": {
          "id": "733b6755-8660-4bd2-a7a2-28a00fe9003f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e93ff021-b06c-40ef-8699-57a3ef09a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc8a09d-d617-4340-8103-cc4586a16ce1",
        "cursor": {
          "ref": "03afd623-5008-4a3f-a67a-59999d9f92a1",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ec61d5fa-e9c7-4401-8af0-70145dc308c1"
        },
        "item": {
          "id": "2fc8a09d-d617-4340-8103-cc4586a16ce1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cbc8a504-505a-4fae-bc17-415ebe9e36e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81580cf-9cc5-4d8c-bd67-2b2eab1a57da",
        "cursor": {
          "ref": "e52563d7-ebc8-4a8e-9407-9496f37b813c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f9091dba-1d76-45a9-8a24-641ecd85ca76"
        },
        "item": {
          "id": "c81580cf-9cc5-4d8c-bd67-2b2eab1a57da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d310974c-56c3-4da1-ac73-e06b5b329438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96210cc-7eb1-4b06-8c29-ab87d09ae4c8",
        "cursor": {
          "ref": "c4f8723f-3863-465e-a425-4abb0b6359c3",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9b50a8a3-8e4d-457d-a06a-6a6ba5743e48"
        },
        "item": {
          "id": "a96210cc-7eb1-4b06-8c29-ab87d09ae4c8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b1e49165-6289-43b8-9538-ae3391f956b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69902f06-0e7b-4ce6-b462-53d7312f76a6",
        "cursor": {
          "ref": "5e603ce9-6e4a-4468-879c-129dd4668069",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "89e0bcca-5f20-4ee0-a24f-e575f16a409f"
        },
        "item": {
          "id": "69902f06-0e7b-4ce6-b462-53d7312f76a6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "78813f5c-01c5-4c94-9d15-9400bbd3c758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ea8527-d7d6-4da0-b0ce-28a6acf8cdf6",
        "cursor": {
          "ref": "683bf94e-0cb3-45a2-8efc-a02a79c5554e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "27a1980c-7a59-41c8-904a-fc548a3e6aeb"
        },
        "item": {
          "id": "86ea8527-d7d6-4da0-b0ce-28a6acf8cdf6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3593decb-b395-4b14-ac06-d4910108e456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16dcf3c-66d4-478b-8bd5-3f15107534e5",
        "cursor": {
          "ref": "d4a0d2a7-77b9-4eaf-8e7a-00d35f61828b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6f5a16f7-18ee-4561-9ee1-d428f25bebbf"
        },
        "item": {
          "id": "b16dcf3c-66d4-478b-8bd5-3f15107534e5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8be3c6b8-3b9a-4b07-935c-14eecf43b639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aea169a-aff6-457c-bb11-020caf51462b",
        "cursor": {
          "ref": "a1fdc971-603d-4a5a-aa3d-dfea5cb7a65b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a69007f4-1d21-4392-815a-8eafbc306012"
        },
        "item": {
          "id": "5aea169a-aff6-457c-bb11-020caf51462b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8944838e-ef50-4967-9435-8e3d2892f74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbf6217-6b65-4dd3-afe4-126caef15d6a",
        "cursor": {
          "ref": "6e4882a2-133c-4aba-b77f-a223a3a5fa67",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cb20f939-e555-47d6-ad07-d5d13ba464d4"
        },
        "item": {
          "id": "7fbf6217-6b65-4dd3-afe4-126caef15d6a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "932b4734-aad6-4ab5-86eb-02bf7a05bdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737787c-205c-4263-9316-cb0d640fb8e1",
        "cursor": {
          "ref": "c6ce8d47-7413-4543-953e-daa1be8c2a56",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6f202c3d-c236-4c87-92b8-b1229bbc11a5"
        },
        "item": {
          "id": "5737787c-205c-4263-9316-cb0d640fb8e1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7706d152-453f-4816-8be6-8597ef5a4f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc000e1d-9898-4f35-b2c1-cf1dc57a9baa",
        "cursor": {
          "ref": "e565ba37-6d45-4b0e-ae82-cd5379442bac",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9d05ae98-429f-4eff-a38a-f6ed80f060a5"
        },
        "item": {
          "id": "fc000e1d-9898-4f35-b2c1-cf1dc57a9baa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c19840b7-b52e-43b6-9137-6613644a23fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99356cd-bd02-4a94-bbb5-d4c56ebc78da",
        "cursor": {
          "ref": "b3d909fd-2f7e-4847-9ef7-643a84d6ef27",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "150dc4fa-ff18-4524-8e64-b67ac3f6884a"
        },
        "item": {
          "id": "a99356cd-bd02-4a94-bbb5-d4c56ebc78da",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "423e3a7a-4ca6-4a6d-abe1-7a236ed12424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113332b-3dba-4dda-aa7f-86f70f0365b7",
        "cursor": {
          "ref": "3b372473-88d7-4162-a5fd-247032631aba",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e0502592-4ba5-4334-9a31-56e47d8e3bbd"
        },
        "item": {
          "id": "8113332b-3dba-4dda-aa7f-86f70f0365b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b5d98731-db11-44e0-a7b5-4a9c48ee9b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4b8053-50e4-450b-824c-1f203397659a",
        "cursor": {
          "ref": "1bad9941-ecca-43e3-8281-8df8c92ab299",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "17fdb15f-18a5-44be-9006-bad761e0fdb1"
        },
        "item": {
          "id": "6f4b8053-50e4-450b-824c-1f203397659a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2a990450-4483-43c7-be42-e71c1fdb6896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0ca51b-2cea-47f1-a6d9-d4be7d4dab8a",
        "cursor": {
          "ref": "c08fe505-ff20-4fee-a6f0-df717350967c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "36a6d742-f3be-4d5a-adaf-c2e883e17a83"
        },
        "item": {
          "id": "6c0ca51b-2cea-47f1-a6d9-d4be7d4dab8a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "64c9e0ce-9dcd-4719-89fa-76af1631be8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe55ed2-8281-4a26-91ec-6809d0286965",
        "cursor": {
          "ref": "82837860-02da-4600-82f2-486856ec9dc2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "196f9f95-3361-47a9-82d6-6f83abcb3894"
        },
        "item": {
          "id": "3fe55ed2-8281-4a26-91ec-6809d0286965",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d36ea16-047f-46d2-89a7-04e7b239c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df754a0f-5e5d-4108-9cd5-685f89e9f7d8",
        "cursor": {
          "ref": "800ba604-53ed-4fad-8d4f-67405e9cbf6f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "df7b74d9-db9b-4cbe-b010-631dd07ab6ee"
        },
        "item": {
          "id": "df754a0f-5e5d-4108-9cd5-685f89e9f7d8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6ed46f73-e1f6-4b00-baeb-f8ada093119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bddb2d-93de-4f38-8f42-570f3da51930",
        "cursor": {
          "ref": "b854febb-c778-4b8b-a788-c4c6e565cf31",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "19dc8aa2-a4c4-45e3-bf06-47c94e1e4721"
        },
        "item": {
          "id": "c2bddb2d-93de-4f38-8f42-570f3da51930",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "140424ee-500e-4db1-a74f-5651331dc29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d70910-c023-4d2a-bf24-6cccfb2bde87",
        "cursor": {
          "ref": "43589461-6331-4fd4-919e-c94dcf503a24",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "41cc366c-fc2b-4827-9179-1c5a415f7055"
        },
        "item": {
          "id": "39d70910-c023-4d2a-bf24-6cccfb2bde87",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "06d379f0-8925-47c5-87b0-673a680446c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b315a0a-55f3-4cd0-95e4-ad5066e863ac",
        "cursor": {
          "ref": "7018aada-ad13-42c4-90d4-ec08c1711565",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b3b7c045-4572-4265-af9c-9f4c886696ca"
        },
        "item": {
          "id": "3b315a0a-55f3-4cd0-95e4-ad5066e863ac",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "93df0f86-1da5-4b96-8955-be59a14619df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc9439-5a4e-47a9-9523-2b089340f8eb",
        "cursor": {
          "ref": "03cfbcac-e2e5-4bc1-b10b-fc7d1edccce2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8adffd03-8827-4207-8daa-814d269d06e3"
        },
        "item": {
          "id": "53dc9439-5a4e-47a9-9523-2b089340f8eb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0c7d4da1-5209-4d06-9543-8c1b5ab7d5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f38d9b7-1175-4433-ac48-acd94cfb2b4d",
        "cursor": {
          "ref": "4d2ff405-f609-4ba2-a6c9-b4644d5c010d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "711c48c7-3108-4fab-9e9d-a7a345e0f31c"
        },
        "item": {
          "id": "5f38d9b7-1175-4433-ac48-acd94cfb2b4d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "09913eec-51ef-4db6-994c-47e7c04def33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67db645-b5f0-4edc-b7b4-4ae5f48a70c1",
        "cursor": {
          "ref": "76acf7fa-e8c9-4b29-afcd-9582dfce0903",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9c285c7c-1c3b-4360-9b52-df428e9d8b5d"
        },
        "item": {
          "id": "e67db645-b5f0-4edc-b7b4-4ae5f48a70c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d88881b2-bfb4-45b1-81a9-31df2d5a6155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab9a966-a509-44f4-b752-b32f540950a4",
        "cursor": {
          "ref": "1a4b0e87-25aa-42c1-8cd8-195a75d2e01c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "53c29735-18fb-47ec-ba7d-77bf1b41dd60"
        },
        "item": {
          "id": "2ab9a966-a509-44f4-b752-b32f540950a4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b800cba0-bb42-4600-887f-48a6299cfc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98abcd1-64b5-4de4-ad92-15ee2f9fa6ea",
        "cursor": {
          "ref": "d8375d80-dc3b-4150-9ad5-e67453cbbc2f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "434db729-b56c-4d07-9810-7a0a3dcaa082"
        },
        "item": {
          "id": "f98abcd1-64b5-4de4-ad92-15ee2f9fa6ea",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d71ea46a-b31a-4fca-9f20-5dfaa3c56336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a2431-c024-49ce-92c1-66ad7a618aff",
        "cursor": {
          "ref": "f04de521-01e8-45d6-96cf-e8ad4f6cdef5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5a4e45b6-1456-4afe-b8d4-51346ed055fd"
        },
        "item": {
          "id": "d00a2431-c024-49ce-92c1-66ad7a618aff",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bffa63f9-f99b-44f8-8529-b32b8351bb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd67599-59dd-4089-a675-3a86afad5e1f",
        "cursor": {
          "ref": "106dab52-a14f-4ebb-bb92-a19945702804",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "992fc8d2-7900-437a-a6c3-e4cc3c8050b4"
        },
        "item": {
          "id": "1fd67599-59dd-4089-a675-3a86afad5e1f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "76196d48-6b08-41fa-92c1-7d2467fb7982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2954a08-50dd-4d95-b37f-480a0a43478c",
        "cursor": {
          "ref": "661183d7-614e-48b2-8de3-7d516e4e8d96",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c30d131a-79aa-4ad2-ad87-daf08b577642"
        },
        "item": {
          "id": "c2954a08-50dd-4d95-b37f-480a0a43478c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "db497f88-736c-4b95-a584-36834fa90de8",
          "status": "OK",
          "code": 200,
          "responseTime": 504,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08f9834-f017-4178-8d82-bca1a7603ab3",
        "cursor": {
          "ref": "d61a0281-dc48-412e-a59b-e007d2d5fcb9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8d2f66f8-b87b-44f4-99bf-568b069b44b4"
        },
        "item": {
          "id": "e08f9834-f017-4178-8d82-bca1a7603ab3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "963010a7-caba-4be5-a3a5-bb6b21cae5b1",
          "status": "OK",
          "code": 200,
          "responseTime": 1766,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75689b38-d51e-4eca-ae28-314195e2fc9d",
        "cursor": {
          "ref": "37faea5c-1965-46eb-9dd4-6cff827dd399",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aaeeb7e8-d779-421f-aab2-f3ab8164fe33"
        },
        "item": {
          "id": "75689b38-d51e-4eca-ae28-314195e2fc9d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "71ecb63d-7abd-4fea-8fb1-1a2b452e5be8",
          "status": "OK",
          "code": 200,
          "responseTime": 1354,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f62a2-8bba-4ab9-b7b0-1aaf3bb7170e",
        "cursor": {
          "ref": "a743020b-d09a-4d15-a757-228047bd9f50",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f6c6389-facd-419d-84a5-f2c0c67f100c"
        },
        "item": {
          "id": "dc3f62a2-8bba-4ab9-b7b0-1aaf3bb7170e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77c96e24-17d0-4c0a-82e4-4e519079ac48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f62a2-8bba-4ab9-b7b0-1aaf3bb7170e",
        "cursor": {
          "ref": "a743020b-d09a-4d15-a757-228047bd9f50",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f6c6389-facd-419d-84a5-f2c0c67f100c"
        },
        "item": {
          "id": "dc3f62a2-8bba-4ab9-b7b0-1aaf3bb7170e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77c96e24-17d0-4c0a-82e4-4e519079ac48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671749da-9748-4d1e-9275-ab610f87230d",
        "cursor": {
          "ref": "ec842961-8405-49d7-bed6-a11407dfa9b2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0dc993a4-01a7-4fb1-89da-cea3099a542b"
        },
        "item": {
          "id": "671749da-9748-4d1e-9275-ab610f87230d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c4e5bfa5-6ce9-4ab4-a18f-34e386e1402a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241ef0aa-2857-4554-85cb-37f2cddab109",
        "cursor": {
          "ref": "c182cea1-23e3-4486-a90b-000e980c81df",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "236b5c5a-de8e-4d5c-a693-dc881172848f"
        },
        "item": {
          "id": "241ef0aa-2857-4554-85cb-37f2cddab109",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a7952d0-9cad-4f0c-b923-3249f240ef04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}