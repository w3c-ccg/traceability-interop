{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "321187e2-145b-42a7-94a3-ed9c88dea5cc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "531cf4ed-f614-4f52-8efc-321e3d13a9c6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ee088dd-35df-44e8-baf5-54ec0dd0e2b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5a78a25-c260-4bf9-9aa1-3a107702e938"
                }
              }
            ]
          },
          {
            "id": "057977fc-09e9-44d1-bf96-984835eb732f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b34bc413-b984-4b25-8c15-e8a679b87534",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dd4dd2ec-4135-4ca7-8b8e-1ea431deffc0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1323cc4e-e754-4ad3-93fc-27d483cfb200",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "772fd8c4-ffd0-4efa-a09a-22947ee466c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69e6b0bf-77dd-4ced-89bb-61ffa7718e72",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcc190a4-bd8f-4d23-b3fa-f9d91977c378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44030776-f36e-4b66-ae32-0710cf6b3e62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3f2b970-c373-49b5-8ec1-c08bc34b19af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be63de9d-862f-47a8-b941-31767a9f5b35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "402333c3-1dfc-4413-ab53-ae212113bf41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f586c965-d9ad-4752-a6f5-2fe72643d046"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78b216a0-c761-45bc-9037-f2148bfc3c7c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ea3a02d-72f0-4e21-aa74-63ed0983438f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38fe0586-0538-4ed5-ab60-f426efc24e8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc294d50-889b-4aa7-a68d-bb8e05c2c4ae"
            }
          }
        ]
      },
      {
        "id": "97b87a39-2ab6-4494-beed-0f51e17e5ca9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2189e281-de44-41e1-8b9d-d7cbc8a577c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "523e0df5-bf3f-4560-b6fb-4d6a60ade42a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87944b7a-a40e-46d4-bcea-49ce199deb98",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa32c25-fadb-4b45-b4e6-f70c070b9b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c82e7c6-f57d-4dd2-9c65-4e808225811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8ffbac-2bf4-4273-84fb-b0d65d2ab9ca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7883b3f-0d3c-409f-81f5-730d5112decf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aff4d642-1a0b-4ac3-b1c6-396fecccf31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd836467-4979-4207-8b26-0e4debd5d8ed",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf444049-296f-4243-8de1-253aae5f1a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc45705a-d5f9-4f30-a05c-80102de8625f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b87f1da9-72e4-4bab-9fe5-d914fdf73f54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48810186-3cdd-4275-be37-26cb7d96a9bb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f63b051-2f13-4cbb-98c0-0df2a9620b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f7f946-4a99-405a-a30a-610c8899f2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37443691-03ca-4671-b465-65698522ab71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c30f5a9-e253-4d8c-9e26-4cbf14a7c3b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76054d5d-b5ce-4250-88d7-245a77872fa7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "304f06ab-61fd-4f75-86e2-c2c3c34fffc8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8f9e681-d707-4cee-9dcf-445cd486985b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1cbca876-881a-48af-bfbc-ee5d15ed2861"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e01d75fc-6af3-4cc4-8e14-328e4370c314",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b23d2733-e3c0-44c2-800e-dfc80e9af758"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31a722b3-2822-493e-8313-26808710b9ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "862c5b53-04c6-4428-b10c-141244ba8ac7"
            }
          }
        ]
      },
      {
        "id": "1d7b3569-d288-4593-9343-f76358f4aa06",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a8a8a508-f159-47d4-b0e9-888927b8b9e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4119fe65-319e-4cea-9c48-5571b631801e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3a28257b-77fd-4116-8286-3cd80f9bc213",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f7eed-382c-47ab-b95b-87ccd72777ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfe1147-5468-4679-9c25-ee85faa008ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2858508e-48be-4978-990c-8121a0e3a661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d44c874c-3249-4321-b311-af2a9f05f5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b91a6e-4bc0-41dd-ac52-589d71a85a4a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efd65a6-5c41-4d9e-bd73-ec5fa2a1c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5b7a30-eb15-43ce-84b2-d7bbec36f218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6278f518-b52b-41d1-8527-e1401a8fc7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd3ffd7f-6b55-4aef-85b9-23bfdfbf430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd63779-58d0-4530-91bc-d24efc7f0458",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69201ab9-f0c8-4634-bada-0dbc552bf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05654979-fc94-457a-b057-6ecd073bb70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc401ea0-12c6-40c2-8125-8ff6d38de790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22d86165-f7a6-4740-9ffc-b59db642e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f5857a-487c-42fe-99f7-f118cac42d6c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0c977-f634-45a3-859d-5dcf627074bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465807cb-bb09-42e2-b3d9-4d0d585342bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec2f598-de0b-423d-9a51-ccc96cfd73f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f368cd00-7d6f-4258-952c-11a121158042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df526bf5-e0ad-491a-834d-2210b090a9e5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80a4791-e9b1-4737-8ac1-1f1dd3c9a0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cf6436-5b39-4be8-8375-4c7adf0ce214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10523e0-9571-4eef-8750-a52d42944f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fac38a6e-c5bb-4e3e-ac46-10cc27e52a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecd3b65-c468-4ef8-be56-b40d7b363d54",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc31c41-6cae-42e3-8888-7c98332d12bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93e746f-de9b-4b6f-b2e4-ca7f49aa4c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af4b9e6-91e9-48f3-bceb-d6ecd1c57206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6701f2-50b3-4ef9-ac60-54d19a0b416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ca4ccf-42d0-4a70-b921-9b11a7d9dbcb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3203eb4-9907-4e45-b2ca-057efb57e9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09365ec1-ea3a-4493-9ce4-5c86fae2fb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ac50ea-95af-438a-9f37-e2e7f4ed82f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "462d7c54-446a-40fe-8a71-9099af8d1879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9096f801-cdc7-4246-ab8d-ada5c0b58b5c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209b92dd-02b3-4a7f-aa99-5b80e5d9ce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e583175-8a48-4ff4-b2fe-28ac3dce4ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c86112-4d7c-4c6b-9a00-fe1276dc581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b1822b-6616-4597-b6a0-a4fdbebc6c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b271e8c4-f196-4392-ad76-0ef51e978348",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f70ecef-632f-4019-87f6-7110bbcb7f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f952ceb8-8ab7-4245-a965-7ade9f6fb143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dd1ac6-c6e1-4af0-b1e0-f0a54a15ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "695cfe89-bf5a-405f-a9e6-11bb55aac561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ef66d-cd21-43df-a0e8-54a5fabff485",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e477acf3-71e6-4c22-bb4e-cdbce569b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686dc5fb-c0da-470a-977a-d0a56051d192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3e9106-4a7a-488b-bc19-f478c206f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1109ead8-09f7-4d72-b2a9-2ff608838c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986b2a31-0142-483b-a027-036fa0fc704d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ce03d4-5800-49d7-b7bf-9c9987b0ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b9d3f5-e414-4e03-98fe-8b10e8ed3fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096b56fc-6311-4078-a40d-e1569c5628b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7ea4047-2a0c-4a4e-8a49-fdab207a7ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd81a961-e536-40bb-a52b-6e0322575375",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc177957-9844-4f4c-8043-7a8cb4dd7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74db630-20c5-45d6-8521-50a6d1f97b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933e4c5f-fb78-4471-ad86-38585d3a1104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ac54a83-6511-44d3-9f90-74e79972ae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64851bf-e494-4af3-98f8-7503de02db8f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70ed6c-8882-44b3-97fa-767d5a568262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c00f4a-79e6-4ac4-979d-cceab65d8294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c20ecb-ebcc-4c31-91a6-6317c8f7fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91d79891-b52e-4b95-a87d-5752f81593c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111e3994-a5e2-4277-a714-5e19e0d7cf44",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ddfe1b-989b-40ca-916a-caa2e2dff412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f58dad4-0cee-42b4-8c63-68d4f57aba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ad3c07-a7fe-4e78-a990-3a65e7a6d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "634b03fe-607d-4d11-8e92-049d68c03607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8113ea5-37f1-4f17-a193-35d85fbb0644",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ea43b8-419e-4044-8d32-dadc742d5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7261fbb-e2ac-4fb5-bf2e-2f82f98966d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d5872-9157-45d9-9fc1-f140343b5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47c6fe65-ca57-461d-8f97-39013cc724d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf18fca-d31a-477e-8aa3-a554e93958d2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b31462-ffeb-4e8e-b5d0-e67f9f6761db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbee6d4-296a-4bb6-84fc-f12f9b84f169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476fd4e-43d0-405e-982a-7e2157f6978a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75c3044a-ea48-4a9a-854d-d457242079ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb12a893-a067-4163-a67d-4fbb6ab00b02",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830b6d7f-62af-4edc-b840-6b9247987786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc7f715-40cb-40da-864c-5f8012ddaf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbc0d21-088a-4b10-9ffd-aabffab5c597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1fd450-b586-4629-9873-62f2e01f7e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eabd68-5995-4f12-b0ed-edca509d4f0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da5c776-dfbf-4ec9-b59c-713735fa0ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2757b3e-5593-4646-954b-9900b5e27a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d151b8-cb78-4235-bf21-2acad43a0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eecd613-d7df-4520-88a8-e538488ca638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5952484-836c-4da6-bab5-ae2516513419",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b352686-8f13-494c-b3d3-1aac62ed89de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b6d88c-fa2e-4e4d-843d-b49f0b30b71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b728162f-aefc-44b6-ae34-5990d2efb6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fed8aec-5529-4b1c-b4af-6dfa8ace6dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53545d81-f8c4-40ad-a8bc-e05a9aebb7cc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21d5707-fa99-4192-9c8f-ee74cd4974f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fd5fca-04de-4c6a-a096-250ce6357316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397c8108-66d0-41e0-a3e3-294df9e567d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5b612e-a71b-4394-b69d-5c8d20928f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe13077-b97c-4468-b97f-ec8036460eff",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c67acdd-551b-42fa-9450-70c159ce2521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac9a225-fd39-4ffc-a262-332d8a26fb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb83f09-78c7-40d9-9cfb-ca6481f8f4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b072b56-1d61-4e14-a5fc-e4bd893a852e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630492b5-64f0-460f-80bb-957fbe48a227",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c87492-3734-4bc0-a266-92d84ea329f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b853e15e-7bc8-4c7c-900b-c78b85d5ca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913efe62-b670-43d9-87f4-60bd1dafd9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5ef9a1-b6ce-42bc-aa45-b4124c0fe290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4683e73-7bcc-4c26-91a1-4098af6504ef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b46c1c-45a0-4135-9352-c417ed0b6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff10485-fab4-4c61-acaa-e02b91a60cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb88f65d-4ef9-4ab8-abab-0e25d0f5c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c74348dd-76ba-4e26-a385-6b02fb33f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefa8674-02c6-4d6f-8bb1-439a21134042",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556ae0a5-4fb8-45e3-8c25-1270dfe2ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a608167-7cd2-4a8c-a9d7-b5a3f796c00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba887cf7-e423-4d0d-b9e9-02d588a6ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "971062df-d888-4153-8422-ee247ccea07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f746c444-3a87-440b-abe7-7a4f36f53aa4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56b85e5-55f8-4870-a61b-3594d861e9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c173a0b-3eff-48a9-b761-ff91a484b217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdad606d-076a-426e-9f01-2188c297e174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9366801-58d8-4284-9e5b-a2fe690e6834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45ae4b2-c2dc-4470-932a-93051ef48a03",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fba5a6-0ac8-42dd-9eae-a11693a2324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b628f3-9b8d-4b2f-ac3f-24a23d41bdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc1d48-e391-4428-bd5c-d5459018e223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c321a0a-1e00-4903-b6c7-dab6963b1f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d400cd9a-aaba-46cf-9c0e-bd9b7d8460d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42658c97-5651-4353-ad6d-0f7625d91cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7243659f-63e5-4b00-bd7e-3cf53f8c9319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3e9774-d4c7-4ec6-bdec-f7b2ccae6e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cfb7a2-3396-4060-aa3a-0d942de225ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff78c88-5469-4d81-8c80-2b58a3439cf0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348b4894-e73b-4879-adf6-8a2277e5d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa44600f-c333-46e6-9bc2-ea2312e6fc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70741a31-7629-46e7-8da2-c88bcfa355f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e121654-127e-4ceb-b866-0b27d679fd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88b4ff3-86ae-42ed-b56d-4056e5f2e2ed",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa3dc5-b730-4910-97c3-07194c1e023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5817cf31-b3ab-4357-a084-1466211438f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7737e9-58cf-455a-98e1-0848ddc50d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a928e02-d4e3-423e-8cc4-de0485e08928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484186c3-0bbf-4831-8682-9b6ff68469bb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d289953a-140a-404e-9abc-fc44a5ae6c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62020ee4-68ed-4960-ae58-e640fe182f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4808d364-ded8-43da-9a15-27b789100e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a9adcc-82f1-44a3-8c07-125c1a0932df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105dd288-e68d-4bc7-890b-37dd156a9d9d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29f366c-730f-4fce-8dcf-d8e87b3ed2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c541427-e093-4f5f-a454-fb2c79f5fa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af1562-bf7e-47a0-9cc0-95a96c6ecb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3710803d-1a2d-444a-870d-78beef13fdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024187b3-270a-4c39-8584-096a794cffac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b7188b-6075-4276-9925-7542692b403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cbc65a-4131-4edc-9f80-9b2b009638ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a8d819-3d43-4c58-9e23-90a963b606d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90799697-3998-4f32-adab-33873e447cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96774a2-822b-48fa-a9e3-2e2c1b0d54e0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e2fdd7-f520-42bb-89cf-0fb9be9f3939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcfffbd-f082-4855-99a5-74097dc6d37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80882e07-a609-449e-b3e2-967dd1ad9461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "218e915c-0105-4ff7-a2ad-706169d4c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78e671d-d8a8-466d-b7d8-6d0e59dce8c2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b141a0-f472-4946-9462-8070708ce920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f82935-d1d0-4d94-9b1e-1de33c02f6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10a9a1f-4ee1-4215-9bf4-929a2101ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e03c5a-aadc-4460-ad79-ebb19c4f18ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5560b9bf-3728-4243-afa3-99893e95bcba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f920a6-efe7-4cc6-85d6-fea3ac9e9389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94455c34-2aa5-41b9-9ec4-1c8df19dd92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e50730-d443-4389-92f9-bf4d3770a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0792628c-f9d0-49e8-98ec-c2b599019c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a51b001-6bf9-40c4-87af-868a1cc10c88",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270d3ba7-b75c-4e41-bc9e-340735e2c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "341735ff-6fc7-4e39-b1d4-c0138099ef23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070742c0-c097-4c85-8153-939faa0e5abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91f1e7ad-3812-43ad-ae8e-c5c44cabaa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9eedec-1663-4e7c-a831-20fd2d254735",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a0413-ee1f-4a1b-a84e-b2034f907ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47361b0-2d2d-41ad-92d3-7154c5fb6f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ca4c9c-3a36-4bf7-b643-c846c318b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7988962f-cdbe-4205-a1cc-eccf011e9c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ca8f03-1bb4-426c-b09b-9265495d7eee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57ecdbe-a396-4c52-870b-0b7c2ef5ff4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8b89ab-8c5d-4066-8b35-9e1cf174c85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a300a314-f5ac-4adb-ba71-c76b993e309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "834e6fc5-92d9-425b-a9c8-638218c0fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a09add-4768-4ec7-a8db-d7a8fe290182",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22576bfa-15b7-49c2-ac18-1175ca829c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58262b5a-b883-49ed-ae3c-a2e3f611f2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b613c0b-d2de-4a03-b91b-151cf26eb552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d82e50-08ce-47e3-a5b7-7c59576061ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f31452-d083-4b0b-9eda-57ca3623e693",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e88599-a728-43fe-aae8-8c9acb2c4d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f2fc76-df9b-460e-8fdc-a8c530aba289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10834dc-9d2a-433e-8b00-79c8f4e9cfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2442665-0a90-49b6-8c75-c035145a3887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1fe57f-251d-4e87-a80f-8ed01c1a1e47",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e267831-56f9-406a-b407-1db0f5608e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2c942a-cd32-40dd-b166-0e757573851d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e2a821-3d76-4966-bbd2-378d6dfb458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f70c1d3c-95cd-42fc-b14d-2bd0276225af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e6ed3-f355-4e76-9b7c-efac2e254d7d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a4ad4-08f5-4060-845b-a346f77441f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aef247a-5966-4a12-81a8-839afd68ee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c32a5f-2522-445b-8a56-b98709f9bb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8da82c18-7b65-4e20-93c1-82787dba5648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549726e4-457c-4a8e-855f-7e6a4660c9e7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0502a1a6-163f-4390-bf35-ab0a0a656a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cf3aa6-3b47-4618-9f5c-1544736332b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b2c863-3ace-4c72-9130-e801bf3c7a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb7bdbf-2ceb-4ce8-ac00-f3d5e72a7c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88d392-cd44-4584-b698-0c1ef0d28053",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df284b62-ebe0-48e1-b33d-22171a487154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6642a84-e4d0-4678-b218-f927dd3921a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed16e173-54a6-4578-bc4e-e736170e6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea99546-8ec7-4538-9936-1666f5315340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba74d6e-7ffa-41db-af52-ee9bca934f51",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb483692-8c39-46d7-b8b6-4f5373b9e523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d1a7ff-c040-4842-8336-c660bdefde88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5970edcc-aa2f-4472-82f4-82999612d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3cb9ba-2e5b-49f4-b436-97b0b89d30d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85de5d32-5508-4337-ab97-5c3ed587be3b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a12aefd-005e-4ddc-893e-546ffd54f19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0987dc65-b471-4a9f-933d-00bcda1b8f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded6fec8-3906-4035-9574-ac0af596623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a378ef6-9f15-4104-b6ee-be80bb5f6f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cb5007-0c4b-4055-8f77-3a4ef5b3072c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d8d31-10a4-4293-8cd0-516093583b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34410b85-7dc5-47d6-89fc-2521e0de26c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761b9c25-1a0c-4625-8572-17a73795b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cf0b6e-2fa4-4e5c-ab3d-2b54459d5cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0785c3fc-2b98-4c69-bbb3-6f5eb5f6b03b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bffa068-3683-4c1d-86b6-b38c567507a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8922fb-810f-4a07-b105-2e0ba94e077c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d092491a-660c-4abb-bc66-f9c50a86d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58db594c-a353-430a-8805-abb33b56b479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcea4aac-93a7-4591-9f2f-ea5e86494bf0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258f754-d50e-4da3-b56c-c6c477b31ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e99c97-7535-40b3-9453-386f9de9b267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6dcf89-8271-41e9-9d4f-fd10be6f6ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c6e1ac-44bb-4925-af31-972c634b957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6fc34d-6a5e-4d38-8984-5751c9d2d8f7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a47b07-3833-4c40-a77c-e1abc2e6c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0b809b-4ccb-4fdb-84ed-8d0fbd07be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dd2206-4dfa-4d45-98fa-61de4ddca6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78ad156e-2de1-4391-9f4e-46d6c4c95efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5def80-5a77-41c5-8aca-21490936ea45",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6011bad9-1f92-4a96-80e0-ba03a20bc124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ff416f-ff13-4eee-9e06-81f1cc662a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f737d6-0d4f-4f55-a203-94cb307aeef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3634a0b4-d05a-4d1c-91b3-7ff53b3222d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508ea514-5c8c-47b4-a966-254fa32cb5f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b367b751-e89f-493f-b6b2-3ad29755bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fede791-a031-46c8-84ee-290c244a1edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14c56dd-5dff-4563-a830-334c28bc9434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf97e3a2-1038-4a7d-8f96-5d51df1a7a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bedc38-8b00-45c0-a44d-b7cf15cdd9fb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9a827e-68bf-4301-9998-fdee88a51ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6aa41a-a648-4efd-a480-82a6106e9f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9505e085-d0ac-415d-95ab-88c383cfaf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4c2f30-874a-4e7c-ad7e-4657306b2747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e919c70-6f2b-4848-b7fd-af31c9289066",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267fe2d6-259c-4dab-9e16-8877aa7c83f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c43e94-1f6f-4724-b380-b0f016543069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e16d58-ea63-4c5b-b26c-5d75ed0b9080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc447452-89bc-41d9-a6ac-44eed0a5dec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e03cab-8da5-48a5-98c4-551818803566",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c479641f-74e0-46ec-aeda-ae48c57dd591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f07621-7e8a-4265-a580-4996d7a14eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba40487-02ef-43bb-8a81-ea087b5a875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83184009-6090-4373-99cc-6478ceaa899f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091caa1-e7b5-466d-be62-8d0f90560862",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412df61a-a7fb-4f66-8742-0e9de98b031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb53810-db3c-45fa-99ea-a92a984b4705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e82b139-8436-40a8-a02b-a5f6f33e1798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6f90d2d3-fc6b-46e1-98c1-441fc91e0756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6185964c-2d44-490d-a434-1ae49d5dec97",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf4e63-ce66-443a-bbcb-0d6c97172b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b784a3d-86bb-4d95-8f80-16e8d9a95804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea4a14-acce-4dff-a624-46c3615b7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2310de0-c875-4a97-a557-f09b2fe557d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f785cc1-1f3a-455a-bd32-548fc1381c2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5a82bf-80d7-407e-8375-3e6872e3ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bb67b4-e417-4f2f-ab5c-d566ebbbc1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb3c836-73b9-4e8e-a5d9-c49dbdbf1d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b07c5e61-a09e-4730-8fc1-484a2a78caf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166eae4a-23bf-4fc8-b1d4-b3c59ee7d9a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25868e14-619b-474a-925b-43949211ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6595c6-62a9-4abc-8a54-7a585b4527db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaf1ab9-e278-4696-8177-711edd14c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4d154e-9b59-44ec-977a-fca36d5c173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f63178-a61a-4e6f-8c34-df14b7f16517",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6855cbc4-33bc-437f-bab4-49b57ec101dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3d3a7a-831e-4f4e-8253-2191af221b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3261061a-68d0-4f9b-a0ec-00ab4743afe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0985ec-b371-42e1-a3c5-9257dca280cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9a9c77-3632-4df2-a946-3f417d8afd3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a1a05-ff71-4a82-a015-79ccfa1bb5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebe72c2-6ef7-4d7d-ade2-78afa3cc26f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac516886-6b21-4884-80bd-beb706012694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "461641f5-6bf3-42ae-81eb-cb38feb10a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0af27c-2047-4bda-8e99-3ae8f3d2a113",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc73013-44cf-42aa-acde-964fae6019c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bc1994-977b-4df1-99df-15f097a3a15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa9deef-8514-48b9-9b16-ca3604be94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bfb51d-e208-4e50-881d-8849d39a33ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4d8d81-f57b-4644-8cdb-339fca7d280e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9c0e2b-9ef6-49c8-83bf-9bf771e48c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a96c7b4-ab31-483f-924a-493581e84d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e0972b-e0c6-4d86-8e4f-5c98c5c6da9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e573bf-c337-4a48-9a25-0d5c386ae520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8e2d69-fe3f-47ec-a6b8-23b7e3c2212c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef72ad-0752-4eb6-8469-b801ec4670c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c862d8-6c31-4127-8013-1432d3375b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1046b3b-08dd-4bbc-b05d-441f973b42a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cce9d3e-ba39-4250-9de8-f8048a151b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859dd358-a05a-4ff3-8e63-45e59767ec2c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f2a6e2-d48a-469f-b9a2-29e5f76f6ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3926ab-f145-40df-8c8a-e0b60b160282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a836c-b71a-4c76-a630-9f0bab7121c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b937091-1b14-418a-bf6b-e24e2ea33c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c5d1f4-4194-45f8-a2e8-c5634f813b82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc9177-66af-4477-b45c-e615cbf8e330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f833740-21cd-45b1-859e-81af4eae6ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f784d6-ea23-4b0d-b974-67c8853db24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eee600e-3ab2-49db-814d-7278128c1e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e80f5-c6c6-438f-8a3a-816898b93ecb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2321595a-5a1f-4407-80d2-10c78c329f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3230b4-1bb4-4d8b-b3ad-ec4db4ab2085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd67bc4-9de7-4a7c-8186-bb6964e7d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de33fe40-1465-4abb-95a2-7b13a078787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9d770-3b2e-45e4-8f34-ca38028e83e6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ca769e-e847-43fb-864c-267a0ccce1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c9c23-e77c-4132-aa90-412bc8e2acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c965aa5-cf50-4248-9e93-129e27840382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d99376-ee55-4ea9-a628-e6d8ef2296b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f7c04d-8ae8-4e02-b5c7-9a0ec13f7ba6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3b3386-0521-423d-a6c7-343cd2170fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf56512-1a3c-4b61-aceb-406152637e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c41d8d-ee34-4acf-a6f4-fa17b8c2e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "991553f0-5b60-452f-ac1f-79f88c8ba18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2575997-10e2-4ee8-a9a6-35dc01ae5df0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d886df-b861-40ef-9207-e35e339d1aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7055f2d-3e32-42f8-ac57-e22445576c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f186e06-0408-4169-af8d-12b889fa19c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8fb041-2cb1-4055-852a-884b4112cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54caeef1-6121-44b4-9120-41d0c89b0963",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f09dda9-2a77-445b-a757-f65b1daae119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1c671b-2b53-4412-8891-bf782b111335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2daafb3-2784-4624-a8d0-b6cf09e87afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7fc46a-009d-4c29-a74e-18f7e447207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b1bb7b-55d8-426c-95dd-fb61ec02084a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017a85c7-2225-48e1-912b-c99551193f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7bcca3-6f15-4b46-a81b-819a9a83a070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692ff7cc-d6dc-4bc3-8f9d-3e0b7570235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e5b4a9-03cf-45ce-aacf-6cd10ba2f8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59416e3-4898-483a-b5fa-3d23fb43b785",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1a4c0a-8be7-4f51-a0a6-16a01f579e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3139c431-a8de-4dfa-b58b-269a25bdcf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11367b53-d1d2-4da2-85a1-0a881d71d6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73aee8ab-5fa9-44c3-8443-e217596e1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a776abd-e7b9-4114-a146-9437d8be780e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7cfc88-e85f-4491-84e4-52dfe8fdb1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc54fe29-a46a-4da7-a2cc-79d2e51904bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcf05c-bc22-4771-9222-ca9b4d9d20c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5498d46-f56e-418a-b1c6-b4bbdc49d86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19d47e6-1832-4ac5-87e0-c310c5a7d510",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1714740f-d721-46de-bc79-d1a709e241dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9121ad-4a46-4240-b3de-f4a076f8040c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8ba0d5-3ce7-4403-a73b-51c368618384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb77188-408d-49a3-b583-2a7765eb5f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773f5091-12de-45b7-a2ec-84827eb4c370",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5583d97d-9db5-4982-affb-e6c362fc7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31fccab-7477-454d-996b-854ee451c1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711a5dc5-eba7-48ba-af3f-8d18730a472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f534081-ca47-42e7-ad5f-824035e7010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4812ae73-e7a4-427f-8fa0-fd78bf589a17",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcdef1d-82a2-4fa5-8914-788432f7df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe22496-e806-4987-bc5b-68264071adb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79e15a9-1497-40b1-8b1f-2a70ce2b16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed2fb7f-3795-4079-a83e-8eb649805d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb69aa3-db96-4e43-ba4f-cd01b2ea4d84",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b408a81-66d7-4a4c-8111-7217f02d7f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88d1f24-0453-4053-815a-13234aba166e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07132edf-aad5-4476-8a1c-5b7cca5f9f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "245beffd-8642-48c6-9d45-dd04de4c4b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a9a08-7154-493d-ba76-e85cf64884b7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97a0da8-373a-406f-acb4-10bcd7cd0f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413e3483-baa1-4171-887a-808dd79ed7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae0423-e8fd-4d09-9e69-00ec12725a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ea91dd-3719-4580-98f7-cbab009eed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c537a5-4606-4d4f-a347-92b473e079ee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a00954-e0c6-42c1-9f65-02f237023649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870ab7eb-b053-43fa-b7d5-9d0c1df14765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95b1209-7bd9-436b-bd7b-5927026c587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "133714e4-7888-4f73-9d0e-c1908aed7fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be297054-ff8e-4b13-b859-f8a8e8882f0a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03962145-0e0f-4e4d-a44e-029f1fb8b358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e74822e-315d-43e4-8843-aaf5a7e76020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce4ac8-928a-4fa3-b5a0-1a4ca9de3f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bde586f-d386-4d77-ac81-f56108161efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1f3c47-0c64-42ab-94ed-c8a52b2d23a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c1de5c-2770-4224-8815-d1414f4fff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48737f8d-7e8c-47de-93fe-af97b0170a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e88ce-1d18-490f-92dc-f280d3dc7d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7d1d90-dc15-4fd1-9ee9-c3ff6e9aaa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57278b-f0fd-47ab-a1b0-d67e683e838f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9167692-f624-4b0e-a3bc-66b58664e589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997cc7e8-5dba-4c94-bb2d-10a86fc77f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6610aa6-b627-4dea-9fa7-4bd4e5ff9c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee548d42-06c2-4940-9958-10b902156735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ad205d-8c23-4e68-8dfa-c52418d850f7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2741a33d-40fa-46c3-b680-8517717ccaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24ad43a-f6c3-4a68-a715-da49598981e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb6542c-71ce-4a57-8955-7b2a1c00a64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15597bb-f24b-4a39-a13a-2e1a998b2fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2414756d-7121-4228-9a60-d263038baa11",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1c1065-bbd3-4e34-9f0f-8f7a1390bfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bbc9f3-8a82-4224-8fff-1a942eea7cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d497a6-5004-4441-bfd7-5c707ee4d442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f02b9ae-6f48-4d14-b07d-16b21ad9de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffdfabf-6ff9-430a-a9bd-dee1050f128c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34109067-1278-4fb1-9e7b-45542bb9fe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4476fa00-d132-486f-8ca0-4d584fdb1fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04b5592-4ba5-4a25-af02-0df4dcec7b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f772bb1e-f26a-4f75-a92d-411c74025014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbae53cc-eed9-4a16-b680-90671b611f1d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9d2713-921d-407f-9bba-583b8dc35ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc9077-27c4-4aea-b669-c5b63cf81638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b361f8f-3e6c-4adc-a133-b5c59b4f7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7feea2-95f2-42d7-aac1-62c99499cde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d1928b-295e-4d47-8982-10d2bde63132",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c64a18-21fa-44d4-abdf-ae089388367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae31aa67-ccb0-46c2-9170-10828d6af14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a978d01-de55-4de9-aeaa-804b3c3791b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51500ee-6be0-46dd-ba1e-d8cf737120cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269168f1-295d-4a1c-b350-44fcb0dddd9e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ca2bd3-8a02-4658-b102-b83450b8e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b88b5b-0513-47e3-a193-773b08cd6d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f113a-5999-449b-9137-2eb8693abed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24713f69-51c0-4fa5-939a-88bcdabc4dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1bd7d2-be3b-48ff-9fd8-4647054313be",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf895b0-063e-4385-8046-374e42b39297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63114a03-1387-41da-86ca-d037f9fddec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a38f48-44ef-4cc9-aef8-7b10188f89e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5827e31c-0346-485b-a5dc-61b58c2dbfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd521526-7bdb-4f88-a4ff-8e682ed3f9d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7ed656-95e1-4298-b846-74ed7e538c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcb1671-4fbc-42fc-bbc2-4a67af63fdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7e3290-a073-46b7-a818-97e752f96c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c16f18-d3d7-4545-9d95-1668ce41f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbadd7da-b7ab-48d3-993c-6a608de98c47",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b425a44-efcc-42e8-a4ae-7363b9bf56f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a4431a7d-f5fe-4acc-929d-10e4b6f7f3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c48de-8237-4041-95dc-8265dc0ca951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd3b8e8-b94c-4b3f-afb0-14910a3a40bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4981e2f-5643-4cd0-a4cd-4d4906f5ed85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "706756c8-26c9-4f6f-96d7-b0986ad48084",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5251a-43ed-4254-99d5-56cc618fe079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf065ae-8613-4780-92d1-1b637cae656f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fce136-4a7c-4d12-89b3-e2aa56337f47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c3723ef-f0a6-41e4-a4e2-4786bb418119"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5041810a-0b15-4904-a009-3abaa68c7bb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f5bdee7-f6b1-4766-b2d4-0d4ee3bb0111"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0877f3d-0342-4347-9cec-57ed3fbfa655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbd845f6-d502-4d0f-8d43-9cc09fb9c025"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "660e4aa8-ba61-48c8-bf40-0a07ad495ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a98cdd1e-aac9-4207-aee0-3fdf72249d71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "158300b9-df5d-4a2d-a7e1-2cfae1a82149",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fc3b706-87c3-4dd6-a5e5-0c709704b61c"
                }
              }
            ]
          },
          {
            "id": "bddaaa9a-b58f-4238-bf5d-c95ae0b627e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d31ef26-d0f8-4fed-af0e-86cacc1f9a00",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b1d8aa9-22a7-44fe-91aa-8fc6f851af04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19729792-27d3-475f-9fc1-b2c83ba6884f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49e62833-57d0-4a3a-b677-798739360f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce59994a-65f8-4a72-a372-5990736a050c"
                    }
                  }
                ]
              },
              {
                "id": "a59731fb-3dd0-4855-a8cd-0b7943494ba5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65af8a51-4a86-4b96-9018-2657284736d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d742329a-da78-4370-9c5c-c38410e68006"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e34de52d-965d-4937-b000-dee99d32106b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "840eb160-96a6-408a-96dd-bcc1fa2fa4db"
                    }
                  }
                ]
              },
              {
                "id": "7f9eef7e-5a8d-4cca-a909-eed4e89867d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f8c87ab-3f2c-44e0-8da1-5127ea13ed2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee2399c2-4e1f-4b12-8dfc-1be62ca119d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d24ae35e-1b0b-4d91-a72b-557157ae17b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3d135ad-d8ba-4447-ae48-60af6c376273"
                    }
                  }
                ]
              },
              {
                "id": "5059ba59-df8b-4094-acc8-448780e8edff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c05b9706-edfa-45f7-899f-ee82c68d347a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e95b32d-7d25-44a2-8de5-ae7b1041abb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1d7e3d8-dbf9-46ac-ba75-0347d81abe66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94e5cb69-e1eb-4acd-9779-165ceca9dbf1"
                    }
                  }
                ]
              },
              {
                "id": "c3783587-ba8c-4337-9eb2-46a550d0bcb2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "859d849a-eb3a-44e9-8967-7bcf66ca39b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bd674d4-e0d5-4c85-ad31-dd891bdaa25e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b310debf-7615-4cb1-99a0-307dc88286a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc6c7b27-7b2c-40e1-8de9-42b85e1832e4"
                    }
                  }
                ]
              },
              {
                "id": "d99c566a-5d4d-44ec-b1c2-4827161d080a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86186db9-0c49-4c6b-9986-c6ac4a62c9ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "503ab022-6a55-4398-ab94-53685d7d4fb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df3024f-5c77-411e-87a8-22dd12a44a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb6dbadc-fd7f-4499-a472-f750e9897b57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94a78adb-f796-458a-88db-f20b5afeb3a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d471085-8caa-4d17-a540-24be33390c73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "123bb674-9b8c-40df-a9c2-9044c58a2d61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99908fcf-f681-4614-be56-5749de96af3c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26693ee3-7a68-4d52-8944-f245acdc7276",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14382f96-6ada-4826-b8ab-636c968d27b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75c0ea6f-eea9-4e5f-80de-832be2ca9155",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "829c0107-940d-4839-b973-ed693ee90416"
            }
          }
        ]
      },
      {
        "id": "ebd0db4a-48d1-4ca8-99e0-0508acd376a4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "66faf576-74fa-42a3-8c93-962dfd6f7834",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6bcbfd1-6536-475c-a826-2cf51a5d70ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9432660-8f5a-4a29-b242-2b347a23e3d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e09ea9-d381-4ae0-b2f1-4355365cef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ae841c-7256-4d5d-94c6-b26083aa532a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6390361e-2864-461e-84d7-167e6559a677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a63c3e-f31b-4a4b-a9c0-ee5eef6e724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a581f9e6-794a-40db-aa01-8956d9f6b4a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e963b7c2-b24e-4e77-9330-8d193589f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e7026b-d228-4c5e-a95e-0863844a7349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc1a1a2-3858-4165-95bd-afadd42e4eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b696cb-6005-4a18-a9e0-c42616a8d7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eeeb86-bdca-4f1e-9dc9-5c5c50b764b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae49677-4fbf-4d87-943b-1e6c977d35cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e14ca21-ab77-46a1-9868-ad64628a7ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a39265a-7f78-43d9-a385-3d2d8e784dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de3194f-3839-4538-ab42-15b3b0128c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c2ad38-f6c6-474d-81bf-443ddaad45c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382f0a6f-eedc-4e75-b898-a339b89ca261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7adbe12-9ee4-4c0b-951b-fe8da87a227c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7dbdda-3855-4d8d-ac6c-b6fd5b3efa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "156c1e4b-5b7c-4189-a2d6-2c2b6c5a631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a89d8ab-3da6-4736-b640-190a22b23768",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8ace3a-7d3e-4742-a944-ba879b65d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94145497-3614-4410-ade4-c4e2622e4957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67498fe-f7a8-4d5f-bb4b-bc64933b5fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e63c3c-eace-4c0c-aafe-96bbd65df371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8090d034-4b89-4ea3-a441-3ad4d4a8b041",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdabd4f-4042-48f0-a0ab-6729b0f8900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf4e10b-3f33-44c1-998b-d8f67a24ec33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a948c6c0-822f-4e0c-b8a6-725a8ebd8444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f848e8-008a-4075-bc51-ef7a2738046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fceb341-29dd-4049-8e17-d2830c6b5140",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c9deb-ea57-484d-a978-b87c22eacd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a93709-102f-4bf1-8c7f-7af765a03fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a8a5d-655a-4eb8-8968-c1c5ee64eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9208d897-3d44-451c-9645-0c64d76297ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac47c93-9409-4e62-9493-d2a40e0a56d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4c29ff-af2b-4602-8dc2-0309214e0f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600fa934-74e9-4ca5-821b-bc1287e616be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263cdddd-01e7-47d6-9968-bc44171c3519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ecabd1-2feb-4711-97af-5e2f35c994c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ad1497-abab-4c82-84a4-5917e0be0559",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d21c902-a47a-4d29-991e-637903c077ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314ed8a6-534c-4513-9c15-2ded98fdf95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1459d2c-149a-4bb1-ada2-fe9415197547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45d99b9-1a6c-45ca-9f96-ed3b9c56d968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f074a747-9e70-4321-8a5c-394091f01280",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1b9a76-c94d-4112-8f48-ce83715e20e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a955c278-3ee7-4d84-971e-883faea5bafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c186819-fa0a-43d9-b9a1-e1501f3a2014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a901ea1a-2dc3-4762-b4e4-7c8b9e8ba250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829a1723-1e35-4c0d-ab86-656e4b748a3d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d29f1d4-ef74-4f4f-817f-2081bb9c0a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d541c2f-3acb-4d0d-a943-c55af170202e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f597e8-e2bf-4bc1-89f7-c1f891750345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "feba6da9-0667-42a2-b18e-66afcd22ca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3205dc5f-7181-469e-b15c-19e72262a283",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcd0f90-d3b1-4a23-84d3-af0f071ba42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0b39e4-7b03-4f1c-86e2-50597866ef98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765f4580-f144-48b9-9363-41d0da2f189e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed80772-b98c-41de-8edd-79e98415a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c70ff9-c88c-4e39-b813-f37cd0080e71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaca52c-97c1-41e2-8b76-a08a231babe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ceb7689-9326-43c1-9677-8985e6e38f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6e0edb-ea03-4798-bfcf-de9c69b286ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9412a6a5-c21d-4736-9939-6c7b500ea2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180dceeb-b3d9-4a72-a92a-558215bf8e0c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68375233-0481-422f-9092-d47795307426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e6830e-f6d6-48a5-b579-10db30b80d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8870d3a-3849-4aeb-9443-1cd855fef986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "987d04ec-6542-493d-a588-f3080247d4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdbfaa5-5391-46be-818c-17c1db5c3881",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf3b74-c5c8-4fe9-8849-7a30453b74bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9509b49e-bc3e-4353-a1ec-02cd3ca9e672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500acc5-6381-4196-ad56-15c203c112c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bab5f6c-9f32-4de6-8491-0d86d4464bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57d1a26-dbcd-41fe-a0a1-9478a0330df1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478735cb-c3ae-4145-963f-1cde5cb98171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8f46e0-a4b5-4136-8950-91d724ed0f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e2a064-5570-4454-99ab-ddeecfa3dd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd5271f-219f-4bd7-9c33-ec9eedff9f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569f0dfb-5feb-408a-a1e0-ce87e8711c0d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a266d5-a038-4ef9-8203-b7bc6eedc179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a0899-738f-4ae3-8826-1c9ff4daee00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547f616d-77b8-4891-b968-4a70eac8196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "876f6262-e242-41fd-88d4-3090a760fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d71221e-9135-4b80-99b8-a3a74ab40395",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805285af-8486-4f13-82f4-fc9e3a35679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b414b3-2d4b-47eb-8cc2-7ee200479524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac4ca43-bae7-4d4e-a3df-b0dcaac40a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56daf7a-8de8-4d93-83d8-24c7019dc949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de1e18d-7536-4a5d-b8e2-44230a6b0386",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba16c7d-c27d-4065-a126-b8ebd966df2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03f5999-a9d1-4fdb-86af-49b0de007483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ecbfdb-44e0-458a-a22f-4d8fd1264ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a709fe5-7c7a-4f02-84f5-d645a03e3c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ccafbe-e1cb-4e19-9934-79ce17075bab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd741668-7e98-415c-9518-80a55e69670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eab8959-7ed5-46ce-8908-20104d4e9d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e69f57-c6c1-4a1c-835f-2f9e1d73eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3bc79b-1cfd-4aea-bef8-b35e8b30546c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead4dd95-ca71-4304-8cbe-68ec18cfc310",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096e194-cee5-4208-b471-2ffda64f0e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac3fcb9-50aa-47de-87b4-fd49e20eafcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1119e0c-5db9-42ab-90fc-9a56bce35d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00881f7-be4b-4255-b43f-14e675f1a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7a334c-1b66-4855-b495-9335e06a6b16",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3151d1a0-aafc-4a29-aa30-605bb365c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906bdb5e-8779-46cc-ad5b-4d11d2c75d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322ee004-4a1e-4004-aafb-80470a156d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc08ff63-75b9-443d-97fe-7b8bdc3ae744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b22fecf-f61a-498d-ba2e-8e8dcde26cf3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f169f9-20ae-49ee-ab0f-e368b1df888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c690efc-fa8a-43de-b79e-e661f9fcc333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae36c8f4-aded-4aea-ab17-f20a9311f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "783f59cd-d49e-4428-b107-8b4d8bdc646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5bae73-d55b-41b8-84d1-cff937806c06",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00ba993-461a-40e8-a483-1dd255a73956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11dedb5-c048-4e24-96b6-d07fde87ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc353e-f096-4a24-85a7-434d6e166b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f1e3c3-0ab6-4e37-ad7f-e08688451ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624ebb3b-da76-4710-bcb6-626fefafa3dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339d2c10-0185-4c2f-ab47-487c23974ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c80a9bd-2293-41c3-9da6-fc9dd69d69b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ffbfda-f583-450a-9bd0-8c10b1472b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3661810-2488-4e98-9205-32d30daae14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295e1b59-78f1-4c8a-ad2a-79cbe2e473ad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e175db-ab66-44ad-9697-0a844dd359a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeb13d2-1863-4fdc-bc05-1ae62389e427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a85e19-04a4-4001-9b06-8e5c98b6db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "829d3f9f-c80b-428f-96bc-07a53252df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44e376e-1a68-4548-b937-88330520fc5d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef729f88-4f27-44e7-87be-55379082a21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b06dc57-35ac-4cb8-a96d-42047eb217bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8e2dfb-b673-4cd8-b8e9-6476ba53b8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b5d761-a383-4ff4-85d0-1293e7a491a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d1d36-2155-4f1e-b474-0f4e98cf4da4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e66bb1-86a9-409a-bc51-62f1e058a632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecd4726-94d3-416f-a492-8184d5224e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9194c4-1094-46e1-9965-c474d4432fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3809e53b-5f0d-4de7-b9fc-b3d451e56b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66860ca-e0fc-4e94-89bf-3215d3f74c50",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d142ef04-db95-42b7-af17-ba4c346bbc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2adc326-021e-4ced-9d78-39fcd98e87dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c037622e-c38d-4cea-8194-c388812f455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ee5519-9d63-411b-8cbc-45d5d748fe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5eba0f-d8ff-46a9-a7ec-ebf7f5af1b84",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6f64ee-95f1-46f7-915e-7e475c785d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e867167b-8ab3-45c6-b155-fc4e68e5f60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f56165-8176-4fdf-9ae4-a549863d64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a11886-3ee6-4fc2-9d2b-20843a6ca2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7244571c-2cc6-4f42-9b43-838b8d526381",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45c048-360d-47fa-ab00-7f3dbaf60b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c585aa-bc84-4c43-9092-5d25dfaa5317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08955a9e-67b3-4260-b783-10a69a12e3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd54c8d9-ac51-4db9-a193-b5efec54b544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2130179-df38-4e57-8958-59f9c2a83b6d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2804de-68e2-454c-a74e-daa6a428b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019c0da9-4081-4ff8-b05f-2672ca22dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888e301-808d-4336-a7de-be9079cf16a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45b1e93-694c-4ae7-8a75-5c03d3be7f7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f33e4bdb-1fed-4921-80fe-2d53d0ab3d72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1250713b-6fbb-4378-8d2a-a729d240788f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835e3588-88ea-4913-9c41-b08420e40744",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48c57b47-484b-40b0-b060-54d850048384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc56fc-fa48-44c7-bb3e-b46c9f35a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d81fce7-ef09-42a1-8393-151b421be9cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0c94a7c-6eb1-4e4e-b3c4-634b9ed1fbcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bc82d7a-3634-4898-a83f-45f2c77ff99a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3e573c-8724-489a-8d46-88de03308783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d42ea9-2409-4189-a372-b51561807317"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d04de28e-dae5-4066-9b6f-0588bb3fef6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21ad1cf4-542c-49e0-804f-8dc47b23277c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42efc44d-67db-4218-8c97-e2a0dae27832",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c297fa7a-763b-4ec2-a9f9-da5b12f0294a"
            }
          }
        ]
      },
      {
        "id": "fe8bc544-d55a-46fc-87b0-1ecdf8ed365c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "16aaed0f-2ea3-4480-bb4a-7994886383a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168cde24-f3f3-489a-b87e-2e23395f70d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93538ba8-d7ee-4cae-8051-5656e6610db5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2eaf89-941c-45dc-b461-0b1556bdf7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3039eeac-e1bd-49b4-a359-9a7940aebbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9244294d-0cc4-4ca1-a809-67d8981bae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0aaf67-3289-41b0-839f-bedb0460444d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9833a7a6-8416-4f69-b612-dd351fdb91fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78858124-cfc4-40b2-a8de-8cbf01011ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ec1db9-bcb5-414f-a34a-582c984eb46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e462e-3744-4a8a-97e8-a2c5a4b58dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4666e3e-a3c0-4076-8268-9a75bb07bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba72fd0f-62a7-404e-95e4-4fc9c2401e46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32caa5e-ea8f-4c21-b9be-44a613b0f853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba3e44-8d62-4b11-9007-fbf687097be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41d2e2a-4446-4754-a456-3ad7143c7a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce9c27c-ca77-4f03-b0f2-f51870948434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98b63d8-0f06-4fb4-8d41-17b116e84ec4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f95833-486e-46bf-89ee-e44ce32aff69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4b7874-cdaf-4bd2-9406-a9c75d2bd370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad404ddd-5eee-42b4-824a-ec624f1e4e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ff1d88-6ab5-46f7-b846-226d334ef7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538b5ecc-a7f6-4a25-97ad-fe222fb89a2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cd7806-f8ab-4159-9b71-7ba4ef0f9712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dbbfce-095c-40cf-b01e-31220b353355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa844bb-e590-4546-8e4c-24ae04164801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "080a009d-f669-4588-b386-683c7826a7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc297548-5bc2-43f7-9b2a-b9f0809fb89f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdac8141-ca32-4df6-9e69-1ac078bd338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feffbccf-e77e-4eeb-bfb8-acc263b713ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26400820-d81b-43ef-8946-61f0f4fb57df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed82cb8-aade-4116-ad93-e7067e2ced91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e11c6-29d8-4e9d-8ea6-621ecc1891d6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9732b8-79e9-40f2-99fc-6e6a0f5f8382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a034b8-7bcf-4985-9208-2bb9e7df07a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54896e0b-6a79-4ebe-bfd7-334a49ee3e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99f00fef-8535-4b5e-81c3-c2e537482f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be82cab4-d393-4d5b-b3dd-77c2e2843301",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d8a9b-c208-40ea-8002-80535608fd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455ccdb7-c1fc-4194-8ada-21dbe11e9ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489d5d1-69bb-4696-ab4c-8c4fea388f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe29718e-4e83-428d-a334-a4b5f02fd773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace527f1-4c51-42f3-9097-3a0a6d7a39cd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2721cc-522e-42d2-8501-23f7e1744184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e9987f-eeb3-4b0b-b33f-68d0c0234728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba77c86-2c17-4fa1-a780-f3ecb836eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab643439-1910-4621-beda-7dd2339f3c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da2cd39-3415-4e5a-9274-b46f4628734e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8543f-2b06-47a7-98d6-9b048bbd1484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d688953-8730-429e-af86-65ef70033ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1132c6b0-ee4d-414f-af10-f02aa704b0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d46c18c0-35c5-49fe-81b7-4c7706ab7046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e8d3c4-6d10-4700-a7a5-5b71da35bdb8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3784fb3b-9b0c-4616-a73f-63ad789e8745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac31a89-3438-41b4-a425-5e9749a4ecaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a651f85-0cab-4e00-96b0-e7ce368908b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d0b6e9-d380-4d69-b5cc-2e45b61fa957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19efdad1-cca4-4cc0-b7d2-18d1437e3951",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302f2036-a7dc-4e77-a62b-5da17faa84e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a527b767-fa24-4b8c-b781-94f4979edfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110fb8e0-d3c9-4f8d-8207-5da4f527dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2882bf31-a9ee-4cd0-95ec-b0c60f417ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a3a521-b8a5-4ed3-8da8-d9ce6b5bea46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369a3746-9bdd-4198-871b-106f5400dabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb4eeda-29e6-4417-8a33-c1ed9df979c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d65892-bed4-4aa2-978b-486712f5e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b30ed5-b151-4819-8f31-345614bb29aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9acc84-2583-47b7-a098-f612521a42f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de665111-e1fb-49ca-afe2-287ab411e482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2ba625-40dd-4332-a69a-3f04e1023bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31d046d-cde1-4387-80a6-967f3692f826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb1c9a7-b1f2-40dc-a950-00962f0f7bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6bb103-eeb6-4372-a2ee-e6f0f2e60933",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0bad08-be4f-45dc-b501-fceb96fa528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b17aa1-719d-48a0-8ac5-7a8b06d31098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450188a7-5b49-4f4b-8abe-e2f717df27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a3d5ea-939c-4f91-9dcd-2d59142f2cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5356efc-e9ad-4769-967c-894b854a9039",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93dfd0e-0e04-4461-82fb-5b20070a91a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cf4f82-9206-4795-bda1-ebd24a63ad0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed4266-2034-4fe7-8c14-d452e597fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "014b1327-4cd2-4340-9c3a-e68741b25dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766033f7-c6a5-4b08-84b9-011ad570e92b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e4900b-3d02-4826-be68-e497dbefca25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f4a281-bffc-4fcc-ab6b-dde614a03407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d4def9-5f64-47f6-a47e-5d8d5486bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3745edd2-953e-4589-a702-2a6c7351b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b047d97-ce9d-41e8-9662-93b707d2f923",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc6829c-2ddc-4986-bd34-6e7f10da47f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef40caf-b268-4737-8f09-ae061d22d1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054261dd-ecad-49de-ac24-feb7b79c8f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "191b9011-2760-4b6e-8c43-5b56c8b8d016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02974ab3-0fb1-4dfc-9b31-6b6cc9053ff8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10e2039-89f7-47bb-9e20-8cf5a3960ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b96145d-599d-40c6-8e3e-9fb0450b3ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165bad13-6bac-493c-b819-1e4ae847706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f3aa5-a0d5-46b5-a232-fdfaf6ad72a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0697f0bd-00e2-4e98-9a6f-8cf5b158f4fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a797be7-59d4-457e-bd58-5052d5894f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc83bdfe-73ab-46fc-9985-6dc9c768df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834f6a2b-7070-4e0e-8dff-e3712e0ae9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e3bca9-1a88-4fc8-bbb9-9105346d65f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678ef464-4039-4c95-97e6-0ce11f12636f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35b906-049e-4c2b-955c-6d721f02a56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b4af77-9c1f-40ea-8511-8842afb6d606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b789b33-68fc-4f8d-afaf-3fc266a76d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd142d6-d848-4327-8417-fe281d4e7eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d97e4ae-51fa-46e6-9d6b-44c7ec91ec0a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba91f887-e536-436f-88cc-580ed95959be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1d22a4-1eff-4dae-b52a-06a57eddd9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b1fd2f-386f-4ccd-a3c5-16bacf5978ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e46f5f8-8d07-4036-91b9-88b3f6b13755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da28095d-631a-4703-a623-43f0ccfb4500",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e13163-05b1-4911-b42a-e54cc37321b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706b709e-5c79-4029-8a10-618877a0e171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee99cd5-6289-4ec1-bdfc-da1870f3d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa97942-5ba5-4278-90e2-8273b1e8d92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1cb373-a899-4d69-a389-fda884676d6b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fd3df7-5795-4553-97ce-1c938ca85679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cd9733-d9dc-431f-951c-8c90ebfb8d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0194ef0-8dbb-4464-a8f7-33f04951e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f355eda-58af-4f9c-a69b-c77f39a1a7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1839d2-3376-48f2-aadf-b0ed0830e8f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af1c312-935d-4d71-8451-4831cf335ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffa5f99-59fb-4946-bdb0-f7cc36bed040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feedf010-450a-4633-b2a5-58f819f7c736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b3c1f3-7a0a-4d22-9cb9-d84b009e03ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a646cf2-99bc-43e8-8031-55a3b26972cf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7455b063-dcdd-4ecf-94ed-cec30d828f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be91753-e04c-40c4-9548-da71fea6a9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea11fa4-1afe-417c-a70f-830e4d855eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b49ef6c-a8aa-48eb-a721-f88a271da9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04fda28-202c-408b-8304-d1deb4dd9044",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704051c6-3cd2-4e24-84de-33529962eb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd2f0d2-d241-4aef-a744-7c16565288bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b863cc53-ac91-4a6b-878b-4864206ea96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfbeeab-f4df-414a-8f17-c96f1692576d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e380072-51ec-4dc0-b5a9-749f87d1c354",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9832e05d-8b2f-4adc-8f32-517a2219e670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601531f3-44cc-4571-b09d-0b39c17d977f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92267ba8-301c-4d4a-b7f2-b40bab2d681b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51035071-28e0-485b-8a83-85550e577ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf16909-76fc-4aa6-a14e-19afce878c7d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a317b-7639-4918-beca-7d886ae7d6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd3cce9-3609-43a6-9da1-f8994aadb952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebd6a97-465c-4437-889f-6bbdcc6fbbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7cc10a-ab06-461c-a077-e493458c748a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4309eee2-4064-4695-a45a-19de08a414cf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f61f268-0cfd-4f68-b8ff-2807b01ff7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ba9840-6401-431f-9319-54aede628cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e68fa00-6980-439e-9823-fb7f6677b7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d954ee-4c0d-4aeb-949f-4bf3f5a7f947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204d6550-ac4a-4870-a678-450620d4156d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99eee77-8a7c-4301-a9bc-c48852115fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5da133-f4d6-4ee6-ba84-7fff1b7ad8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eb2103-0c65-4d19-8f06-5d2faff16f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "595f18a3-4c7d-4eb7-9f14-b5f5bc16e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3446bb-6427-4553-9aec-cd527259aebc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d50eac-9501-4f89-86d8-0d20994256dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c7f829-df90-44b3-a5d6-7fef127831fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346b44d-1503-4ca0-9883-f709590933ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1dbe9a-6782-4f5b-8371-c433e42d29c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f018b867-9313-487b-baf0-a84203886007",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6767cd31-0972-42e4-a83c-44a1fdab98a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20ad7b3-9ab2-4cb3-92fb-f6bc5cba8adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b70904e-af32-46e7-a967-817fb8257cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5d2a09-ebe3-48f3-8b3b-95fe543ac9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f950a5c-a74b-4278-b0ea-860491e2c25d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64059a92-c36a-4d72-879d-88fd6ed482e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a215623d-0c9f-4f66-b468-f2755d046e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff0916-c288-42d6-839c-839f0fb79991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23aaf83a-0b49-460b-b024-b2965679bf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f0c214-d473-40e8-b8a3-579feaa91db9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3de8d4f-337f-4349-9900-d39a0d3a008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9169fc-5706-449d-a359-bc8186c53cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c44505-a906-4c95-bfe8-88fc4e6fcf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8646ef3-8955-492f-bf13-ad1b47e64d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351eb8b1-7f02-40d0-a17d-cc3144b25a88",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b265d13-90ab-44a9-8e3f-dc6b630830e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34fe454-160f-4ce3-97c7-39a5653139b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb3b2d3-efac-4678-b3ff-6b110e9b2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2855ec4f-3956-4f6c-a5ea-367795366f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78783dbe-b6a3-4063-a512-42d02cb44c3f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8d720b-8972-4302-8d1f-6e52c8912e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30bf034-a201-4b8f-9457-ad9748d5a6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6afa32-2053-4d09-8764-441d4e796f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef8834b-d8f2-4923-bf29-289a97ea5ad7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be96dde8-d64d-44ed-b153-d3308cad677a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3610bb4-e20f-489b-8a95-72f48fd03153",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956d0a7a-8ed3-476f-8825-ce60ee21c717",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc977ec-7263-4980-99e9-c20d48b53b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf0d678-0a8e-4771-afe6-79600d0b8541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4536617f-f117-4818-92b7-f78284f2b066"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27d0d439-3df4-424d-b0d5-0e453c4311b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a11a777c-e77d-4e0d-be32-86b0926e8298"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec47ba4b-aa48-43be-90df-e9af9f267f81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ae3e7e5-cf8a-4c94-b598-87f1eebbfaba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "febeafb7-cee0-4104-bc72-58f629aae933",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e615ced-8bad-4f7b-b0b4-6e9b01ba0cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edee14b2-b1b1-45a7-aea8-0a122de84b36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0da42768-f7a3-4004-99a4-2d6d736bb663"
            }
          }
        ]
      },
      {
        "id": "8f448936-08ba-4490-ad2c-ded5aa12f4ec",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf0961d5-2888-48e3-af32-f832b6eb1f32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5aac57f-919d-493d-91b6-8055389dd469",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbc8d580-1b96-4fb6-9dfc-24658526ad9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f58fd6-c4af-40f8-8a03-d00d17156db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab2cd2c-fce6-49cb-b1f3-c7459d427ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706582a0-be5d-4090-983d-8d1717746c66",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbdd127-0623-4c4f-9743-0144a21956a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7efce5-20e1-4587-b2e8-eaee840c4360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cd25b7-f6aa-4272-a957-da90a21898af",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121dce99-a539-45bd-9965-4f6b0c85e61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446bbd9b-4269-4cf7-9666-6cff97fb2c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec22919-3904-477a-849e-020098c5ab2f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8de99e-7334-439d-a819-8f2596010745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fa0532-cd11-4a17-80ad-977bdfeb0d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfe292a-9d0a-4788-9986-8d80fef75116",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684a4bef-ca36-4ee3-8d29-99a8f9dcf679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5976ab7-8baf-4198-b85a-5369b14815b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de864f4-1c65-4826-9dcb-f042e0652fa7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e30061-26e9-4b09-8d5c-13e8c786d905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c7a66b-a0e6-41ea-a24d-7a96c0807ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5228ab-1789-480d-97d9-217e8436cc39",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9cc92a-7786-4993-a13c-9139150a5783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ccf493-b7cc-4758-8f6a-ce281a50ae9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d7f85-d083-4ed5-816b-1c95b4fd84d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc4168-e274-4171-ab60-42df955b446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa2ead9-a013-4286-a776-befe2a2e092b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d87bd-ea29-48a7-9d14-d84ed58d196c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ef4d52-ede1-48f0-9faa-f50d696fd7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19139e32-b5a5-4421-b027-4e226175f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddbd454-b88f-4d67-a721-18a4350d4add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced731f9-f3bc-4526-8741-49c499d844f2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80403fdd-b0b4-4451-a6b3-412e64304480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81b9008-d69a-4d4c-95b7-4adefc7c235f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d20f4b-7ef7-4049-9e07-06427032fd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bc58d2-b76a-4141-9dca-0443069c0d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808e3208-3149-4f7d-a5b6-204f2e09a572",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2446a17e-9380-4cbf-8e5d-0ef907610560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c898fa47-2cb6-420b-a1a6-f8bc92c820a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118a66c7-8225-41d1-a6cf-d0cb90bf95c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7e3640-4534-4401-b70b-f70ee3850dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d8661c-4737-4555-965c-f22fb62627ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de22f7-9b1f-4017-8485-d80379e43f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f9a8ce-22a6-4e05-8b02-c44872ada845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a07eb1-c8bd-449e-a4f1-7ab748812c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37f4cb1-08eb-4c4f-8f2b-f5a515b491b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851e3bb9-9137-4ca0-83c6-8b2c3bce94d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f51f89-c47f-4290-b46f-bd271546cdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14e128e-9902-4663-87af-b47fb44d1624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d95f78-a73c-45be-8e06-f5739d4277b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1833269e-4e32-48d1-8c2d-80df19152ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b8e69-7d42-49d6-8af5-b32d45f38e0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a7310-2e79-4dea-bd49-d7784c79a09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b9df0f-761d-49f4-b834-782fd2c85eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd422fe-8939-4a40-a601-1cea16ff8224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5bd5c8-b791-46c8-abd5-2dce79ae36f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c91ca33-014c-4e02-91a7-b0f9d0384648",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759615c-6cfe-4d7a-8900-d1673d2631ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abf1040-1009-4865-abd4-4eaf3b24c9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270ccd5c-f379-4d6e-b813-56f5076fdf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c980c0-7f12-4e1a-b587-675fd20f5837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a3aa72-7be5-4fb3-a3e2-6ff296662a8d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2b0076-6563-4883-86df-0facb2375b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a343aa-1b44-48e9-b86e-ae213c833d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981e852d-1699-46f7-9eca-2f3cd5784c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537e31f6-f485-483c-a866-39ddc2f58820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ddde6-53db-4ff5-ac79-9c65e6cf8954",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a26c59-21fa-4095-831a-d28bb4cda86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7228d04e-a81c-4754-b0b0-ebfa026471e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1b4479-0fbb-46c0-8425-16c8d2219089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46dd13e-5925-429e-bf96-be3da1d677dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432fcc07-dc15-4922-aade-03f8484f3347",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b30a09-2d1d-4908-9a7a-cc0b7e81f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9aad4da-d683-49a5-87f0-e7835379ee19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc7c6c-58b6-462e-9cfa-74958be540ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af9de8e-cb81-478c-b1e2-4f5778f02ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e6a606-97b4-4f0c-9011-b549bd39bae5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133d4dd-3db2-4998-b7e2-97ecf401e744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed22aa33-502c-401e-abe7-7ec2a9a209dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1701566f-4f25-4c5f-af1f-e21c6c85572c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2e9305-015e-4c2a-ac6e-3252f3bec534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667536ef-7592-453f-a367-9c0a8f048848",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c04f0bc-16d5-42b7-a5db-37061ab6fc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be5fac3-2468-411b-b26f-b12a5a32102b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c8de78-9941-4a62-aa21-ad388b843f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dba3764-571a-4cfb-a1e7-3a1e0dd38691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde763e8-1c02-4b80-8e67-afc439f10eac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfa0d83-3ac9-4001-a154-7d4a4fde259f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d824365e-aa38-4cc5-ad4e-b1ce5b470a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0ec257-e37e-4c5c-af1d-c0921ca603ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38382aa8-2d97-4170-a93b-fbc09f54ee84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada76f79-92fa-4bd9-83b2-7877677a539e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74eefa0-05e8-40a3-9d70-27576a0cc434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69f3e95-96ae-4632-b73c-06967b548741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73387dc-477c-48a0-8df4-2e4a48d04cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc86a699-d92d-49bf-9bea-18de98c7f760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2acc120-1e82-4753-844e-78ec2f09e180",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfea114-93f4-47a2-bec8-895b39de5606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4e0ed6-61ab-47f1-8efe-f54279c8c3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b0e54a-8f75-4843-a0d8-d66f50a663ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea4baf5-0ee5-4691-96c4-29fc8b88d937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec2dace-519b-4920-84d1-70752ad143b2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436e5a0c-cebd-4143-8cd0-6ce75ca0188f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9d3fca-af33-4dc9-b702-f92c5eff7e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9843d6c-b326-469b-aea8-bd03e6b82a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eafa9e2-c195-4218-b446-b921b988e824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1f0b59-be08-4658-bfce-edfdb06f1e36",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77a4869-b99e-46d3-823d-331ac3bbc016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd87187-7bea-4ad5-b799-373980715704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc8df6-0c7d-4a9b-aa9f-0dc4ff43fe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788b9654-595b-4775-a3b9-9fb5a34e32c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6166db4-daeb-44f9-be45-1d2a7bb4b9ed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae67a10a-f7a5-4f21-8090-cd974ce86416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465b09d7-92e1-465d-ae5b-75dcc9fc3523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dbca0d-485e-4e00-b6ac-8a113534ddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b983897b-7159-4d22-bf0f-214b866daefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3276bf6e-94ef-491c-8e74-d602aeb0c3fa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a8f257-4df0-409b-a4f4-f239a824b428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5a6a80-6683-4398-90b8-42640030d84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d4c56d-ae4b-47a3-b376-865b6c785fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b166342-c9c8-4730-81f8-6b4c473a9680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cabb29-bb36-4be8-a013-4800a17e8e4f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20691db3-b1bb-40d1-ae44-a41d030f0085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a892970-6db8-44ee-b190-407c2bb1e21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b750e7-ab44-4883-a485-080cd9d041dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fffa78-7792-42b9-b4d2-7867654642a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d77ac8-f8fd-4e17-a085-1a10bbfc026f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c8c32b-aae9-4b3f-99d6-8f4324fc51b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5cc3df-a6f6-45b6-999b-be46056f3d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d9384a-b3ff-45f4-904c-b157192ea534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd204a0-3f09-4ceb-8b13-937f4a2065aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f4e99-d5ff-40a8-a90b-641394cb98d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0575f9d9-a70d-4f04-965c-85b1c318b63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71edc430-9329-419d-b0c6-519b638bfb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71afe1a-978e-4345-9b99-265f18bd929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9eaae6-a49f-4bc1-ad34-ead984a5c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef44b2a-be56-4957-b757-3eb69f79ebf5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094ff832-c452-40e4-82f9-4b86da71e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b05362a3-352a-447d-b452-a74ed2a519ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c8eeef-0fb2-47c4-85d7-4a9b38f4958c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f90065e-91ee-40a4-8a61-c4b6a7e8b1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d52fa8f-40db-42ef-85ad-2b9327ec4bbd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a542552f-8ff8-4a53-bc15-21561197e925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20ad09e-cccb-4186-a3bc-8b76115a9b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9ecab-51b2-49d7-af0e-095856dd1f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0813cf2-2098-4625-ba2a-8700ec8587e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8abc6c1-b021-4427-8dab-2bea89aed33e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2926432f-9d7a-49b6-be00-4522889c182a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323807f1-4421-46c9-882b-d0e64e337b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e56f8a-ef3d-41ed-a6d6-c943255086bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edceb29-d290-4900-abf3-a3a856a1d6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b729a-747e-482d-866a-5b9fc5100420",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a7f9e2-563c-4c23-a733-69056bca0f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bd47ba-d9fa-40a5-979b-0984e05c549e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72a7d7-c44f-42a0-bef3-f8d13b361374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d872c7-a060-4648-8f4a-d903d3d02348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0e66a0-c587-4639-b070-ed6ddc93499e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1a2029-1dfd-45bb-a615-e8c0c1e31318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d85ca6-6a6f-42ee-ab02-52198c038f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f33108d-0df8-42c8-b737-148c13c0c242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d38569a-5800-4e1f-8027-9bf01fa4cc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f790f5f9-b800-4cb8-89c3-93c23ba6c179",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846bda9c-7b58-4f6b-82bd-92500f3f7fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3414a3-15a1-4ac0-a290-1a94b79e7690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e3f52-e465-453f-b32e-707a637f2010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32821be0-49b8-489a-a7d2-3d1165c1bbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c04cb-cb3d-4116-ac11-1f24b407eacc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d04b75b-80b6-4f91-8d5b-6589044d4e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc920601-6989-4503-856e-1b9595c8a592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23513d20-1d58-4f0b-ad02-8524673d5ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f5302d-2931-448d-b55c-082012c97a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea2815f-ad45-4f20-a7b6-9798570d0ed7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc5350f-6286-49ff-a568-9447bc9ca633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d98742c-ad6f-472e-b209-d4d185cd7fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce98d97-af9a-48b8-88cb-2ea220f1a2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2e6581-279e-43e7-8df1-d3b0f95afc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc3aaec-d53c-4444-848b-f10fb8353676",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b328855b-c52e-467d-954f-295c59dcf88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065ed546-d522-43be-b67d-17f7ef52bb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa40818-d7c5-4a2b-b2f9-2946c11b1997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1849eb2d-6953-45c8-a9ae-1fce54699e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e994a2-b2ed-4c21-a5dc-bcc1006e4227",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67750cf8-ec61-4308-8ddb-b18bf08c4e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b9cc01-04ae-4ef3-8eec-c32cf77535a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a066186-9155-4e4a-bfa5-2ff65c514389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa8805b-91b7-4fb1-9e93-5cbeac5ca302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b44ffe-5327-477d-906c-9c04f7fb4b4f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe6ceb3-44ea-4a29-9a2f-da0e3c7b0c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7491531b-5cf4-498a-a719-47bb4994ffe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7500b180-485e-49c3-a824-7cb4fad56e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366e1c9b-91d9-4a7e-ab7a-9fc3740b8ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04efad6f-0cfc-416c-8d72-6a3749c0ef9c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed35051-21f9-4a7f-a6f5-2359d48cd8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca6e699-6dd4-4d10-98d0-07b6eca86f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9dee5a-1688-42a5-8fa1-15d9ef560514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4fd781-ebab-42f6-bb53-0ae0b5577aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbfeab4-65be-4002-b789-8cc889beb9ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3529b6c-a25c-4d8c-93b7-9e1d794f9030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f9015a-1b03-457f-bf99-5c35e13f2195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748befaa-1236-47d7-8057-59ab3338ea75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53444987-84fe-4427-9b81-c71ee26a3493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9afc52-a646-414f-a735-c70113e8bbd2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5022f249-e26e-470e-b541-696568367703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36712ccc-6a8b-461f-a78a-f84ce20fa9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c952b0e-056c-4030-abb7-7b1f0f5672ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716f8d0e-8c87-4a39-b4a8-39b618a7bf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e403f0-2c2e-4c88-9d82-093249c8d8fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593410c1-378b-45fa-80eb-1f1b04c6757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ba3875-dc38-413f-a7b0-90c2fdf427a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823be125-c2c8-4e5c-ba17-7ebdc5cbd515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee71e7bb-500a-431d-9b2b-99a01dc4949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3f02de-217a-4d2a-ba4e-99f3ded21d7d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103af252-fdee-4d1e-93b9-f63ef6b38d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e775e377-c965-419b-b852-14672588afef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57125c7-55c7-46c3-8e7f-53a813508bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08683f7f-679d-4937-a834-f77c8c195cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e236d-a4a3-493c-b338-67ad734bc299",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629c1918-1729-4442-b56b-546c2f068352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8b71d5-3d9f-4a7b-9835-a8902764fdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785d83b7-a2f0-411c-a48a-bcbc8999bfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e9b43d-e564-4395-b852-6c95667674f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5a13fc-81f5-4df6-86a6-e8fa78810641",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f32a6a-4fa8-467e-a7be-5d5607d376d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a40d08f-4c77-4f08-be44-28fee037cfa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c86a7d4-2771-4195-9f00-d072d75c1186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecb2adb-0dfd-49d2-9229-192d0d7fbc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9df1e94-92b5-49d4-b6ed-7b3c3a67840d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2603a4-7bea-4a3d-a264-2e9ab9a73692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6b234c-defd-4db4-8a2d-985dc6890614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5a9702-d747-473b-ad04-6c11b3060db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19822da5-a17c-43d4-9779-4ff08626ffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f720ae19-b379-4f1f-ab79-c48796a578ac",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95e91e1-9037-4028-acf8-848adabd149c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4410adda-ca99-49de-bb37-7d697d9a0e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35544fb6-b2de-49ee-90b9-24422e2dcacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6385f257-b37f-4f44-814d-69da263bbffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c28c625-edcb-44d0-9331-c8012c50c9f7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf22430-4206-4c35-8ffa-e6da8c9c8127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ef5e75-9cf3-4809-88ef-d277e64cafec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2294d7-87e8-4633-8234-4782b44916bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10e3cf1-8625-4ad9-9754-5d07401d0ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108499b-7288-49bb-a8f2-7a87834feadd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a185d9-ad2f-41f1-aad4-9e277aa0ceea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5132fc-2513-472d-80f3-b29aebaf36d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7f89e0-4ad4-4a72-b55e-e52c318ea0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efeb6ff-ffa3-4961-8f7e-714c6163c386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e416ab3-249c-49b1-ad37-4d248ca14e2e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d055bef2-9add-4563-9925-c101d4cbeb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695416cd-e1e1-48ff-915e-ba844b868018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9741e4-e24a-4372-96a7-dbb7eca00613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cfaec4-95a9-4a0a-8a41-8fedc9afe805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f09e96-8a0f-4617-903c-75e41f30bb08",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594085f1-d132-4ede-bc02-fd5b7c94c432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fcc47f-fde6-4f52-91e0-72515458e270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2fc66f-41a1-4d8d-805f-89fe46786c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84481b1c-903d-46e6-8c4b-51010aedd8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5537a9-9b8a-4654-934e-377b022e9d18",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f44ab19-db5b-44c9-827b-c6b25fab33bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ddf8aa-5f98-495f-9a5a-9f8f1b069a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecf746a-9ec0-4c0e-8398-55027e81b317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a574fb8-15b1-49ba-b942-fa4dd708fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e969f9-6498-4c82-918e-3e2d5c2f24b2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d989c97-dc4a-41ff-baa4-aba84cbff987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35247c26-fa8e-45b7-8426-fc06044c9be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310385b-42ac-4878-861a-98d192049bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d213456-13ab-48bc-a159-c9b6f25a7a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b8243f-98c7-4f29-a5b7-a9d34bdd3823",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0816f9-1d4c-4b6d-bd63-6d944e9c0925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d71a6e-03cf-4cd8-8150-04467e58a402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e3d23-0d2c-48e7-9b88-9dcbdd809cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dffc52f-eb08-4423-965e-e1bdace4daf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4262696c-18c5-48b8-a945-ceccb67966e7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e19808-eb3d-4267-ac09-1ef9e3144c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b799b73a-cecc-44b6-9613-b8b8a53bdc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5534e3-9d50-468e-b45e-27b4db77cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf50904f-1478-427d-8a6a-3096b89536db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f3ca29-93ef-4617-803c-db4835eaf695",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86afd9c4-f388-4840-b6eb-08d90d7b7c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be72fea1-5509-4fc9-b52a-77b3c716ad39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c265c4-af5f-4c04-b518-d12ec7c2766b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76f645d-8218-4fc5-a149-520d9a07f8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac098aa-bb74-45f4-98e7-7c96d66c2909",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd374d3c-8a0d-43fc-a366-789266f49a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343346b1-f5fd-459a-a566-e49f267c9008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9984edf-d268-433a-af6d-9e445e2792f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5ec014-4351-44d5-9692-3513c48af1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41591460-9644-458f-bb32-b5531a28973c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96345241-65b2-4598-b7e5-05e92b76f9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c55f16-65b8-45d4-ba48-08aaf65c43de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc576f1a-000d-4115-b4a0-bab2e66ec353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a1b2e5-97fe-41cb-a937-be25bb64b982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc0c187-a919-4c5d-8e76-5812d339e8ff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c924f6b6-fceb-4694-8cfc-d2786f3217af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad193ab-a949-4da6-bc98-c5c5aa3cf542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fae481-e0d4-490c-ad40-5a146fde9105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e52f6f-4f45-4a58-ae7f-508122537407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c70543-7ecd-486f-bc0f-0275c9c4f10e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0879586-3a49-4e1f-8260-2c2a1f355dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edee675-ba4a-42db-b180-67343af6f083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ce07b5-a6bf-4150-937c-d318e6055783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7243200c-c53e-4ff1-8889-b0d238277b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f11231-685f-4ab0-84ec-fb04dda1bf22",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf46a43-6176-49e3-8baa-020e839a0265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc4343-73ab-48cd-975f-106cf2ba616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af83d2-87af-4504-928b-b6b6aafb1a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a485488-37ad-4986-9987-ca80b9896cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8f79f0-9b56-4bf9-926f-0ff598b09e9b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84088f90-1af6-4b1f-924e-7459cdaff976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcd87ec-9e80-4790-a8df-d73c9ccf2afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e5c97b-4a64-482a-8bc6-47b310fd2a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd94345-a118-471b-b11d-dd17041c22e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec734e5b-1f1e-4c98-9384-d60adb377406",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998fb67-2865-4514-aa8c-b9f3263aade1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358c31ec-25e9-4a19-bd99-a75f786d4e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c83e2-c128-4d4e-83ce-d2591e5345b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a152e13-2124-46d2-9689-4d997ef7693a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831b924-be35-46ff-b212-dbae6d23b1fe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ca82a8-cdf8-4171-8c24-bd20d96ed135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d67cfb-ead7-477d-b1a7-59e936b10202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb522636-4d89-4e79-8606-a70e143b39fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6866528a-b7b4-487f-b72a-9916b8c2b897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ce9b6b-0c1f-4990-bfd1-6e3922d18231",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2e8c2a-02c1-4812-a7e8-8db471ee19a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00263c1-8bf7-4f01-9d45-9c0ba2ce13c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea9ec2a-f5bd-4b9c-9ed3-dab6f7a30c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9c7b90-39ee-43f7-b704-a251d4a5cab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f631f4a1-9842-41d9-aff1-9b7b61583e2e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380002e2-3cd2-4b34-a1da-0efa07ffa91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0242138-cc0c-4906-9393-41ac91e875f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e1cd47-1ef2-433d-9c7b-14c11ade9bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d09ed02-95ff-458e-a41b-01742d4fc4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d22453d-7499-4e45-b521-962311302432",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53cf723-4bb2-4eba-865a-e2e91f067532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14c65f1-3c2e-43f0-8268-339f22ef0eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f751f188-81e7-45cc-847b-0b9cee7dbc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8428e9e-d0da-488f-8bc4-6c0ab9e004b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d06e47-f3e2-4e6c-bb13-8315b29b7271",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d256d9-6fe6-4d97-9230-9eacc22a7c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c2c82b-dcc4-4cb9-8b38-60a29bdf3324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e880c64e-6ebd-4278-8e39-5475d3805369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd87dc8-487e-46d0-88e2-75527f0e3c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416213b4-5ff3-47e3-afaa-344830d08e52",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31abc0cc-51f0-440d-ba53-1a37aeb79ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4dcc0c-cf86-4a2e-b678-9390b8b35071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f441c4-76be-478f-9365-9380cea68b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde94a43-e928-400f-81a9-e7f1d473ae04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65501bb-cb80-4782-92ad-49cdc5781f3d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc508451-27bf-4e3e-8e52-fa4db7315c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfce1a0-8cff-4791-9c1f-9b301935731e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e6af2-eef3-4210-8e00-4575db8dcd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5997b8b-811c-4dab-a2fc-79332e97c298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a267a4b-1043-4604-b63f-fcee320ceb74",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e0074e-3a77-4a29-9dae-2cfd959653ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fa3930-3a6b-4a95-8c3a-78b5b4b440c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1886d71c-adc5-45e5-96e7-db3aff521c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411aee93-f3f8-4af9-bbc3-e0332c86fdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ed63cb-a4a8-4cc8-8471-c52f2c7c98ba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ea97ac-160d-4d8a-a319-a02e8454662d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899c9a3e-2142-462d-81ca-691d8d9d270f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528567d-e2e3-4083-a489-e3daea732048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f289c3-b7e1-4f27-8000-9ce55322dab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591bca5e-df84-4255-8855-95277c971ffc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bdbe62-0560-443a-85ea-233c79077aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94811d42-9606-46ba-8000-9f8c58f66e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58b4445-317d-4e29-875e-78e6ea982966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af66cd8-bd4d-4713-aea7-abf3407afec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3c1c3f-81ca-40c4-af09-fc19538c1b19",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf696709-8c5d-4cdc-b633-7c7458fcd18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581e64fa-8cf4-46ff-a5e8-87ddf2c2a4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c12ed9-1d3b-4bbf-97e2-848ad7a61857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f759769-efdf-4a90-b074-1efecd16bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a1bec1-4059-4a3c-813b-1648e837ee50",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e65860-1453-4917-8137-7c5ea9984c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb569d7-0f01-4c89-ae54-a6f16b4b89b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7cce5c-be7f-4800-9260-5852262ef406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad887ce-79f9-4cd6-8ac5-a70d87b36a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8ab2d7-bc15-4c1e-a2a8-bc6c3212ef81",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4320ff5-3a39-4955-a900-ec9450a616fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28608188-c19a-41ae-a583-a53b72cafce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344e06fd-d802-4d8b-980c-605951721e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9aeaae-65b3-453f-931c-7bd394626e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf01700-fb00-4dc6-83fe-8cb2858084bd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f4fc25-8409-4c0b-8c2f-f111e830880f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e149542c-21ce-4fca-94fe-fa36feff02c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df60dc3-6061-478c-9e39-ca67e1586aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad1de5b-fd49-4f34-8eee-2080fe2f8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cace8be-5b41-439e-88f9-379e2465e256",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e7fca-dc2d-4231-8cd8-d105b150ecce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6781fd47-1dd2-4209-9541-d7c4efeb3931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f966351b-b90d-4f65-a35d-1ba04b5ebdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baafe3fc-4019-430f-a624-b2d64e2fc07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178feaef-23f2-4fdd-8c88-7d4a0bc40a3b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c121e95-d520-4a7b-a7a7-aade881ecfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "446b9883-0cad-41c8-a5c8-02e315e2f81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14ac909-35b4-46f2-9ec3-aeb2367b25f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5d1da4-801f-43b9-bda2-2fd1766f4dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9457abe2-6209-492f-8dd5-27aadaed861e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7831ec23-cdfa-4f2e-907f-7d692280607b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2db7405-48cc-427c-a5d0-0691c48db32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40b34c4-bf52-43da-be5f-9ef0a32a8b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae31df4-9a96-4fcf-b20c-f03673db9b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c48379-5734-4412-979c-935e24f13a7a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e65769-5800-4bf9-b855-b444509c16b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7155d7f-0ac7-41ba-8764-36e6063702c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1c430a-6189-4cdf-aa6e-44b500cfdaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0700e111-31a8-464d-a22c-55a86514aefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512db49d-915c-441a-ace8-da2ac7ab9684",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9296e09c-46ac-40bb-b857-65a6664db1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd04f3ef-6059-4b75-a4fb-3f0f98f6009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2042a9e-b96d-48cb-9edc-e75a8995be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c1ad9c-c90b-4e8a-9154-24921ef76b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091af538-a616-421f-b9f0-53f8b2547ac5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d8a6f-c763-4c1f-ba07-2b749c4bf4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "681aff07-c9cc-4bfb-b28b-aad9f7d1c876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369ffd16-325c-490f-ba37-3f37d702c2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509ffde9-44d6-4ff3-89a1-98736efd9a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982477c0-7355-4258-bbe4-4cacd7cc0f02",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b78574-ab79-492f-8b67-5f490743bce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6484ff16-eb6c-4d06-bee1-d7fd940dc5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a468f1-fce4-4786-877c-105b718adbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bd26b9-bec7-4bb6-9fdf-88042ee3c8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a9584a-9320-4995-b6f5-53c53824fa72",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03960b9-6431-4918-a427-e0fa14b43c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03de69f-e7df-4351-9381-f02146a59f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf6c9cb-df07-4506-b8e2-e37896068a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b484dc45-f186-4ca6-863c-14a85a994910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd134557-946a-4217-a678-011c2a91466e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9e64c2-cf5a-4abd-a54b-90ee3e636a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e421d8-1cb0-4b3b-b508-a62b18e80019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05912de-5aeb-4d35-b569-e66a64d270fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bc5a69-ccfe-47ea-a852-c7d9d9a89fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a213432-16f6-4028-89a0-150123ba7ff5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee20e54e-920e-473d-baa2-06c07bb6116a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0eea746-e5fc-45ba-8a71-e6e176c5a0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e76d47-be76-4e92-84a3-240982dc4292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef885fdc-87ba-48be-ba8e-c11c3b4bfd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419fd7f1-ddaf-41af-af4c-4f64c5577774",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68e6494-83b1-411d-ab42-9ae67ea0aa35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526b9d48-f7a8-4584-9951-a8d54a612169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebcfaab-2414-4ee2-bbb9-c73fe36a1146",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f3f7ff-bc01-4ea7-a276-131e308e6527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addfb420-a16a-4d96-bd17-dbe17f62e7e8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7785a7fa-91a7-4b7a-a055-02d0260ebfc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e86927-9896-4ded-9e7b-830c157e2367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac1066a-68aa-4c79-a1b0-47cfd8b5764c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65afb1e-e678-4514-8d6d-f0861cdfbf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a8fa78-a179-4a4f-ae50-a1d0d5134e9d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f730e2e-94e3-48d0-a39f-1519b664e0d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ce74e8-91b1-4ffa-824a-83675a7c9bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7993c87-fb5f-4f80-b9cf-93c9947617ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59941e72-d18f-4d6a-b2f4-127126e57af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742fa2fe-9247-4dd4-8011-0f7e4d19caf8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74918732-503b-4e68-8e3d-887c31f9e89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03ee432-4f5e-4928-b415-5dabbdb6ca36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbe1aaf-3bfa-4b7f-93bc-87b50811edd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b32482a-a7f5-476a-b536-72c175cd36ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60360a91-8078-46b8-b8a3-2738a0f91e75",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10a115-ba88-4e6a-b69b-2b4ff0b1907c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7fc97b-9b0a-4033-94e8-1966fbfbaedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c47479-e9f0-470c-a474-8c8c8cd35518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42061b9b-4767-4d1c-93b3-826099283988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a302a0-f9b8-4ace-9e5e-f73e3dc51bb9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacd3d57-68a6-4e1c-a651-99c416e50821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3795b8-5288-4524-9b02-b315531b04a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6ec63-8868-473c-a59a-d983b5951c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ffef77-b862-4b2c-93f9-72d89652e8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03779788-dfc0-4c26-940e-1b7bdd57be00",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0895d-1a29-4de4-aab3-b2df62f295a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829128a2-a162-41b0-99c8-c23f46529815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d525a615-b825-44fe-aac3-89d20421be57",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5bac2d-43c9-47fe-973d-a06177c47c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb61d3fa-ecee-4f53-8377-e078aa3cb8e6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e6a7ce-484f-4987-9430-2e845d9a69d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674a6c62-ba93-489a-a40b-1e19580bacc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cd71aa-6e71-44f1-9145-5cc7584aa055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4238eae-8322-436b-bd9d-367c770cfec4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d74c840-0fc7-4a00-aa78-f7f8272c6ded",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efbd7e3c-24c9-4f7a-a26d-d57d172cdab7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a10204-1d57-4e26-8224-b56c0856e8f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16d3122a-5e5a-4050-899c-5ca1d094b558"
                    }
                  }
                ]
              },
              {
                "id": "6b1a0a6d-57ad-4c4b-8fe9-f6ae3d0d7e94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32a79785-6bb6-4466-b98f-c3e94c724e5d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bcb94e-d2c9-4a74-bd83-9ec46eee2a3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "25d12c19-854a-4094-a0ba-905cfef7b78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c9573-79a4-4a46-ae95-0b3484e325cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bd9c0a1-1933-465a-8925-d3095aab5673"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adb900fb-de7f-4d02-affd-1d3d753dccb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620e416c-2a61-41ee-b5b6-5e332d6dd5e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45a7d449-c5d5-40ce-8f58-0c0e35b1ae9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea7e81a9-d706-4ed2-9e3a-6e32bcdf29ec"
                    }
                  }
                ]
              },
              {
                "id": "7e84cfd3-aa81-4c97-a5fc-b13abd837391",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a42af888-2e46-4589-8639-094c409db519",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4e0a74-9563-44ef-b4e6-3f61c702cdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16eda68b-2876-4f47-9198-2419fe5623e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56879979-9dfc-45b6-bd2d-1fef78b49cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f87a51-c016-49e9-adbb-6c27361bae4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d87e3be6-101b-4ece-96e8-9c2fddf884f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c373e727-16a1-457a-b546-f219276c78e7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e253fdf-0238-42ec-86c7-8f361f2230a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84625684-b509-48b1-bf60-ea4a65a51713"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da6b4c0-4e6c-45fa-af58-90d6c5835242",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23c6452d-3d24-4f1b-9bc3-7500c924558a"
                    }
                  }
                ]
              },
              {
                "id": "986fea9e-a42e-4a15-b66a-f4972a9fc493",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0f2bfff-1d62-4eee-a2d8-d190336ab0e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b312182e-9257-41e8-a42f-4ae925b61647"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e662e415-1dc4-4854-b285-b8fdff680bed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42763c61-b07b-432e-81fc-5a7f2587f0a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "637a0185-c489-4e09-b11e-d471e2e04809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f6ea74ae-a300-4a7c-94dd-544e121fce00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63e815ea-0cee-4353-b966-a2486f22c99c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7bc322d-8b18-4be3-867f-28612e095b5c"
            }
          }
        ]
      },
      {
        "id": "e97c5b27-016f-470e-9aa4-24c0429edb4a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "883508e4-4e62-436b-8b44-49150359e9ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f836193-d33c-4971-b425-8ecd1d8fcc28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eccc0d81-4ec6-4509-a4ad-69e4a322d5b0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646a2f17-51d9-4831-afbe-3d440ec9e80b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09f02801-cb09-4fcd-894d-1d90f1ef1f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aa0311-e376-4df0-9852-7c7952cc0024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4135e093-ed74-46a6-bbfb-b53ae983d11e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b69b3c12-6cbd-4dd8-9f81-94faa6c478b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e07d482f-8900-45ac-97ee-f9bff5f603dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21a7a8c7-112a-4572-b820-f9167d3c25da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d775ca47-310d-4904-9c94-ec932ed3f4e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7734c9f7-53db-4dcb-9af7-17e481a06468",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83336170-7966-4650-a0ea-4184d25dba8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09b8fa0f-bde0-49b8-a09b-31506982c97e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10340fc3-ce1c-4d91-a095-ee1e0cd492c6"
            }
          }
        ]
      },
      {
        "id": "5b02fca1-ac86-43fc-a709-050cd0638eb6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "decf3fe8-be74-4090-bb4c-0b080b4714f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b338da4-ef2f-42be-b062-e1e0d894bb40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0461a52c-8e2a-46e5-a3cc-8d33290f0b0b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297daa10-bcc0-4e80-bdbd-1359c7516e52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27cc6cd3-f3b4-4d84-be26-c610752a53ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d317f-8272-433f-8985-6f96e8ff374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beba4a29-19f8-434e-b0ed-28dfe019b1bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10b359d6-d9da-4e85-bb8e-2d7b5dca32e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6c10191-d3a4-4111-844e-38868a2fd34d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4e97871-e8d8-4cd6-8de7-f06e547ec55b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a7e2a41-460e-443e-9a2d-158aea30b251"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80aa68f1-c94f-47bb-884c-0c2c08b2144f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91fdd4d1-0029-46cf-bcdd-b51486795b59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1763e01-3b79-4d3b-8ba4-164711e173db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ba360be-1192-449d-8a46-daf08e5aac4d"
            }
          }
        ]
      },
      {
        "id": "f3df576b-533f-424d-beb5-fd33dc44a4cb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "72c3cadb-41a5-464b-96be-558d90905da7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad0abf7e-c83f-4c42-9d79-2e9fd7c191e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd861c11-98ea-4671-8fdb-04b1b77477e2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533602de-553a-405e-b770-4f9603477c61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25db6130-a2ea-484e-b03d-8b2a64c21eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8882f-4bb1-4331-94e1-fc70cded9c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e08b1140-282e-464d-b8d7-cf228da18a9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6a59cf-9ab5-49b1-83b3-1b85a368f80b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d48239b0-2461-49b3-9ac8-443ceb548ba9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29fcd857-093e-4b42-bac8-55d83860ccaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a2a2c3-4989-4e7f-8c78-e741297f74b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec69ee4d-9db9-45fe-a418-d40bd13d85ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d03f3432-ad3f-48cd-bfb2-d6c628ef46b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61687f40-ef1e-4131-9643-a51b5fee5d22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "258e2faf-bdea-4f10-a428-63627351d8b8"
            }
          }
        ]
      },
      {
        "id": "d93dc215-8dca-494a-9e85-8ed136843828",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8054efd5-9758-456e-a411-2672e4cf5afe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a19f3185-7e56-485a-a304-8cb4d5987428",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1929f6ff-a8ae-494b-8186-2e9e6c163645",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a7ec16b-606d-44fd-9c13-48921d6253ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1531c315-58c9-418a-84e5-02f6e919e4ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 93.66197183098589,
      "responseMin": 11,
      "responseMax": 4586,
      "responseSd": 377.6399355844465,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694478681107,
      "completed": 1694478720401
    },
    "executions": [
      {
        "id": "531cf4ed-f614-4f52-8efc-321e3d13a9c6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f4f777ff-ae6b-4e3b-a4a6-a0f374c56a91",
          "httpRequestId": "68ab066c-e2ef-4139-ae49-26925a14160a"
        },
        "item": {
          "id": "531cf4ed-f614-4f52-8efc-321e3d13a9c6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3acf27e2-13e2-4ea1-bf1d-57c39253b01f",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "057977fc-09e9-44d1-bf96-984835eb732f",
        "cursor": {
          "ref": "59e21e37-1ba8-4d81-b5ac-9508790fc291",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dc77f7c2-bdfb-42e4-af45-cc2e0b233e5a"
        },
        "item": {
          "id": "057977fc-09e9-44d1-bf96-984835eb732f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "94d61771-819e-4066-8db1-f1a773cf87b6",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "69e6b0bf-77dd-4ced-89bb-61ffa7718e72",
        "cursor": {
          "ref": "fd60277b-cfc8-42fa-a508-960d5ac9414f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "462da087-3f29-4212-9156-bb74c83b1a3f"
        },
        "item": {
          "id": "69e6b0bf-77dd-4ced-89bb-61ffa7718e72",
          "name": "did_json"
        },
        "response": {
          "id": "8f90b745-03d0-4d98-a9b8-7debfa2ff8a4",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87944b7a-a40e-46d4-bcea-49ce199deb98",
        "cursor": {
          "ref": "a98cef6e-a49a-4375-be05-e9042669868f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10e84ae7-b5b8-4403-8e2d-74c8d5d77360"
        },
        "item": {
          "id": "87944b7a-a40e-46d4-bcea-49ce199deb98",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2a74777-01ff-41df-ab7a-ad23c559c113",
          "status": "Not Found",
          "code": 404,
          "responseTime": 757,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87944b7a-a40e-46d4-bcea-49ce199deb98",
        "cursor": {
          "ref": "a98cef6e-a49a-4375-be05-e9042669868f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10e84ae7-b5b8-4403-8e2d-74c8d5d77360"
        },
        "item": {
          "id": "87944b7a-a40e-46d4-bcea-49ce199deb98",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2a74777-01ff-41df-ab7a-ad23c559c113",
          "status": "Not Found",
          "code": 404,
          "responseTime": 757,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8ffbac-2bf4-4273-84fb-b0d65d2ab9ca",
        "cursor": {
          "ref": "3d094d53-2bbb-4864-81b7-3066bf44efa4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a544509b-e4fe-49c7-936a-32d3d0cbd5f1"
        },
        "item": {
          "id": "be8ffbac-2bf4-4273-84fb-b0d65d2ab9ca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7fe04f3e-b643-45ae-b273-517ebc7f1182",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd836467-4979-4207-8b26-0e4debd5d8ed",
        "cursor": {
          "ref": "960b3375-fa44-464e-b33e-38abd9bc1a90",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8dd20dc3-f8c8-46ac-9b04-0da8a29c8e9b"
        },
        "item": {
          "id": "fd836467-4979-4207-8b26-0e4debd5d8ed",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "619794e1-e75a-480f-a1ac-c26f4ab1bf38",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48810186-3cdd-4275-be37-26cb7d96a9bb",
        "cursor": {
          "ref": "3ebadaf5-18ba-47e7-b78e-1a224c9308ff",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1a00dae3-8a03-4a58-8eaf-0ff07bfeace2"
        },
        "item": {
          "id": "48810186-3cdd-4275-be37-26cb7d96a9bb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f3a9dcd5-267e-44d1-8f98-089c9cd65561",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304f06ab-61fd-4f75-86e2-c2c3c34fffc8",
        "cursor": {
          "ref": "7175c7d6-a18d-4296-82bf-327e040b3c22",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "470deb9d-02db-40ad-943e-6bdc1291aa2d"
        },
        "item": {
          "id": "304f06ab-61fd-4f75-86e2-c2c3c34fffc8",
          "name": "identifiers"
        },
        "response": {
          "id": "b4145255-43db-4a50-8db3-64ef8fdc538c",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a28257b-77fd-4116-8286-3cd80f9bc213",
        "cursor": {
          "ref": "0d15e7d3-1ea3-480b-a494-7d7ed16254cd",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6f37feca-579d-4a35-92ff-b4fa382de0ef"
        },
        "item": {
          "id": "3a28257b-77fd-4116-8286-3cd80f9bc213",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b23035a9-e8bb-47dc-8ec2-b189f1e5edea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b91a6e-4bc0-41dd-ac52-589d71a85a4a",
        "cursor": {
          "ref": "98bea970-6c0f-4735-9431-1deda34a056a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e4b3cb50-25e3-4cee-b53b-87eab39a03d8"
        },
        "item": {
          "id": "61b91a6e-4bc0-41dd-ac52-589d71a85a4a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d5fa9370-e043-4a21-a6c7-7709428d9a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd63779-58d0-4530-91bc-d24efc7f0458",
        "cursor": {
          "ref": "427e5086-3390-4924-96aa-7390a689e13b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63f3a150-b263-48cf-8ff2-9b1cadddd1da"
        },
        "item": {
          "id": "bbd63779-58d0-4530-91bc-d24efc7f0458",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "21ef341e-1ece-4b26-97e4-51b6c8987015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f5857a-487c-42fe-99f7-f118cac42d6c",
        "cursor": {
          "ref": "afc57b2d-314c-49c1-b11d-acc371d0823e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c655ee6b-e601-486e-bc3b-243ca00ccf9a"
        },
        "item": {
          "id": "59f5857a-487c-42fe-99f7-f118cac42d6c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "655c554a-b75b-418e-ae67-6fa5ef91f012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df526bf5-e0ad-491a-834d-2210b090a9e5",
        "cursor": {
          "ref": "61f86575-f125-443d-9aa2-379fbf6381ca",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3d976ff-8699-43d0-93e6-2f0adf6fe3c3"
        },
        "item": {
          "id": "df526bf5-e0ad-491a-834d-2210b090a9e5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7febafb9-9dd5-43d8-aa2d-4ca21495659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecd3b65-c468-4ef8-be56-b40d7b363d54",
        "cursor": {
          "ref": "77de3b95-a812-423d-a2aa-733324b16b12",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a75b84bb-b2f2-4c9a-a3b9-cf51e7c1ed58"
        },
        "item": {
          "id": "cecd3b65-c468-4ef8-be56-b40d7b363d54",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e7eb1221-b01b-4c37-8a3e-d46ec5281cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ca4ccf-42d0-4a70-b921-9b11a7d9dbcb",
        "cursor": {
          "ref": "cbe51116-ed7a-434e-b965-e97a2d4465fe",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1f7c3a9e-323e-46e8-ad9c-23954b3b8a56"
        },
        "item": {
          "id": "40ca4ccf-42d0-4a70-b921-9b11a7d9dbcb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "96518f20-587b-49ed-95f8-40b0949ba766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9096f801-cdc7-4246-ab8d-ada5c0b58b5c",
        "cursor": {
          "ref": "bf595618-941b-4cdb-a8d7-ade2eabc45b3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "495eb36d-6442-4fb7-b016-4e72c6e73cad"
        },
        "item": {
          "id": "9096f801-cdc7-4246-ab8d-ada5c0b58b5c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69815daa-2403-4691-b3a8-5af81939d53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b271e8c4-f196-4392-ad76-0ef51e978348",
        "cursor": {
          "ref": "0f8ac257-03c3-4834-9742-e44bb8b257cd",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c9382377-7bf9-43f3-93f3-935158e035e3"
        },
        "item": {
          "id": "b271e8c4-f196-4392-ad76-0ef51e978348",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "669a5fff-280d-4f7a-8494-ae46d31aa616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ef66d-cd21-43df-a0e8-54a5fabff485",
        "cursor": {
          "ref": "88f3e415-b3db-47c7-8e32-a7c721a3ba27",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "24c56993-ca0d-405c-9899-6c652dd6729b"
        },
        "item": {
          "id": "d50ef66d-cd21-43df-a0e8-54a5fabff485",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eafaf3af-44ab-4f48-8274-543afa9d090b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986b2a31-0142-483b-a027-036fa0fc704d",
        "cursor": {
          "ref": "db69cb1e-42f3-4bd5-bfe9-22c8fe201001",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "130d9221-bc6e-4407-918c-8c88e9d91b33"
        },
        "item": {
          "id": "986b2a31-0142-483b-a027-036fa0fc704d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4c45966d-4cd7-4203-a8fa-4c639b9e13d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd81a961-e536-40bb-a52b-6e0322575375",
        "cursor": {
          "ref": "fbb7f085-d70a-4650-a9f2-42e7c6e19d60",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae87037e-6205-444c-a3c6-dae81c9a26c6"
        },
        "item": {
          "id": "cd81a961-e536-40bb-a52b-6e0322575375",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18d47111-9c1c-45b8-ba80-79db3472f540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64851bf-e494-4af3-98f8-7503de02db8f",
        "cursor": {
          "ref": "8a88489a-74e4-4f45-8abf-aea777d265db",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3a22815d-4a9b-4cd1-ad43-8aa559cec0b1"
        },
        "item": {
          "id": "e64851bf-e494-4af3-98f8-7503de02db8f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eb3b1df2-02c5-4d9d-b045-92521760d1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e3994-a5e2-4277-a714-5e19e0d7cf44",
        "cursor": {
          "ref": "25b9e967-b6f2-47d6-9021-e103317c31ab",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c36df113-88df-420d-b595-cb37658da9ef"
        },
        "item": {
          "id": "111e3994-a5e2-4277-a714-5e19e0d7cf44",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2673da0f-6579-450a-afb1-688340e3cb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8113ea5-37f1-4f17-a193-35d85fbb0644",
        "cursor": {
          "ref": "09f52c84-2a30-48f2-b8b0-a3063c09deb7",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3f525d05-2fc2-41b1-b658-2a704526e91e"
        },
        "item": {
          "id": "e8113ea5-37f1-4f17-a193-35d85fbb0644",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b036f820-8a4b-464f-a857-ea2f838519a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf18fca-d31a-477e-8aa3-a554e93958d2",
        "cursor": {
          "ref": "e2d9cba1-ff23-405c-bf84-896f47162241",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba90dcbd-2435-48a0-a0c2-7ec97edcea11"
        },
        "item": {
          "id": "baf18fca-d31a-477e-8aa3-a554e93958d2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27887d84-8470-44bb-a6a0-9fb56be92c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb12a893-a067-4163-a67d-4fbb6ab00b02",
        "cursor": {
          "ref": "7e88baf9-19c3-4621-a5d6-59421355cf2f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "712fe700-7e1b-4017-a0bd-d0452189b3ce"
        },
        "item": {
          "id": "bb12a893-a067-4163-a67d-4fbb6ab00b02",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1f19d153-b804-4068-8bbd-15a3fca749e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eabd68-5995-4f12-b0ed-edca509d4f0f",
        "cursor": {
          "ref": "715d60d5-8055-4d5e-82eb-e0d00f724480",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "86fe500e-cced-4e04-8d98-7ec486f5bb5d"
        },
        "item": {
          "id": "53eabd68-5995-4f12-b0ed-edca509d4f0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15651a90-f3a6-4dc0-92ae-b0b3ef28adba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5952484-836c-4da6-bab5-ae2516513419",
        "cursor": {
          "ref": "cc9e40bc-47e8-4a40-9656-29d3c669c69c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8b1ba5b0-3401-4254-b4ac-e13e3f58fa01"
        },
        "item": {
          "id": "d5952484-836c-4da6-bab5-ae2516513419",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ea6e42b8-be92-44ea-a346-9f155ad34b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53545d81-f8c4-40ad-a8bc-e05a9aebb7cc",
        "cursor": {
          "ref": "fcfc095f-5a71-4186-a76b-c15d04aa19ec",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c2dab46d-514d-4c26-b5d8-1cc6f8389973"
        },
        "item": {
          "id": "53545d81-f8c4-40ad-a8bc-e05a9aebb7cc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ac171af6-d5e5-429e-97fd-c91aeceaa0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe13077-b97c-4468-b97f-ec8036460eff",
        "cursor": {
          "ref": "62a2a52f-af42-468c-96d7-b397ac8404ed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "accc6a3c-0000-41e2-83ab-6d42c1ed9f87"
        },
        "item": {
          "id": "9fe13077-b97c-4468-b97f-ec8036460eff",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9e50960d-c4ef-457f-a4b2-8f5f87bea556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630492b5-64f0-460f-80bb-957fbe48a227",
        "cursor": {
          "ref": "511733ff-f896-4093-82f5-ab6c8e439402",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24aebf3d-9b82-471c-b315-8ee5dc581d79"
        },
        "item": {
          "id": "630492b5-64f0-460f-80bb-957fbe48a227",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ed2d92a9-cc71-4a86-83f5-761a1dbc1c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4683e73-7bcc-4c26-91a1-4098af6504ef",
        "cursor": {
          "ref": "15b36553-01be-4754-a5c4-5117756b3a79",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "23bbde5a-1abc-4ba7-a6de-098115f784d6"
        },
        "item": {
          "id": "c4683e73-7bcc-4c26-91a1-4098af6504ef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e4e04ab0-166e-4f1a-99a4-4eea1ac6be7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa8674-02c6-4d6f-8bb1-439a21134042",
        "cursor": {
          "ref": "9dc38e0d-c3fe-406a-9da1-b6d35674b434",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cdb2ca74-d3e4-4994-934d-16717a2b9f47"
        },
        "item": {
          "id": "fefa8674-02c6-4d6f-8bb1-439a21134042",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0fd8ed25-bdd0-4b49-8c3e-137b19ea5e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f746c444-3a87-440b-abe7-7a4f36f53aa4",
        "cursor": {
          "ref": "2031b0a5-6517-40b8-9407-aa0cff596e4d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23ee9173-b2c6-41ed-8beb-2706f3526880"
        },
        "item": {
          "id": "f746c444-3a87-440b-abe7-7a4f36f53aa4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cbb30dc3-24d4-49c3-92ce-abe0622dce78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45ae4b2-c2dc-4470-932a-93051ef48a03",
        "cursor": {
          "ref": "2e7bb95a-96e1-4ae1-b1bc-1ae98d26cfa9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9a5c55ef-647e-42cd-9d00-3b2c6d2df04d"
        },
        "item": {
          "id": "f45ae4b2-c2dc-4470-932a-93051ef48a03",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e31f74fb-aa4d-4a8d-9a4c-152467b4704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d400cd9a-aaba-46cf-9c0e-bd9b7d8460d0",
        "cursor": {
          "ref": "009bae9f-05e7-42cc-a7cc-100ea764867c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a8c9900-a8c6-4620-8351-73e964b38355"
        },
        "item": {
          "id": "d400cd9a-aaba-46cf-9c0e-bd9b7d8460d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "684e4c1a-ee8e-4ba5-864d-adbb0159a2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff78c88-5469-4d81-8c80-2b58a3439cf0",
        "cursor": {
          "ref": "dbf982c1-b7be-461f-908a-1c952dfe6e39",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1223daba-6b93-40d6-9892-4f6e8d340fd2"
        },
        "item": {
          "id": "2ff78c88-5469-4d81-8c80-2b58a3439cf0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aec7d46e-a636-4ac1-a7ea-c4ea86cfbdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88b4ff3-86ae-42ed-b56d-4056e5f2e2ed",
        "cursor": {
          "ref": "3de0f419-ca9a-4987-a477-cdc26d30fc9a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e922c0ac-3d59-4a3c-a011-0ae184d7864e"
        },
        "item": {
          "id": "a88b4ff3-86ae-42ed-b56d-4056e5f2e2ed",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "923fdb5b-93fb-4042-92c4-a78b4d14ccfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484186c3-0bbf-4831-8682-9b6ff68469bb",
        "cursor": {
          "ref": "b62de5c0-da35-4884-bdae-410aecb97adf",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0f6ec200-af2a-4736-94e9-4544a7c27655"
        },
        "item": {
          "id": "484186c3-0bbf-4831-8682-9b6ff68469bb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c1e588c7-ed45-4cd3-be45-10c3375f0618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105dd288-e68d-4bc7-890b-37dd156a9d9d",
        "cursor": {
          "ref": "4c650180-3376-4444-838f-ad1e4bad68c8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2d4a7096-6325-4717-932f-a49e9014d8ee"
        },
        "item": {
          "id": "105dd288-e68d-4bc7-890b-37dd156a9d9d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a6542bba-a790-4309-92af-40456817f085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024187b3-270a-4c39-8584-096a794cffac",
        "cursor": {
          "ref": "273d4c78-b28d-425e-9883-5d952e4f88c2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ceb77a4f-e2fc-4e51-979a-8f39294d26dc"
        },
        "item": {
          "id": "024187b3-270a-4c39-8584-096a794cffac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b9fec4e1-1a46-4414-9e71-0b9e6417e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96774a2-822b-48fa-a9e3-2e2c1b0d54e0",
        "cursor": {
          "ref": "61082642-5790-43de-bea4-489f61fc2af5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1ea7b4d1-7b69-47f9-8522-61d60a4da156"
        },
        "item": {
          "id": "d96774a2-822b-48fa-a9e3-2e2c1b0d54e0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e50b13dd-a45c-4ce1-93ca-4854362c8154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78e671d-d8a8-466d-b7d8-6d0e59dce8c2",
        "cursor": {
          "ref": "983ae33c-0b47-4673-9af3-f63a3235dafa",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7194e214-60db-4cac-aad6-f03895eefb03"
        },
        "item": {
          "id": "e78e671d-d8a8-466d-b7d8-6d0e59dce8c2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d47d29e3-feac-4d8c-b0fc-a113ddf8ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5560b9bf-3728-4243-afa3-99893e95bcba",
        "cursor": {
          "ref": "438343e8-98e9-46a7-a6c8-c002e4ecee0a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64230a8d-447b-4ac2-8b0d-34847759e2dc"
        },
        "item": {
          "id": "5560b9bf-3728-4243-afa3-99893e95bcba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eda05a1f-4cf3-490f-a140-54a4fb95a0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a51b001-6bf9-40c4-87af-868a1cc10c88",
        "cursor": {
          "ref": "f2056a2c-1c46-4b35-9321-89112fb68118",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "874fd520-e553-4219-8d7a-8ad8dfb3fbdc"
        },
        "item": {
          "id": "3a51b001-6bf9-40c4-87af-868a1cc10c88",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "16de9513-1239-49f6-aef7-8388e49bbad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9eedec-1663-4e7c-a831-20fd2d254735",
        "cursor": {
          "ref": "f8cff34f-cb67-49be-9263-a6b1d25dddbc",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ec8c77d-5518-40f4-b622-764bdbc57bb2"
        },
        "item": {
          "id": "db9eedec-1663-4e7c-a831-20fd2d254735",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "48035ac5-4af5-42f9-b462-bbbb101c95bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ca8f03-1bb4-426c-b09b-9265495d7eee",
        "cursor": {
          "ref": "7ec834d5-8bb7-44cd-a8f8-041fd9a422b0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "20707f5f-7301-48df-ace5-174c47c15948"
        },
        "item": {
          "id": "06ca8f03-1bb4-426c-b09b-9265495d7eee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "911b1413-8fac-4870-b12f-f858c5e87791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a09add-4768-4ec7-a8db-d7a8fe290182",
        "cursor": {
          "ref": "d8d3ade7-4cdc-408f-b09e-36baf91c89df",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "179fdec6-c00f-4805-9064-45fdab9385de"
        },
        "item": {
          "id": "85a09add-4768-4ec7-a8db-d7a8fe290182",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc90be90-acb1-4a1c-9248-47913849a7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f31452-d083-4b0b-9eda-57ca3623e693",
        "cursor": {
          "ref": "433d8da5-b952-4e70-a0d5-b01297ad065b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a61028ac-90d6-4f87-8c32-86bc1a2edd8f"
        },
        "item": {
          "id": "e9f31452-d083-4b0b-9eda-57ca3623e693",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e310bd76-3b45-41ce-85cb-9e2c9fd14774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1fe57f-251d-4e87-a80f-8ed01c1a1e47",
        "cursor": {
          "ref": "96b55771-e878-40d6-a6b2-48ecbd71b702",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a638946b-fb83-403c-8cf3-b32bf3c4c0f5"
        },
        "item": {
          "id": "5a1fe57f-251d-4e87-a80f-8ed01c1a1e47",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8306766a-a47e-4dfa-a178-46bb1be310d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e6ed3-f355-4e76-9b7c-efac2e254d7d",
        "cursor": {
          "ref": "b221d759-a1b5-4a87-8518-f7c5ae8f5841",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1402f807-3a5e-441d-9edd-439f16bde6bf"
        },
        "item": {
          "id": "342e6ed3-f355-4e76-9b7c-efac2e254d7d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "937834ca-b5dd-4738-a738-a01955c9d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549726e4-457c-4a8e-855f-7e6a4660c9e7",
        "cursor": {
          "ref": "2899922a-a36e-4f42-ad05-0cc8a029cd3d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c4a0789-5d63-451b-bcc4-711800910c02"
        },
        "item": {
          "id": "549726e4-457c-4a8e-855f-7e6a4660c9e7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "39092d8a-652a-4cd6-9e3c-26a12ff2a624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88d392-cd44-4584-b698-0c1ef0d28053",
        "cursor": {
          "ref": "5aa5f91c-66ca-49a0-b660-635e81bcfc97",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1c64ae0a-546c-4d81-a96f-f753815bc7b1"
        },
        "item": {
          "id": "dd88d392-cd44-4584-b698-0c1ef0d28053",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "008c0ca4-0cbf-4677-82c3-81ff5c6505d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba74d6e-7ffa-41db-af52-ee9bca934f51",
        "cursor": {
          "ref": "4f1ecdba-5e6f-4356-b335-8f79aa15c2e7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f1203cb-ef81-463d-b825-7391ee3adee0"
        },
        "item": {
          "id": "5ba74d6e-7ffa-41db-af52-ee9bca934f51",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bea131f6-e725-4492-8f64-69b4dead8441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85de5d32-5508-4337-ab97-5c3ed587be3b",
        "cursor": {
          "ref": "0df9b7df-fbeb-4e93-a3ad-6fc6d040b8f4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9661834-fa4f-4f5f-83e1-bfef511349f1"
        },
        "item": {
          "id": "85de5d32-5508-4337-ab97-5c3ed587be3b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "79f781d0-27da-4758-922f-81354a06df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cb5007-0c4b-4055-8f77-3a4ef5b3072c",
        "cursor": {
          "ref": "af7e8df3-5755-4d81-aa7f-d34388a98ec4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ac6865c8-bafb-4e39-a497-d270d44b26f5"
        },
        "item": {
          "id": "01cb5007-0c4b-4055-8f77-3a4ef5b3072c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7b2d6567-dcbe-44b6-98eb-fa6dcd49fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0785c3fc-2b98-4c69-bbb3-6f5eb5f6b03b",
        "cursor": {
          "ref": "199a47ea-2e40-4dcb-a360-4e2d1e407b28",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dd787086-7f38-43a5-a333-32a549964eb3"
        },
        "item": {
          "id": "0785c3fc-2b98-4c69-bbb3-6f5eb5f6b03b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "15c50aec-743d-4c7b-acfd-74d42f27b619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcea4aac-93a7-4591-9f2f-ea5e86494bf0",
        "cursor": {
          "ref": "87f1d83c-b5a3-424a-a8b1-9c4c343bb522",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a31f3257-c10a-4edd-800d-faec96282190"
        },
        "item": {
          "id": "bcea4aac-93a7-4591-9f2f-ea5e86494bf0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6a9d30bc-f04a-4227-80df-129ae41d0af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6fc34d-6a5e-4d38-8984-5751c9d2d8f7",
        "cursor": {
          "ref": "63d5edca-bbf1-40d5-b77a-e15b424946ac",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "28bf650c-0e42-45fc-bed4-b9e3a801250d"
        },
        "item": {
          "id": "3f6fc34d-6a5e-4d38-8984-5751c9d2d8f7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "21d7b879-5b98-481b-9da9-8c5581271a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5def80-5a77-41c5-8aca-21490936ea45",
        "cursor": {
          "ref": "bc9fa887-f8a8-40ed-a6f6-5e2d714c5b35",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4132c2d5-843a-4dea-9c31-5991be6b2c39"
        },
        "item": {
          "id": "5b5def80-5a77-41c5-8aca-21490936ea45",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3fce9869-b912-4a2e-bdc4-6f93bf24c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508ea514-5c8c-47b4-a966-254fa32cb5f3",
        "cursor": {
          "ref": "17151d9f-e92a-493d-8022-93bcf6c6c082",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee03403d-ad9b-4b45-9219-b0975930e042"
        },
        "item": {
          "id": "508ea514-5c8c-47b4-a966-254fa32cb5f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "90b1340f-1f0b-4258-b3bb-0f9e5024fe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bedc38-8b00-45c0-a44d-b7cf15cdd9fb",
        "cursor": {
          "ref": "d9c9d71e-9e52-43dd-97a1-9acbf9dec758",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "204351bb-14b4-489d-bb38-f1734cba7052"
        },
        "item": {
          "id": "15bedc38-8b00-45c0-a44d-b7cf15cdd9fb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e79fdf67-c605-4ced-a8cd-a1397d86545e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e919c70-6f2b-4848-b7fd-af31c9289066",
        "cursor": {
          "ref": "988a575d-7f90-4a9b-8e5e-cbe22c249453",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d8ca56f4-6994-4337-a056-604487cf338a"
        },
        "item": {
          "id": "7e919c70-6f2b-4848-b7fd-af31c9289066",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1075b56-f5c3-45ac-8eeb-617247718a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e03cab-8da5-48a5-98c4-551818803566",
        "cursor": {
          "ref": "0d3e3fbc-65f5-4177-b2fc-f38b9724e9b2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53551604-2d3d-4988-af49-62db2ac31338"
        },
        "item": {
          "id": "85e03cab-8da5-48a5-98c4-551818803566",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ab7fffaf-0419-4567-be5a-fe908b0f4f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091caa1-e7b5-466d-be62-8d0f90560862",
        "cursor": {
          "ref": "ce5fe76a-0f26-4b62-b966-641cda19df83",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "72e176df-3b13-44c4-81ab-0e8dd6e44a57"
        },
        "item": {
          "id": "7091caa1-e7b5-466d-be62-8d0f90560862",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "291103b5-f0bb-4831-84e4-6fdf7d25b6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6185964c-2d44-490d-a434-1ae49d5dec97",
        "cursor": {
          "ref": "7a28e7fb-c63e-4b07-b748-ed278547427c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fd07ac8e-ec67-49f0-8f60-1921978cea53"
        },
        "item": {
          "id": "6185964c-2d44-490d-a434-1ae49d5dec97",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0df29cd1-cd49-4f2c-a244-6a5085da78be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f785cc1-1f3a-455a-bd32-548fc1381c2f",
        "cursor": {
          "ref": "fcf86afa-58ac-4df5-9118-57012aee6428",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "35a6ab6f-3021-49e0-9102-ac1dfa394751"
        },
        "item": {
          "id": "5f785cc1-1f3a-455a-bd32-548fc1381c2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12dc0684-266c-433f-a1a7-a21a3e841b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166eae4a-23bf-4fc8-b1d4-b3c59ee7d9a6",
        "cursor": {
          "ref": "6c831fca-7086-41c2-9bb3-0745676b14ee",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "26a83a19-0ef0-4313-b15b-f5ed708913f8"
        },
        "item": {
          "id": "166eae4a-23bf-4fc8-b1d4-b3c59ee7d9a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bd331715-9420-40a0-8e37-9e5b85d8aa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f63178-a61a-4e6f-8c34-df14b7f16517",
        "cursor": {
          "ref": "73ca6661-e85b-4c07-971d-97673f0ce823",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "de0acd2d-0c38-435a-97d5-897618acd194"
        },
        "item": {
          "id": "73f63178-a61a-4e6f-8c34-df14b7f16517",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e0d13d2d-80ba-4b5f-bdb8-0ed825cb285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9a9c77-3632-4df2-a946-3f417d8afd3f",
        "cursor": {
          "ref": "0baa13f2-d3de-4e82-8efc-2d60e8ff8fbc",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "426241f5-af0e-45f8-a64c-a9a53956de7f"
        },
        "item": {
          "id": "5a9a9c77-3632-4df2-a946-3f417d8afd3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d31f9f2c-8c11-4b08-b872-91a5b84f0a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0af27c-2047-4bda-8e99-3ae8f3d2a113",
        "cursor": {
          "ref": "29aef875-049b-4992-b77f-eb9549479593",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "750d6edd-2bb5-421e-9d2c-d487b5c2de2e"
        },
        "item": {
          "id": "9d0af27c-2047-4bda-8e99-3ae8f3d2a113",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b2a46978-ff2b-4cfc-a947-30ec9af886da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4d8d81-f57b-4644-8cdb-339fca7d280e",
        "cursor": {
          "ref": "ab1dff0b-948a-466a-9972-7b16bd8d1bb1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4adfed75-660f-451a-b0d6-ee32ecad00f2"
        },
        "item": {
          "id": "ad4d8d81-f57b-4644-8cdb-339fca7d280e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "82057cbe-1706-4db3-aa0b-17532870fed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8e2d69-fe3f-47ec-a6b8-23b7e3c2212c",
        "cursor": {
          "ref": "54fe2ab7-5aff-424b-b579-bc887f381a24",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8254b1ce-477a-4622-a96e-7f7dddb9f1d2"
        },
        "item": {
          "id": "9a8e2d69-fe3f-47ec-a6b8-23b7e3c2212c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a4c1e203-1d7c-403b-9d15-fea13cc40318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859dd358-a05a-4ff3-8e63-45e59767ec2c",
        "cursor": {
          "ref": "5c82ca81-ccc3-4194-8a44-a51c46d2c185",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e561a2bb-e085-4f40-816c-97fbcd4c8d3f"
        },
        "item": {
          "id": "859dd358-a05a-4ff3-8e63-45e59767ec2c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8fbe7ef5-ac3d-4e09-aad6-cf4aea455340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c5d1f4-4194-45f8-a2e8-c5634f813b82",
        "cursor": {
          "ref": "bb523cc5-772a-4058-baf7-e7b378230f6d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3fd60ad4-c3aa-4243-b0c0-6d67ae21b65e"
        },
        "item": {
          "id": "68c5d1f4-4194-45f8-a2e8-c5634f813b82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "65d11689-4adb-4a6c-84b2-74f182ff10fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e80f5-c6c6-438f-8a3a-816898b93ecb",
        "cursor": {
          "ref": "e155f725-e5b5-401b-8964-506c55b12e56",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a99ee209-8476-4f96-89fe-1411665b9f07"
        },
        "item": {
          "id": "5c7e80f5-c6c6-438f-8a3a-816898b93ecb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7fdce2f4-d0fd-40df-a1d9-66c6b49af4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9d770-3b2e-45e4-8f34-ca38028e83e6",
        "cursor": {
          "ref": "4f02a141-a223-4303-877e-f78a3958c61c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "63c665f4-f17c-4d31-b79c-d48da3eea0c6"
        },
        "item": {
          "id": "cbd9d770-3b2e-45e4-8f34-ca38028e83e6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7fba3c26-605a-4459-a947-e4cfce7970dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f7c04d-8ae8-4e02-b5c7-9a0ec13f7ba6",
        "cursor": {
          "ref": "c8c7d9df-920f-4bae-8577-f6049aa7df7c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "222daa2e-3a67-4166-8150-a06cba483acf"
        },
        "item": {
          "id": "60f7c04d-8ae8-4e02-b5c7-9a0ec13f7ba6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e5fd7a48-53ef-474b-afd2-4319c57a1d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2575997-10e2-4ee8-a9a6-35dc01ae5df0",
        "cursor": {
          "ref": "9e308fa2-22ee-43ab-b9ae-36d3abb3cdef",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cab4b4b1-1544-40c7-b3cc-d28bceea597e"
        },
        "item": {
          "id": "e2575997-10e2-4ee8-a9a6-35dc01ae5df0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "be982d3f-8709-4935-b0d6-1463b2f5dc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54caeef1-6121-44b4-9120-41d0c89b0963",
        "cursor": {
          "ref": "5d3eb57c-bc32-4577-b361-b0a2009315a6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2698bbed-ea36-4f99-ba6b-a5c2040bb0a4"
        },
        "item": {
          "id": "54caeef1-6121-44b4-9120-41d0c89b0963",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f5c678b3-268d-4f2e-a3f2-f0df400bbf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b1bb7b-55d8-426c-95dd-fb61ec02084a",
        "cursor": {
          "ref": "9459a754-c0e3-436a-81a3-af8ed52efece",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ae885baa-fb4c-4644-b187-579ba5447f40"
        },
        "item": {
          "id": "d6b1bb7b-55d8-426c-95dd-fb61ec02084a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4b52fd67-3342-42b7-9a1b-d241ea2dfd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59416e3-4898-483a-b5fa-3d23fb43b785",
        "cursor": {
          "ref": "4adff175-33ff-4a71-acc5-22cf7bc1d4f1",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ceba2f8d-c6ee-4978-b82b-92403a568aba"
        },
        "item": {
          "id": "b59416e3-4898-483a-b5fa-3d23fb43b785",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "36b2d050-4dd9-44ae-b520-0afa7f0df64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a776abd-e7b9-4114-a146-9437d8be780e",
        "cursor": {
          "ref": "4d9b2ec1-660c-4412-b2e9-541d6c42ab87",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4f8b22b4-7936-4348-91bd-d51b1dfc8402"
        },
        "item": {
          "id": "8a776abd-e7b9-4114-a146-9437d8be780e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0045a00a-8e84-456e-aa26-c5718dcc5476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19d47e6-1832-4ac5-87e0-c310c5a7d510",
        "cursor": {
          "ref": "fa38f4e4-65d0-4b0d-acdf-ef7efba49c62",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ad24c9ee-ffcb-4f11-8f49-ef9a29bd4abc"
        },
        "item": {
          "id": "c19d47e6-1832-4ac5-87e0-c310c5a7d510",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4a488288-cf23-494f-aba5-78753cd3045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773f5091-12de-45b7-a2ec-84827eb4c370",
        "cursor": {
          "ref": "c57f887a-0f9f-487e-b002-9cf48c523f2b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8d44b229-494d-470b-a88b-54593ecd104e"
        },
        "item": {
          "id": "773f5091-12de-45b7-a2ec-84827eb4c370",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4f5eb7af-4117-476c-80f0-5e78d0ced4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4812ae73-e7a4-427f-8fa0-fd78bf589a17",
        "cursor": {
          "ref": "e09c3469-0117-4ea7-b3a3-663acf8702d1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1898c943-63b9-4a3b-9cf9-5995843b304e"
        },
        "item": {
          "id": "4812ae73-e7a4-427f-8fa0-fd78bf589a17",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c38950ce-c868-4c26-9fd7-bb402f4cce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb69aa3-db96-4e43-ba4f-cd01b2ea4d84",
        "cursor": {
          "ref": "d4f12c22-1340-4222-b5b6-b9e60be05961",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2ddfe93b-31a5-47b1-ab2b-61273aadc160"
        },
        "item": {
          "id": "0fb69aa3-db96-4e43-ba4f-cd01b2ea4d84",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d6dfee09-eb99-48dc-b85d-7cfe9fa83ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a9a08-7154-493d-ba76-e85cf64884b7",
        "cursor": {
          "ref": "4929f0cf-c92d-4c7d-a643-5fe06cb96942",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6801d87b-f5c0-4580-b40b-0dbee55f99da"
        },
        "item": {
          "id": "fb4a9a08-7154-493d-ba76-e85cf64884b7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ebd53e75-f164-4f57-9246-b0f53cce6fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c537a5-4606-4d4f-a347-92b473e079ee",
        "cursor": {
          "ref": "dcaa2521-1fdf-45d6-a4d1-1a207e6cd58c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2eeecebc-49b3-438d-91f5-2932c09f32eb"
        },
        "item": {
          "id": "26c537a5-4606-4d4f-a347-92b473e079ee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "df8ffa16-9fdb-4839-a62b-977d8016dc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be297054-ff8e-4b13-b859-f8a8e8882f0a",
        "cursor": {
          "ref": "178f72e1-78b5-42d3-bc44-a447a610eb45",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1c9d3f72-9eb0-4d72-9e35-4008e18ad0bd"
        },
        "item": {
          "id": "be297054-ff8e-4b13-b859-f8a8e8882f0a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "846c82e5-0e47-4f52-9f5c-ae5ba24b7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1f3c47-0c64-42ab-94ed-c8a52b2d23a5",
        "cursor": {
          "ref": "ee50ce7c-4e95-4d46-9133-8aa37f64545f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b37ff8c9-7a37-47b9-ab0f-38e7479cd77a"
        },
        "item": {
          "id": "6e1f3c47-0c64-42ab-94ed-c8a52b2d23a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "35005206-4065-4642-b26a-c9caa083d9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57278b-f0fd-47ab-a1b0-d67e683e838f",
        "cursor": {
          "ref": "49e2ca94-f07f-4d0e-8ae1-3ee0c562fcb7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7712530c-af48-4b1d-84ec-d00bd7b193d2"
        },
        "item": {
          "id": "ce57278b-f0fd-47ab-a1b0-d67e683e838f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7c9b11d7-505f-4454-b7b4-f6599f505744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ad205d-8c23-4e68-8dfa-c52418d850f7",
        "cursor": {
          "ref": "31c7dff4-378e-4de5-bcae-37523f3728cd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6aa0a76-f069-4ae1-98b0-ba6fa6dbd094"
        },
        "item": {
          "id": "74ad205d-8c23-4e68-8dfa-c52418d850f7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "498461f9-8688-4cf3-96df-c0ab6d67b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2414756d-7121-4228-9a60-d263038baa11",
        "cursor": {
          "ref": "d25e478f-9373-4f20-8c9a-b05c70d042d4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab308353-5749-4fbc-a81d-42752b5bd701"
        },
        "item": {
          "id": "2414756d-7121-4228-9a60-d263038baa11",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "76ed0a97-ed01-4407-a7d6-fd8c8ac5c1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffdfabf-6ff9-430a-a9bd-dee1050f128c",
        "cursor": {
          "ref": "981de706-6512-4b46-b38e-6f5a82316a09",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "214f7568-33fb-4dd2-8740-a4ba778cbb7d"
        },
        "item": {
          "id": "fffdfabf-6ff9-430a-a9bd-dee1050f128c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "12e1ec0f-3999-4d91-aba4-5b1d1612c036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbae53cc-eed9-4a16-b680-90671b611f1d",
        "cursor": {
          "ref": "02219609-0ab0-4979-bdf7-f4c42150c5f6",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1298ef24-15e6-4bce-b299-fd0b34f4791c"
        },
        "item": {
          "id": "cbae53cc-eed9-4a16-b680-90671b611f1d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2fba7058-e5a2-4f66-8d4c-cd59514172bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d1928b-295e-4d47-8982-10d2bde63132",
        "cursor": {
          "ref": "87a9b3ec-b59d-4999-983b-75237a63d997",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2f025dd4-049a-4076-82a1-9c845aaa82e6"
        },
        "item": {
          "id": "52d1928b-295e-4d47-8982-10d2bde63132",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b6d36de3-ff69-4ac8-9681-dfe04c8edd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269168f1-295d-4a1c-b350-44fcb0dddd9e",
        "cursor": {
          "ref": "733cf686-13ba-4d0d-bf80-d5a3f34d3a47",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4a675629-1700-4358-9ade-7f6732299971"
        },
        "item": {
          "id": "269168f1-295d-4a1c-b350-44fcb0dddd9e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c1e7952f-28c6-419e-b46a-47db3475b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1bd7d2-be3b-48ff-9fd8-4647054313be",
        "cursor": {
          "ref": "3f7bc7cd-fa05-4c4c-93de-b8dd3c9149bb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75f03c32-f3c8-4de3-9d00-499b8b1d59e4"
        },
        "item": {
          "id": "fa1bd7d2-be3b-48ff-9fd8-4647054313be",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "25660201-8b57-44fb-8adb-6c1da43f3231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd521526-7bdb-4f88-a4ff-8e682ed3f9d0",
        "cursor": {
          "ref": "04dcdfa7-755a-42fa-a223-1d4b65fd9649",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18a4cacd-91f6-4fb0-99a9-f9f8d23bf94d"
        },
        "item": {
          "id": "cd521526-7bdb-4f88-a4ff-8e682ed3f9d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "05fbcbdd-2839-4b8e-bfec-87ccf91fc2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbadd7da-b7ab-48d3-993c-6a608de98c47",
        "cursor": {
          "ref": "d2bb8cea-ca1c-4c75-9cd4-95203a8e1b12",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8ac5881d-ab74-4482-9185-0ac097110b62"
        },
        "item": {
          "id": "bbadd7da-b7ab-48d3-993c-6a608de98c47",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "39e17e77-eb73-44c9-b33f-f09b4bf81d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706756c8-26c9-4f6f-96d7-b0986ad48084",
        "cursor": {
          "ref": "8852c878-dc3b-44c0-a787-f87c3cd9d1a4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7ecb1bab-90f0-4874-94c4-e388dd8518e1"
        },
        "item": {
          "id": "706756c8-26c9-4f6f-96d7-b0986ad48084",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1c508c2a-1167-4860-84ad-b014f1d5a236",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d31ef26-d0f8-4fed-af0e-86cacc1f9a00",
        "cursor": {
          "ref": "17c83f52-3129-405a-9b8e-9592f5de4733",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d68220db-1b98-4553-bf80-babfea704676"
        },
        "item": {
          "id": "6d31ef26-d0f8-4fed-af0e-86cacc1f9a00",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3ca3132c-9f01-4242-99e2-df38dfc4933f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a59731fb-3dd0-4855-a8cd-0b7943494ba5",
        "cursor": {
          "ref": "4bd1daa7-d973-42ba-a69b-e89bc49917f4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "38b34878-2bbc-4b18-9682-344474783509"
        },
        "item": {
          "id": "a59731fb-3dd0-4855-a8cd-0b7943494ba5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a785744c-3964-4f57-aec9-085ff2073066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "7f9eef7e-5a8d-4cca-a909-eed4e89867d8",
        "cursor": {
          "ref": "21af287f-d7a8-4cd5-9253-36dff88c614d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "801eb046-aa9e-4065-b7d8-c2b1d13bf00f"
        },
        "item": {
          "id": "7f9eef7e-5a8d-4cca-a909-eed4e89867d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "29446d12-40bc-4aae-bf56-dad74cc4199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5059ba59-df8b-4094-acc8-448780e8edff",
        "cursor": {
          "ref": "96c8cfe8-0367-41c2-8491-45a3b6fb1093",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cad2dae9-12a9-4aca-8d07-0e3118ca6c92"
        },
        "item": {
          "id": "5059ba59-df8b-4094-acc8-448780e8edff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8de4e3f2-0417-4d5d-a5a4-e50171138a69",
          "status": "Created",
          "code": 201,
          "responseTime": 4586,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3783587-ba8c-4337-9eb2-46a550d0bcb2",
        "cursor": {
          "ref": "468b788e-2762-429d-a40d-71c082a9f52d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4cf5c210-5db2-47af-83ac-d453a6c36ef8"
        },
        "item": {
          "id": "c3783587-ba8c-4337-9eb2-46a550d0bcb2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8b63ae0f-a84b-4702-b13e-a2798ff7c3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d99c566a-5d4d-44ec-b1c2-4827161d080a",
        "cursor": {
          "ref": "3825f1d7-7701-4dbc-aa43-a051bfec3533",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "388fbe78-3ce1-4167-9e2c-0a7796e9ea2a"
        },
        "item": {
          "id": "d99c566a-5d4d-44ec-b1c2-4827161d080a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "481e3abb-f5e9-4e6e-8abb-268f8aae866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f9432660-8f5a-4a29-b242-2b347a23e3d0",
        "cursor": {
          "ref": "ad5644f6-fcd8-4897-b7b3-90c03a477a86",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a6eb278e-b213-48df-8121-b3eb0b26c421"
        },
        "item": {
          "id": "f9432660-8f5a-4a29-b242-2b347a23e3d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "df897607-4e3e-48ae-887b-5e1a06b2e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a581f9e6-794a-40db-aa01-8956d9f6b4a2",
        "cursor": {
          "ref": "8648fb2a-f396-4e38-ada5-fd7791361aad",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "84cddaba-7bea-47b9-a22d-beb3b771ef4d"
        },
        "item": {
          "id": "a581f9e6-794a-40db-aa01-8956d9f6b4a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0d467f5e-fded-4ca0-8aa9-fcfc481a837d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eeeb86-bdca-4f1e-9dc9-5c5c50b764b4",
        "cursor": {
          "ref": "3a850365-c8cb-459d-a6f0-2edc71a14205",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bdfaf632-d6a3-423e-b42d-d5140992c730"
        },
        "item": {
          "id": "49eeeb86-bdca-4f1e-9dc9-5c5c50b764b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb4dc453-c353-456e-b7b7-94bfe54555f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c2ad38-f6c6-474d-81bf-443ddaad45c2",
        "cursor": {
          "ref": "f2d46063-3632-49a8-b717-1c5c8f09ad44",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e93bdeaa-419d-44d5-8005-0c434ff58c50"
        },
        "item": {
          "id": "08c2ad38-f6c6-474d-81bf-443ddaad45c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81509e29-1153-469b-97e3-c6c0309dec05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a89d8ab-3da6-4736-b640-190a22b23768",
        "cursor": {
          "ref": "49a8c7a0-1a1a-44cd-97bd-588562a5a7a5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "22025348-475d-4013-9f81-1a637e4e82bb"
        },
        "item": {
          "id": "3a89d8ab-3da6-4736-b640-190a22b23768",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36eefc6c-b50e-4b2c-8749-1aa831ef8576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8090d034-4b89-4ea3-a441-3ad4d4a8b041",
        "cursor": {
          "ref": "33ee95f7-63f7-48b1-a6dc-b5c298483fbc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "736cc89f-773c-47a9-a13b-4b1bdf37065b"
        },
        "item": {
          "id": "8090d034-4b89-4ea3-a441-3ad4d4a8b041",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7ad1bd3-e44b-479a-b04e-05c0805aa068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fceb341-29dd-4049-8e17-d2830c6b5140",
        "cursor": {
          "ref": "8d58d8a8-4183-4e41-ab97-4db1d1de0a45",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "863b81eb-20bd-4ae4-bd8e-5992c0ff5072"
        },
        "item": {
          "id": "4fceb341-29dd-4049-8e17-d2830c6b5140",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d925518e-f19f-4d9b-98b4-03b375337461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac47c93-9409-4e62-9493-d2a40e0a56d8",
        "cursor": {
          "ref": "2d29c6d4-cfdf-4d47-a97b-d22fec62bafb",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "61254bbb-bffa-47c1-8d67-19c63f47ba50"
        },
        "item": {
          "id": "2ac47c93-9409-4e62-9493-d2a40e0a56d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "af531ef9-cd70-451f-b8c9-3218380cc47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad1497-abab-4c82-84a4-5917e0be0559",
        "cursor": {
          "ref": "d228040f-0d99-4a95-be38-8c86207bab1c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2f5f5208-cf49-44d8-be70-aac328839838"
        },
        "item": {
          "id": "58ad1497-abab-4c82-84a4-5917e0be0559",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "119a5448-e444-4e77-a7be-3f8c5d1763d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074a747-9e70-4321-8a5c-394091f01280",
        "cursor": {
          "ref": "dcca7484-0a28-4415-92a7-6f931bf2ceb7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b3ea3492-9067-448f-9a8e-bb29404e95da"
        },
        "item": {
          "id": "f074a747-9e70-4321-8a5c-394091f01280",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "608cd3e8-e5ba-48b3-b3fc-b186e65db7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829a1723-1e35-4c0d-ab86-656e4b748a3d",
        "cursor": {
          "ref": "24ed952c-97ec-4ce9-93a5-339e7ca8f2aa",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7d614244-76af-4e77-a051-10263b846552"
        },
        "item": {
          "id": "829a1723-1e35-4c0d-ab86-656e4b748a3d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d1cd7a0-7b30-4273-b742-4bd601355dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3205dc5f-7181-469e-b15c-19e72262a283",
        "cursor": {
          "ref": "572c0e1f-e039-4dec-a65e-1ca14e2a8e28",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6971fbfd-de1e-4d17-bac1-32842575622e"
        },
        "item": {
          "id": "3205dc5f-7181-469e-b15c-19e72262a283",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d719529b-cf0f-485b-af59-a62f62cb745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c70ff9-c88c-4e39-b813-f37cd0080e71",
        "cursor": {
          "ref": "12aa388f-bc08-47d8-926d-9d3edb8793fe",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "20f24fd5-62b8-4dc8-a9e5-c43f1e43634e"
        },
        "item": {
          "id": "69c70ff9-c88c-4e39-b813-f37cd0080e71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4099f90f-35a0-4859-a503-7c208dd8b407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180dceeb-b3d9-4a72-a92a-558215bf8e0c",
        "cursor": {
          "ref": "dca125ad-d5dc-4b74-a387-1a1aff7ac9d9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d574a4be-d152-4a99-aa26-1d258e3d54a7"
        },
        "item": {
          "id": "180dceeb-b3d9-4a72-a92a-558215bf8e0c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cea95ffb-a219-400c-b4b8-93509b6e4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdbfaa5-5391-46be-818c-17c1db5c3881",
        "cursor": {
          "ref": "5922a5be-a2cd-403c-bcfd-5695d36c703d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "81620bb8-9c16-42e0-aee7-e07ba744eff7"
        },
        "item": {
          "id": "fbdbfaa5-5391-46be-818c-17c1db5c3881",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "83b5931b-2c79-4d78-9f91-1b6c741ed317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57d1a26-dbcd-41fe-a0a1-9478a0330df1",
        "cursor": {
          "ref": "c3d8b791-9f4f-442d-8774-e490b66868dd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "53df5c01-c790-4503-a5db-703cafca6f09"
        },
        "item": {
          "id": "f57d1a26-dbcd-41fe-a0a1-9478a0330df1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86760d9a-50b8-4440-8686-c1966887613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569f0dfb-5feb-408a-a1e0-ce87e8711c0d",
        "cursor": {
          "ref": "f27abce6-35f3-4635-8919-5bc20a4f8a81",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b4a9648-0785-4663-85b8-76efb85e8c86"
        },
        "item": {
          "id": "569f0dfb-5feb-408a-a1e0-ce87e8711c0d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0e37aa1b-d391-45e5-a05f-9fbe62f63cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d71221e-9135-4b80-99b8-a3a74ab40395",
        "cursor": {
          "ref": "338f760c-e4f0-408d-9fe4-1cf8ae36838a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c34ceb9a-346b-4efc-9dc6-5e51685c3dd9"
        },
        "item": {
          "id": "6d71221e-9135-4b80-99b8-a3a74ab40395",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6c79ceb-3dcc-436e-bb7b-a2e67f245a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de1e18d-7536-4a5d-b8e2-44230a6b0386",
        "cursor": {
          "ref": "7e91ff84-d838-4ff7-b239-be4612b86f03",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "06b2696f-cd2d-4943-983e-1f05ba579b64"
        },
        "item": {
          "id": "3de1e18d-7536-4a5d-b8e2-44230a6b0386",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b1678c38-b062-4ec7-812a-ed4f0f8a8396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ccafbe-e1cb-4e19-9934-79ce17075bab",
        "cursor": {
          "ref": "75f7e4c8-4580-43c3-83d7-2707ae19760b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "be29a806-451c-45b8-b2c6-86216b2816c5"
        },
        "item": {
          "id": "a4ccafbe-e1cb-4e19-9934-79ce17075bab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e048f078-c1f6-40b7-be72-1255b524ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead4dd95-ca71-4304-8cbe-68ec18cfc310",
        "cursor": {
          "ref": "b03f8e56-3fc8-4ded-8296-4b0844ee2d4b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a4c6d046-267b-4e80-8c40-44a98c0794d9"
        },
        "item": {
          "id": "ead4dd95-ca71-4304-8cbe-68ec18cfc310",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1933956-6fc7-4be2-bc24-70d6d25ede50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a334c-1b66-4855-b495-9335e06a6b16",
        "cursor": {
          "ref": "6a2c6be8-610c-476d-b1fc-0139cc298b2b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "06af3609-3f00-4b24-baad-1abcb8a34894"
        },
        "item": {
          "id": "7f7a334c-1b66-4855-b495-9335e06a6b16",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "62dbc660-35b3-4cc0-9f18-efc0799d1440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b22fecf-f61a-498d-ba2e-8e8dcde26cf3",
        "cursor": {
          "ref": "82c0ca77-76b8-405f-8027-438e410a7546",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d5d00da-f5df-4662-9b85-f86413f10a7d"
        },
        "item": {
          "id": "6b22fecf-f61a-498d-ba2e-8e8dcde26cf3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3c5a554a-b37e-4a31-8b70-76d4e32a2ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5bae73-d55b-41b8-84d1-cff937806c06",
        "cursor": {
          "ref": "33d568e9-c931-4e09-933d-2321b7a171a7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03bac649-5f06-49c4-9046-23ae89f804c7"
        },
        "item": {
          "id": "bf5bae73-d55b-41b8-84d1-cff937806c06",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54cc2281-2da2-4548-9e32-1ab2109e720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624ebb3b-da76-4710-bcb6-626fefafa3dd",
        "cursor": {
          "ref": "89ed3fc2-7458-447b-863d-e339214df3ef",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea478aba-7ee9-4d8f-9c76-2972d864d096"
        },
        "item": {
          "id": "624ebb3b-da76-4710-bcb6-626fefafa3dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fd02c543-4cfc-4d26-b978-c4e2b9eb9982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295e1b59-78f1-4c8a-ad2a-79cbe2e473ad",
        "cursor": {
          "ref": "65dd2dfe-e237-4754-827e-5c32f5523966",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ec5d0568-9a1e-4c87-b49a-bbfae28da844"
        },
        "item": {
          "id": "295e1b59-78f1-4c8a-ad2a-79cbe2e473ad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6756e18a-31b3-41c4-b200-a3e6e0f91756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44e376e-1a68-4548-b937-88330520fc5d",
        "cursor": {
          "ref": "819180e6-2ddb-4b90-aa29-c0e366a1bf0c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c24836ad-3b8b-4af1-abd3-35dafbb1ef13"
        },
        "item": {
          "id": "c44e376e-1a68-4548-b937-88330520fc5d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "340173b1-bfd3-47e1-b62f-22e7eaad4a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d1d36-2155-4f1e-b474-0f4e98cf4da4",
        "cursor": {
          "ref": "17f2c953-a668-4999-a849-f2dde4402ff7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "75decae8-7f8f-4e5d-94de-5adf8d6f807e"
        },
        "item": {
          "id": "4e5d1d36-2155-4f1e-b474-0f4e98cf4da4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffd31a71-df59-4ebd-a741-5655ca7236e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66860ca-e0fc-4e94-89bf-3215d3f74c50",
        "cursor": {
          "ref": "60261aeb-2f35-4327-8946-155415da6b04",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c97c0baa-a59a-41b4-a36b-fd9e0ce26bb5"
        },
        "item": {
          "id": "c66860ca-e0fc-4e94-89bf-3215d3f74c50",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4d46f55-4b2b-413d-abf4-8c989f8d976e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5eba0f-d8ff-46a9-a7ec-ebf7f5af1b84",
        "cursor": {
          "ref": "24ad09ce-bee4-435b-8d2c-de4836a99ac3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7238aa6c-bc61-491c-99d9-13987ae1472f"
        },
        "item": {
          "id": "1b5eba0f-d8ff-46a9-a7ec-ebf7f5af1b84",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b3e0f227-4ee6-4371-abdc-86aee2f593af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7244571c-2cc6-4f42-9b43-838b8d526381",
        "cursor": {
          "ref": "2c00128c-8272-4da1-aa29-6a6427fa4b56",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d9b6169b-e8c8-488f-9649-8563c6609a40"
        },
        "item": {
          "id": "7244571c-2cc6-4f42-9b43-838b8d526381",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0a53eece-81cd-4167-8fc3-6204d6c21224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2130179-df38-4e57-8958-59f9c2a83b6d",
        "cursor": {
          "ref": "8dc4e93e-d250-4206-8dc0-a2a1cb8551db",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "678a72b0-59bf-46f5-b9c1-198cdcd856f2"
        },
        "item": {
          "id": "a2130179-df38-4e57-8958-59f9c2a83b6d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6d7660e6-2844-40e4-a477-c80347d7c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1250713b-6fbb-4378-8d2a-a729d240788f",
        "cursor": {
          "ref": "55078abc-33bd-4ff7-a9c1-7e20453a42ce",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "485bfc58-fc0d-4d50-820e-ed7d81475ff8"
        },
        "item": {
          "id": "1250713b-6fbb-4378-8d2a-a729d240788f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c27e095-72d4-49ab-b267-6b7fda94602a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93538ba8-d7ee-4cae-8051-5656e6610db5",
        "cursor": {
          "ref": "caeb1e62-910b-48ec-990b-a9c1ec5d6d9e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a32036e0-b172-4be3-ab79-32dc695461b2"
        },
        "item": {
          "id": "93538ba8-d7ee-4cae-8051-5656e6610db5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "92ce183d-c6d1-44b6-b1dc-e48594eb58c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9833a7a6-8416-4f69-b612-dd351fdb91fe",
        "cursor": {
          "ref": "8db2e3f9-3661-44f0-a9fc-7f14850bdaaf",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d16ddc26-2af0-474a-8889-d494fdf8a9fe"
        },
        "item": {
          "id": "9833a7a6-8416-4f69-b612-dd351fdb91fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8950af8e-2009-482d-b086-af45c8863e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba72fd0f-62a7-404e-95e4-4fc9c2401e46",
        "cursor": {
          "ref": "fb171f93-13e9-4e0f-b207-6fc52439a936",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "76015e7b-7144-4b99-90a5-d299c0b1cbb7"
        },
        "item": {
          "id": "ba72fd0f-62a7-404e-95e4-4fc9c2401e46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65da9505-d610-4308-b21d-42edc8ea5c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98b63d8-0f06-4fb4-8d41-17b116e84ec4",
        "cursor": {
          "ref": "7e43739e-95c5-467a-9db6-e76deda350bd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eae518e9-c69c-401f-85e9-62de36944d5a"
        },
        "item": {
          "id": "a98b63d8-0f06-4fb4-8d41-17b116e84ec4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6325ebda-1836-412e-a11e-76ec00d83950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538b5ecc-a7f6-4a25-97ad-fe222fb89a2a",
        "cursor": {
          "ref": "44745f6b-7f0f-424e-b9a4-956d0ef408da",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b9535970-e60c-451f-bbc0-3222d0a5c782"
        },
        "item": {
          "id": "538b5ecc-a7f6-4a25-97ad-fe222fb89a2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c0264719-fe29-46c8-b882-951d2fb91cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc297548-5bc2-43f7-9b2a-b9f0809fb89f",
        "cursor": {
          "ref": "deeb5f79-38c0-4d90-b744-ce79b50eee2f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d2631c97-60a1-49f6-bf1e-623437ecae00"
        },
        "item": {
          "id": "cc297548-5bc2-43f7-9b2a-b9f0809fb89f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2a4cdd25-b819-4985-875a-60e610d39160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e11c6-29d8-4e9d-8ea6-621ecc1891d6",
        "cursor": {
          "ref": "8d1399dd-d514-4f2c-b18e-df67b55c02e1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4525248-8e0d-40ef-bf5f-5ada52792513"
        },
        "item": {
          "id": "f25e11c6-29d8-4e9d-8ea6-621ecc1891d6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5642f301-7026-4a2c-b7f4-8288fd3dfc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be82cab4-d393-4d5b-b3dd-77c2e2843301",
        "cursor": {
          "ref": "25b518fc-2add-431b-b103-e889a99f513a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e99d562c-a1cc-4217-b538-bf554458f936"
        },
        "item": {
          "id": "be82cab4-d393-4d5b-b3dd-77c2e2843301",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cb94f16f-ca3f-490c-8ad1-f0f95055763c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace527f1-4c51-42f3-9097-3a0a6d7a39cd",
        "cursor": {
          "ref": "e07f4f8c-e166-4632-ac2c-63579a493043",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "10fb3fe9-7385-458d-82f7-d146b60ba263"
        },
        "item": {
          "id": "ace527f1-4c51-42f3-9097-3a0a6d7a39cd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc47000d-f66b-451c-92c1-f876c65635a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da2cd39-3415-4e5a-9274-b46f4628734e",
        "cursor": {
          "ref": "2b1054a1-5a5e-4280-8294-4aab1ee21b9d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9e5f5d84-cab4-4d4b-8ac1-1250d83f5c02"
        },
        "item": {
          "id": "2da2cd39-3415-4e5a-9274-b46f4628734e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1edfa70f-1506-4ec8-bdb9-f669ba4ca357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e8d3c4-6d10-4700-a7a5-5b71da35bdb8",
        "cursor": {
          "ref": "5e720991-89e8-45cb-9783-abdacccb7b62",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d3e88282-487c-4100-a0ca-274d9a2f1efd"
        },
        "item": {
          "id": "a0e8d3c4-6d10-4700-a7a5-5b71da35bdb8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "07fb9ae6-7a6d-4f84-8439-97fb7d90baf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19efdad1-cca4-4cc0-b7d2-18d1437e3951",
        "cursor": {
          "ref": "5d96fd07-4c19-4816-965a-3d385ca3bab4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb5db087-d33b-41fe-bb86-190a5decf3cb"
        },
        "item": {
          "id": "19efdad1-cca4-4cc0-b7d2-18d1437e3951",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c9055f7a-44a0-44fb-9897-9e90a0db99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a3a521-b8a5-4ed3-8da8-d9ce6b5bea46",
        "cursor": {
          "ref": "487414b7-02e2-46d4-a76d-bc31a5e18f13",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ab24b008-b6f4-4c88-9d19-ee96692bc23a"
        },
        "item": {
          "id": "21a3a521-b8a5-4ed3-8da8-d9ce6b5bea46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1447f6ab-1675-4de2-9cd8-e003c8238bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9acc84-2583-47b7-a098-f612521a42f1",
        "cursor": {
          "ref": "40835eb0-0be9-4004-8b49-47cd61fcdb7b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e9069978-dd96-48ef-81fb-f81e0ef6ce42"
        },
        "item": {
          "id": "0f9acc84-2583-47b7-a098-f612521a42f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9e2458ba-23ee-428a-8603-0aa31db3791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6bb103-eeb6-4372-a2ee-e6f0f2e60933",
        "cursor": {
          "ref": "ebf8a74e-e7fa-4024-a1c0-b76a08e1f4f1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "63b86ddb-4f2e-4f0d-aee3-e3d2b007ac10"
        },
        "item": {
          "id": "7b6bb103-eeb6-4372-a2ee-e6f0f2e60933",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ee2b123-4447-4d71-8ec7-87648316f8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5356efc-e9ad-4769-967c-894b854a9039",
        "cursor": {
          "ref": "f820c5e5-9391-4b0b-9fdd-128519bdeff8",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "12a7840c-c92d-44ff-8988-d509fe25ba8e"
        },
        "item": {
          "id": "f5356efc-e9ad-4769-967c-894b854a9039",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07da16a1-28eb-4d55-9efa-59b9e0f473c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766033f7-c6a5-4b08-84b9-011ad570e92b",
        "cursor": {
          "ref": "78a2cb40-463e-4f5a-82ad-ca8b7a096a68",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8051e08a-0ca2-46cd-8b16-533c2c392e0d"
        },
        "item": {
          "id": "766033f7-c6a5-4b08-84b9-011ad570e92b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8e4491c0-4ed3-49a4-8147-58fa345cd30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b047d97-ce9d-41e8-9662-93b707d2f923",
        "cursor": {
          "ref": "8cc1de73-b6d5-41ca-8200-f70265e25940",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "01dfc37b-5648-4612-8b60-b6f8914822e4"
        },
        "item": {
          "id": "3b047d97-ce9d-41e8-9662-93b707d2f923",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "966ad66a-ef43-412d-8ec5-21c248c7776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02974ab3-0fb1-4dfc-9b31-6b6cc9053ff8",
        "cursor": {
          "ref": "47ef5584-9d64-478e-99ff-645e7514a0c2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2afb0d0c-186b-474d-aa27-3de93cde033e"
        },
        "item": {
          "id": "02974ab3-0fb1-4dfc-9b31-6b6cc9053ff8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1bba0d64-fb89-486d-9178-1e66e5f81147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0697f0bd-00e2-4e98-9a6f-8cf5b158f4fe",
        "cursor": {
          "ref": "ca8a68ba-dc19-4f64-ad09-f0818365f070",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c21f8d4f-aae5-4349-a5d0-ec6e77d476b9"
        },
        "item": {
          "id": "0697f0bd-00e2-4e98-9a6f-8cf5b158f4fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "94b457fd-a808-4de1-91ed-ced30e10bba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678ef464-4039-4c95-97e6-0ce11f12636f",
        "cursor": {
          "ref": "5eadd5c1-3921-469c-8769-42cf32bd3eb0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aaddea0f-e20c-4b69-a20f-aaed630368b2"
        },
        "item": {
          "id": "678ef464-4039-4c95-97e6-0ce11f12636f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7da013c1-3b26-4bfc-b078-8cab3a0f0b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d97e4ae-51fa-46e6-9d6b-44c7ec91ec0a",
        "cursor": {
          "ref": "c175503c-2bb1-4eb8-b78e-1dfcef305467",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d9dde382-cd50-4324-b256-1fd0ba421267"
        },
        "item": {
          "id": "0d97e4ae-51fa-46e6-9d6b-44c7ec91ec0a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bed5a379-7a56-44dd-9c4d-fd50b45ccc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da28095d-631a-4703-a623-43f0ccfb4500",
        "cursor": {
          "ref": "67584c0a-ef4f-4679-98d8-d6137f78f49c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f537677-3395-4502-8de3-46b2c087fe58"
        },
        "item": {
          "id": "da28095d-631a-4703-a623-43f0ccfb4500",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e77571aa-07eb-427a-834d-1dde69e14992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1cb373-a899-4d69-a389-fda884676d6b",
        "cursor": {
          "ref": "478df0b4-8c59-4922-86dc-37d83faddc9d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6774fdf4-268c-42e8-a59d-f555a21b1cf1"
        },
        "item": {
          "id": "8f1cb373-a899-4d69-a389-fda884676d6b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "595675e2-ff28-415f-9340-c1f918b47d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1839d2-3376-48f2-aadf-b0ed0830e8f0",
        "cursor": {
          "ref": "942cca9a-759e-4cf1-88bd-ede7740c963f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1728cb0c-7029-4b1a-966a-cebbd5ecb7a4"
        },
        "item": {
          "id": "aa1839d2-3376-48f2-aadf-b0ed0830e8f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd4f2c00-619a-45fd-a860-2117fd2a0648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a646cf2-99bc-43e8-8031-55a3b26972cf",
        "cursor": {
          "ref": "b790e9a1-a841-4d88-bd35-06d78b662726",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d23c20a9-8519-4250-9b0f-0a574915b1a2"
        },
        "item": {
          "id": "6a646cf2-99bc-43e8-8031-55a3b26972cf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a0bbb30-dc93-4304-b522-ad34147d7983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04fda28-202c-408b-8304-d1deb4dd9044",
        "cursor": {
          "ref": "f59985b5-9970-42cb-9343-cece9cd67925",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f0038366-660a-4d6f-9f4d-5a59f25e24e4"
        },
        "item": {
          "id": "f04fda28-202c-408b-8304-d1deb4dd9044",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "901bb7e5-14b3-4ce4-ba7c-05f8410cb996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e380072-51ec-4dc0-b5a9-749f87d1c354",
        "cursor": {
          "ref": "67f76821-9451-4abf-a6a1-dc748308199d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e1cd0bad-e200-4747-938e-a5784ac06a23"
        },
        "item": {
          "id": "5e380072-51ec-4dc0-b5a9-749f87d1c354",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "00d69e60-189c-4e21-bb5a-b189176e1863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf16909-76fc-4aa6-a14e-19afce878c7d",
        "cursor": {
          "ref": "0047ae6d-8b56-475f-af1e-f83368ac1189",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80380210-9c35-4108-ad57-f7a1b69b8873"
        },
        "item": {
          "id": "2bf16909-76fc-4aa6-a14e-19afce878c7d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83b40e98-cf4c-4d54-a976-170878212fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4309eee2-4064-4695-a45a-19de08a414cf",
        "cursor": {
          "ref": "a808181e-4eb7-4d7e-9670-c70e526df558",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5e68efa9-9b1c-4762-9e7b-f6da1f29c84c"
        },
        "item": {
          "id": "4309eee2-4064-4695-a45a-19de08a414cf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f63013ec-d3a3-400e-821b-3a03d856c21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204d6550-ac4a-4870-a678-450620d4156d",
        "cursor": {
          "ref": "24a81c72-a037-4fe4-b812-9d62508f3881",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "26bf8056-444b-4f16-a956-e72d90e5198a"
        },
        "item": {
          "id": "204d6550-ac4a-4870-a678-450620d4156d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c8378be-6b6c-4c75-a84b-7359ee5f3cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3446bb-6427-4553-9aec-cd527259aebc",
        "cursor": {
          "ref": "f95009c9-f571-42a6-954b-3eedeb62873c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "28cbc673-42f6-48b0-ba1a-acbf2581e0ba"
        },
        "item": {
          "id": "3e3446bb-6427-4553-9aec-cd527259aebc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "62b9f352-f359-4ae8-8c58-9196a0a73ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f018b867-9313-487b-baf0-a84203886007",
        "cursor": {
          "ref": "49b2e00c-6733-4ae5-acc3-6f8adc2a3f58",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f0221345-b962-4865-8c8a-99335c5990a4"
        },
        "item": {
          "id": "f018b867-9313-487b-baf0-a84203886007",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4d12637b-6550-4939-b979-4f2bb14ef983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f950a5c-a74b-4278-b0ea-860491e2c25d",
        "cursor": {
          "ref": "681af741-187e-4e6e-8546-f42a1712ea12",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b0b336c-2b71-4f39-ab37-0a3e78ba0050"
        },
        "item": {
          "id": "5f950a5c-a74b-4278-b0ea-860491e2c25d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5ab114f9-4b28-4874-9162-e501bd94b2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f0c214-d473-40e8-b8a3-579feaa91db9",
        "cursor": {
          "ref": "f2f913fd-6a6e-4219-b36a-ebfc01920c89",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "507b7e7d-f7c4-47c5-95e4-eb452f1e2008"
        },
        "item": {
          "id": "c2f0c214-d473-40e8-b8a3-579feaa91db9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e5cc9b94-92be-42eb-9665-9b3f023b54d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351eb8b1-7f02-40d0-a17d-cc3144b25a88",
        "cursor": {
          "ref": "307e24b4-c74b-4664-9ae9-88df12391e84",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6c5d335d-6c4b-4419-8b8b-611d5f8bee55"
        },
        "item": {
          "id": "351eb8b1-7f02-40d0-a17d-cc3144b25a88",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "aaf53650-3d48-474b-9b36-27eb2a98218d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78783dbe-b6a3-4063-a512-42d02cb44c3f",
        "cursor": {
          "ref": "05391a01-c59d-4eb7-a95f-6b3b7aa9fbcb",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2c38347-ca96-4ace-977c-b8b2d48b00ec"
        },
        "item": {
          "id": "78783dbe-b6a3-4063-a512-42d02cb44c3f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a351ae7f-94a8-4853-9835-1f1b29160730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3610bb4-e20f-489b-8a95-72f48fd03153",
        "cursor": {
          "ref": "702f1d06-6e9f-4336-b073-a17729a1132c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e9676e1c-5cbb-47f6-b447-0ae1ee59f148"
        },
        "item": {
          "id": "a3610bb4-e20f-489b-8a95-72f48fd03153",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8affe88f-a832-4559-a3bf-dc63c0e7378c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8d580-1b96-4fb6-9dfc-24658526ad9f",
        "cursor": {
          "ref": "e90d747a-99e9-4f31-96c2-2492954565fe",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "925524e5-29b4-4d8a-9979-b7425a6691aa"
        },
        "item": {
          "id": "fbc8d580-1b96-4fb6-9dfc-24658526ad9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68f45c4e-1960-4697-b79c-2eeb84a62980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706582a0-be5d-4090-983d-8d1717746c66",
        "cursor": {
          "ref": "7c9c7eef-f77b-4052-a491-6cfdc81d13c6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc532168-20a3-4e8c-80ac-9ebe64f0ea97"
        },
        "item": {
          "id": "706582a0-be5d-4090-983d-8d1717746c66",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "210326fb-979c-4ee7-a56e-9e0de2788ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cd25b7-f6aa-4272-a957-da90a21898af",
        "cursor": {
          "ref": "7f2e5cb8-4f97-4114-8911-87cd5f31280a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "40975bf5-55af-4498-bfdb-3340fa6956bd"
        },
        "item": {
          "id": "13cd25b7-f6aa-4272-a957-da90a21898af",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b0b8e2ba-5ea3-40b8-913e-da7957ea20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec22919-3904-477a-849e-020098c5ab2f",
        "cursor": {
          "ref": "1c20377c-5921-4130-a0ba-00d5c20f7b6a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "94da43f3-c367-4b92-834c-47d8666853e7"
        },
        "item": {
          "id": "5ec22919-3904-477a-849e-020098c5ab2f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8f6aa0d3-623d-4ed8-a62b-8be751aa33cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe292a-9d0a-4788-9986-8d80fef75116",
        "cursor": {
          "ref": "9ad35257-f08c-439a-b539-fd03917349d8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3b5ef4bc-2b6b-4ede-b4f2-ce425bcb82df"
        },
        "item": {
          "id": "0dfe292a-9d0a-4788-9986-8d80fef75116",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c7cfcd82-561e-433e-b678-ee43c8d6b69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de864f4-1c65-4826-9dcb-f042e0652fa7",
        "cursor": {
          "ref": "1393b43d-7312-4e2b-9a2d-d2a4f8a76eb0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9638bf95-2c8c-4ef6-ab41-2f489cf31cb1"
        },
        "item": {
          "id": "9de864f4-1c65-4826-9dcb-f042e0652fa7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "822835fa-5a96-485c-8eb6-e1c80dad80dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5228ab-1789-480d-97d9-217e8436cc39",
        "cursor": {
          "ref": "4177349f-8e86-49e9-9657-5c902c2d23c5",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f96ee8ab-3059-49ab-b8e0-1803ca47c0c1"
        },
        "item": {
          "id": "7e5228ab-1789-480d-97d9-217e8436cc39",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9866ed6e-71fa-4595-9437-782919f20677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa2ead9-a013-4286-a776-befe2a2e092b",
        "cursor": {
          "ref": "8f9cfe90-9489-4afa-92cf-3fb0dc28c20e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6a7515f0-7d47-47d9-aad4-e3397cec7218"
        },
        "item": {
          "id": "2fa2ead9-a013-4286-a776-befe2a2e092b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f13c9e7-9a83-4340-bc2a-446e2430cccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced731f9-f3bc-4526-8741-49c499d844f2",
        "cursor": {
          "ref": "bdf9aa8b-8469-4557-bbce-39932990f73e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e97d58c1-3962-40a6-ab7d-4b9cf723c4c9"
        },
        "item": {
          "id": "ced731f9-f3bc-4526-8741-49c499d844f2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eedf584d-887a-46b6-95bd-8c8b71dd4803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808e3208-3149-4f7d-a5b6-204f2e09a572",
        "cursor": {
          "ref": "f6f6f607-7fff-4b07-afd8-74c747f2f23d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1c1feffb-a702-4a04-a8fe-8cd5be35d10f"
        },
        "item": {
          "id": "808e3208-3149-4f7d-a5b6-204f2e09a572",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "59118053-2a81-4825-8c64-2fecc55542a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d8661c-4737-4555-965c-f22fb62627ea",
        "cursor": {
          "ref": "0f54fa04-23aa-4744-bf2b-0f1474eb3a69",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c1c7540-9d53-4de2-af75-3b4b8410caf7"
        },
        "item": {
          "id": "79d8661c-4737-4555-965c-f22fb62627ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cdc2322b-51c3-43dd-bba9-f1bc9d0ddc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851e3bb9-9137-4ca0-83c6-8b2c3bce94d5",
        "cursor": {
          "ref": "314ec937-c31b-47c2-8f02-37d1f6613868",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bd419caf-3214-46a2-853c-3a50a51d4ff3"
        },
        "item": {
          "id": "851e3bb9-9137-4ca0-83c6-8b2c3bce94d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "584fa483-ddd7-4725-90b7-e5dd18efd818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b8e69-7d42-49d6-8af5-b32d45f38e0c",
        "cursor": {
          "ref": "3d8e9e8b-3412-4324-a49b-336e044416eb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "97c5b3e1-ba0c-444d-b01a-30a2bd20e0ac"
        },
        "item": {
          "id": "0e1b8e69-7d42-49d6-8af5-b32d45f38e0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b13bd171-2acd-464f-9ca9-607a8885d106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c91ca33-014c-4e02-91a7-b0f9d0384648",
        "cursor": {
          "ref": "0f27434f-ac78-48be-a666-bb57a16b7055",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e7d214e5-b581-4dbf-b37a-4976889a10d7"
        },
        "item": {
          "id": "7c91ca33-014c-4e02-91a7-b0f9d0384648",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6201be5e-64ef-468e-9c3c-4e680dbe94b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a3aa72-7be5-4fb3-a3e2-6ff296662a8d",
        "cursor": {
          "ref": "2d313c58-2e82-48b1-808a-5b0e8139b69f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "755fbf36-dbd1-4562-a796-f1ffc8a4fb6c"
        },
        "item": {
          "id": "69a3aa72-7be5-4fb3-a3e2-6ff296662a8d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c53c2368-71f3-45aa-8ff1-8fc7eaa82ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ddde6-53db-4ff5-ac79-9c65e6cf8954",
        "cursor": {
          "ref": "995e4631-fbb2-4960-b26e-d75591396ae3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ced64db-ccc8-47c0-a1d5-8e10d1ab675f"
        },
        "item": {
          "id": "db9ddde6-53db-4ff5-ac79-9c65e6cf8954",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "25576d57-ba4e-46cd-a17c-f93c347806bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432fcc07-dc15-4922-aade-03f8484f3347",
        "cursor": {
          "ref": "6b5c3f61-9221-477d-862b-399b4125139c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9e0aa777-0899-40bb-b9a7-bd50613a1dd7"
        },
        "item": {
          "id": "432fcc07-dc15-4922-aade-03f8484f3347",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b35c8855-64ad-44a8-96b4-d78a7d8427e8",
          "status": "OK",
          "code": 200,
          "responseTime": 181,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "77e6a606-97b4-4f0c-9011-b549bd39bae5",
        "cursor": {
          "ref": "1e7d6521-60a2-4d1e-9d74-973ea41533d1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "68b3ad4f-b77c-47b2-8f28-fcbb40b6d6f4"
        },
        "item": {
          "id": "77e6a606-97b4-4f0c-9011-b549bd39bae5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b9b6933-a6a1-475c-967c-2c1a76ffcbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667536ef-7592-453f-a367-9c0a8f048848",
        "cursor": {
          "ref": "41d4efbc-15d4-434c-b5bb-c43a99c3fffe",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "744b295c-e7f4-4cd9-b1c0-e06d9366bd30"
        },
        "item": {
          "id": "667536ef-7592-453f-a367-9c0a8f048848",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8632313a-b699-449e-aebc-0dc90bf48303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde763e8-1c02-4b80-8e67-afc439f10eac",
        "cursor": {
          "ref": "7f59092b-8f86-4fe9-9211-20bacf955ae7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8db69ffb-c0dd-4782-82a0-9759e887aecf"
        },
        "item": {
          "id": "fde763e8-1c02-4b80-8e67-afc439f10eac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "76ad32fa-8805-47a2-ab11-b7560d1b906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada76f79-92fa-4bd9-83b2-7877677a539e",
        "cursor": {
          "ref": "9f3980ca-de83-4558-9254-2befe0631f4c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "109c3b96-c873-4282-b9de-b500d47a81b3"
        },
        "item": {
          "id": "ada76f79-92fa-4bd9-83b2-7877677a539e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d77463d7-617f-42c9-84f1-d964ad3b74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2acc120-1e82-4753-844e-78ec2f09e180",
        "cursor": {
          "ref": "1a5e8ba6-5d77-4bae-b3e5-0acc1d03d717",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d8a74bf4-6e69-4347-8e6a-fb25add7ff55"
        },
        "item": {
          "id": "d2acc120-1e82-4753-844e-78ec2f09e180",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c4f4d4f0-79ae-4767-8fd3-c57787cd4bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec2dace-519b-4920-84d1-70752ad143b2",
        "cursor": {
          "ref": "4789825b-f617-4461-9853-51dc6e7d657e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6152c687-ac7d-4d6b-8a63-6576f90bc469"
        },
        "item": {
          "id": "6ec2dace-519b-4920-84d1-70752ad143b2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef05081a-b487-4cb4-b6b2-cf64012f099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f0b59-be08-4658-bfce-edfdb06f1e36",
        "cursor": {
          "ref": "24568100-387b-484b-b1f2-6cc94a8b856e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "198a471b-e806-477e-9b87-14150bb33400"
        },
        "item": {
          "id": "dc1f0b59-be08-4658-bfce-edfdb06f1e36",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "749db7e9-e98e-4560-b4e7-5063265c78d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6166db4-daeb-44f9-be45-1d2a7bb4b9ed",
        "cursor": {
          "ref": "63252932-fafb-448d-acb5-f56b25c68e5b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ac74abd5-31b4-45fb-8302-b8271a830777"
        },
        "item": {
          "id": "f6166db4-daeb-44f9-be45-1d2a7bb4b9ed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "955a5e5f-1539-42ae-aced-5a9d654fcdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276bf6e-94ef-491c-8e74-d602aeb0c3fa",
        "cursor": {
          "ref": "9ee730bc-8e55-4db6-883e-2be4558b4510",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ed052132-f087-49f6-afa6-4d201ece9f30"
        },
        "item": {
          "id": "3276bf6e-94ef-491c-8e74-d602aeb0c3fa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "83d5aff6-d9d7-450f-b189-969d4c53c2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cabb29-bb36-4be8-a013-4800a17e8e4f",
        "cursor": {
          "ref": "56cdad85-60d9-41d0-a8f5-3d0c2e227b01",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f1300547-4d22-416d-8319-02eeba2faf83"
        },
        "item": {
          "id": "a3cabb29-bb36-4be8-a013-4800a17e8e4f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "981c8247-6f8a-4dbc-88fb-706448aa52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d77ac8-f8fd-4e17-a085-1a10bbfc026f",
        "cursor": {
          "ref": "8dc3061a-8043-4b22-8542-249340c3fe09",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6f9c556d-6897-4fdd-afc6-b6345b6e6c3c"
        },
        "item": {
          "id": "76d77ac8-f8fd-4e17-a085-1a10bbfc026f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "28e53711-edef-4cf5-85e6-a6584cb6ba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f4e99-d5ff-40a8-a90b-641394cb98d4",
        "cursor": {
          "ref": "94581f3b-645b-437e-808a-c0aebe32d83c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b3c96eee-a284-44f3-8886-28b0a9eb95a6"
        },
        "item": {
          "id": "ff8f4e99-d5ff-40a8-a90b-641394cb98d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38f2069a-2555-4a14-919c-cca6b5a7abbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef44b2a-be56-4957-b757-3eb69f79ebf5",
        "cursor": {
          "ref": "2c3c7bf1-aade-4a3b-94e2-490a1435652f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a6474e71-0426-43aa-8293-40866eda9e8d"
        },
        "item": {
          "id": "cef44b2a-be56-4957-b757-3eb69f79ebf5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "34a196bb-8158-4ff7-8b6e-d6f7d4ac94a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d52fa8f-40db-42ef-85ad-2b9327ec4bbd",
        "cursor": {
          "ref": "2c3fc556-b71c-4de0-b75b-314254fe4ea0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1194436-5cf5-43e9-9be4-46f1be5685ef"
        },
        "item": {
          "id": "1d52fa8f-40db-42ef-85ad-2b9327ec4bbd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "09c5c99b-e2f0-4f95-aed0-60247c1e0cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8abc6c1-b021-4427-8dab-2bea89aed33e",
        "cursor": {
          "ref": "ca90f3bd-78e7-476e-8b0e-3dac5586134b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c7bb71db-20b4-4cc9-b652-0e83d43889c8"
        },
        "item": {
          "id": "b8abc6c1-b021-4427-8dab-2bea89aed33e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "661ca89c-74a9-486e-a76b-8c4c127ca559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b729a-747e-482d-866a-5b9fc5100420",
        "cursor": {
          "ref": "376b5e8c-9d0a-48f1-80dd-1cdd9125c568",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c050d85-625b-44af-9d35-2877d87f8548"
        },
        "item": {
          "id": "942b729a-747e-482d-866a-5b9fc5100420",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c1950524-34df-4f97-b7fb-c42144fb840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0e66a0-c587-4639-b070-ed6ddc93499e",
        "cursor": {
          "ref": "c5140336-5f2c-4d4b-9e7f-0d05b72c0f31",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e4998bc3-6b4a-4380-b650-ea38623c643e"
        },
        "item": {
          "id": "9b0e66a0-c587-4639-b070-ed6ddc93499e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cc978406-5b66-48ab-9839-099e13c82d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f790f5f9-b800-4cb8-89c3-93c23ba6c179",
        "cursor": {
          "ref": "e861430a-3919-4bea-b023-7deb5b2ce3f4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f193ee16-3bcd-4e37-8973-6122637dea78"
        },
        "item": {
          "id": "f790f5f9-b800-4cb8-89c3-93c23ba6c179",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "509097ee-8859-4fe3-b594-37d8ee0702e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c04cb-cb3d-4116-ac11-1f24b407eacc",
        "cursor": {
          "ref": "3c97fa58-74d7-46e7-8ba2-ff54a40569ff",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dbd61839-b700-4d15-8bbe-a79173ce2cf9"
        },
        "item": {
          "id": "af1c04cb-cb3d-4116-ac11-1f24b407eacc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55e02a28-0099-4122-ba06-28c4a79131fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea2815f-ad45-4f20-a7b6-9798570d0ed7",
        "cursor": {
          "ref": "9a4e25df-0798-4ed2-8445-038f9f50dbe4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ca1a613-e16b-4e32-952a-ce8970b4b8a8"
        },
        "item": {
          "id": "eea2815f-ad45-4f20-a7b6-9798570d0ed7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e1b998f-0518-4188-9c46-2000e1a3cdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc3aaec-d53c-4444-848b-f10fb8353676",
        "cursor": {
          "ref": "cf238df6-ac8e-4bc5-9ca7-c175e37be403",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "48fc8181-2495-4b79-ab6b-efa70ca90b38"
        },
        "item": {
          "id": "9fc3aaec-d53c-4444-848b-f10fb8353676",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "302a16dd-db3e-4147-8543-219147586aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e994a2-b2ed-4c21-a5dc-bcc1006e4227",
        "cursor": {
          "ref": "d80d783a-23bf-4ae9-9fd3-ae62b2eae008",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc5a9593-7ed0-4ac1-a6cc-2c4875172953"
        },
        "item": {
          "id": "71e994a2-b2ed-4c21-a5dc-bcc1006e4227",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7aadd7a8-3693-43cf-9c68-f3736bdf0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b44ffe-5327-477d-906c-9c04f7fb4b4f",
        "cursor": {
          "ref": "9d161d7d-7c9a-4514-b559-d2815f49aba3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2e1b9ca2-005d-4f69-a79a-515bf0cb53ae"
        },
        "item": {
          "id": "64b44ffe-5327-477d-906c-9c04f7fb4b4f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0c7e1ea6-a83c-48f8-8eb9-793d62bcfa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04efad6f-0cfc-416c-8d72-6a3749c0ef9c",
        "cursor": {
          "ref": "283fea69-dcab-4d36-9440-6dc66e78e1ce",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8c473b47-b7d6-4a1e-9389-ea510b23bb00"
        },
        "item": {
          "id": "04efad6f-0cfc-416c-8d72-6a3749c0ef9c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "715bd1af-4053-47a6-8ab6-7888b83e69c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbfeab4-65be-4002-b789-8cc889beb9ff",
        "cursor": {
          "ref": "6ccdc414-51dd-4213-89bf-553191a01789",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1957f0a-822b-4f38-b655-861373e25d7e"
        },
        "item": {
          "id": "9dbfeab4-65be-4002-b789-8cc889beb9ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7855ea3a-413b-4d2e-acf6-3836b93dbe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9afc52-a646-414f-a735-c70113e8bbd2",
        "cursor": {
          "ref": "f6316091-678c-48a9-9cd9-44392ffe09ab",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4b1636f6-9d9d-4eb8-a529-30d8cd783d48"
        },
        "item": {
          "id": "6e9afc52-a646-414f-a735-c70113e8bbd2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c11da32f-815d-424b-8684-553a5da50820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e403f0-2c2e-4c88-9d82-093249c8d8fa",
        "cursor": {
          "ref": "928aa8d4-9e32-41bf-8728-a865f669924b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86d3eb81-61a4-4cab-b2ef-a9b488b78558"
        },
        "item": {
          "id": "43e403f0-2c2e-4c88-9d82-093249c8d8fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aeccaa3b-589d-4efb-9379-6dcddddab218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f02de-217a-4d2a-ba4e-99f3ded21d7d",
        "cursor": {
          "ref": "bb2b86d6-fff2-4483-ad11-eb556ceeb5c0",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1978051-f4b5-46cf-95fc-462e330054bf"
        },
        "item": {
          "id": "cb3f02de-217a-4d2a-ba4e-99f3ded21d7d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83078f4a-f3a1-4882-9b3e-926cc3415bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e236d-a4a3-493c-b338-67ad734bc299",
        "cursor": {
          "ref": "6bb9aeeb-d400-4f1e-ba7b-d833026efee9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0ae0a207-735d-488b-a080-2cf6a311de3e"
        },
        "item": {
          "id": "4c0e236d-a4a3-493c-b338-67ad734bc299",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "25241d7c-fbd6-43af-ac73-312d284d15ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5a13fc-81f5-4df6-86a6-e8fa78810641",
        "cursor": {
          "ref": "08011bc9-2443-4f86-a284-4d3df8c29d90",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1dd07f69-7961-48e2-baa4-5acf20aa03fc"
        },
        "item": {
          "id": "6e5a13fc-81f5-4df6-86a6-e8fa78810641",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7670e3b9-b0dc-482b-8f93-d597cc468883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9df1e94-92b5-49d4-b6ed-7b3c3a67840d",
        "cursor": {
          "ref": "d2b305e1-2957-4d1a-ae2e-9bbc5b5cbce2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d068bbc9-a9fe-4200-8002-d75dac783897"
        },
        "item": {
          "id": "a9df1e94-92b5-49d4-b6ed-7b3c3a67840d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea9a418b-9e03-4536-aaa7-a4085f670cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f720ae19-b379-4f1f-ab79-c48796a578ac",
        "cursor": {
          "ref": "209c96ad-3f93-4f75-90b1-b5f8bfa4b235",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "420f8fea-94cc-4646-ada3-28ab16c0d086"
        },
        "item": {
          "id": "f720ae19-b379-4f1f-ab79-c48796a578ac",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9218177c-6f56-47ed-8f52-5cb20f794f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c28c625-edcb-44d0-9331-c8012c50c9f7",
        "cursor": {
          "ref": "9b6570b7-7d3e-4cfb-958e-4dcf348901d0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e6d054f1-ee37-4ee8-a82c-435bcbaad616"
        },
        "item": {
          "id": "1c28c625-edcb-44d0-9331-c8012c50c9f7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c03a9112-39b9-44aa-b563-6c17e6b357b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108499b-7288-49bb-a8f2-7a87834feadd",
        "cursor": {
          "ref": "b14c5a56-138e-4491-8ddc-586344d175b2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3c21bd8b-73f7-47a3-8b0e-5a00c2b9bd8f"
        },
        "item": {
          "id": "b108499b-7288-49bb-a8f2-7a87834feadd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2582caec-1ae0-4019-a5b7-04893079a173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e416ab3-249c-49b1-ad37-4d248ca14e2e",
        "cursor": {
          "ref": "464c9054-d160-4e9f-a6c7-4eca1727d516",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6415ebe0-f412-43de-aa8f-6a96895c220f"
        },
        "item": {
          "id": "7e416ab3-249c-49b1-ad37-4d248ca14e2e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "83c6cf22-1647-4eb8-b21e-e3016b77daf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f09e96-8a0f-4617-903c-75e41f30bb08",
        "cursor": {
          "ref": "17d91328-634b-4ef2-887d-7b0b68e8fb8b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c567fa4a-075a-46b6-9024-aee1b41c8793"
        },
        "item": {
          "id": "e0f09e96-8a0f-4617-903c-75e41f30bb08",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "96c126dd-a244-46ed-9587-3c792768f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5537a9-9b8a-4654-934e-377b022e9d18",
        "cursor": {
          "ref": "ff7b53d8-c211-4270-b627-0c297305745e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d9134ba0-be95-465c-916d-5fed442293ae"
        },
        "item": {
          "id": "7b5537a9-9b8a-4654-934e-377b022e9d18",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "11d41afa-cd33-4cc0-b9ef-fed6cac6a681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e969f9-6498-4c82-918e-3e2d5c2f24b2",
        "cursor": {
          "ref": "cf66175d-36db-4849-88e2-bb04964b2c00",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e0fb9d46-d360-4ef4-ae00-284712d248e7"
        },
        "item": {
          "id": "11e969f9-6498-4c82-918e-3e2d5c2f24b2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1fab1903-09c6-4220-a624-c5e899837add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b8243f-98c7-4f29-a5b7-a9d34bdd3823",
        "cursor": {
          "ref": "23256007-a2b7-4b22-9bbc-17c773394af7",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "479769ab-7ade-44fd-85a2-b5ad6a916f1d"
        },
        "item": {
          "id": "81b8243f-98c7-4f29-a5b7-a9d34bdd3823",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a558b3c1-fe57-446e-a88d-f3e074aee218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4262696c-18c5-48b8-a945-ceccb67966e7",
        "cursor": {
          "ref": "f5df7900-04c7-4e76-b217-9c70a06fbae8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a9e0ce7a-5f97-47dc-ba7c-464bfd0522a3"
        },
        "item": {
          "id": "4262696c-18c5-48b8-a945-ceccb67966e7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a0dc0154-e2d1-4806-b80d-06fbac095f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f3ca29-93ef-4617-803c-db4835eaf695",
        "cursor": {
          "ref": "96a708f6-8521-4208-9931-776eab5b0a34",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "edf64bf8-794d-43c3-ad74-25473adccc7e"
        },
        "item": {
          "id": "80f3ca29-93ef-4617-803c-db4835eaf695",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e853b50-4527-4115-a88d-503f56ae265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac098aa-bb74-45f4-98e7-7c96d66c2909",
        "cursor": {
          "ref": "c24938f8-2071-4eee-be68-1a68763cce3e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d80f0326-05f5-457d-a5bf-26d8216a148a"
        },
        "item": {
          "id": "aac098aa-bb74-45f4-98e7-7c96d66c2909",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b4c1b07b-a20c-4fa8-8c09-7ee57c302528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41591460-9644-458f-bb32-b5531a28973c",
        "cursor": {
          "ref": "1fb44406-b0b4-4573-974b-9b42a5305542",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "718f8e8f-7817-4ef9-973b-45c8757f6c05"
        },
        "item": {
          "id": "41591460-9644-458f-bb32-b5531a28973c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1dbe76af-f77c-4f42-9f04-7f948fbf3bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc0c187-a919-4c5d-8e76-5812d339e8ff",
        "cursor": {
          "ref": "6d9e0ecd-c534-4421-b30b-3278862097e3",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a5593cde-f564-465b-aef9-ad7c2cb85537"
        },
        "item": {
          "id": "dbc0c187-a919-4c5d-8e76-5812d339e8ff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "acd6d9e3-85a3-4d95-bf5e-94f0dafe395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c70543-7ecd-486f-bc0f-0275c9c4f10e",
        "cursor": {
          "ref": "ebccd6b3-74fa-436e-abf6-2aa6a2e0e1c9",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b69d717f-a1c0-492d-bbae-cfdb956a00b7"
        },
        "item": {
          "id": "d2c70543-7ecd-486f-bc0f-0275c9c4f10e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "231e5632-1b50-4ab4-b83e-75d8eeab4eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f11231-685f-4ab0-84ec-fb04dda1bf22",
        "cursor": {
          "ref": "cc150703-d4f8-4c86-836e-33d1aa0ce122",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "83852f9c-b154-45cd-9cbf-71d24d683a75"
        },
        "item": {
          "id": "88f11231-685f-4ab0-84ec-fb04dda1bf22",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d93f2741-476f-4297-bf76-3468b42be467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8f79f0-9b56-4bf9-926f-0ff598b09e9b",
        "cursor": {
          "ref": "7eb28df8-b976-49a1-99ed-2ef81adda9a7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eaabadfc-5e90-4650-b0df-95f5df025a47"
        },
        "item": {
          "id": "8d8f79f0-9b56-4bf9-926f-0ff598b09e9b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "674a4feb-3390-4f71-8b06-28b162b83367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec734e5b-1f1e-4c98-9384-d60adb377406",
        "cursor": {
          "ref": "53ac9bb0-86dd-42f7-8ed9-14c94c43ed16",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fc0dc98f-5ba2-4dc5-ba93-611e6b372c12"
        },
        "item": {
          "id": "ec734e5b-1f1e-4c98-9384-d60adb377406",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89d0468c-86a8-4806-ba50-dffc557dcab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831b924-be35-46ff-b212-dbae6d23b1fe",
        "cursor": {
          "ref": "517f5f71-7ac4-49b7-b4b0-2f2cad3415cd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1aa8bd88-e917-4fa8-8dee-719da61b7523"
        },
        "item": {
          "id": "9831b924-be35-46ff-b212-dbae6d23b1fe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7a665d95-ce98-49c4-82a8-55d566e41c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ce9b6b-0c1f-4990-bfd1-6e3922d18231",
        "cursor": {
          "ref": "36bec1dd-1edb-4183-9fda-9427d9a87d52",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2fe2c70e-2fbb-4eb8-9f61-cf8933fbe577"
        },
        "item": {
          "id": "f6ce9b6b-0c1f-4990-bfd1-6e3922d18231",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2503aea1-3f84-40ac-970f-3700486a0dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f631f4a1-9842-41d9-aff1-9b7b61583e2e",
        "cursor": {
          "ref": "42ab5f2b-abb1-45cf-b8eb-11063ecba7cf",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a9382a5d-3008-4772-8fb5-8ed7270048d5"
        },
        "item": {
          "id": "f631f4a1-9842-41d9-aff1-9b7b61583e2e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bbf3c9f6-42e5-4bfc-b2bf-72aaca104fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d22453d-7499-4e45-b521-962311302432",
        "cursor": {
          "ref": "ac467361-8a12-4f6a-8202-4073a5fe1237",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c1292a2-4eb4-419b-89ae-524319d984e1"
        },
        "item": {
          "id": "1d22453d-7499-4e45-b521-962311302432",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c21b9dc3-163c-476d-96dc-d04f487f8302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d06e47-f3e2-4e6c-bb13-8315b29b7271",
        "cursor": {
          "ref": "68c252cb-e844-404d-b351-43d0fd79b82c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "72b8c3b3-a96b-4db8-93a5-f4d3159b758b"
        },
        "item": {
          "id": "43d06e47-f3e2-4e6c-bb13-8315b29b7271",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0a57b01d-53f9-4194-b829-3a28ac47d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416213b4-5ff3-47e3-afaa-344830d08e52",
        "cursor": {
          "ref": "fe2be793-fca0-4dbb-af9b-6339e9a1b923",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8a5fee8-8e02-4f6f-ae26-6357395c371e"
        },
        "item": {
          "id": "416213b4-5ff3-47e3-afaa-344830d08e52",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cd85ee32-3c94-4a81-8415-6e1d3ee21f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65501bb-cb80-4782-92ad-49cdc5781f3d",
        "cursor": {
          "ref": "1417436a-c165-4ca0-8f30-8643e52095c3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ac78837-14d2-4b90-871d-7c63fe60e793"
        },
        "item": {
          "id": "d65501bb-cb80-4782-92ad-49cdc5781f3d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "50a84e83-3a0b-4690-b875-aa5117834065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a267a4b-1043-4604-b63f-fcee320ceb74",
        "cursor": {
          "ref": "20d61eaa-0605-4fb7-833c-403d5729252f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "84906674-d7cf-487a-99e6-05e7f0630ad9"
        },
        "item": {
          "id": "7a267a4b-1043-4604-b63f-fcee320ceb74",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3129e321-590c-4f6b-bc91-576ca3253059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ed63cb-a4a8-4cc8-8471-c52f2c7c98ba",
        "cursor": {
          "ref": "95fc49eb-ca26-4dd5-b066-fc911a1ee923",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9334a843-6532-44a4-8e40-79f6069d618e"
        },
        "item": {
          "id": "62ed63cb-a4a8-4cc8-8471-c52f2c7c98ba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e957959b-e16a-441d-ba4f-b8e11aa88f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591bca5e-df84-4255-8855-95277c971ffc",
        "cursor": {
          "ref": "14bc6e8e-687f-4d3e-a35e-187dcce9a18f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2f11bac1-ee1f-4e99-b382-7dbdbf16a685"
        },
        "item": {
          "id": "591bca5e-df84-4255-8855-95277c971ffc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c157d8c3-8e46-4ba0-b3de-dde8fe3b1b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3c1c3f-81ca-40c4-af09-fc19538c1b19",
        "cursor": {
          "ref": "b8ee2552-dc76-4961-9d91-d45e34cb8e13",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "19f7e751-9824-492a-91a9-4192925c79ee"
        },
        "item": {
          "id": "de3c1c3f-81ca-40c4-af09-fc19538c1b19",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "71499600-ea73-4147-a1f6-10be29241797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1bec1-4059-4a3c-813b-1648e837ee50",
        "cursor": {
          "ref": "01f9dd74-dffc-43b1-a7ed-fac21db66e24",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e3ba664e-ed78-4196-b6d8-cbcbe33a7618"
        },
        "item": {
          "id": "d3a1bec1-4059-4a3c-813b-1648e837ee50",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9dcc5457-ebba-466f-818d-7e7233373e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8ab2d7-bc15-4c1e-a2a8-bc6c3212ef81",
        "cursor": {
          "ref": "bd438ee9-0658-4c26-9e20-d9fdc485d97b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9da08d7e-96a6-4f79-8b4e-fc6e8027eff4"
        },
        "item": {
          "id": "cf8ab2d7-bc15-4c1e-a2a8-bc6c3212ef81",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c2f5d573-5ec2-4115-8875-efa3a397f5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf01700-fb00-4dc6-83fe-8cb2858084bd",
        "cursor": {
          "ref": "d92e17c6-3f5a-44f5-87ee-a829c70e30ad",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7f07ee5f-e6c9-4486-a2f8-544b62b36b04"
        },
        "item": {
          "id": "7bf01700-fb00-4dc6-83fe-8cb2858084bd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8758804e-9db2-42ae-a90c-a1b208d0ca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cace8be-5b41-439e-88f9-379e2465e256",
        "cursor": {
          "ref": "c0852800-530a-4f13-bbcb-35f4e475135a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ae006ae2-4137-4f2b-a5a0-9b32a39c8d17"
        },
        "item": {
          "id": "3cace8be-5b41-439e-88f9-379e2465e256",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f60c30e5-ee51-4412-9cf0-83b6968713c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178feaef-23f2-4fdd-8c88-7d4a0bc40a3b",
        "cursor": {
          "ref": "f84b3f18-69ef-4e89-b107-8da42fc47862",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1cc91eea-f314-414e-8e40-ddb8e9789826"
        },
        "item": {
          "id": "178feaef-23f2-4fdd-8c88-7d4a0bc40a3b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7e71871b-0bbb-4ae2-9dbc-4b44224dad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9457abe2-6209-492f-8dd5-27aadaed861e",
        "cursor": {
          "ref": "bf3d4a47-0197-42d7-b898-ddcf56de0231",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1cb4c4b6-01a0-4ddb-abf2-2e2a2ad3814b"
        },
        "item": {
          "id": "9457abe2-6209-492f-8dd5-27aadaed861e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f8aa91d-e5c8-45ad-ba5a-5dac9572ce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c48379-5734-4412-979c-935e24f13a7a",
        "cursor": {
          "ref": "2abac5c7-79be-4209-95eb-42b71f2a111a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "82f11a90-c671-4a7c-be5f-3611059963fa"
        },
        "item": {
          "id": "d0c48379-5734-4412-979c-935e24f13a7a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d7fbe35-20fd-4467-925e-30a2c64b850d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512db49d-915c-441a-ace8-da2ac7ab9684",
        "cursor": {
          "ref": "dde2aff2-997e-455d-a184-9af179923ca9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ec86b07b-120c-4cc3-8802-0a11ede51726"
        },
        "item": {
          "id": "512db49d-915c-441a-ace8-da2ac7ab9684",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1ecffff8-64f8-4851-a56c-f6eaa3edc162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091af538-a616-421f-b9f0-53f8b2547ac5",
        "cursor": {
          "ref": "0829c61c-1aee-4b27-a526-4393bb08fda7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b72e6158-9756-4149-aec8-7d7814a3dc61"
        },
        "item": {
          "id": "091af538-a616-421f-b9f0-53f8b2547ac5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1641b952-f18d-46f1-9d71-99db451e5cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982477c0-7355-4258-bbe4-4cacd7cc0f02",
        "cursor": {
          "ref": "2beb975a-830a-4ec1-8894-d0235d59e55e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c0b278c8-2241-40ce-87ac-684c8361c7ff"
        },
        "item": {
          "id": "982477c0-7355-4258-bbe4-4cacd7cc0f02",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6aaf6b19-a3d9-4388-9a8f-a3672412c667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a9584a-9320-4995-b6f5-53c53824fa72",
        "cursor": {
          "ref": "64ce0cb8-014f-455f-a819-a6196c7387d8",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d5433880-a185-4861-a593-d26d99f62540"
        },
        "item": {
          "id": "95a9584a-9320-4995-b6f5-53c53824fa72",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "740764ff-783f-49e6-a07d-47421610986e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd134557-946a-4217-a678-011c2a91466e",
        "cursor": {
          "ref": "a9a514f2-7cfa-47ac-a7d1-652ca21cef5f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dbce12ae-d6d2-47d1-866c-74e50745395b"
        },
        "item": {
          "id": "cd134557-946a-4217-a678-011c2a91466e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a1b0e7bd-ecfa-4978-bffa-f343aef59e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a213432-16f6-4028-89a0-150123ba7ff5",
        "cursor": {
          "ref": "c23de157-910e-4412-84ee-68c2fbbdd255",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bdd0704d-e415-457e-a63c-a23bc1273865"
        },
        "item": {
          "id": "6a213432-16f6-4028-89a0-150123ba7ff5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "518e9a01-6238-46d8-82a1-64cf30cf391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419fd7f1-ddaf-41af-af4c-4f64c5577774",
        "cursor": {
          "ref": "c2dbfccd-980e-43d4-98bc-9cd3aaff5fe5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "886029b7-1661-4a7e-95b7-fc7e20291b14"
        },
        "item": {
          "id": "419fd7f1-ddaf-41af-af4c-4f64c5577774",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b345e104-98eb-4434-ae83-77f645765ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addfb420-a16a-4d96-bd17-dbe17f62e7e8",
        "cursor": {
          "ref": "312abbcc-6b11-4cc5-9732-b8899e27e978",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "47e8c395-93f3-4d2c-92a4-94997f0dcea6"
        },
        "item": {
          "id": "addfb420-a16a-4d96-bd17-dbe17f62e7e8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "000af57f-b663-4ef3-b179-84eaf2ea6539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a8fa78-a179-4a4f-ae50-a1d0d5134e9d",
        "cursor": {
          "ref": "c9bda961-afc1-4f58-bab8-dd264fcd846f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1f226376-5a23-4c28-889f-c15ee9b2306d"
        },
        "item": {
          "id": "c4a8fa78-a179-4a4f-ae50-a1d0d5134e9d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "16081e97-7ce9-415e-a046-cb659d34b8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742fa2fe-9247-4dd4-8011-0f7e4d19caf8",
        "cursor": {
          "ref": "0b17eda8-39f2-4f20-ab14-a1c98eb73b02",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "60a461e7-eb22-4668-9fa9-c4e51f2bc9ac"
        },
        "item": {
          "id": "742fa2fe-9247-4dd4-8011-0f7e4d19caf8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1329bcbe-a12b-4d8e-aa1c-2c59f48e90ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60360a91-8078-46b8-b8a3-2738a0f91e75",
        "cursor": {
          "ref": "d20fffd1-fb8b-4e01-be0e-0a959cbf9689",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b973efeb-ec32-4d62-bedf-e53b12f2efb2"
        },
        "item": {
          "id": "60360a91-8078-46b8-b8a3-2738a0f91e75",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb03faa2-2d86-46ef-b17b-3ebd5d2eedb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a302a0-f9b8-4ace-9e5e-f73e3dc51bb9",
        "cursor": {
          "ref": "5ff9f7c3-90e2-4e90-b9c1-a4623f0bf638",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6bd9898d-535f-4849-8871-0f71cedbbe7c"
        },
        "item": {
          "id": "c4a302a0-f9b8-4ace-9e5e-f73e3dc51bb9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "598dcfa8-7fd5-4a7f-b5f7-a3d27d85d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03779788-dfc0-4c26-940e-1b7bdd57be00",
        "cursor": {
          "ref": "6c6a9873-517a-48e2-b401-b9e13f0d1b0e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6ea142b1-b694-4549-ad4a-2074ea27956f"
        },
        "item": {
          "id": "03779788-dfc0-4c26-940e-1b7bdd57be00",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "12d9ebf4-1fad-4cda-acb3-c97ccce2d187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb61d3fa-ecee-4f53-8377-e078aa3cb8e6",
        "cursor": {
          "ref": "e2f25cfa-414d-4c3f-87bf-5920f6c5b007",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0917cb1a-45ec-4d80-8b49-d1d8c7318324"
        },
        "item": {
          "id": "cb61d3fa-ecee-4f53-8377-e078aa3cb8e6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4fe86ca5-6a51-4842-8298-2f9d95cba7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a79785-6bb6-4466-b98f-c3e94c724e5d",
        "cursor": {
          "ref": "1fae8354-41af-4d43-9bca-5106d31f56c2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4c591a85-e49f-459b-b0c3-483b435d6e0b"
        },
        "item": {
          "id": "32a79785-6bb6-4466-b98f-c3e94c724e5d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "02eeb0f8-2e34-4b72-bfc4-559e64a4fb3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42af888-2e46-4589-8639-094c409db519",
        "cursor": {
          "ref": "c2591c6a-acd6-4c41-9040-ca5196bba777",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6f2281d9-3afa-411a-a64f-ef300e76766d"
        },
        "item": {
          "id": "a42af888-2e46-4589-8639-094c409db519",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e1b327f-1c80-4be2-a5c3-3b6371ee0d4f",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c373e727-16a1-457a-b546-f219276c78e7",
        "cursor": {
          "ref": "0742b1f8-132e-4ecb-886b-693497d80a59",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0a047a04-ed64-4a5b-9a2a-3e5e7fcefdd2"
        },
        "item": {
          "id": "c373e727-16a1-457a-b546-f219276c78e7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "30a6b93b-d646-4a95-a5f8-b0b585b253d5",
          "status": "OK",
          "code": 200,
          "responseTime": 3184,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fea9e-a42e-4a15-b66a-f4972a9fc493",
        "cursor": {
          "ref": "ff922cee-309f-4d49-80e5-4c4a536c78c1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cbd8e2df-899f-4969-87f4-2186561eeb0a"
        },
        "item": {
          "id": "986fea9e-a42e-4a15-b66a-f4972a9fc493",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a4bde3f2-1e86-47e0-8e67-d750c3ef2465",
          "status": "OK",
          "code": 200,
          "responseTime": 2802,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccc0d81-4ec6-4509-a4ad-69e4a322d5b0",
        "cursor": {
          "ref": "4f36017e-f382-46e0-80b2-b08f5e8f1f82",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "84447c18-2985-4119-ae4d-14c0dbb16c26"
        },
        "item": {
          "id": "eccc0d81-4ec6-4509-a4ad-69e4a322d5b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eda88606-a133-4fab-84db-0c7af4de6b93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccc0d81-4ec6-4509-a4ad-69e4a322d5b0",
        "cursor": {
          "ref": "4f36017e-f382-46e0-80b2-b08f5e8f1f82",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "84447c18-2985-4119-ae4d-14c0dbb16c26"
        },
        "item": {
          "id": "eccc0d81-4ec6-4509-a4ad-69e4a322d5b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eda88606-a133-4fab-84db-0c7af4de6b93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461a52c-8e2a-46e5-a3cc-8d33290f0b0b",
        "cursor": {
          "ref": "934f7fc2-9292-4de2-a965-1629df52a080",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "01ec57c5-577d-434e-b154-59c2ab9be54b"
        },
        "item": {
          "id": "0461a52c-8e2a-46e5-a3cc-8d33290f0b0b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d4904f72-9b32-4a79-9de8-981aabe17efe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd861c11-98ea-4671-8fdb-04b1b77477e2",
        "cursor": {
          "ref": "36d26c40-ac34-4ff7-9ac5-54a0ff3f31d3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "402faed2-8ab4-4c89-be31-4d301f72a90d"
        },
        "item": {
          "id": "dd861c11-98ea-4671-8fdb-04b1b77477e2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c595ec95-0ea4-4757-8492-eb0207700dd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}