{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e746a8e3-79bd-4969-872a-d84da2243f6d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "07886086-a2d0-4689-b24d-78c8b3b088c6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "857e6d7e-9396-4a8f-9b17-3ab81405fa58",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b258fe9b-b967-4b29-8bb5-a9b1388c528e"
                }
              }
            ]
          },
          {
            "id": "fd02a421-e14b-4484-9e0f-43a6389b0c0b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f8619c2-ecc0-4e6d-b702-9e022873fe84",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59622e07-6534-4260-9f6f-bebdc2faf51b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4c49f5e5-2f16-432c-a35d-a6293eb60cb2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17cb99b0-ddbb-4b0c-8f7e-dd60cf574ba6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77617172-dfa2-460b-97fb-8d1703d4b037",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf991a3e-b7cb-4e6a-8a16-c6d44a741dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e08b832c-d160-488d-93bf-ae6b36cab6c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "695eeccc-25ba-404d-9ab1-9b9e2b2d633a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ff90b9b-8778-4ec4-9931-902ae23b1e78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b77750ae-e97d-49e8-ac71-93269ba20baf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3fbb1478-6e22-4e9b-9698-9574d4a175b9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1f0ac99-3db1-4388-8519-f6691e8332df",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4942a037-2d2d-4b3b-a0f4-3f1009b2a00b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2449387e-ecdf-4075-88f1-a3f5e9bac660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d989f040-e63d-404e-9027-3c4f37cc1cfd"
            }
          }
        ]
      },
      {
        "id": "e8e69d7b-94a2-4bef-a1f7-25ecd12bde84",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b59c4605-b98e-43a6-a955-c346ef399b95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c1912ff-2fb5-4489-b7a8-bacef2410bcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2996c268-f7f7-4b66-be85-773a349d1fa9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12a6ac5-8168-4110-a08a-77fc9e66dd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cca1463-aa3d-40f0-a44a-27f2c1c5e981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e234550-7b7d-4e8e-b0cf-af8b470fb09e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3336eb4b-48a8-4480-9eb1-5eaf8334c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51e21930-9498-454d-b90a-0f91ef07b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307a0191-e996-4426-a1eb-11f794a3bea7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54645eab-79cf-4633-86f9-2fe8d8b77885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70ac5e8a-16a1-4013-ad8b-0bb146302240"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bc4ea80-8f25-4e01-93b8-1503d74f7d74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9c54f47-ee31-4ce5-a519-887d7f1c2dbf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff686a78-12d5-44c9-9a4f-0e2428c28b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "957a3f20-40bb-4ff4-9108-6808d55327a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15add927-8cf8-4b4a-aa54-ce6b17613986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2733ab1-e650-417b-bbf0-3eb444f27bd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b959d37-3d35-4542-aabd-7c42b1b11f1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e4d6ea5-ec2f-4916-ba80-e1b933a284c6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53b30b8f-a2c6-4fc0-9d7f-9dc405550416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "da4eb55f-4717-4af6-8fe9-eb6971be9c63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dde6b108-b7f6-4c04-b1e0-61faeb66f89c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1590da64-4c4c-4598-a6d6-ae31e67b7170"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fdbd43f-4f73-4c55-9f33-397bd6c56901",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e353c16d-a58a-4742-9688-9bf6692c2c61"
            }
          }
        ]
      },
      {
        "id": "ebf69219-1759-4a71-9fb5-af0bfbc63cd3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99a3e431-be72-4c08-a0f0-e00d65590a72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e66736f-7ab3-4a49-b11f-3e4bfa0e651b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "05e62eaf-4fd2-425d-89fc-f50a58b54df2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d2217-3148-4d26-9937-a0c9d3828c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b00b5e-ab7d-4079-b044-cc480fd00cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c33f06-78dc-42d0-99b9-86da6bb4f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7121521-001c-44bf-8e99-a4b8c3cba4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8c8901-a2f7-44cd-b71d-15a6f2d5ff83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f93e0c0-12f0-4cd0-b93e-235280955503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3adee8-0584-4ca4-81da-00f6046e6b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e793e-7edc-4c6d-a4be-b400449cce6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52df9ffe-7c6d-4df1-b8e3-385f0992fd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fc9a2a-0e3a-401c-ad54-9178b23069b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23279f38-2562-49c5-922a-e038765ed26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36ce9b1-c8dd-4d03-9718-de90d1f8fce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437db0ba-0ef5-4871-b795-db0ae9e95cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986be5b9-54eb-4932-b3b2-1f0248eb0639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db88c900-8c87-438a-ab61-8722eac1eb30",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014832f6-bb39-44aa-92c1-4eb7d28697fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca3a4f5-af92-4dd2-842c-ec47ae334a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd87ed8d-f52e-49e6-a5fe-1639ca033f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b727d9e9-6d14-42a3-8b0d-fb4e19d7acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f75277-f3b4-41d2-b818-24577a8923b1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28ebf0-6c93-479e-a41b-f8331acee890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d1fa43-4e0a-4e1c-ba62-fd54d5be504f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7037d8a-9414-4bc6-9680-6f38ba48cc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47687628-33e8-4099-b8f3-3d88bdab1bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2863cf6-d312-49fb-b09f-c1a7a59797a7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c978d539-c6f1-4fb6-88e3-d47996715ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f469f44e-3dc8-4b7b-b46a-9aed0c9da449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8017f70b-41c0-422e-8847-e0269facdf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7fe3e2b-a34f-4558-86d4-fb23b4ce8e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493202dd-ac83-4bc8-acbd-001207f0cd9c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50be1d7-a1e5-4ab8-b5f3-95ff82a8b23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b93596a-15ab-469d-b147-9d670e3019ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1c0d5f-84da-4b7c-bf87-3e516a651faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5bca92-02e9-477b-a93d-daf3fa43dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477c6d9a-8e00-4590-b264-11719986027e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c3c9b6-6838-4243-b12f-44e0a93d6ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b469e0b-a2de-4c7d-aeb7-a983d062c97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c6d3df-3fb7-4f05-b5c5-6afd5f76ab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae74fad7-da65-40b9-b7db-6726880a92f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c1622-38a0-46aa-b9ff-dab7d56125d7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ede06d-86a3-420f-ae38-a287367f92ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c736d865-360f-4589-83a1-afde9f6601c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c88c0ea-3db9-41a4-9c40-fd93a9b47cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "236e17b8-f19c-4df6-840b-0b23a60301e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7493014-b5ba-4558-8cd1-4ff82b3c9d1b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34cc924-0aad-48c9-b2c4-224ce3187cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546b3da3-38a4-40f4-a16b-a244e1e89dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74165e6-fce1-4abf-9b1c-9c6082946165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f366c25-9df6-44be-b38f-fff60bb578fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950e05a1-3353-4cf0-9e39-36586290ed20",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a291cc-882f-4afb-98ca-a811f13ba702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63fdd4a-86c3-4beb-b35c-eaafc1b9cece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c9077b-7367-4a33-bb7f-eb995de5e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e94e3f2d-9e6a-4faa-a019-26b68b1e9558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c059172-4c50-4135-b3c5-c0c7d1e0a2b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc9c1da-0014-4596-a4e5-c2c28b505418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80074291-8e53-46c3-a0aa-7d9f7c1e6ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ec00e1-391d-48b0-94e9-604b7447aea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df7e79a3-b2b6-47a8-974f-a60b8a3c161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03711e67-6c75-45a0-84c4-9384ee779337",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49265c99-04f4-406f-9aea-98539334e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64baedd-9c4a-4b1d-9c7f-f9b1bf83b6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ce3067-3a4c-41e8-9375-fc091f8aa467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a03614-bc4b-456d-8674-124963065f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55080af0-3fff-41bf-8018-9dab972676d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf20fc7-3936-4a42-9af3-d2abd3281c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa61553f-5b71-47bb-8bef-309a8d223846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd6c34d-de6e-4c96-b456-5a4bd2a40448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18a60ee7-2e7e-45d0-8372-962f282742c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1480df0-b441-4bab-9971-86be4cbf79f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d74c39-e188-49ba-a5f0-e9f7e4ad9e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b0b5e-d521-4203-87fb-4e15237dfe65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493a910d-b167-474d-8d54-bb7f5d3771dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5477e926-5f37-4d93-bc61-a8a392fade6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26102a5-bd53-4489-9a25-5ad9ea4c23f0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117d61a5-ea9f-4bab-8f59-ad2840612ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0e1b3c-02ee-4f57-8a60-3ecda7b8b635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683fdaa9-008b-4016-aa4f-33674a13cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12068102-482e-4b00-b959-794cf91c6c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd92e4-3c20-4e04-9a3e-458e218a040e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982e7c1e-5e50-40f2-bd32-ce1846736655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22728aee-1d2b-4aa6-a258-1d4fab0c29b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5a7880-d88b-4e83-8643-f7bb84d80c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58445af3-6a13-4657-b740-2f6148240398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c44999-2d52-439d-8187-1a9688548a3d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70188f1-2780-4861-aaab-c4d8b6f076c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5719af8b-37b3-4ae3-9479-95993372f9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1cd719-454d-4c5d-9696-b092ff968eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "775032c3-a741-4bda-9a85-87d57b1e40f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fcf6c9-127d-4446-8444-d9cebc5b07c8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b210923-6cbd-4437-bd94-ecd2aef484b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2068cea7-f10e-4632-be12-bf74a93d3d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e62116-f62f-480c-b71a-c34aa007eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8608a1-0602-4efe-bbbf-0edf880c526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ef59a6-7be9-4b49-97b1-00e1e4c16a97",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e20f10d-9328-43b4-94ae-034b3b1a46f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535435fd-9fbf-437e-9522-c481fc2def94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4409143-f511-498d-a3b8-f151c7de434b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9585d3b3-3f1d-4b11-907a-7a7c1e88d033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9dcef8-f88d-4a38-8ffe-4cc9299a2264",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03abb398-c471-42c2-bd90-651565484be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495a044d-dd0b-4680-ab64-749a6212c23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a343ec78-c80d-42e3-bfae-6bf043fce5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df635aa-8e43-434a-961e-e0b45b3a0a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929d0896-625f-41a8-8bb8-a272d4f2d9fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4b8669-24e2-4c58-ba2d-52fc2cef3317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00d9a4a-5f46-4576-a6d6-51b8dec9af10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece5542-6e9d-4fce-b91c-bb0a8652a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09ff693-568f-40fb-bcb3-59893742ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc62f505-458d-4662-8936-76b179b6a8d0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da70a7e5-e276-4d95-9ded-e8b4f9e08e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c0e5e4-7da7-43d3-b2cd-42e0aeba22e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ff7cf-c7a8-4b7b-aada-88b63ee16bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b93a494-cd04-4aea-a8ed-a64167fc1149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b30df5-464e-447b-b62c-371ed25a8dd4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba97669c-5750-4871-b9bf-47846c20c995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec5d6cb-5713-45c2-b73a-0acef13f9381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8298a-ffa9-4fb1-a87a-2e5499e4c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f9e458-4c00-4e06-82db-9c945c57cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e82da-d992-42f9-8a87-d3e62b446791",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c057831-841b-4a6a-aad4-de7a6f83b920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c62872d-5266-4fce-9a05-37062f1c290f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a201550-7654-4ff8-8df6-bf56d2264096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbaa47a-b703-43bf-a65e-54f4b8c15623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdd8393-0355-4460-804f-28131a5245a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99cbce3-c067-4752-bb34-fff82cb0fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4088d273-d5cc-46ae-bc8a-ec5c2496e943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bba4e6-55e9-4d33-a953-b18b38315fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "558cb2ce-29c9-4c45-95b1-fd8692c892c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce20ae01-e85e-4121-9c4e-d995c5d277f0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0785e31d-7281-4987-9801-4e71f1debff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a7837c-daed-457c-a228-c9a7f1b05a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c3dd2e-f05b-4a90-ad54-eb8ee210bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4805b4c6-5a60-442f-a548-ef70ecc6d4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce02301-dcce-4c02-8741-6c453117883a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d49e81-f627-4fa9-a65d-4c23aef6afe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafb181b-f731-4150-973a-e2d7040248c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abb037c-b1ec-4e6c-858f-d1e4b91fbe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcecfccb-8241-4c08-840a-ee8b6f2542d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757084db-a900-48cc-b751-fab2ef386115",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5134934-fd11-4e8b-8e70-070c338155fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fcc8e3-a8ee-4617-b906-87626d82d557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cca1c62-ea88-4de1-b113-b496d33ea341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5cf516-442b-4167-b823-30d73c2752cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc52a1fc-e687-42f7-93b9-80f1a33b8706",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe90351-9e01-484e-966b-bfb595c55ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59146697-3912-4ccd-91f9-91e1723f1b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de212c2-b229-40a0-92c2-6c5e1cffb1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b857ffa0-63b8-40a3-b5c5-8ded93852485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f132e559-cc9e-400a-b8cc-5c851c90ff96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c234b721-4ce8-479f-ade4-65ece58231d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425c507c-0273-49dd-a352-fe5719bf2eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b01200-9242-4d8c-8e6a-a23504b0cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4120043d-2d89-4f42-890a-d1f57cfe1b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6caf872-a15e-47ac-bb1b-7f2b0d5de998",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b666d96-3f96-47a7-a92e-5f718a49f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c923f67d-9478-4e49-b212-819ffac835fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3095b81d-06bb-4411-ad6c-9d3f00aebf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88cbd66e-2c3d-4aad-ad8a-2cb8df97d52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe73109-ecf8-40ae-890a-ae36fa940a36",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501e7176-0b3a-440c-8428-09f2ae22d2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda3236b-9c56-464e-bb38-7e728cdbcbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65b459-c160-4837-ac07-133a6219294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ff890a-7dd8-4700-89aa-c735df03f5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2163a924-32af-47be-bc58-f2e8841b59ce",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ba31c-a68b-42c6-a656-2f574271ee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a091d3-835e-4707-a176-c80bdcaaedfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529e8a7-40b8-4437-98f3-a4ee75f2072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dc96e9-e208-4533-9a0d-ead0ebfb431c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ac3c4-ea9f-4a67-a12f-4e8c6bacf331",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b8158-ca39-4c41-8dff-a139082758de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35caa82b-f163-4020-8426-bb6821826f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4832aa76-6407-4fa9-a15f-0b4e09f2c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "016d13f7-dbb7-4667-b770-498549e122ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9ce6f7-1cdc-4492-8a80-9f97405979fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3630bfc-5b74-4d9a-9837-5acfccb8ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50658bbe-ce15-4f5c-a165-52d273f32384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c05ada2-c812-4599-9b18-355edd8a6643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec296d6-256b-429f-8fa7-cb4da3f9280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a16b9-03b5-417e-8d14-6c6799bb7316",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491fc27-b84f-45a4-a071-9ddd783c126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccc0d98-cde1-4c4b-a78e-a04b447a6339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4f9375-8df0-4891-826c-2e9e7fe04212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e13ab7-a1fb-40da-8c1e-c6eeb2228a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18f6f71-9e54-4894-9b82-fde48d7cbcfa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e0ae2-b8f7-4a06-981a-f8915cd5f499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d270148-ede1-4997-ada3-878b7493ff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de82195b-d513-4559-a8a6-9a21967daeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a58340f-d042-4156-991f-a990d4af3f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580c2c57-0312-444d-ba07-b708b777adb1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ac15a0-9976-4e2f-829c-a473190fb361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ca68c7-fdf0-4a63-9b52-62bb9d6852eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61163365-b287-4387-a98f-89e6c711a76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b586bf-88b5-4299-b07b-49dc29b3fed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1b8a19-5059-466f-9153-12cd1160b8d5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11675f92-73db-4570-892c-493c5de4e683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a9b0b2-03be-43ce-a95a-8bf918374403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8eb3db-5266-4a3d-97c6-38ee2d5071b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "678c1cbf-b0a6-465a-8400-939fa5dfd75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cfa976-4ae6-4a33-a667-9141682a3d34",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de5fa14-324d-49b6-b654-7184a38530e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04085b8-75c4-4af3-9f68-8921b1c619fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9afa43-cf3f-4473-9d82-005e9ab9ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4509856-bfdf-4240-b285-0081d15ea565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277c4d25-1404-45ab-a53a-4983216190c5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b343a7e-1064-4ab4-9551-27fe8ef9bbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284b74e3-e548-4019-ba7f-1ac872868944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c8304-87f5-488e-957c-5a037737395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b2de85e4-e388-47b0-a8dc-bb6acfb46b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f49ca5-4aae-43e2-b9eb-3596a30adcb5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4837f-0296-41f9-b7ea-b5763ca3345b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a6aa62-2bcb-4afa-807f-398f94c880de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313b15d0-7197-4970-92f6-3687aaf96af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76d116e5-f8ca-4804-8213-20774eac2a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068c3005-aba9-4cac-9892-c613e2a0b6da",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859c01fb-9d7c-41d6-96aa-30f6e9aeb63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d85f9d2-19eb-4c44-b4fd-13c0359afd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80984c49-b696-44c7-979f-a893808afc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac534c3-d28c-4ebb-8a44-8661309d3d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03e0bbc-81e3-4f82-b09e-2cf61664937d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ee941-2fdc-4e3a-8fbc-3c5703aab6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4b983a-2f95-42e0-ada2-33a02f3e0add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b469727a-de62-4216-9204-50320a7a9b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e986499-657d-43e6-bc6d-7fbb3287f8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27926ff-0ff0-499d-aa13-3be07a41d331",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91fb7d6-0e09-4567-addb-844deef95f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cb7a36-efdf-45fc-b446-c834fc4dd5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efa34e0-f4bd-4bb0-9f25-548f7794bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "112888d8-4b6c-46f4-9134-02a8bd7c0a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505fba4-66c7-4294-8435-a8dcaaaa5239",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a53466f-ade8-4503-8c3f-e0e29c4080dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5c7b0f-1332-4ed0-9de0-76cf1e0a29d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd818b-a1d4-4b08-b1cc-89ebd5acc724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c0db92-9200-4181-936c-e14b2864ec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e834c841-4fd3-410a-a51d-d40a5b1ba614",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e45311c-cd36-4d4e-981b-c204ef02160a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824c0213-8193-4eb5-98bc-35fb9e9ea36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24816e1-ee93-4663-a970-fa17215bc53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a26ec32-4d94-49ca-9c62-1ff5ceaf8d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55256f37-2cd8-4a02-84f2-91d80a7c5518",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dfc367-399d-4099-b0c4-32ab3125a49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5b5d1e-b2b7-49ab-b974-378a63154ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c1b1c2-ff3c-4086-9876-24d1c7b83151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1524853-ac08-4bc8-83cf-6c2fcd836520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5e79c7-cff0-4114-a55d-b4f0c3b093c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e50222-5aad-49d7-b2ff-cab629b54c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b8f7ff-dffb-4e83-848a-ffa59acbd4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6905ce0-1b92-4daa-9eac-15dce7470c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "014dd039-a7e5-4c44-97ef-c95272f7f8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb2154c-9f2f-4228-a04f-aaa314627d39",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8e0761-36da-4c96-970d-8eb37749b73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c00e1e4-2b68-4301-b542-1de3dc5ea795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8462cc-ee5a-4aec-83df-2d63bd143011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac8043f-f206-4d6f-94db-68716c987086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eb9209-628c-4ee6-bc01-729ce3ed1b43",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865872cb-0584-4e2f-a5e6-3902f4ba66cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e10096-3c42-4027-be93-06a77723d659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4b935b-07ba-4f16-b158-3395e3c30586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dc83b6-ca3e-4ac9-add1-510be3edd2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d97f75b-d884-40d6-b5d0-0a23d0b6f50e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392feeb1-d7ed-44ec-9bba-c3a60d75c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baa14b9-2034-480f-8da8-60c7f1bd0d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965a3bf9-1e38-4742-aac4-2b0dd9e199f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ced454-ef67-4b16-a01b-9dea69da265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdf7c54-3fad-4eee-917a-7a6a8c0290cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213f51ec-d1c5-4e1f-b9ed-985879d9442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8c3e2-c081-4838-a9bc-d642600b97ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3673c0-9f1c-46c8-8100-5df5e0519f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd45aed9-ab65-4e8e-ad58-2276275e9d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6d6295-c02f-44c2-bc89-8877080f98e6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f148b-9895-42f8-812c-3cd2a7ce768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5979a9-1b58-4971-bb87-aa52ee746854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef5ac6-a1b9-4ba6-800a-6a85cd9b8de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7290abf4-36db-41f7-b8b5-aaaad2e69ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d5a1f-b5f1-4575-bf4b-eaccea495fd1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a7dbec-d06b-4ac6-9c13-7ca6ac8955a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f621c522-30a1-478e-b7f2-af3880b12ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc2e64a-0a14-4f5f-9521-35b76bfebd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aea0a48c-0a57-4cd6-99de-f54fb143f934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee693cec-906d-44a7-b085-94bccb61721c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91d8b6-806f-441f-96be-24b39d6dfa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7797910-8fd7-4010-8eca-e0239f1efaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d928d968-b4f8-4c3c-a680-a4b8c0dbcbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "042a4b4e-c8d7-4ebc-8306-0d9f8f062480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f8f6b-2549-45bb-884f-f273e3c92f18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb9330c-cc85-4dc0-a3f3-a3e3b4be0a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeae7de8-9aa2-4f19-aabb-b9bc0262f650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f4327b-7842-4be7-a615-0f236638cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f0640d-f79f-450a-ad9c-cb15bcf6bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f59d28c-d614-41af-9159-42501f4cfb85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaab7fd-c525-486f-9515-1e70abfc8949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8175a48d-f51c-4eb9-b4cd-501bf5de9d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc662f6-68fc-4f54-99c2-8b6cad1bea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1851a87b-d4d1-4eea-8ca9-ce25e4334e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09829359-06d8-409f-bb15-9cdab35d2f05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ade315-47cd-49ba-870f-881d4913b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ae0604-c1ed-4120-9737-2f91d5b268c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2617ce2b-611a-4752-922d-9ecb2c515ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c44dab55-62cc-4058-ba69-069f99600811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24910f8f-cb74-424d-ac34-aa0e66e68f63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51de7d43-104d-4f1a-be41-fa3fe04945b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455e3f5d-4833-4044-a33f-d8e462fb79c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb8af05-17e5-4a32-8864-d130acaac4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3113e890-379f-4691-a849-1466c75a3cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98389d3f-1417-4f26-b46b-b2eb3f6124fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3678363a-8ae8-43ce-9b51-539c74b0aa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7965332a-5007-47de-b1b3-2e98bf1a5b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ed48d-28a5-4ce8-95d7-ac0679104f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c0204a-05e4-49c3-8ecd-a44276b8da92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9117eafa-f399-4d03-9c62-d7fbda1e4079",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72de4c58-68ee-44ac-b009-3efa22d41176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a1a97b-c1ed-4f53-a902-42e192067a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b789f651-bc8d-483c-8d24-c92ffe3cef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01ddf0f-33e1-4a31-90c7-3b0a5d6b766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee824e-2748-43ed-9b90-e456c1104d37",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de19ff4-3f2a-4c0c-9b0f-0618c16f7bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3315532f-5853-4f70-9123-4b32cc4ddac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a6c6b-724c-4d21-98aa-1e776848aaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8feccb-29cc-4e70-9649-55a41c41152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effabc22-d207-462e-9128-f739d9c9378c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0892fb-a570-4ce6-b5e4-b91b24f04b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1db348-dc4d-4219-81de-d0ad1516ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fe4d17-d71d-4c0f-9c6c-eb2d98bd6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1f55a5-1239-43cb-acbb-93c39a4bc277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544f861b-27dc-413d-875f-d594db3f6299",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c0c2e-54ae-4de7-aff7-680b03658d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ade0370-bcae-44a0-98a7-7c306371fd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7dbdd-4898-455b-9299-8f4cfd93becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13bada37-9157-4310-bdfc-2cee3aa8641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5919d1f9-d712-438d-9628-3339c5811d38",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d57a50-41b7-4803-9236-07db23a2fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4172af-c1fb-4cfa-a28f-c379fbd5b254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c25a76-addc-4d9f-b8cb-8d80f660a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "547458cc-7afc-4f4f-a745-30f4398a3c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb535ea-497d-48f7-99c1-58717787efec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e1e28a-951e-468e-828c-ec5794f59021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc923bf-d353-456c-9cae-a71de1dfe0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae0b3dc-e21a-490e-8f9f-ed385db8154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e94758-84bc-44c1-8794-efb18d4cdffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524c86c5-44e8-4c47-bfaf-8618cfae6c58",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dea536-7f86-427b-ae6c-398999a04fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf276fd-6472-4ae0-ab23-6cc89b8337f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f63cb2-6d47-4a09-bc6d-c65e5511830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d565220-45e3-4428-bc79-7b39b5ff51ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e924fe4-bbe0-4c87-8f12-51e7cf9c0353",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28555191-4d93-4f8d-8f8a-5809e5c415b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dbb400-3891-489b-b65f-5acb7031be94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3328b0-95e7-47a1-a16d-28814c6d45db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2814495-5b2f-4c3b-aabb-ea45a02d3f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55235c15-768a-4de1-bf2e-2c98ef14ff80",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c437ef-bd1c-49ae-8ba3-9d1c3bf32a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9c5137-5255-47c0-9374-2ffa8bb8e8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04e9852-9196-45e9-a34a-30c68c8c5950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0941f940-9166-4b60-9a69-4f4328c69f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7420331-130f-4c9f-9a4f-a57958ce2961",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6599398a-5738-461f-a43f-30b982dae4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3f4e77-e6b1-40ac-a15a-8c74437867a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5541e575-b277-42a6-91ba-aa42b8a292ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5565fab4-c72e-476f-8970-8cf7637f0927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e1fbf2-b757-4199-b947-fcd47378067c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6966d88-6984-48c5-af66-726de80742f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e8d55d-e0f7-4fec-934f-801d9546077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06461b1-0e73-44c1-b441-d166e637e6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b57ea91-3643-40e5-ad29-bb491c64a3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e854ed-1b5c-4405-96e1-ecd5377799dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81692f98-2c23-49cf-8fa7-312f2428f438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f4d1cc-5e2a-4300-9c2b-ecb1b4e52dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897c696b-61f3-4b0a-8797-bcf94e8116bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47abc828-e0be-44f2-980a-724bab18a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fbf586-0dda-4b2d-8342-9c52085f1334",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568c933-ab39-46e9-9c88-54d2c192ee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f711398a-cf43-4ad6-860a-bfa4f99f2e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da22802c-7e38-414c-9f71-937b4df5bd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d53a488-5bc9-4394-8b0b-3a6b59d3600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0516cd-206c-4d44-bf2e-ff1b1c2bba1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b75df-8cc0-4468-bf7a-986b88896ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160b5e33-5b7e-46d1-a5da-c3cf5e55c118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0950a2-067b-408e-b272-d0b72aff915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2829140c-ff71-4340-9441-b6537de70dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6760591-e776-4783-90e0-de424c03aa1d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91e08fc-562e-4bec-8efa-92aecbdd503c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120981fd-f04e-4dc2-8e02-f72bf6a48ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b66f7e5-d72b-443e-ade6-e7dd5f42f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "698f6d5c-ceec-480e-b899-65aebe23932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422ff421-f364-4fcf-a7a0-b7f5bb04cf73",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98030148-7337-4f06-8cc8-ff34a889d35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411f8799-ff3f-4673-8454-1613c7b9cf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28817a0-ea2c-4a08-bf8e-f0ac2d918b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5a5199-0bc6-4b70-a266-1e655a2ea6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c074f0-cb24-41b2-90ac-6d13b5f84bfc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d56a9a-5a28-4e6e-b557-ac472a547ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af9010c-ea9c-40d8-8e5b-e908d5cf7cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd74cdd1-fe9e-4f1e-8db1-a99337a96b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33e92c71-5ddd-4549-a3d3-0a4136635f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc270984-4089-4ba9-92fe-3b528d8a2bf9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d226d9-91b4-4d61-8c31-9d3195115e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307eae81-86e2-4f8d-af94-0f909bf1d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a1b392-7d4c-4c3c-81b1-e6af4829c2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f674143a-ddcc-4487-901c-cd5d8187db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9bdaa-845b-468d-94ee-ca0dcad5f02e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a59b09-be02-4656-a3d4-00522d4edccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d8900a-35f4-4ece-9743-def4ac3dffaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5ad808-e79a-410c-8261-91f031a07fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35380552-2534-41c7-aa1c-30e1463b7b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba34c58-f832-41b7-8d07-c6b71bec1b7d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bdf9fb-9736-4cfa-8ec0-1d045db18c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eee6da8-d843-4ce4-a0db-4b6f563c1644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e037280f-4ea3-402d-abee-e9fc3daf5efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d86436-fd46-4cd8-ab34-ab6117b0eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1811508c-1894-4c24-a123-134f50cd2994",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1745a958-d0eb-4cbc-88c0-d1ec9e60704e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43945793-878b-47c5-b8ff-9d2c757f30d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce2e01f-9b4e-4ba9-876e-3436eed7c209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f772b1f-4943-4ad1-b663-46428546c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05616ab-6a63-4f1a-80bd-0f15d9e52ea2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d217280f-58ea-431f-b70b-41179f7589a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2d9c39-e571-4259-9932-1947c259dc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054dafba-ff61-447f-b1ca-7d67cba25bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9005b8ea-39ed-493d-9543-6bb4799fdb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739e0d4b-18d2-4360-bcaa-fa20b553d917",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c4c89-628f-4096-99bf-5f13c47aa78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ba57b0-f335-4a8d-8170-d8dcdf97ca1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331785f0-3566-45a9-a65a-184d159b2c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16ad6bca-98c2-4b23-a2e4-cc60317fb63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0a301b-c512-4dc8-92e7-a86dc0c827c2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b3bada-dbdc-49bd-9d42-0a72c994e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cd01ac-fa51-4cfa-8090-64ec4e296312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1073c4-d05a-40f9-9ba9-99320d3bb940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f4cc69-535a-4d20-b1ff-d20cfe236edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ac0911-918d-41c8-bf47-1f47776aaceb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caa2e96-e140-4f15-8ca0-f17e3ce4c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7b3140-d5a9-4ccb-b93b-80578aabc5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fadd12-e689-4cb1-9198-3f699c66d2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e24479a6-94c5-46a0-8ee7-1f2f1ba08b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79126fe0-d8d7-47a4-b681-98c0b299c8e2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d80d0b-1c3b-406b-acea-48f8fbfbb74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405e6248-5620-4ec5-9003-c8f29b35e252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118e34c-33e8-4775-a2c4-67ce93bcc0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa6731c-b4e9-4c5f-bb52-a73f2c58da3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00649b1-02b9-4632-9b87-7799c219a917",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45917a8-b11d-4051-ac96-a132973cbcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6218e1-d64a-49c1-ae3d-ee9a85d64911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55db2fce-eed0-403e-9252-0a11f9256f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "769b5df2-d687-4fae-bb14-eda8ea9151a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f749fbaa-546c-4c74-a477-ea14547f7afa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896736cd-1979-4dd5-9b03-0cd2f4953a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2ea0e7-dad4-40cd-8b8e-83410c72ca70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df41232f-bed9-4342-a1e0-dfbd9e07ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db4385f5-91a9-4296-9979-c46b5e9cb421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250ea61e-bd26-4a21-a97f-951c3a1786c9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d76e2-3765-4c51-93de-ea3eb8bae83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbac5cce-494e-4481-a52b-1f003658b4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1554b2c-ae75-43fe-b183-f71778d2e411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8dc35f-1796-44e0-abc6-9ecae97a0bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c5fede-4f99-4e2f-9fe8-381f1d6d922a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b896ec4-8923-4c7d-92e2-b0ee67bc5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38025b2d-e468-4087-9dca-f960d44b01ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a65ae5e-142e-4a38-8dec-b2e7544571f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38ae4989-6ba7-4d2e-b975-a35682fca3b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbea6e34-9b6e-46a9-8cd4-e63b69dc1d6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac868c5c-7927-4c39-a357-201e91a14fbc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be71ff32-b8ef-44cf-a3bd-32568a96c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c9bd4ba-eedf-430c-96ce-fa2fe8a1e381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7766841-4c76-4faa-aa25-8fda29271251",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c140c308-a6a3-433e-8126-3913c5a027c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d6f9d15-df9a-4ca7-9eee-7207fb28e255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6522cef7-1672-43d5-8df2-d6e87c93c956"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "927f0b75-5b29-4f08-b5d4-87f515b909e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7d758a0-74ad-4b37-9958-bc82f3b42aa2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef1d26bc-8e86-4068-8fb9-fbcd4bef98ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f04f906b-460e-4b13-af17-f70a15add120"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b425b056-d2f6-4b12-8b5f-0bdace112e6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc9f5c25-041f-461e-b025-a15eaddb268e"
                }
              }
            ]
          },
          {
            "id": "130568bb-6f70-43fd-b7a8-82b2dcd69fbc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c432e91-69ba-4882-8b5d-ec002f09d344",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ab3021b8-7e38-4667-8d9d-59f7ae1ca8e6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb6ee5a-c605-4395-accf-c23938b2e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "88fbda30-791b-46aa-8461-61f6855a33e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d38680-9cf4-4d58-8e10-2126209393c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd0cee9-8208-42f5-94f6-4cc38a9c8528"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "091df7b0-17ee-42c4-9cd2-b3ead3ccce9a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "555ab6bd-0536-4d30-91e5-204413627157",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab913f83-226c-483c-9321-298c9bf8d367"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac19cfbb-55be-4bb4-951c-6cd06cdf9656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "602fdd6d-9e66-4899-a2b6-83b8cc51ffe8"
                    }
                  }
                ]
              },
              {
                "id": "a9d9428f-8527-44b8-8216-332483db1114",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac721e1e-5d9b-4a87-8ccb-0ced86762a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2534a0cb-0450-4378-8500-2901b9e6a3c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "312201ea-7180-4efb-bc90-7c51f3385a31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77a16d14-e395-43de-b331-8d1842dd3744"
                    }
                  }
                ]
              },
              {
                "id": "d6e976ef-c9b4-47ae-b1a1-bd8bfa850766",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "075a7cbf-e9d3-4a48-8429-217afdeefcac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "371b53df-398f-401c-b296-e631d88ac372"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7666a7c1-7333-4fd8-8d1c-d8396b4fb404",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "793302e9-0389-4237-b015-fa509c856f76"
                    }
                  }
                ]
              },
              {
                "id": "aa0ae85d-8e29-4ebd-824c-30296e35a4bb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef7501f4-0d4f-42ab-830f-28173e877464",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e68ef8a4-13cb-4dc3-b889-b149d12e07fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cd97bd3-210c-4e43-ae85-cc803a97ceb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe092faf-634a-4870-9fb5-8a4ce56c1f6f"
                    }
                  }
                ]
              },
              {
                "id": "a832856c-a84a-4413-901b-49699d487a7d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "244e5a12-2aeb-4e40-93c7-5b618052b5ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "130584ff-ea5c-435c-925a-469e9aa3e1ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b50fc3-1c0e-4d4d-accf-88a7e5c6ea82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "57b1ac2c-36e5-4a92-8274-6ad174976641"
                    }
                  }
                ]
              },
              {
                "id": "f982246d-8432-4584-8879-55cb69ce7d3c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3011b89a-2cae-47d8-b342-26b8f4f83c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "084c3ad3-f218-4729-81b0-f080ab60193a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a11a4bb1-1e6c-420a-bdf2-48269bf8db98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f64b12b-5bb5-41f6-b41b-eb406a463add"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8581eef-0116-45a0-9090-88ed047ea9d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82a58434-487a-4200-aa7a-8541aed4cc14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5f08faf-cb97-4645-8117-5da6a6d12aea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "415bf72b-7ff7-45c8-9ae1-4f3de49ec5cf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bc47668-a4ec-4d9e-816b-e5e6f67a74e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f1e804a-4711-46e7-b1ab-582ef45350c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11d4756d-2b9b-461a-bad5-1241dc44ef80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef9030da-987f-4167-9b1c-24b70c0af2af"
            }
          }
        ]
      },
      {
        "id": "da4b05a4-cd67-4a65-9ecb-0706da76655a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1fcfaa05-3c45-4832-8d74-0bd8340e4dc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d91ac133-3d4b-4e17-93cd-73cead9188a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c531b090-625e-4495-8060-9a785e454af2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7bd535-809d-4d8f-a79d-6ed6e116a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb89f71-0557-44be-aeb2-c7b06415a2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec908615-4a9c-409e-bdf6-46e3520ec32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a4e744-5a3c-4952-81d3-260824977632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87406241-7d8a-4b0b-b705-fd0b9eb3aa29",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702a66f2-c465-4996-a67e-f4d4b17b13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dcb621-96e7-472a-82aa-284cd7ea4103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d2dc04-be01-4c98-8620-e34a91526918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9deabb15-bd5f-4611-acbb-ef283e45e062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313764bc-844a-4508-b735-debd6cbd34a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85b9e91-8bbd-447b-bb08-a6a619447aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9ffb56-e0c4-42ec-b37b-b67cd7c27fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4a6c6-a9b8-4645-95c4-7464713c4d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f626550-4944-44d1-b4f4-f295b865eab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5649ea8f-ab2f-4f5b-9fc4-1b93dca4d9e6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1d57e9-c3b2-4298-9f00-ec3dd02b5ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30e034c-e68c-4054-a627-049353e2c0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe97b549-8c8c-4d3f-bfc1-ab8952dc93ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "815e8492-6f58-4466-9933-e8c90f47f4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd0f85c-33f2-4ee7-9aa9-48c724f18dac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01293480-43f0-4455-b3da-20fe1ed59127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34840b0a-7359-4252-a964-d5b5536dc5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dd81ca-46ed-43d5-bb42-e5ae1c658e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f846eb-9c8e-4f8a-89eb-f99575456ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181f78f2-b78c-4246-9205-175567894fa8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8afcaa1-5b72-4ce2-9a20-7781e9856c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbbb5c1-0358-48ce-976b-0b975bfb16f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84056181-609f-49cd-9def-a3483dd4b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6860e-de0f-44ff-9619-a9dde493e7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a884c8-e3fa-4adc-aa3c-6e2549245a18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa4f68c-4275-4f6f-9e5a-57914bf6245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f1ec39-a79b-4068-a3bf-36f1599af091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93474ebc-88c6-415f-a1f3-09615ebf550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5befd7-7bf0-4ca6-8295-70f07d127c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2834a9c-9f6f-42b0-8d90-f0a49dffeb08",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92253c5e-c90e-4b5d-b5ac-e9faf376d723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be618fbf-9b2e-46bf-8b8c-053a6abc765b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a97e4e8-7a04-4ea9-a32b-b803893b5a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8010ff-ee74-47ee-a936-55ab5f252eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb68a66-48d7-4ccf-a690-b055015e0530",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a0f00b-e4b3-4a55-8db7-a9fca4864c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dc6baf-ed68-420e-8637-a1477d475b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9eca88-6ddf-44e5-b832-2e4efe9beb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b9825c-fa54-4e73-8327-0b5913a0c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd501efb-ffb3-4c58-84f4-95d900528f86",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14e7f7c-473c-49ec-8374-fb2dcb9c92d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc0ee9-8b93-4a16-9822-288c6429e8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9342e1fa-4088-45cc-8b5d-d08b42a7e414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "331db3c4-4a7a-4bb1-8691-6893fd621df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e68e881-02ce-4bc9-81b1-f1855e35db6f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879a58cf-512b-444c-8eef-212c4632414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68781b6-619c-48a0-9b1c-235e389f3507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50114303-5b50-471e-abe3-fdd2fc643c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0db01ad6-4458-44c8-90da-366f97a79c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b938e818-ca0c-4b84-9d19-e2e17d5db736",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b98d7af-c692-424d-b632-102cc9e524fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d622320-cf95-4b43-928f-003ad13b208c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee5d8d-84d0-4730-a2db-7ca259294e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75ab34f9-0f22-410f-9072-055cd8d2b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2642b8f-387e-41e3-ba85-ccbafa412aba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ee0d87-e711-4ca6-888b-8abca03674cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84135827-e8a5-49ab-a2be-c9e2cbe962cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ead39fd-fe08-4893-a6bf-3c25dee59f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff99d43-dc52-4db2-ab7f-83bd935eb048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf384ca-3835-4467-9de9-911b97cda6e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fab65b-acaa-4903-9b07-65093960d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3c4f48-4516-45cc-ac00-6e766c50686f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4e2cf8-77cc-4758-858a-02742296dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20a2b6b-dc70-465a-bcd9-7d636b380d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95005285-b950-4e32-8895-7a5ed1ac1bb4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb58e4f-0089-482f-a70e-df31cb330cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e08e6c5-f4e1-4ad4-b2a2-41adcb7333a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c95f4-ad9d-49d7-a327-3c9e74f9cd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "78017627-8825-422f-ae6a-0d876bcfb7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df71cb70-49dc-4a08-89a3-a7e12f48e76f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1652c754-f01b-438f-8751-11652c9641e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d545428d-4573-4b4c-98f5-596a45a3752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e90629-d550-48cc-a329-b674b0bb2c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "72552d48-3602-4e6d-bf6e-b01e78606f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ef2fe7-5c64-4373-8693-24ea37af36c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cdff3e-2d1e-4027-9a30-ccb1dcc967cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9510e0f0-9f55-41a9-b020-e5ba12d31a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0644a21-8a83-4e34-95aa-233180f6c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80da7ec-7636-44f5-8dfd-1a36fb212774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d87854-d324-4164-98bd-2f354c5e12dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a9a734-ce7c-4b7c-9956-2647ac2ee9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a75339-b7cc-4abd-8b36-f7616f747477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e488ee74-6960-4c38-b980-407a8f2fd9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59b35dc-8eb1-4ff1-8d82-63894ac21571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f09500c-1a65-419a-8ffe-451ec42389e7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83dd805-30de-4378-9afe-f03069c495ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f9d8a3-89d8-4c34-b3f1-b3ba41a63f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3086572-974b-4e50-ad41-3e3170592e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f30c93-4ee9-4daf-a6b4-87b3f09bcce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75477213-e230-4dfa-868c-b5c69511572c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d6bcb-6fba-428d-ba95-8b538b34e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d534b66-6179-438d-9fdb-1fb0755bc819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3be313-3e90-4b1b-8189-e2f3cb67f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df86c7d6-063d-4641-83ac-2519e122cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b75ec8c-d469-489a-94eb-2a791b88220c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d683b-b6d0-43ad-b053-ea81c22b4afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae131d5e-3b4d-49ba-88d3-ad1e690daee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4a148d-58e5-4624-a5f8-3de4d7293fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc43b721-9761-4d47-a03b-d42edb7fabd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331049d1-0b88-4e74-b748-bbd35a73d702",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fda7a59-ed90-49a9-a960-e0a3661c76d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03aed6b1-53db-47b9-b015-6fbbbd03f1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f6916f-58ef-4b69-9b7c-6e11428b48d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d84b7f-8975-4b87-8d4f-d199c978c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895d877a-42ff-4cc9-a4d3-19ff027dd0a2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315ee55f-aeca-45f1-af10-84fcde758d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a95945-63e1-46ca-a139-47bb31477a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef080f6a-babb-4f39-817e-aa66bac5d6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86ff9da-4b2a-480b-abed-1a91c763e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c689df-b4c9-465f-b370-b704dd9635a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4af4647-9666-4c7b-9744-61df6c29aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3a51cc-30a5-4a8f-a385-1dc699b05cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087034b4-4638-433c-b877-df89f336392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c27c027-16b8-46a1-8f52-1a2530c6dca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec50f45c-1864-4b17-ba93-6050337751d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438728d1-8e9c-4ae4-b7d0-dfff982cd648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4575f204-8cac-4e0e-b707-13d2772073b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e57013-7dd0-47a2-be7f-5b0444bb514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cef297-515e-4a17-aff8-42ec2fdcee28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d072b1d9-6baa-4756-b845-922c8f961c96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ed305b-ccf5-4f58-a5c7-05abc24a4999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979c9c79-2f55-4c4a-b81b-36a32746fef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcafbd98-79bf-473b-8eb6-511e72deaccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da17ed5-b4d9-4be5-85bf-a60e014fbb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1a787f-936a-4dfc-ae9a-14103e299fde",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bbf038-39c8-4d48-9d62-b3b048688b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9271c4df-bdf3-4cf3-b728-9093a1abcbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4a2922-fd9d-49c2-a497-4970825e0fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a24bca-39a9-4f45-95b4-4d4555238e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09a611b-53e6-41ba-ac61-1d401592d3d4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e00db2-3c03-4c16-b9b8-80bbf873feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8ab526-2923-425c-85de-4a8e1ee7a4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ff342-bc78-42dc-bbcb-237fce02c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b584fcf0-72a0-4c80-a359-324077764a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc9876-06f4-4edf-a353-4eaf773b6b74",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf4388-0dab-437d-8f25-bb319d29d295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbc466-d029-42d9-a4f5-aade4033c28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d5e76-d52e-49bd-8ed9-d618d94942f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659f3d6a-952e-4549-86c6-4bd2b5444042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d0ec47-ef03-4fe7-b4ad-e0abf58d716c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c7dfa6-1ae4-4d45-8ae7-6994fd30f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb86a93a-9673-4284-9cda-fa85fb7f07cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc42b56-9cef-4735-bd1d-cf46c50af5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78346b9-6602-4b2a-bed1-698be6bc07aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651a0f0f-dbbc-446a-9e18-7cbc85e9c494",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19deca9-a35d-4a91-8425-f26b9ce0e7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7743049b-e33c-4da3-8b9d-e3f64d5c2990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3750c6-dd99-4039-8219-8fd941eeb034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2217539c-296b-4b02-bb7d-d1ba6d0d1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146db15-ac69-48e8-be06-0d06cb2adad0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef44d10-f1b1-44f3-b3e9-59c159bc4319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35db886-a311-4d18-9014-178e111588c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fb333a-aec7-44d3-943b-8d80c4041ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "395f4253-9826-472c-ad5e-797e5db52752"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfe43786-85ab-44e1-aa79-74c45f228896",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa50d39c-b4fa-4134-aaab-4fc999ed8bb0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af22307b-98fe-4a0f-aae9-5cd85b066224",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49787341-4403-4e92-ab55-364694a68cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cd2e88-f350-4ed7-9c74-9b9403c67e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a2e0234-c6d7-4226-8ea1-2f82cad3bf16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e8cb409-dfdf-4dec-81b8-b468962b8032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dea86a01-19ae-4814-82f9-a7e01f370f55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "957841e3-c2d0-4c41-a2dd-dcc6a385afcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e651ae2d-9895-4beb-8216-d767275b43db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e9c5048-25e8-43db-a1fd-c7d77e163c50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db9b73cf-c12f-476a-bf01-e72eb535bc70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e85b1ea1-f21e-4b17-879e-986cc4b5d892",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d56b739c-0787-4407-8557-51218bc93120"
            }
          }
        ]
      },
      {
        "id": "15dae371-9b90-40e8-883f-e71f4153e73c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b489fb25-2c61-43a3-9072-2df44f55a57e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21e8a415-5341-483c-a538-6805da29a06f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "146dca1a-5de4-46ac-8193-6e5f0aa5decf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea99139c-8a66-4972-840a-5f0278fd74b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364038e9-8da0-4f8a-94fa-d7c0a24b2055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70076da8-feb3-4911-a0f7-0a034a0509e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e88b51-2f80-4f0f-9a35-09d38d8de4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54404ebd-8e1e-4e14-a1de-fe48835d3af9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64835002-8fca-4ed1-b88c-58566c8868e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b5bd1f-bbd6-40d0-873b-850b5f6628b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c11372-146c-4d48-9688-9844702ac9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99cb400-81bc-46b0-8314-de8be7d62c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea2984-6406-4b08-9937-f4c8875f079e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30066b32-dc2b-4177-a745-51390b7d6647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237e77c7-321f-4419-8b67-26aea1d39086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c30db3-a295-4484-ad93-adcc09d92955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d145bd-76b7-4b8a-a78d-eb2d8be54c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8954ae-9132-4a56-b885-ca6e731bb4e8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0043539c-72d5-4110-9c7a-edf77dd8d313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2bd9b0-bafe-4859-9459-9503d82e5bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6e2acc-ee6b-4aff-9338-6ba698f53fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb4b5fe-d3d8-4185-ae41-a4c498e48094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bd8db7-208a-4160-b3cb-73dd1ea3411f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c685426-691c-427e-a8b6-8620379f67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5904561-6e1f-46ef-b517-de3b2e5a34d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e959ba62-43ef-4c58-8f2e-9d9960b67a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d16ace5-8b9a-4b1f-96b8-7c7e645e0e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0f770d-29de-4cdc-8995-00e9747d2041",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f50c22-1c31-4c96-8530-c3e271cd5f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e2d478-2ac7-49c8-b843-fa8f0e79de65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464b448d-a9f4-428a-b1a4-e9e3088bb784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3f1117-92ea-40da-b232-c4fd2437345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e743da-47e5-487d-8275-f22d578a6384",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447c02d-1d2a-4830-8b73-a9d63b28bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8ed1bf-236a-4c03-9695-2cf8e131c4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668a7f1-6482-407e-aa49-b41104188b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8e3436-2bc8-4668-bae3-247c50ab7f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5673e5-21f0-4291-99c9-a4cbc1fb0304",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993b9f6b-20a3-4cc0-b7cb-87f78f1c141d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1379da59-c8d6-433b-9cbe-2e9d2ad627ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293d57a7-6929-4b53-9b81-903110b33cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e6130c-1ca0-4187-a04a-eabb7028c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc8a197-f0c0-4659-8a57-3a532d6e99fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d165b7-7f84-4385-81f2-4752e46446e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdfca31-70ba-4b9b-86d3-dfcbb6411f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad4c92-6136-4c51-80b0-b2a9b06993eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04b4447-5476-4c7b-afd0-7969b55baabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b67a81e-7e37-44ed-ba49-503827142a66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13339c-437e-4acd-845d-05e6d639f572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5449cbed-2400-47ab-bfca-bb5a25dd8230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea4933e-5e72-4680-a2af-9fd03a20f4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8517a3-35a3-4c40-916e-d86302f2ca47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705fef3d-9c0e-4c09-9c30-5e8c8e24ee55",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5152530-9fc8-40b1-bda6-fb8839d951c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d19ae3-7f91-4f66-9d5c-486988fc5ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086aa444-1939-4521-950a-af7429993831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42bc75ef-9f51-4da5-921c-21f2e8a45285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed173db-537f-41cd-8ddb-bda0d3cfb688",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6886fac-521f-49d7-ba0a-6b322a6aed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e4213e-4595-448c-a8d1-d311899ae695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64255b8a-c30e-49df-8342-aa48a09c39b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "262bc9d2-1d29-453f-82b6-178a36c44272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ddd72-aca3-482c-b283-0a034b26e50e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5cce5d-71ce-42aa-9f17-d68cfbdd9e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c2b7ed-edb7-49f5-b2e7-1ae8c5fe1c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbff3228-b3a8-4110-a7eb-2bdffe9af0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6bd6f4-86b8-4950-8067-3275f4635c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbefdff1-3670-4dac-9fb4-f5fdca6a8df7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef2ccc6-f807-48a4-abbf-30e215718918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce612891-a82a-4dc8-b873-9c2579ac492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accaeb8f-848e-4467-9896-3a5289898bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99617c9f-ea62-4015-bb0d-2e49f1b22958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b98d4aa-1915-4570-85b4-b22e859bae82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fb1686-459b-4fe4-beff-7d4fe00e4bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255902ef-5e12-45b3-b9cf-94672f0a82f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32abd38-ec6e-4421-b117-d74f6c4bea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc08635-3e09-407a-b24b-c2e76a04c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b4264a-47b5-4e88-b2a1-f932db36b3dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5ade9e-8542-469e-a8e2-8f81541d3e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e19ec9b-59ea-4460-8ae5-73636b84e5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cafb6a-bc40-4d83-a1be-9dd3a3242366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cecfefd-dfe0-45bf-a472-53be2024646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e17d321-c94b-4e1f-9116-98bb38e8040e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8ffbd-2df0-4e4f-a446-da86fc63c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee4e7ee-03ea-4943-a547-9b0cf5dd09d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3503699b-2526-42c0-a0f7-fe024aec68ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5463440d-9ab8-4214-bf0a-9701d560119e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1f7fc7-9c7d-4b16-9b76-2ba1d4dbe48e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d7a90c-f6aa-4ef8-8e1a-74db3e9c72fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2001413b-3b88-4d2e-ae94-b2a5faf7bc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0bda50-9682-4329-9eb5-72f5b5769f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "948357c0-ab25-4d80-a52b-fa22bc1d91c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1702f215-5ac0-44e0-a72a-c0f2d9c44485",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dbbd1c-6092-43cb-95c0-ac85ea5e82e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18616b6a-395f-46ea-b406-79633ebedfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066baa81-2999-432c-a38a-3218b1552fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168ac3d1-2485-4b09-99e6-20d27402d43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3dbde6-4247-4157-b3df-d385001680cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf3ecda-be60-4480-9b72-2c8b362d591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa99ade4-7fef-4a73-ba13-b3b8cefd449c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c708588-0650-4d65-a513-46ac2988fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f2f5b9-8677-482d-92d9-b0b1367e126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055497b2-3fc0-4273-8eab-bafa50da732e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d60dd1-90ed-44f7-9b90-cee9c68af6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58000a1d-ddab-4e17-bc63-3e306d8e3108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625c897c-8cd1-4862-92f5-8cd00ec96740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366db35c-7777-4bdf-85a8-40157c923008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a96136-4ebd-45b1-b90a-4630bbe8de74",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1baa57-d029-488c-88d5-43976ef0d11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5add59bd-e60f-48d8-ab94-b3e647ecd3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6065ab34-19ca-4f8d-9d11-3e0ebaa0c301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3346a58a-3ec3-4631-af8b-3f596cab1289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbd0142-6440-4e1b-8ffa-284c7704f8bd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c5859-e0e6-45ca-9c23-0bf72d6b0cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b041f9b-0de2-400a-9689-ba932b10cdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4250226-5587-41f1-9260-714e543a08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb19b35-e2c5-4b8f-8cbd-114a4edca649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d485c994-fd6f-481d-888f-279e95709b15",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9922e2ed-7652-4fcc-8b47-3afdd763ebcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7493a9-b09e-4864-9e04-5ffeb43ceb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04580d4-8bdf-40cf-9bf1-95da2c269041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf836489-521b-4c83-abdc-694ad95273cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eaec57-023a-4478-aef0-709996579071",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92be794c-28c1-4909-ac40-1686686fda2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f68cdf0-0d4a-406e-bceb-ef3dbecc5a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d744c-02c6-4bd4-95cf-08ea0a9d161c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8c8fab-6560-4031-8afe-96777d60ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebf0018-1b81-48f8-9dbe-efd026be72e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0cac10-c2b5-4f36-90c7-69ba2a09de4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb66b7e-e829-4b3e-9fed-d04fa8955a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8269d9-691a-4338-8310-379de749b2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1a9148-2571-4ffc-bd67-ffe6d14cb68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f76264-ff2e-4d00-9300-e5fba5d071be",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3378f179-9614-4622-b586-46ee2f5f4da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d51a519-5b5a-47fc-82ce-200a70f0f3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8d6aa2-fbfb-44cc-a401-0bc6b12e49db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a731fd19-9985-4cad-b816-dc71a12abc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc42ce-8843-4162-9dd2-e448ddb5b84b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4627dc31-1a3e-4050-9c2b-1a87e7fe806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a56cb3-9141-4ed8-8292-ba6dd85287b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67267046-13d5-44f4-9a92-88ad6d84f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053f33d8-5ed8-46a3-af16-97c0a450609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b7b98-e411-4587-abf3-c2f2f95e6fd0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21565f43-38c5-48ab-8635-c4baa146dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea4809-486b-4b9e-a153-3ad7865a3ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84207fb0-6d74-4426-9dad-89b04c04cd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a3d31-e455-450c-ad75-4ee1558ce516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523868df-300f-449d-a951-d9f755b6e36b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb6d271-a026-4a54-9699-61659128f4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab8e0f4-92dc-4d6a-8e86-3e1ac0086a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488ea5f-826a-4b4a-bdeb-36a3e479fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a0ccd3-1ba5-4a7d-a75c-57415e5c0f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81472435-3f21-4145-aac7-3d9e890db79d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bfe25a-624a-4408-a8de-063ee8756e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15015ec-660c-48d4-be8c-f77013f7ff55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ddf945-04cb-42c2-a82d-4ea0b72e2088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ffd3c4-4f8c-479b-b92c-70ad319c0fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70bcb28-3ace-4b94-8783-133b30c9b061",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c22fcb-572f-4a8f-9e3f-e8b4afe3a644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bedad1e-5d9c-4127-ac34-7a20201a91a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b34a5-2894-4cd4-8f63-a6e7087f5e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f9f6b4-fb4b-409d-991c-bfd16877fb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94310d6-b752-465c-b6f6-c441e8aa3e65",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c1fb0c-b37d-4651-9389-0c49296c1e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061cfd0e-9fff-4046-8ffc-3cc488c1b4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c12fe0-a1c5-4043-a471-d33cc38e3f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19a7f4-53ee-4e6d-89f0-c8028ee2376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03874ec-e3f8-4a5e-863f-2dd68db6cbec",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bc126b-ee11-4627-a439-5b5d19c39ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b0f910-e6b1-4aaa-9811-a512b04035e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72059629-ff68-4610-b0f0-00d784955834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e5d4ab-7ea4-43c5-9ee0-1c425aedbc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e8fe4-4c46-4f1a-837d-a0b29a87a72d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a14e9-c168-4a39-ac98-215fb663028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee1cb8c-2da4-472a-a906-4b647fbeb2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0896ef03-f1ad-4904-909a-ba41f10771c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a295eeba-4558-49da-943b-7e28da0a458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386785eb-3367-4ba2-b509-e43351af9e52",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679c36fd-6bd0-4b3d-b0eb-7fefcc33d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5224953-c108-43df-9dab-cccca14e593e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441a35a1-c907-4a0c-a841-129f77889a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72686198-a04a-4f34-99f0-06181a187135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b744ede4-8b83-4460-8e53-6bf2d5915fc9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc956c1-388c-4a1e-8f36-ee7722ae7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c906e5d-a5df-4a02-9a72-15950ebae746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d3c304-1e1b-4185-ac7b-1ee5551d3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398cc57b-932a-4838-ad1e-83d0303df5b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76449e55-5132-471b-b532-a80680bb3ba5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f52349c-7dd4-4b98-8a49-084e4da65173",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b76f2f-ecb2-4140-adec-4acb6319de71",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbfedbf-8b83-49ee-b228-6ff89417e50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcf1ee3-5cf7-4d52-8a33-85da80d50a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68536e17-46f1-4d63-8070-d471f2027509"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4d20af-ef48-4331-a615-0c0649c5dff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc597966-26f3-47d3-b722-cfe62a73cbcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5de693f-dbb2-4d2e-82a3-ee7e6a0a430e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cc0b97d-9851-464d-aeba-de9b6d477875"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "836215ef-1708-4495-89fc-909608b2be0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b1a177c-e8d2-4061-a7c4-7b111b486441"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5107a06a-8948-422e-977b-cc1ee555e188",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "749501ce-b849-4286-a48c-7b423a7689a1"
            }
          }
        ]
      },
      {
        "id": "41c54a37-99ae-46cd-8384-c22f12ae6d3b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ea861456-61ff-44c0-b8cd-2c6aa4fc2726",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb1c9907-b181-491c-b280-c888f6485635",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc4f9d2a-eef3-4bf2-b82b-0bf458f1c5dc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e104e0-3537-4970-a9fa-bbc23c4bae22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0ff562-2da7-4a57-aad2-d8352107feb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4992e5-a43c-40e6-8bb4-82c347147adb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed947a88-4c9e-40fc-af42-67fd061d8063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730c26fc-bf78-4105-bb59-d74afd8fd682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d6a8a-ffe4-4670-8fda-ebf6148a5b00",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8ef5a3-b5dc-4ba1-a808-1b55f35a5d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46b5966-ceca-4d50-bf4e-d0c56adb0f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd26def9-7a2a-47a2-b422-6e71c0ff2456",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de89d89f-0f3e-49fe-af09-1d0fefaf08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48af8823-a23f-4af6-a9dc-171cea5131da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5096354d-367b-405d-b6b8-893cfac820da",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d80086-37eb-4b92-945f-c2ef405fb4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d2f3cb-13cf-437e-bcb5-96f4add32d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805d4e17-d7d7-47b5-8380-53df209ea001",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d192760-1e1e-4626-8dbe-ad7edf02c239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aec802e-b12f-4afa-88a4-8a7435707d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1607e06a-7d28-42bb-a94f-a3b5de0f0275",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1288f97-a1dc-4d89-9a46-1a3a3b4dc3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db12bf84-cd2e-46b6-a0fc-4495ca844e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97dee54-6c9d-44b3-a351-e5866e21f72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125a35da-db6b-4548-ab85-c40dfc251020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa3c037-514f-42be-b2cd-8bb17ffe5401",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a15862-6e61-4d4c-9261-df5ec8abf5a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e1dcd0-61a7-4dda-95fa-ecaf155bf3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add3a75d-53b8-459c-9397-a7f5c3184339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b2de3-8e2a-487b-8d9e-84d2f37e910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e331eda-5ead-4565-8dc4-03d5a48d6175",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd237052-ea29-4a3c-bb59-8deec4a11b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5655171a-0ef7-4387-a771-975098b3b378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3574d7c-9f95-42ae-8e37-ea3482f288ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4543b73b-acad-4384-af15-40051b8ba639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0ed8d5-b181-414d-a003-1e07f8415df8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cb9672-fe2a-4233-9424-e2f6c374c13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed421e1-ffc4-4d48-8367-824c581b4b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7856c13-4569-42ce-9b33-9604890e9a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8888383-5bc9-470f-83fc-41c5fcd91625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135b2be-7071-43ec-9330-29bf628b8c3f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf2451e-2215-4bc3-a419-19676160131e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd010c3e-faa7-4a03-8cda-bbe66257aa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76bb392-244a-4632-811e-a9118782e110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6660a263-6543-451b-ad02-5b6c1ba772ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff1b465-0d2d-4c23-aa24-4745e02ec4bc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a5901f-c1e0-4fff-bb4c-4eae8a2eb436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afe5680-89a2-44a5-a64f-996710d08d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e12241-7d6d-48de-b23d-6f9f7b120efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ffe37c-b7ec-4215-9abf-c5bb1d197fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbadd07a-238e-44d8-bb73-960ea1b1c510",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e013b7e-2fb4-4fb3-8caa-b51458f20311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436948ce-b659-4fbb-a112-1bebda042f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1bcb4-4c83-43e4-8b62-569c407668bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd77e999-c26e-4ab5-97d8-95dbcc3527e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1108b5-d443-4bc3-a215-69195d9fc76f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171ce543-18bd-4f25-a342-93845ff29c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40fb17e-b36b-4a59-85a5-c2cadfaafdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4851902-9e3b-4806-ad72-cc5f10a28221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ff1cce-0a29-4ec9-bd3c-4df40ba11a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aa8027-49b0-44ac-8b2d-1abdb104725d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99886b8c-3014-44cd-ac72-47e48acaf6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31bd1e6-2e44-4965-8ac8-c991173ef403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1b0ba8-5533-43e7-82c1-6badc1d82aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425c3646-aea9-4c90-839c-6b6ad2d51030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e751e04-6466-4f85-9f8b-02df506ae504",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad870f6-ff31-439d-adc9-98780a5c16de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e63a5a7-660e-42f2-9ef4-b65d4b65edf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45171218-a93e-4f08-8b4f-89562888c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5f31f0-370c-42b0-9680-10686f3db028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a063c30-ed2d-44c0-a45b-05fe9e8888a5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc96308c-c138-4670-acd6-88f5cd8c8523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9a26d6-a25a-41ab-b6f2-bec9490722cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f069b3a-2e6a-4624-82cd-bcedaf31cc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232f9715-090f-47f5-8e4e-ba9d66ad1ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf232a7b-b04f-4624-90a9-f61cfece58d3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a03d138-e562-4a9c-9ae7-3d4c5ac7a698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825d381c-a04f-40a2-addd-3b5f10bac9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ae953e-eb5e-48bd-a2cd-4db0fca34252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d43d8c-00ff-42cf-9c1c-83639cde650f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe6726-e517-424e-9a9e-d0b6f63ec453",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74637533-fb6f-4e18-b6ee-8aa182b57be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c8947b-4f7e-4058-a0e8-85ba5d702f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd3405d-473d-4b09-ac95-2c42b8f372ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76ab7cf-819e-4220-9f19-9f7a4389021d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edda424f-082d-4810-a76e-aab701720bf9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916836ec-34a8-4bf0-97c5-2d11ec4e4763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fe55db-8903-4b0d-919d-0cc09d84e303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed7b09e-878b-49ff-814e-a01e71cb4756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb17907-a437-4031-afaf-df41aba0be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86705f6c-e639-4282-af09-52004846a8b0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b9fb86-95d3-4e37-b9d9-84ecc9b51aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5609e921-ad17-4c5c-8967-b4f58fc7a348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed369d2a-3f0c-4626-a4cc-b61ce008d6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01787539-7b24-43ab-b013-7109f86829ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3848a7-e52a-4847-a6ab-80d34157be70",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6c7eb6-1897-4768-9d0f-ec40f6147495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f631c238-7dc6-4a32-8de4-17c39d84228d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082daffa-8d7d-4b41-82f5-26a0e6b7d627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c7a899-23e5-45c8-b82f-c0c8af8760f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2faa3dd-7b39-4423-8c3e-b427f9caf06d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618421d5-03f0-4d5b-a166-543deeb9edef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4409856-8733-4de9-83ed-6208c47bc7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829ac91-62bd-44b6-b0a6-1d5a781db832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ba9239-1e6f-4c71-8596-1744d775a4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae4a059-216a-4229-896f-9f09993308ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be076fb9-b123-4413-b040-7e3e2be43528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f2cb23-df4d-4123-b993-c4112c92365b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d3ad14-54e4-4572-9000-005b6f81b741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f90e2c-5eff-48de-81a4-54ad30b896d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81dd528-55a2-40ac-a486-63b15e6c918e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d188035-2ea1-4ef2-b403-afc061b43ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20e070b-b4f9-4d86-9120-41d924e3b2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f2d60-a6e9-4dae-a406-7c15de4830ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5c92d9-7d58-4194-a8a3-9a7a43959fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6a63eb-a285-49da-9fd4-3ad88ac59444",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a632d1d5-6fdc-4a4d-bfa0-22c7085b12cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4835db-f3f8-4163-a764-c536182c400e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaf1530-d51b-4605-858e-24829ed47a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d0bd7a-b08a-48fb-af33-3076addaf646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84877a8-39dd-497d-bff5-c6bcda038c4a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542aaf54-f299-43f9-a80e-d6da01e04e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533d4159-b05c-471e-9914-ce771355b94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712af9ab-133b-455b-92c2-d25d7e34f494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d1a6b3-08e6-4891-9ed2-11032be447b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4d24cf-cd0e-4196-b42c-a7e1522e35c2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a5d8ba-e24a-49c6-9e36-220950018a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2daa09-8af2-42d9-a8c5-b43859cab530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983f306b-151b-4449-bfe9-8a431a6a6218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb9dc22-cf16-489c-bd8e-5a0b07a29595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47fcba2-23c5-4b6c-b5d3-87a54991281c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d925f80c-a60d-40bc-badb-53470732b662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1abf7efc-39ed-4df4-af08-99f954643328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4249ad1-4452-4414-ac1e-1269129b96a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748078a2-6642-47a6-87f3-ad9fc65ed6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cd3a40-388c-4b2e-8d70-63ef9b5e44d1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d206d15-98d5-476b-b446-f82e3ef6773e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55679560-a9a5-4cd2-ba88-e5f61f8e283c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d48416-81a3-4155-9094-e94855c3608b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0283238-2751-4631-b174-f43371b0b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb85df8-1bbe-4c4b-8eb9-ef7bba9901aa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f8cf5e-48dc-465b-ab01-8cd338bfe9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63488382-a776-4b0e-8ac0-e2904e647d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c4f415-176f-4fc5-a57a-eecf01e32852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea7b3c0-e415-4be1-8b9a-a804466c4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419d04dd-3b38-4814-b40d-aa95273444f2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de9509f-4997-4cfd-bc21-4a29349fcd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568b0ea8-82bc-431a-9b08-5ad2364870c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa170015-0740-4677-ac7e-f71930805ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e123970-d35d-4abd-aad8-e9ec29abfba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38151211-f16a-4f22-8c0e-e4af76b55a52",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e87d5a-232b-431f-8534-70d185ce7c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84756fa0-6fb3-4fca-b22e-22ded6d7785b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff2b426-c18b-4386-aeda-8ca53412d2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e010672-7439-4086-a421-6dfea2bd078b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3737e4-0d10-41e8-8e33-2dde78cd9e37",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695a9b07-8749-4d51-878f-33a47648be99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e30bade-cd88-4c43-9f3b-ffe8197ffb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6de592-2214-4e1f-9eb1-0f8aefded7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8c8898-9fd7-4f8b-973d-3235706978b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16872644-d4be-46c0-9375-7c7ec95f7de6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8ecbfa-4b47-4535-ae66-e9990ed2d732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5d7743-bc42-4502-a908-7ebd5c6aa381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98e2e24-1d43-4b24-bf04-20ce51fb22a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a336da8-47af-4991-848b-5252cba824af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beafff6-b112-462e-a776-303d7cb5a38e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c50f1b-e8e7-4b71-8c3a-e42cf1fe4d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad67f625-a8bb-4197-b4ee-fd45b08b50f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519534da-3572-4409-b7a3-0ba9647b01ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b4dbfc-0c75-4ad7-a6e9-823e86a208fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bed60a-821b-465c-9d3a-546fe2edca42",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf34923f-c17a-4f6e-8824-befb21fbe7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17642e0e-5b1a-44d4-a47f-fdac92dcf2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c818ada-e0f1-41d4-9612-85f75fde790e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78806e09-2897-46d0-819a-c39564257d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b0f12a-b4ec-4442-8edb-138c7b1b4e35",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fc0aea-f1d0-485b-ba55-80c558ae061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d78464-01ea-431f-83eb-70941585f2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646571ad-a9a4-4da9-b405-676368d9bf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cc5298-8dfb-4cd5-a7a8-40fb37565898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c910805-eef2-431c-8c38-04fd3cdf2c7e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3f2090-20c4-4a56-96d1-b8e8f062515d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375c0295-64f0-49b1-8e4c-d8b55e354346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e78ca1a-d946-49d1-8a10-839513196c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2986d91-a604-446c-a862-95acb1bf0cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d85ea3-3204-4ebe-ab54-0db94bbb7429",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f5a070-5c34-47f6-a7a3-2f0b16d505b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea88fd9-ef28-44cb-b81d-4b9d014ff113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e87586c-a3b5-498d-81c7-e95ed9a4663f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e97a8b3-0be0-4dbd-9f9c-c266cf54f7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14c5cd2-5d88-4460-afd5-82fa7c078643",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b18665d-28ca-420b-b32d-7ecf21ec18bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cd170c-bc40-45b2-84e7-d8ca0d0cf796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091c0bb7-d121-4004-82be-05742b40537c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b118956-f73d-4bef-a456-8b42c62c1ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26abbbe3-84ce-4173-91d5-9f77e85e8bba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcef769f-617f-45bc-8786-5226041e39d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992f58be-3fe8-46c0-ab59-9d94191a1b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88579a3-cce2-4291-a450-e6e60a7c8213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbcaec7-39ae-4d30-98ab-b05f95d33fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506485d-d234-4ee1-91e3-5f63f3198bc4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080b0c12-6ae1-4d23-8581-3a22fd0151df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17db916-c2f3-449c-b998-6aab251f96bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f1ed7e-62e5-49c6-94b1-fec897e0a2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d2b55e-1f4d-40dc-a3a1-f86d8b9f544c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68df69-0b9c-470a-81a5-6004453d4cda",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b4285c-cf75-40c4-831b-199f35b30dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699c75c6-8769-43cd-9fb3-6cc1430ce99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65245740-5226-472a-b153-1a0dd76fffec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6ff7c8-aa4d-424e-b5a1-e699ea691397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd6bf4-842c-4e04-a7b6-3717c1a898c8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2366fb2d-43e4-4021-8de0-eb4e8b2f5fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a9413-3832-4e4f-bf5a-cc79714e896f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd31a6-8333-4e11-a866-aed5d059f538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cfa6fe-4a23-4269-b01a-07e3ca2c3131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dbebbe-cd75-4140-8467-9c0abc0e4941",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b273647-1a64-4c24-9637-dc52c619d1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52efab2-60f7-4ada-9105-7e4c6ee79b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09832b6e-d476-45a7-841f-ea0f2d6d1e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15be7a0c-0757-408f-b0ca-2d7d44c99521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0f330f-dcd6-4d2e-a9bb-737485ef08f1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee6b599-8189-47de-b165-769069615641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd311e0-8dc9-4d0f-a762-6bcde5c7cc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33e2e37-b978-4195-961b-1bf6362d1a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6761b488-3e6d-408b-93c9-077d028f9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fc48b6-c043-45d7-a002-a4e888230395",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd14489f-0abb-49da-8613-a842fdff8c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10abb22-7aba-4554-b134-aed9b16bbcae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224b92c-d415-47cc-b5ed-acd053cd8f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba56e46-aeec-43ab-bb72-8b76e90cf4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934d9e7d-ec03-4b10-826f-3819ccdebc37",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a663918-551b-4d4f-9a74-a7904716ab09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05af1f1-1249-47ad-a813-228709add1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe08c6ff-eb5a-46e8-9c04-b65bc877f691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959bc6ab-bf7a-4f2b-af4a-f2ac49f93a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aedd020-236c-42e5-9981-cc4aaa828c64",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a02f31-2b19-4a45-aeda-8307824d4398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97cdc7b-7e21-43e5-984d-e89fa14498fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c333a043-8a7c-403f-8599-62bba219e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af542ac6-c71b-4e79-b0cf-49935bd963e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612c00c5-34c9-4ead-b078-2841fb2ee750",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f58a1d-8499-47f5-900f-baed7c4609a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16be5e79-08e2-434d-ae4e-92da6691da79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63206a01-2b8e-4e32-a90d-411c24f19dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e754d15-b97c-4f3b-ac35-1acb243151d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df467dce-0153-46d9-80ad-daf9eae35a5b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74ba186-4b45-4dcf-9f1f-9a56e0fdf202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de9062c-1e1e-4be4-b699-b77049cb9b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0075568c-1fa8-4064-bab3-ba01cf50065a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2df888-334b-467e-ae4f-fde1314e0d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f2dc14-9b30-4770-a355-821de8519993",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b000172-ab52-435a-8b4e-df7c88399569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f704f6ad-04c4-4430-85c9-edb0ebc23a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e494874-aec8-4a2a-8a5d-42b2d3a1b5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c3a649-0a68-4c4d-87e6-3fa8cb8471f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a5d74c-46c7-40c1-8afa-5b46f191cc35",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bec5ca-d059-418b-a107-ce5ef7051eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be912c2-867c-4c33-a3d9-9dee313d203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000a1192-2562-424e-a3bd-7e86440c09b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20206962-5a75-47aa-85e3-70dc78e4fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f61386-d4bd-4824-bf57-33d870eed5bd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1fc86a-c9e9-4395-8c8f-147db7e9df4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb47c5b-7488-49f8-96df-0fadee430a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c22204-c765-485d-a345-a5d2cbdca2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1974375a-20f0-442f-92b6-f5ebcf8c19af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c65164-f42d-47a8-8210-41fe3a2f13ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffae21d-8597-4b1a-8a3b-fe20bbd125e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4211502a-86d1-4c81-8651-777a0d7d87ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d74221e-75aa-4574-a15f-2103ffaa6b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cacb8f6-f526-4fd0-8887-71612881fe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd45fde-fc5f-4f12-946d-ed12095388a7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae35179-6b37-43da-9786-f096917d5370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725225b8-f6ec-469b-bd5a-5f24a1a505bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb4274-fbbd-42b4-bea5-bc44a582363e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51844713-9970-4a15-912b-db4a5e8ca7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477b1b6-6faa-47f5-a595-b79157ef168d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c697465-b3c1-4768-85a8-3362ae9e3c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57885d07-14dc-4fb3-ab0a-fd560e5db53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83368bcc-752c-491c-8b3f-b12ee9bab2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f96303-7447-43df-8eb1-809c45f7d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac05b72-d3e1-4ee5-a441-c29899655a6b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830bffab-588f-4695-8bef-c392606fad02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e295624-24f4-45e3-a22c-09c93f5d1644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11821dd9-563a-498d-a74c-3de7c71ca047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0235655-0c1d-41e2-b092-3335f315353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00246bf-2a20-4202-9f65-1ee45798ce2e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e422dd-bb94-4237-998f-09448312a61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b249756-c304-4e64-a4a1-7823e2da703d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eff33b-6bff-4bf6-abed-8cda4b3f9147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d59b4a8-4829-40b4-b4f4-6907e197b53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c358b16-886f-4c8e-83ea-7cf06427d543",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb1ac50-c6ff-47c8-8859-ddd598c41fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0527531-7cea-4537-b6f7-0d3013a519ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791e530b-e71d-49a3-952b-1ea2643a6c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaaec50-0a4e-4c3b-a179-be41cb4a112f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafb3d1a-086c-4b8f-bff2-d1bc5405fab2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7349038-7c10-438e-adb3-cbaa5b478924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cc97c1-2960-457d-8e35-b7bc4d5e116a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6f34f6-0a6b-4a9e-bc12-c34eac0d4ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621d32aa-fd18-42c8-a812-e2621744eedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8893bf7f-3f31-4c75-9848-a8e716b903cf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d07830-02d6-4431-917d-027aa0e43487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5cb398-78e0-4675-b949-9737e8f7ab91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a05fe2-ebc0-4b82-a98f-3fcb07ee1a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdb6401-8f81-47ab-b5c9-a331b8134ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa4fc4b-a17d-467f-8614-fcfb878ee1ef",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af54871-1d04-482c-8ced-3fc7acab36b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4bf97a-5d97-45c0-8eb8-15d5d5ae92ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681afac8-5782-411a-af64-bae44eca154f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c112d6cb-aa44-4d5b-979e-c71bb31b316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4c3b1f-084a-4b36-892d-8dcf55e32cfb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41277943-d9ac-4275-86eb-55753b62f2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50369072-cd4b-4bd3-8ba5-0cef4d55c503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490bf6dd-ee84-4d45-9c1e-c22f54f04b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5298c44-2069-44a9-b926-efe07b5baa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a33bd1-8f66-48b9-8868-5de1a6af53dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e7c0c-5762-437b-9d32-233b795ac145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02537315-6531-421f-9774-9f4ba4be0b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a3ad82-0373-4475-abb9-75a17a347ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc32113-faf3-49e3-966e-4c9471e69396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd2e391-00cc-44cb-9724-1a2ffb23cdfb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1636f25-41d3-4ba1-93b6-47fda3ac9414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56ce928-d1bd-41f2-8f18-cd85a12580d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4df1cd-7cb3-496a-9d9b-3dc71c51f61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751a0fec-e5c2-4b65-91b8-8365a3401bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e919da0-e425-4ee3-ba4a-8d0a140730e3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238754a3-5b07-49df-9386-d525c988f730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e0e99b-f062-4839-a938-e39dffb33e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf24837-e71b-4282-9d6e-79580a07617c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d7e863-401b-4998-8178-c1ac9aa2c901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc65cbe4-d98f-4aa6-bc30-e1648cd92968",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce22c216-192e-4b73-965e-39d83a4f1ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cbdc9f-61d1-4708-921b-b59fa4e01275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d82270-5ed3-4462-98cc-f4da829fd96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a4f2b9-1ac3-4f71-ab73-4db124a035d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635d78d2-54fb-4f1f-be93-eb8ac4ab1a7c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb4d2d-d1d1-4957-9cdb-9591a391d509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a166b1a6-3845-4b9b-a669-80ee2e0b6987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e8e7d6-87a2-4eab-84ac-c1d1a2775267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e08f049-64b8-466f-87b9-c780de217355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ceee3-129d-4285-b521-31531a15e2c9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cc779f-f614-4bcf-b6ef-937d220f4491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d3b3c8-7bbe-4e96-b33f-5e3fcea53b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ae4e15-caaa-4ea2-8d8c-9dd9c99728af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa894eaa-a8b5-491b-8790-477c7d51a3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14862a47-a2d7-4a15-9648-13c2e2fe8566",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac552f0e-57f1-444b-8df4-e2e9f8acf901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e6f799-4c25-4547-92b9-ae0bfa62d852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b815bb7-58e5-424d-b9d7-d295935d51d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e87fbe6-0751-446a-b804-73739e3b4c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44846970-af71-405e-8e46-4866c91eac71",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb7302d-5253-40f9-9ed7-8d74784fa21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e047b430-2d50-4790-a6f6-9b569f0ef4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6971a4c-cac3-4249-b0da-27ee85e4b43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e573d97-cca0-4135-9d4f-b529a04d65ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241d74e5-d7e7-4141-ace5-81e4bbbfe17b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a33a1a-4d58-4c06-8d38-6b4e48935373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5eb79c-072a-4553-9ef3-f221e51bf0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6d06d7-5888-4db9-b450-dca64792d54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81094935-290a-4de4-8511-0014a178b967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9839a1-6465-4245-802a-62d78927111b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431971d5-87ff-47d1-83d3-54404ae0830f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242b2f6a-5fde-45a9-8870-63a61d30fc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b460a5-8709-463a-9bc4-71681cfec54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0258720a-dad8-4f1e-841b-9bba5910b710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef6786-96a6-4928-a9c3-19fb17675433",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438c982a-dcbe-4b1c-8630-c012ec6d9961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff96ac2e-0fcb-4dcd-9526-0294167bac66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a08b0fb-afd8-4399-a261-8f4542491884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20981c77-d92e-4a79-9c53-99cf46ab9f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76100d-1ae2-4b5a-a35f-c5c3e164d57d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f8e1eb-4d4e-44b5-954f-c0617064ed69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18476f4a-f194-428a-9c33-8be1be975c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5042e-0070-4567-8a0e-1502e75aa70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c289c48a-4bb1-4bcc-9c04-970888732279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426d15c0-dbd7-4a14-ac21-171151a5e42f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a4a3de-fb04-4619-8139-0fe40121b076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f6ec79-0416-44ba-96fe-a3bb7b171992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2155f42-b5b1-481e-ab6a-c2ae1584a4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bfcc00-8117-4363-aa9d-63496f1c1c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651f8aa6-e161-45e7-89e8-32ddcea2a659",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d65bf9-59b2-4d66-a5f6-5d5c5837b472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85c569b-acc2-4813-a8eb-8395465b0490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be8b7a0-f9a7-4cde-8951-19e766a6525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a626349-f1fa-441c-9659-dc63ecf646a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d05106-67a3-47d0-960c-c12f658413c1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab9a09a-d74a-4c72-8cc9-783b99dd8e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cf6fac-3543-4795-b696-8707d0c21b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29046e05-1271-424b-ac4d-8ee2757c67a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fe1100-f110-428c-9430-83d2a0286ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd755771-76ce-4f8c-b7ea-27d59c6aa2c4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001233cb-cd5f-4633-a935-2b83cece76be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7dd4cea-b0f2-4972-8af2-f4ebe3216932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bc6042-99b1-4bcb-9047-cc6eb4da0f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634f89e6-ebf4-4650-af1b-40f8e7da92cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def6b50e-227d-4285-b311-df58371a7042",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3135093a-0e97-4abe-8353-7be960d9f756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bebec0-ba3b-4840-b1b0-7f5f4004be88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd94b3-d9c4-4747-b387-b37f6e05c996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcfd25b-c17e-4894-9064-1bd63891e964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77da2b6-7898-4e5c-b6ff-b469a98356e1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a126ae-34b0-46bb-b7a1-152d63f72416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3ba813-063a-4411-ba0b-617e7e56b5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9d315e-9d8a-4b6a-b6e3-28a9952360c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b321b8-65a9-4600-9cbb-c38abd8e23a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524fd0d3-cd57-4747-bedf-ebaee67043ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e0ab2-595b-47fa-b0ed-d6596250326c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6979624-1a5b-42e7-b37e-9430658afccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29e0257-a6ee-48ea-92ed-18d57f047943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9044fc-bae2-49a1-a459-0719ad8623ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e568c8c2-b2a0-4fdf-915c-efd45e92eadb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6120593-0f87-4c81-afb1-a76cecb0d63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b233b25d-46ad-40ca-b8a2-8ba3f05d47cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e722bee-c5bc-48ce-9f7d-2c33c0867d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722317bc-5ca9-4f61-b65b-9f0c255edd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378d0991-6950-4237-86e9-8d00e63c5bac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92abf9bf-ae98-4f42-8ab3-fffcab74f473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0274a947-77fb-4cfe-a351-01019aaa3332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161e2216-1b77-4f0e-8dc4-511725ed4b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6ec284-7323-4d98-a25a-cb5107081eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4155b0-fff6-4302-bec6-875c3059e95a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b0d74a-018d-41b0-ac79-c3225a6a47e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f923020e-5cea-4683-86ce-9f5f1a045450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efe4cca-0498-41ab-8437-23b7aae021a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e116b9ec-41de-479e-9425-bf080d338a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f72b231-9b3e-4a15-9661-892523cea0df",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e008a6-7072-4861-8c83-ea0fb6e45e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2631abf-71dd-4744-a0e8-bec658dfb36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6e1b53-a0a1-40c6-b12f-f2f60663ab7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38831e18-9e42-4454-bb58-ecfa5eb43155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997367b7-b0c0-4c69-8e6d-4308b75ced6e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7ff7b-44d0-49ea-bb7d-f27dd5217120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3272e5-a3ae-47fc-bf25-0b60ec8984fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9330c00-ed27-4183-9dcd-f2b28b4fa0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21086feb-6109-4e20-94b4-46c400215183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b2e3d8-266c-4f3c-936b-1109e83c299b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d0f68-a47e-4060-9a1e-42f16f1669f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb99a41f-6b61-4ece-8357-2269d531d1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5affd32-4e83-4153-8bcb-dec1a47214de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cd4b55-17a3-4d1d-9f7c-a4c167dab272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71b27af-ef10-46ce-8fc2-01758f7cd9f2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5df6a3-b3f7-41b1-b284-da89827a4556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77ad2d0-5157-48d5-b80c-d1f98db380bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3289d2ba-b5a9-46b0-8f78-7c4dcb7b2a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5235f8b5-3c20-4515-9a0d-f546e6733548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8e4c61-fa4f-4df4-9028-eedfe18e732b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a717a-cd2b-4f40-9e97-ee3f53d7c694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081b7d46-f9ae-4e84-b3e8-793cbc75f110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2982214b-2a95-408c-81b3-e2ebf4ac8530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daabbe4-f5f0-4da6-823c-ba25357f51f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ba61ed-4030-44bf-9bf4-4967e62c1343",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58363b04-345f-4e09-aa9f-0534fccaec12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1442988-caf6-40bd-b07c-1611eba033a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53558847-3111-43e4-8c98-df8f6503fcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3edbd4e-b53b-429f-aea8-a54d4a89c9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17cb314-833e-4134-b37b-f4e9fc035c14",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ee7e1c-9dc7-4945-ac32-e72da54c3c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57af167-664a-4c6c-99e1-2a3a07b40acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc33acc5-bdaf-4a4d-9fdd-9d9134ed2098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0693262e-d71c-49e1-9c4e-e0a2184d16bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341db6be-3283-4b77-8259-d95f199d1fab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4db364f-9141-49f2-8ed5-a0950eb7daa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd53bc5b-da29-46d1-9587-67380fd76688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0571020-e16a-4c8f-8c2e-f4dbf8c1f3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0b54cc-fec1-447d-9fc8-43f701bbcf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119bb002-4d71-4dae-a8ed-205f465e849f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ea15e6-3057-46b5-94f3-7407d08a7808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6048b7-981e-464e-9ccf-bc6db45657f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6247c06e-9dc0-450f-b2d4-190be96c1a29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0520ea-fe50-44b7-822e-a7d257a92945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bafb44-95ce-4095-8f04-a94779809c54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70d147d-f146-4e3f-a0a9-5095d87f5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e2d732-2926-404a-9ea7-eef00e6df3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35af1088-8558-4cc2-931f-7e5bd21b3fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2d59d2-06de-4cb5-98d9-55afc24f7478"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3833faf4-e0cd-41fd-abb4-486797c5ede2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3ec533c-578b-423f-b2b0-7260881cf6e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1138a467-7775-4e4e-baf2-43f45b8f2163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e592eb1f-fc90-4062-99b7-5e354b41041d"
                    }
                  }
                ]
              },
              {
                "id": "deae66c1-9e25-48a6-859f-ae11722a5cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1797b095-c419-4198-ab6c-60a388d0aacf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546a8bb9-ec9b-4efd-a30b-eeca3ab6a628",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8341f16d-0e31-4d62-b1bb-a4c410612b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8612d0-27ff-4191-bbf9-2d53c98aa4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87a42d57-7d9c-477f-8242-bc6e123d8a60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd16459-2347-4ee5-b8ac-a1b81da2f59d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d14e1307-2432-4a57-b434-ec0a13c6cf55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db64930f-1d05-4b77-99bd-bd96269dc8a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e36d30e3-e20a-44e5-8d7e-a1383e4b7764"
                    }
                  }
                ]
              },
              {
                "id": "0b13cd01-6e5c-4925-8f91-5fd7631f224b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dea05bed-3fe2-4ed8-9217-3c51cb5f8af6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b953729-2bb2-485f-8b5e-4e534663632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c88dfbdb-72f5-4703-ae8f-ccd7fec2155a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb623765-121f-4bd1-9195-7ebe90656de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5253f28a-ef1a-4a5b-8b05-9c87685aca77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7176cd5-8150-4d16-84d7-1cc4240a417a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "482415e7-c365-4ebc-b9bd-9943a10c0e64",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b77201-73bd-4959-a873-add1aa1c7806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1643a89-44c3-4fba-bcf9-d77f50befcf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9e4b175-3ac8-4ed5-b276-db72df583f5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb6a468a-d3b7-484c-9959-9ca7ef221243"
                    }
                  }
                ]
              },
              {
                "id": "6a44f062-bdd8-41fe-88a2-286d4ea4d037",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abfaadc5-e7d7-4bdc-bd0b-32fe5269598c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0b477e8-0314-4b7a-8ec1-17ee32980655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d73dd67-54b5-405c-bfd3-d054343705e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31ba39c2-a407-4ced-9a79-a484e23b5922"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62ea2eeb-2f51-4131-a3fc-66fb4ba1e26a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a039b667-cf13-4275-b5f1-c533dce27853"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39b59320-5d75-4642-8df3-8f2659c25876",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b54d2f0-f894-49ad-9d66-2683c97ab42d"
            }
          }
        ]
      },
      {
        "id": "3b6b5dc9-b571-401e-86d6-2a28b6fd0c72",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "51f764a3-5103-4411-972a-8307e102d328",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e77e981a-113b-463d-a0aa-3d9f352a5b79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee868f08-9b8f-4fe6-af26-2ba6e5567f4f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922e04da-3b59-4611-8f34-db30165d0208",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "61a4598c-57fb-4091-9ef6-acf53e62bd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04be4478-5068-4a82-83d8-b6feae2c1fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd40cab6-2d99-4175-a1a1-fcb0c5522b09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5a0c03-5fa0-411a-a701-39a7f89cc2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf424bc7-44c0-466d-b337-371194011301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0b68584-22f5-4528-99f1-42046f3289d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df46103-913a-4816-9185-f4e0e98d95d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de98d4a5-1150-4084-827e-6f4d220f71db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "310e84fd-557f-496f-9e32-3f6bede5b203"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bafcf7d-f932-46c2-b741-db2e926952a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48d448fd-36c3-4be1-b36c-5f8d72c38249"
            }
          }
        ]
      },
      {
        "id": "4ec49ac0-fb66-46e1-bd10-db143aa1e3f4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4daacce9-7202-4a1b-bd68-3706324f4b34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "125a7df3-c36a-472e-800e-591c96d6fcbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bddbd4cd-8215-4b93-a659-655969a3802f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35ca2f2-c736-4bc7-a392-a6ccb9508cfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5171a8e3-6da4-42ba-bd45-35d352c9c6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da167a60-a84f-4ef2-8e3f-218cc119c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b9c7eb6-6c8a-4567-a542-5cc340c0759e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80c190b4-cf56-4991-a1d6-43e7dc1a2216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bee8d88-c05a-4267-85f2-263e28bc9913"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a7fb122-3edc-49f4-81a1-e7d59c2ca6c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ff1de2-1850-4708-9198-c5c305602044"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a9d1139-4707-47a2-a95d-18ab63f36c7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c686af92-5015-4c51-b860-5b8f7e987ecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f7fa16b-1076-4f8c-b9dd-748ba44d0243",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a0c3996-8302-414d-a7a8-5e584eb84e7d"
            }
          }
        ]
      },
      {
        "id": "dbea4fc3-c24d-4257-a7d5-f6e5eaa75183",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4b99882f-3982-40ea-bdb3-fa438c2b7507",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88e88e32-98ad-41b6-9783-5ed8c9aeeaf9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f90369b0-05d1-4950-9bdb-dab834405117",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec992515-ebd8-41cd-86e0-14a209630806",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4facf3c2-5dbd-46cb-8eaa-f7c81897bbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c280df4-161c-4595-875a-f9a1dd78b769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98b79d35-872b-4022-b147-06ce86feca2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb27df67-d3ce-4d44-b8d6-5c55d0ee41ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5652850f-b9ec-4c6c-a691-68b766f802c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab7484a-41e1-4675-83b7-973cec029c25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25344778-de29-4f82-820b-a3181d8a5e17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28acd800-dd44-452b-ae61-9e8c432c7267",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd270c0a-a573-4731-a24a-1e2edbd0df97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3f2fbe3-e048-4ff3-a695-43203e6535f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9edd2062-434e-458e-9191-8f3698317c1a"
            }
          }
        ]
      },
      {
        "id": "7e9a4fdd-4dcc-4a79-8e99-ac6b8d02b337",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "990fe9bd-c0a3-4a44-be55-a1a586a92979",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70d036c6-f09d-4cf5-9bbc-2c9885b52e71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac6972c3-8e26-40a9-8559-d5899cc31cab",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebf41cf1-27c2-474d-9a77-b316a6fcbc7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "297d85c7-4ef3-4627-ac8d-89bde4bdecc8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.55438596491226,
      "responseMin": 6,
      "responseMax": 2739,
      "responseSd": 322.56630166834174,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704328556140,
      "completed": 1704328596472
    },
    "executions": [
      {
        "id": "07886086-a2d0-4689-b24d-78c8b3b088c6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4d21934f-0918-4b3a-a2da-59dbd4f21509",
          "httpRequestId": "b4cdcc88-a5dd-4833-8551-104cb897127b"
        },
        "item": {
          "id": "07886086-a2d0-4689-b24d-78c8b3b088c6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a102eafb-1c6f-4b83-96ac-fd0fce093148",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "fd02a421-e14b-4484-9e0f-43a6389b0c0b",
        "cursor": {
          "ref": "3cddb0de-6ab5-4206-94e1-b585481aa904",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "162a9c43-1bba-49c4-9f04-1a14ceccdb43"
        },
        "item": {
          "id": "fd02a421-e14b-4484-9e0f-43a6389b0c0b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68768114-e029-43a4-98eb-0b66fb81499f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "77617172-dfa2-460b-97fb-8d1703d4b037",
        "cursor": {
          "ref": "f6d9475f-8988-40f5-adfe-11d7d842b0ac",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce02c408-f97b-4cc4-8f27-1349c927e648"
        },
        "item": {
          "id": "77617172-dfa2-460b-97fb-8d1703d4b037",
          "name": "did_json"
        },
        "response": {
          "id": "73c52f3e-9a58-40ef-a550-ac6684e69e82",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996c268-f7f7-4b66-be85-773a349d1fa9",
        "cursor": {
          "ref": "f461be86-2d81-4dff-9a7b-b8beef562253",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a2644c9-6e80-4918-994e-700f16810d62"
        },
        "item": {
          "id": "2996c268-f7f7-4b66-be85-773a349d1fa9",
          "name": "did:invalid"
        },
        "response": {
          "id": "14ed1701-d865-4946-8cd0-9e204260a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996c268-f7f7-4b66-be85-773a349d1fa9",
        "cursor": {
          "ref": "f461be86-2d81-4dff-9a7b-b8beef562253",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a2644c9-6e80-4918-994e-700f16810d62"
        },
        "item": {
          "id": "2996c268-f7f7-4b66-be85-773a349d1fa9",
          "name": "did:invalid"
        },
        "response": {
          "id": "14ed1701-d865-4946-8cd0-9e204260a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e234550-7b7d-4e8e-b0cf-af8b470fb09e",
        "cursor": {
          "ref": "f036f6a2-0601-452c-b8a0-10d533c3b9ad",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "efcec6db-a057-4788-a50c-38be2f7e5bf5"
        },
        "item": {
          "id": "5e234550-7b7d-4e8e-b0cf-af8b470fb09e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e5e7b89-fdf3-415a-9060-ecdb58cdede2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307a0191-e996-4426-a1eb-11f794a3bea7",
        "cursor": {
          "ref": "b46748b8-ccf0-4f5d-b87b-42c4a9a200a1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b5c26681-dba1-4126-949e-17e5ae08dba3"
        },
        "item": {
          "id": "307a0191-e996-4426-a1eb-11f794a3bea7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "63645a86-23c9-4377-beab-46a4e1a935a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c54f47-ee31-4ce5-a519-887d7f1c2dbf",
        "cursor": {
          "ref": "f7d0618b-5a0c-494a-b348-39f437656490",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ddd9f6ae-8049-4fef-abf2-5fb2bc2b7c2f"
        },
        "item": {
          "id": "b9c54f47-ee31-4ce5-a519-887d7f1c2dbf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f20b0953-6f01-4879-8431-9b1fa1704f39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4d6ea5-ec2f-4916-ba80-e1b933a284c6",
        "cursor": {
          "ref": "1850c593-70fc-4cb3-a38f-2cde1e909582",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f884076-b79e-4b25-a529-90c30b715200"
        },
        "item": {
          "id": "6e4d6ea5-ec2f-4916-ba80-e1b933a284c6",
          "name": "identifiers"
        },
        "response": {
          "id": "e28db875-5e60-46ad-9831-f3e3de44a1f7",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e62eaf-4fd2-425d-89fc-f50a58b54df2",
        "cursor": {
          "ref": "a734e9d6-708f-4602-9486-93c912c8d446",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e80c4bd2-1a71-4b34-974b-96080cbdfd95"
        },
        "item": {
          "id": "05e62eaf-4fd2-425d-89fc-f50a58b54df2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f5428658-064e-4003-adc3-4056f0f3a7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8c8901-a2f7-44cd-b71d-15a6f2d5ff83",
        "cursor": {
          "ref": "72600806-cf66-40f0-8c51-0c72a704c2a1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "278312e7-c654-49b1-bee2-711755a2f5d0"
        },
        "item": {
          "id": "7b8c8901-a2f7-44cd-b71d-15a6f2d5ff83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03162b65-4081-4c3e-b716-f8f0feb1662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fc9a2a-0e3a-401c-ad54-9178b23069b0",
        "cursor": {
          "ref": "2b0d17ae-e353-473c-a415-a52fcbca8609",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f1845273-7497-4a4e-91ef-88412a8c5ea7"
        },
        "item": {
          "id": "d0fc9a2a-0e3a-401c-ad54-9178b23069b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "59b303c1-efc8-49af-9a6e-8b7711f152d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db88c900-8c87-438a-ab61-8722eac1eb30",
        "cursor": {
          "ref": "ba667c7b-d170-4b2d-a442-286263232922",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "416b3d2a-ce10-4103-9574-5aebf29c505c"
        },
        "item": {
          "id": "db88c900-8c87-438a-ab61-8722eac1eb30",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0499febb-a45a-4f4c-ab0d-c97e115e1689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f75277-f3b4-41d2-b818-24577a8923b1",
        "cursor": {
          "ref": "2c5a6d6c-186d-443d-8ed3-79a3bd2f10b5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6b35ba5e-f2ac-4b27-978e-8f9728c44d44"
        },
        "item": {
          "id": "c6f75277-f3b4-41d2-b818-24577a8923b1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f8047093-3888-4788-b1f6-1c7c15b52241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2863cf6-d312-49fb-b09f-c1a7a59797a7",
        "cursor": {
          "ref": "b5bbdceb-fe01-4af7-ad56-337f9b758059",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d164ed29-d61a-4ed6-93d6-f5042042ae73"
        },
        "item": {
          "id": "e2863cf6-d312-49fb-b09f-c1a7a59797a7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15fb3c3e-0e38-4261-bc13-33a4ba947185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493202dd-ac83-4bc8-acbd-001207f0cd9c",
        "cursor": {
          "ref": "2fece2cf-b8f1-4cd2-a887-b77e8c5aabcd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e2555a2b-6eaa-4960-9b26-b84fd207a11f"
        },
        "item": {
          "id": "493202dd-ac83-4bc8-acbd-001207f0cd9c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dad78bcd-4409-433e-94d1-5ba08e6b200f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477c6d9a-8e00-4590-b264-11719986027e",
        "cursor": {
          "ref": "a08c29a5-4974-4201-99b0-33c973cce2be",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d55bc704-b7bb-4d2b-a110-375365229c30"
        },
        "item": {
          "id": "477c6d9a-8e00-4590-b264-11719986027e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb293c71-eb57-45a6-ac44-691592734e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c1622-38a0-46aa-b9ff-dab7d56125d7",
        "cursor": {
          "ref": "b6212634-cda1-4c67-93bc-a2b61ee675df",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5be1f86f-2488-4e54-8bcb-2c08622898fe"
        },
        "item": {
          "id": "784c1622-38a0-46aa-b9ff-dab7d56125d7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f211a6e8-7e93-4ee6-a076-5a6904db0aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7493014-b5ba-4558-8cd1-4ff82b3c9d1b",
        "cursor": {
          "ref": "c9c2a0ee-ab72-4cd8-899d-9a9d7c7bbb0d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a8e941cf-79e0-42ef-b3df-e3fdf76c9e58"
        },
        "item": {
          "id": "b7493014-b5ba-4558-8cd1-4ff82b3c9d1b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41037712-3d95-4223-b1bd-af27b727869b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950e05a1-3353-4cf0-9e39-36586290ed20",
        "cursor": {
          "ref": "d47b6e0f-3a3f-4722-87f4-80f88e0de48c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9c263d81-0b99-4cd8-97b4-db02933ca526"
        },
        "item": {
          "id": "950e05a1-3353-4cf0-9e39-36586290ed20",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "da98980f-5148-46a7-96d0-965e360a730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c059172-4c50-4135-b3c5-c0c7d1e0a2b5",
        "cursor": {
          "ref": "473b5498-0ef3-46c4-9d18-f8a9fab98ef0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8841de37-9838-4d62-bf2e-5614e9296565"
        },
        "item": {
          "id": "7c059172-4c50-4135-b3c5-c0c7d1e0a2b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "beed8d88-1af9-47ca-becb-77bdb08e44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03711e67-6c75-45a0-84c4-9384ee779337",
        "cursor": {
          "ref": "a683e741-7639-49e4-9fde-19dd22a03594",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3a1830fc-789c-41bd-bb8c-9a88032dfa7f"
        },
        "item": {
          "id": "03711e67-6c75-45a0-84c4-9384ee779337",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "846cacf9-0c48-44aa-8746-f2954cbda7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55080af0-3fff-41bf-8018-9dab972676d7",
        "cursor": {
          "ref": "bad54897-a96d-4238-a9e7-d18e632e2caf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "291e3fbe-6dce-424e-a5a1-bdf522dd3153"
        },
        "item": {
          "id": "55080af0-3fff-41bf-8018-9dab972676d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34df1739-d715-4280-b5eb-57bfd30dcaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1480df0-b441-4bab-9971-86be4cbf79f5",
        "cursor": {
          "ref": "bfa61161-2be2-4a08-9ec8-a29026d89a6e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aa48d672-3ec3-417f-833b-adc1662e42b0"
        },
        "item": {
          "id": "a1480df0-b441-4bab-9971-86be4cbf79f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "994fe4a3-6e1a-4559-a21c-e02f3a5bdb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26102a5-bd53-4489-9a25-5ad9ea4c23f0",
        "cursor": {
          "ref": "c73a32b1-fa86-466f-a2da-8be13bce9d05",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7322bdd3-23fb-4d5c-9b56-fe4f7e9db660"
        },
        "item": {
          "id": "d26102a5-bd53-4489-9a25-5ad9ea4c23f0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1bda8d6e-f930-4079-be70-7ab1c999bfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd92e4-3c20-4e04-9a3e-458e218a040e",
        "cursor": {
          "ref": "5524a92e-439a-4b47-abe7-28ecfe66bc82",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "47002a87-7c3f-4b8a-bb82-feba72583f79"
        },
        "item": {
          "id": "f2cd92e4-3c20-4e04-9a3e-458e218a040e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fd9a8717-0c5a-40fa-a760-122cc3647b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c44999-2d52-439d-8187-1a9688548a3d",
        "cursor": {
          "ref": "3599ff36-2749-4142-bc63-763991c82add",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d3af9d67-b214-44c1-992e-659633b235ef"
        },
        "item": {
          "id": "b0c44999-2d52-439d-8187-1a9688548a3d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7be2fd6c-e8ed-4912-ba06-38a0d086f778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fcf6c9-127d-4446-8444-d9cebc5b07c8",
        "cursor": {
          "ref": "913da6ab-8bf5-430c-b9e4-7251adbc951b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a58fbfa2-c19f-4c11-a2b5-e91da4312849"
        },
        "item": {
          "id": "37fcf6c9-127d-4446-8444-d9cebc5b07c8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "24298ca4-037c-4ffd-9629-55ed73792fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ef59a6-7be9-4b49-97b1-00e1e4c16a97",
        "cursor": {
          "ref": "1b0deedd-a451-473a-b2ff-ed580456951f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e83f96c-148f-4c73-b4c4-7a5d0e7cb924"
        },
        "item": {
          "id": "28ef59a6-7be9-4b49-97b1-00e1e4c16a97",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9243fde-06be-4cd3-b915-3b8217bfd9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9dcef8-f88d-4a38-8ffe-4cc9299a2264",
        "cursor": {
          "ref": "7a3baf6f-89b2-4a08-b156-de855814f6a7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1aa1ec2a-4b49-4dbc-b73c-a1b334c270ca"
        },
        "item": {
          "id": "dd9dcef8-f88d-4a38-8ffe-4cc9299a2264",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a66a6184-4fce-4ea3-85d5-3f7e64394cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929d0896-625f-41a8-8bb8-a272d4f2d9fd",
        "cursor": {
          "ref": "28c385ff-0a54-4f1c-89fc-75ef306af37f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c3fc902-7b2f-485c-8f5f-fbd39da462e2"
        },
        "item": {
          "id": "929d0896-625f-41a8-8bb8-a272d4f2d9fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5cea4c51-468e-466d-9361-675ac649a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc62f505-458d-4662-8936-76b179b6a8d0",
        "cursor": {
          "ref": "9a2ea7d3-4e74-4dcb-af4d-bbcc96811d3e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f44295ac-1830-4dd7-bdf9-be78ba96536f"
        },
        "item": {
          "id": "dc62f505-458d-4662-8936-76b179b6a8d0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b990078d-088d-4b5d-ac0c-13e8112afaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b30df5-464e-447b-b62c-371ed25a8dd4",
        "cursor": {
          "ref": "fa52af7f-d9d0-40d3-9f29-8794287ec782",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f4ccf8f7-b6ca-49f9-a3e4-33fa6158cc81"
        },
        "item": {
          "id": "99b30df5-464e-447b-b62c-371ed25a8dd4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "02703840-badf-4b0b-9d7e-203649a1c1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e82da-d992-42f9-8a87-d3e62b446791",
        "cursor": {
          "ref": "f2c2742e-1437-4407-97de-2aedb125070d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2974cfb-97f9-4df6-9a80-402297806761"
        },
        "item": {
          "id": "401e82da-d992-42f9-8a87-d3e62b446791",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "af733bc9-f44c-43ad-8f8d-361315f3c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdd8393-0355-4460-804f-28131a5245a5",
        "cursor": {
          "ref": "7dde1605-40fd-41cd-9da4-9fe1357333f3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "94676cc6-6ef2-4ec0-92f3-f13122e7931e"
        },
        "item": {
          "id": "6fdd8393-0355-4460-804f-28131a5245a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f9f5ede2-cc92-4cf0-ac6d-864024aa6d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce20ae01-e85e-4121-9c4e-d995c5d277f0",
        "cursor": {
          "ref": "dff684e2-1eb0-4997-8264-804b68a52a24",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b79667e8-5961-4f66-9f75-de71866ad83a"
        },
        "item": {
          "id": "ce20ae01-e85e-4121-9c4e-d995c5d277f0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "032ed71e-facb-4a3a-83d8-e5f894942c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce02301-dcce-4c02-8741-6c453117883a",
        "cursor": {
          "ref": "ad373bfb-633e-44d5-bba3-7c88a9a21aa8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f120145e-1569-454c-978d-0c04ad7454aa"
        },
        "item": {
          "id": "6ce02301-dcce-4c02-8741-6c453117883a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34cbd3a0-d3b9-434b-bc24-e7aae6d1c374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757084db-a900-48cc-b751-fab2ef386115",
        "cursor": {
          "ref": "b11d2bf3-3150-4928-bfc3-f6157c51cdc2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fb340970-21f9-49c7-9cd2-c4b043b1371f"
        },
        "item": {
          "id": "757084db-a900-48cc-b751-fab2ef386115",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15f32148-4e4a-4e88-9787-94f647efdf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc52a1fc-e687-42f7-93b9-80f1a33b8706",
        "cursor": {
          "ref": "752197a3-e89c-459b-ad1e-10b0fbc7f5f8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e2bf53ff-89c8-478e-8f19-50cb102c9691"
        },
        "item": {
          "id": "dc52a1fc-e687-42f7-93b9-80f1a33b8706",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dd5d45bd-7ee0-4860-ac41-5ab1a2a44d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f132e559-cc9e-400a-b8cc-5c851c90ff96",
        "cursor": {
          "ref": "8f651ad9-f6d1-462f-bc35-97044a06c6a2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "40db5247-fa8b-40b4-a94d-e76ef9f7c6a8"
        },
        "item": {
          "id": "f132e559-cc9e-400a-b8cc-5c851c90ff96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "41ad324b-ccf7-4bcd-8570-ae49804213cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6caf872-a15e-47ac-bb1b-7f2b0d5de998",
        "cursor": {
          "ref": "cd05534a-d00d-4403-b2be-69559fa95c0e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "709e8ed0-304d-4947-a0f6-860605e671fe"
        },
        "item": {
          "id": "d6caf872-a15e-47ac-bb1b-7f2b0d5de998",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fbaefc7c-f41c-4b77-b098-6f33a841fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe73109-ecf8-40ae-890a-ae36fa940a36",
        "cursor": {
          "ref": "0a35f65e-9d2d-4f17-b2eb-956b8084b62c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "528b3c8c-49a7-4058-a969-25e64683cb47"
        },
        "item": {
          "id": "7fe73109-ecf8-40ae-890a-ae36fa940a36",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ffa6747-c687-49c2-9233-7cafa9693054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2163a924-32af-47be-bc58-f2e8841b59ce",
        "cursor": {
          "ref": "0bde73d9-ed5e-4a09-b7c5-778c92fbd292",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a6e45da8-3612-421d-ad9a-305d316aba7b"
        },
        "item": {
          "id": "2163a924-32af-47be-bc58-f2e8841b59ce",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c1d4d969-6170-4417-beee-86b5089eae5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ac3c4-ea9f-4a67-a12f-4e8c6bacf331",
        "cursor": {
          "ref": "c6937f72-4407-4e4f-b07d-73be97bda970",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e516b402-a7b3-4a84-9946-29d035b50318"
        },
        "item": {
          "id": "b64ac3c4-ea9f-4a67-a12f-4e8c6bacf331",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "77865acc-3864-4d6d-9cf2-6768b80299bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9ce6f7-1cdc-4492-8a80-9f97405979fe",
        "cursor": {
          "ref": "952b08ff-e8fb-42bf-901d-c6b47b3aef02",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6acc1fad-581f-4453-8cac-c10ef9a500a9"
        },
        "item": {
          "id": "4a9ce6f7-1cdc-4492-8a80-9f97405979fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c9975670-7099-4611-94c3-25ba3c65aa0f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a16b9-03b5-417e-8d14-6c6799bb7316",
        "cursor": {
          "ref": "8a61efb7-dbce-40e4-9470-3d9caff10466",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b895917-ef66-4a05-aa4e-eb1098f98398"
        },
        "item": {
          "id": "630a16b9-03b5-417e-8d14-6c6799bb7316",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7587c06c-f4c4-4ae8-9572-84cf3ff68c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18f6f71-9e54-4894-9b82-fde48d7cbcfa",
        "cursor": {
          "ref": "5b3e3de8-93df-468f-8f8c-2b7d1efccf3f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eb16ac47-02d7-4223-8f09-f82bc492a603"
        },
        "item": {
          "id": "c18f6f71-9e54-4894-9b82-fde48d7cbcfa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "518b90bd-4ea3-4f69-bc03-ab72bcf9e863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c2c57-0312-444d-ba07-b708b777adb1",
        "cursor": {
          "ref": "48acf200-d10d-45c9-9ac7-39b633bfb25c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bf796cea-6bce-41ce-a173-d75e86e0ebec"
        },
        "item": {
          "id": "580c2c57-0312-444d-ba07-b708b777adb1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "68d25807-d248-4376-bb8d-72d8dc1df77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1b8a19-5059-466f-9153-12cd1160b8d5",
        "cursor": {
          "ref": "8ec8cd5d-7677-47ae-89b1-79efceb0e42c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5371ffc1-316b-439b-855c-7d153edb7702"
        },
        "item": {
          "id": "3e1b8a19-5059-466f-9153-12cd1160b8d5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "390196c6-b685-4846-b910-450c607d700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cfa976-4ae6-4a33-a667-9141682a3d34",
        "cursor": {
          "ref": "50408d35-fcf8-497c-8c80-8d5bb3c93d96",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e6ea4184-a75c-436c-bfc9-088fedf660d9"
        },
        "item": {
          "id": "93cfa976-4ae6-4a33-a667-9141682a3d34",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0f5010bb-edd2-40b9-b02a-a3795e2efdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277c4d25-1404-45ab-a53a-4983216190c5",
        "cursor": {
          "ref": "9d6a3f89-b80f-4f23-aae0-f59a6c899672",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4fea5239-a370-4f78-94e7-f8a6cc0b5ce1"
        },
        "item": {
          "id": "277c4d25-1404-45ab-a53a-4983216190c5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "48095aa6-051e-4c3c-9ddb-88aee04ceb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f49ca5-4aae-43e2-b9eb-3596a30adcb5",
        "cursor": {
          "ref": "99a74e1c-5915-4d23-a473-1317f5bd7852",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6412b53d-6499-4e24-9040-e88cc39446f7"
        },
        "item": {
          "id": "47f49ca5-4aae-43e2-b9eb-3596a30adcb5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "423e0842-2b24-49c2-bdfc-9a24de6f190d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 356,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068c3005-aba9-4cac-9892-c613e2a0b6da",
        "cursor": {
          "ref": "637e962f-1ac8-4b4c-9906-d63ac2677600",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a55ed848-6181-4f6e-be41-5c7d6f217e5e"
        },
        "item": {
          "id": "068c3005-aba9-4cac-9892-c613e2a0b6da",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2344e7a-68b8-4b4d-87d1-f0ccf229298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03e0bbc-81e3-4f82-b09e-2cf61664937d",
        "cursor": {
          "ref": "a207c0b7-ee72-4046-b2e2-d990d64789ec",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d930f414-d191-4126-8f1e-fe89dce26a95"
        },
        "item": {
          "id": "b03e0bbc-81e3-4f82-b09e-2cf61664937d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ecd78ce-c245-4de3-884e-8208f6a00c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27926ff-0ff0-499d-aa13-3be07a41d331",
        "cursor": {
          "ref": "69906a53-323f-4a9b-86b4-3022a483896b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66dcab29-739d-4239-97c5-972f47971b7a"
        },
        "item": {
          "id": "e27926ff-0ff0-499d-aa13-3be07a41d331",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f9e5c6d0-7996-41b1-a60b-69c8fa2bd254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505fba4-66c7-4294-8435-a8dcaaaa5239",
        "cursor": {
          "ref": "ebb3ee51-7c4e-46e9-9880-448d69a99090",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "494d13eb-e91e-4349-ab2a-7ceeb395e6c6"
        },
        "item": {
          "id": "6505fba4-66c7-4294-8435-a8dcaaaa5239",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7aa363fb-fc28-434b-93ce-031bc8940c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e834c841-4fd3-410a-a51d-d40a5b1ba614",
        "cursor": {
          "ref": "d0bf2cf8-c8b8-4aba-94c8-eb04642fb2ea",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "158efe61-49cd-496f-8708-a2878168cf16"
        },
        "item": {
          "id": "e834c841-4fd3-410a-a51d-d40a5b1ba614",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8a6d2901-6d04-40a2-b0fa-66f7f9bad413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55256f37-2cd8-4a02-84f2-91d80a7c5518",
        "cursor": {
          "ref": "e3189fde-4172-44c8-aa2e-0a4cd7ff8a09",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "57fdaa5a-3d7f-4d81-adf7-4533d1c5c0e3"
        },
        "item": {
          "id": "55256f37-2cd8-4a02-84f2-91d80a7c5518",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04b8cdb9-3121-470f-9a46-8173ebc3e6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5e79c7-cff0-4114-a55d-b4f0c3b093c2",
        "cursor": {
          "ref": "cb8d8551-9e61-4c4f-835b-b825249a6039",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c1e7f582-0c2b-4400-bd23-381ff1def231"
        },
        "item": {
          "id": "ce5e79c7-cff0-4114-a55d-b4f0c3b093c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d7bc81d5-1c33-43d5-9b4f-173e14f0677a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb2154c-9f2f-4228-a04f-aaa314627d39",
        "cursor": {
          "ref": "90adb68b-ea3b-4e00-8b15-8b389ea7a65f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "975fa075-a1db-45d2-ba60-af9ece23045a"
        },
        "item": {
          "id": "bdb2154c-9f2f-4228-a04f-aaa314627d39",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6a630876-49b8-4343-aacf-238cb7228270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eb9209-628c-4ee6-bc01-729ce3ed1b43",
        "cursor": {
          "ref": "365c5f55-e346-4676-814b-ded1916595ed",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d9d99a2-2638-4a17-a4ca-2e5cfc6102d2"
        },
        "item": {
          "id": "b3eb9209-628c-4ee6-bc01-729ce3ed1b43",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "688e4d42-52e6-4214-83c1-f6187272c6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d97f75b-d884-40d6-b5d0-0a23d0b6f50e",
        "cursor": {
          "ref": "1d199391-1944-4051-938f-4d5d465b496e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76ad2f5e-999b-4582-a12c-2afa2c21f868"
        },
        "item": {
          "id": "0d97f75b-d884-40d6-b5d0-0a23d0b6f50e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0ba910bb-47f4-481b-bb53-121bb78db07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdf7c54-3fad-4eee-917a-7a6a8c0290cc",
        "cursor": {
          "ref": "6e29ebd6-f9c4-4915-ba23-9d081bfe6a63",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ca50a8b-0c18-45d9-a098-a891f0bace4f"
        },
        "item": {
          "id": "0fdf7c54-3fad-4eee-917a-7a6a8c0290cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1cafa4fb-4eb9-4f75-ad90-88d62df695a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6d6295-c02f-44c2-bc89-8877080f98e6",
        "cursor": {
          "ref": "bd1d74b6-ff62-4b80-ac42-3b2af1ab472e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7554fe4d-a679-4205-9547-65ac925a076e"
        },
        "item": {
          "id": "aa6d6295-c02f-44c2-bc89-8877080f98e6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a006fc5-fad6-4396-a413-2149ece10bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818d5a1f-b5f1-4575-bf4b-eaccea495fd1",
        "cursor": {
          "ref": "03959e16-c7ec-4e67-aa66-3105950a04cf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7229c68a-5ae3-4b1f-b1aa-86d43e40edd6"
        },
        "item": {
          "id": "818d5a1f-b5f1-4575-bf4b-eaccea495fd1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2f0829e5-5bb0-4316-aa4c-4faa9e415531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee693cec-906d-44a7-b085-94bccb61721c",
        "cursor": {
          "ref": "1cfabfe0-313b-4bfb-b166-e7f734a57ddf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3ed2cc19-bc9b-4cb2-ba30-6c7501f15fe3"
        },
        "item": {
          "id": "ee693cec-906d-44a7-b085-94bccb61721c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "abb88206-3eaf-4494-a8a2-bbbca0f777e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f8f6b-2549-45bb-884f-f273e3c92f18",
        "cursor": {
          "ref": "0b645c49-9cef-43da-8b30-e8d35a841454",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "de33bf03-6cdd-4f33-af33-80627a7cca57"
        },
        "item": {
          "id": "567f8f6b-2549-45bb-884f-f273e3c92f18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8e350a25-afd3-4c22-a116-67f6fb417372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f59d28c-d614-41af-9159-42501f4cfb85",
        "cursor": {
          "ref": "074674df-ad59-4495-8d98-723d1b6d00c2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7d0ba6ca-7f28-472d-abce-5fec4d2d0d60"
        },
        "item": {
          "id": "7f59d28c-d614-41af-9159-42501f4cfb85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f8c96dc-c310-442a-aa26-1fcafe5d8bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09829359-06d8-409f-bb15-9cdab35d2f05",
        "cursor": {
          "ref": "145fe08b-4f18-4c50-854c-fd554b424a9c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fe23d324-7efb-4c7e-a03a-86ca84903546"
        },
        "item": {
          "id": "09829359-06d8-409f-bb15-9cdab35d2f05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c6c94c1e-df03-459e-abec-7e47cdd0c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24910f8f-cb74-424d-ac34-aa0e66e68f63",
        "cursor": {
          "ref": "ab7b07e2-409f-475e-a53f-16f8fcfb2781",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6d87c1c3-ae21-4a5f-a9f5-7ead63e5133d"
        },
        "item": {
          "id": "24910f8f-cb74-424d-ac34-aa0e66e68f63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7257cacc-7a1f-4c8b-b16b-8154d3963921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98389d3f-1417-4f26-b46b-b2eb3f6124fb",
        "cursor": {
          "ref": "4ed8128e-8623-4b83-91bd-52bdc8b1ca0c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f6abf65-41e3-43f4-a23b-e24d3b025fb6"
        },
        "item": {
          "id": "98389d3f-1417-4f26-b46b-b2eb3f6124fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7bef15d4-c436-4e02-8242-badffa772500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9117eafa-f399-4d03-9c62-d7fbda1e4079",
        "cursor": {
          "ref": "95504ada-6b78-493a-a53d-068dbed56484",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a420e3d6-3a27-44f6-93b4-f4345cebd886"
        },
        "item": {
          "id": "9117eafa-f399-4d03-9c62-d7fbda1e4079",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ba649cf-8306-412f-8b16-f92a65613499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee824e-2748-43ed-9b90-e456c1104d37",
        "cursor": {
          "ref": "7a516cdb-9c70-4409-be42-c70f85e47543",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "685f43a9-5a85-463a-85ab-56c0081e7b78"
        },
        "item": {
          "id": "aaee824e-2748-43ed-9b90-e456c1104d37",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "309f3557-8031-4e54-8964-b7111a841196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effabc22-d207-462e-9128-f739d9c9378c",
        "cursor": {
          "ref": "0c95a05a-4f53-4312-a847-3fa4c633baf3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c28746a7-124b-434f-a9cc-ccc17ced6419"
        },
        "item": {
          "id": "effabc22-d207-462e-9128-f739d9c9378c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d453954-aa09-4c48-92b7-870df0636663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544f861b-27dc-413d-875f-d594db3f6299",
        "cursor": {
          "ref": "370ce642-faef-4db5-b450-62a83aaa7c46",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a45ce54b-5d99-41a4-bf46-fef39283cc4b"
        },
        "item": {
          "id": "544f861b-27dc-413d-875f-d594db3f6299",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "83d3d49e-355a-4eb4-becf-68dcb1b0861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5919d1f9-d712-438d-9628-3339c5811d38",
        "cursor": {
          "ref": "097db77e-4482-4c5c-a11f-0d0110dfda15",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ef6da40b-025a-4820-84e7-9da7a55885e9"
        },
        "item": {
          "id": "5919d1f9-d712-438d-9628-3339c5811d38",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c482085-fdc4-46d8-be12-e1b7a3b46875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb535ea-497d-48f7-99c1-58717787efec",
        "cursor": {
          "ref": "7a82f6a3-8c57-4aa1-8015-9f8b71dbadff",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eea07eae-cefb-456c-a352-52536d757c5b"
        },
        "item": {
          "id": "dbb535ea-497d-48f7-99c1-58717787efec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4f8815d2-187c-42db-a3ce-421a0c437a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524c86c5-44e8-4c47-bfaf-8618cfae6c58",
        "cursor": {
          "ref": "4119e944-f0b1-472d-ab64-97c3b4f5aee5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "532d16f8-d4b3-4e28-825f-53267a704691"
        },
        "item": {
          "id": "524c86c5-44e8-4c47-bfaf-8618cfae6c58",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8db33123-ccfd-41bd-bbd9-2e78e2b59e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e924fe4-bbe0-4c87-8f12-51e7cf9c0353",
        "cursor": {
          "ref": "eb1807c5-3e7d-4066-bea1-fa858943510f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "052675fd-b7e4-4da7-b00e-ad478b629de1"
        },
        "item": {
          "id": "6e924fe4-bbe0-4c87-8f12-51e7cf9c0353",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c672823c-41c5-4868-8b87-ae14d77814a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55235c15-768a-4de1-bf2e-2c98ef14ff80",
        "cursor": {
          "ref": "019204a1-b588-46b1-96b2-1287655bbc81",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "26b97f89-9746-43d7-a42c-26a06568855e"
        },
        "item": {
          "id": "55235c15-768a-4de1-bf2e-2c98ef14ff80",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bbe9db15-8657-44cb-91cd-e425ae0ba955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7420331-130f-4c9f-9a4f-a57958ce2961",
        "cursor": {
          "ref": "f381b498-32e2-4e78-a9ef-cef3e9712087",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "432d3e20-8a8d-4226-97ea-4285db208146"
        },
        "item": {
          "id": "b7420331-130f-4c9f-9a4f-a57958ce2961",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f57c0d2f-685c-46e8-aab8-b97ac5543d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e1fbf2-b757-4199-b947-fcd47378067c",
        "cursor": {
          "ref": "adb5fbe1-d397-4db3-8526-27380ef2cdc3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "01107c85-5f75-440a-a1d5-5d60841fb59d"
        },
        "item": {
          "id": "03e1fbf2-b757-4199-b947-fcd47378067c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f332eba6-d5b5-4420-8903-c0e68157a8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e854ed-1b5c-4405-96e1-ecd5377799dc",
        "cursor": {
          "ref": "5ac5aee9-bf44-4d7c-9398-c6fbb939adcf",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6225709c-5f02-4de6-9cf0-92a24afd45b0"
        },
        "item": {
          "id": "33e854ed-1b5c-4405-96e1-ecd5377799dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "32ba1af9-5712-41ae-a7bf-c004bc314a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fbf586-0dda-4b2d-8342-9c52085f1334",
        "cursor": {
          "ref": "e046a2cc-682f-4d54-9a2b-2535c4baa166",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "73fcd650-3998-492c-b7bd-303a9b9486f1"
        },
        "item": {
          "id": "f0fbf586-0dda-4b2d-8342-9c52085f1334",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3104a391-d693-447c-8df2-52caa1dae8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0516cd-206c-4d44-bf2e-ff1b1c2bba1c",
        "cursor": {
          "ref": "25111357-696b-44a6-a52f-cbdb3cedd05c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "66414170-e4a5-48c6-bebd-3203e51052b7"
        },
        "item": {
          "id": "9e0516cd-206c-4d44-bf2e-ff1b1c2bba1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0a5a1d51-e842-4481-90ea-0091fc7ebc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6760591-e776-4783-90e0-de424c03aa1d",
        "cursor": {
          "ref": "890a612e-533b-44b0-a9c2-4bce3c2e6444",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dd12e0c1-7d01-4624-816c-5852b908c3c9"
        },
        "item": {
          "id": "f6760591-e776-4783-90e0-de424c03aa1d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6516875-9726-4c8a-8de8-1bf41c0ad1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422ff421-f364-4fcf-a7a0-b7f5bb04cf73",
        "cursor": {
          "ref": "d7a98792-6191-4958-b129-db3daceb42d6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d86b54e5-872d-4425-a983-cc8023e30793"
        },
        "item": {
          "id": "422ff421-f364-4fcf-a7a0-b7f5bb04cf73",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0990cb86-2e34-4c73-ac3c-6ee83754cdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c074f0-cb24-41b2-90ac-6d13b5f84bfc",
        "cursor": {
          "ref": "a7e3aac0-534e-4270-8b74-695920041e60",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "585cc3c7-80b5-443e-b95a-321c8049f1c1"
        },
        "item": {
          "id": "a0c074f0-cb24-41b2-90ac-6d13b5f84bfc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b6483f81-7356-4c63-935b-5cefb6c288e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc270984-4089-4ba9-92fe-3b528d8a2bf9",
        "cursor": {
          "ref": "7dce08d2-321a-48da-9708-ef77e0bc6ead",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64eda113-18fb-4012-8dbc-39fd370ec197"
        },
        "item": {
          "id": "cc270984-4089-4ba9-92fe-3b528d8a2bf9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "66d71dea-bfe4-4630-b1d7-729ac59916d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9bdaa-845b-468d-94ee-ca0dcad5f02e",
        "cursor": {
          "ref": "72d5fd45-9a1a-41a9-91dc-8a3bc6ee87a7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22850b4f-8834-492c-bf95-42ff88e65019"
        },
        "item": {
          "id": "93b9bdaa-845b-468d-94ee-ca0dcad5f02e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "84af06be-d86e-482b-b299-e183ed281071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba34c58-f832-41b7-8d07-c6b71bec1b7d",
        "cursor": {
          "ref": "d03b4b8c-2df2-4e32-b363-acda6f5418ea",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4622831-9dd1-4724-a6c0-f1922dcc3c70"
        },
        "item": {
          "id": "3ba34c58-f832-41b7-8d07-c6b71bec1b7d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dc4846c5-3421-4d03-a354-ac909f59b83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1811508c-1894-4c24-a123-134f50cd2994",
        "cursor": {
          "ref": "afc07640-395f-45d0-9add-96f30c5d5d91",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ece5ad86-9da9-4d0c-b3b0-d29c0b1d2317"
        },
        "item": {
          "id": "1811508c-1894-4c24-a123-134f50cd2994",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cdb8846b-76e3-4930-9e55-9d2ed06dab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05616ab-6a63-4f1a-80bd-0f15d9e52ea2",
        "cursor": {
          "ref": "46cf096a-55e1-45be-8465-ad77b195d4b3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0ae589b1-1879-4f4a-a4b3-45559903ef68"
        },
        "item": {
          "id": "a05616ab-6a63-4f1a-80bd-0f15d9e52ea2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5bd35f76-54ad-4fe0-a13b-61b7b91bdcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739e0d4b-18d2-4360-bcaa-fa20b553d917",
        "cursor": {
          "ref": "a8e0f770-bac3-4eab-9320-650e06947d26",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e172f141-1251-49bb-ab34-7cdfbf1153bc"
        },
        "item": {
          "id": "739e0d4b-18d2-4360-bcaa-fa20b553d917",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dbd607f1-c116-471f-9a1f-7acd5ad8a80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0a301b-c512-4dc8-92e7-a86dc0c827c2",
        "cursor": {
          "ref": "42eebd40-6df5-4e19-8735-529644f7be60",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "488bb16c-f311-4767-9301-5a54983b0958"
        },
        "item": {
          "id": "0c0a301b-c512-4dc8-92e7-a86dc0c827c2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2ffe9c7f-72d8-4f8c-adbd-3c451eab42ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ac0911-918d-41c8-bf47-1f47776aaceb",
        "cursor": {
          "ref": "4ea167ea-a8b6-42ff-ae3a-8393cd8888d5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "181e7e78-5191-4634-b57a-7bd604650dc9"
        },
        "item": {
          "id": "e1ac0911-918d-41c8-bf47-1f47776aaceb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "43628840-f546-45cc-b4f8-d169bdb325f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79126fe0-d8d7-47a4-b681-98c0b299c8e2",
        "cursor": {
          "ref": "f8f11758-db3f-46f1-a535-d8484376e651",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3863bf73-9218-4916-bcc8-190b82bd60bf"
        },
        "item": {
          "id": "79126fe0-d8d7-47a4-b681-98c0b299c8e2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e18bd9a-6373-4b71-b2a8-cb2d8a3e9ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00649b1-02b9-4632-9b87-7799c219a917",
        "cursor": {
          "ref": "aec30e2f-b7c1-4308-af40-795136a96d7c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e5b1f733-4374-47f2-a999-6ba643bb1eca"
        },
        "item": {
          "id": "b00649b1-02b9-4632-9b87-7799c219a917",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "70c98c56-fcab-47bf-a5a5-9e52c1884f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f749fbaa-546c-4c74-a477-ea14547f7afa",
        "cursor": {
          "ref": "c4805882-42ef-4508-ab28-40a9f72f77b1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ec18731-0a7b-4aa8-bd8d-67a128be01ac"
        },
        "item": {
          "id": "f749fbaa-546c-4c74-a477-ea14547f7afa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "81ee13d3-0051-4e9b-8480-d0dbab08d365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250ea61e-bd26-4a21-a97f-951c3a1786c9",
        "cursor": {
          "ref": "60a1f6fb-a319-46a9-83bb-6ed4b8a15082",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a8ee3c7e-6f99-4c50-9fa0-171321fb8214"
        },
        "item": {
          "id": "250ea61e-bd26-4a21-a97f-951c3a1786c9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5b44ade5-0182-4174-a1be-c646fecde1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c5fede-4f99-4e2f-9fe8-381f1d6d922a",
        "cursor": {
          "ref": "321f04f3-0446-44dd-a293-e4d3c39f9073",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "03ff21fc-c77f-4051-ac32-d02770829fb0"
        },
        "item": {
          "id": "53c5fede-4f99-4e2f-9fe8-381f1d6d922a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "60fed2ae-9638-49ec-9508-86d791db6269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac868c5c-7927-4c39-a357-201e91a14fbc",
        "cursor": {
          "ref": "085f5511-4df8-4206-9b86-7a08a73b7d1c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "679f4286-09cd-43b1-8c0d-e7e01f51625e"
        },
        "item": {
          "id": "ac868c5c-7927-4c39-a357-201e91a14fbc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "34788c00-4f7a-4159-a0a2-30600832ba48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3021b8-7e38-4667-8d9d-59f7ae1ca8e6",
        "cursor": {
          "ref": "e7d4d548-1916-4483-bfd1-11fb5bec07cc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aea59cd7-ac0a-41a3-9487-40e3e29e900a"
        },
        "item": {
          "id": "ab3021b8-7e38-4667-8d9d-59f7ae1ca8e6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e5a4768f-df64-4f3a-838c-bfad705b7305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "091df7b0-17ee-42c4-9cd2-b3ead3ccce9a",
        "cursor": {
          "ref": "f68182a8-8ffe-439b-8f92-2dcd6b0fcc35",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a45c6de-4cfe-41a8-b947-0baf96d36763"
        },
        "item": {
          "id": "091df7b0-17ee-42c4-9cd2-b3ead3ccce9a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7382ec36-f3d9-4b98-aaeb-657abb27b75d",
          "status": "Created",
          "code": 201,
          "responseTime": 2685,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d9428f-8527-44b8-8216-332483db1114",
        "cursor": {
          "ref": "409fac6e-baec-42a7-9826-f40bb8d46204",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0b567473-c9ef-4fee-b9e2-3c2b25319227"
        },
        "item": {
          "id": "a9d9428f-8527-44b8-8216-332483db1114",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6f0aeb30-09f2-4641-b6be-dd5c96253ff0",
          "status": "Created",
          "code": 201,
          "responseTime": 2005,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e976ef-c9b4-47ae-b1a1-bd8bfa850766",
        "cursor": {
          "ref": "8217240b-a5c8-4d11-a5f4-bad1047ac187",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ddb64444-f789-4538-ad54-83f1282cd0bf"
        },
        "item": {
          "id": "d6e976ef-c9b4-47ae-b1a1-bd8bfa850766",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3ff04d57-e625-4f79-ba5c-f38081bb25d4",
          "status": "Created",
          "code": 201,
          "responseTime": 2027,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0ae85d-8e29-4ebd-824c-30296e35a4bb",
        "cursor": {
          "ref": "05a231b4-c89b-4a96-9ddb-32db44de9d71",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9b1976c1-b544-4ebb-860c-6265b03f4e7b"
        },
        "item": {
          "id": "aa0ae85d-8e29-4ebd-824c-30296e35a4bb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e6b34dc8-d4b3-45f9-b577-dc7d1ba3724f",
          "status": "Created",
          "code": 201,
          "responseTime": 2739,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a832856c-a84a-4413-901b-49699d487a7d",
        "cursor": {
          "ref": "c8e7ba62-d5b4-4598-9bf3-4710d05f1efe",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4d5e7c11-533d-4738-8c88-4383a98c4d96"
        },
        "item": {
          "id": "a832856c-a84a-4413-901b-49699d487a7d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "de34dd5a-0da7-4fd4-95db-7974844b180d",
          "status": "Created",
          "code": 201,
          "responseTime": 2203,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982246d-8432-4584-8879-55cb69ce7d3c",
        "cursor": {
          "ref": "965591ff-9e93-43ec-ae97-a792a183fb36",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9fb6986f-6be6-4b9f-9574-24cf8f658404"
        },
        "item": {
          "id": "f982246d-8432-4584-8879-55cb69ce7d3c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ffe672fb-2863-4271-97ae-49fc840c9f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c531b090-625e-4495-8060-9a785e454af2",
        "cursor": {
          "ref": "ecf441b7-0626-45f5-af02-aeee9d956d49",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f738c935-5ac0-4efc-ae7e-010a40c7d89b"
        },
        "item": {
          "id": "c531b090-625e-4495-8060-9a785e454af2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0c6d2df8-9636-4ef5-a036-44abc3ceac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87406241-7d8a-4b0b-b705-fd0b9eb3aa29",
        "cursor": {
          "ref": "fab12804-688f-4fbd-86f4-39afd96e834c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "08c5560a-19a3-4c0e-80ae-e463666ca327"
        },
        "item": {
          "id": "87406241-7d8a-4b0b-b705-fd0b9eb3aa29",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3152261-a090-4f98-ba31-8ce1b6309b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313764bc-844a-4508-b735-debd6cbd34a0",
        "cursor": {
          "ref": "168bb84e-5446-4553-9b1d-5281c3cb5327",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ccbb1dd8-af06-40e4-9fa6-506d89db9311"
        },
        "item": {
          "id": "313764bc-844a-4508-b735-debd6cbd34a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc4216aa-e6c9-47c7-a4bc-4fc164217883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5649ea8f-ab2f-4f5b-9fc4-1b93dca4d9e6",
        "cursor": {
          "ref": "6d0fb955-4bc5-493a-aac1-87988bad9d42",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0861ad15-e248-4c2d-be6d-e7f50dc72f7f"
        },
        "item": {
          "id": "5649ea8f-ab2f-4f5b-9fc4-1b93dca4d9e6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "42b8692f-44d9-4b0a-98fb-6bfd251e1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd0f85c-33f2-4ee7-9aa9-48c724f18dac",
        "cursor": {
          "ref": "337cce57-cf50-44db-84b6-b28f9db77197",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5c7b9462-fef7-4557-8210-e95ff06e3762"
        },
        "item": {
          "id": "1fd0f85c-33f2-4ee7-9aa9-48c724f18dac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eabea01a-f41b-48f2-9375-19ef15905eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181f78f2-b78c-4246-9205-175567894fa8",
        "cursor": {
          "ref": "6a779616-53cb-41a6-8964-28714fd0c31b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "08501a1d-a113-4935-a647-6a0468eee3fb"
        },
        "item": {
          "id": "181f78f2-b78c-4246-9205-175567894fa8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "339b7c9f-7b9e-403c-975e-fd145348ac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a884c8-e3fa-4adc-aa3c-6e2549245a18",
        "cursor": {
          "ref": "668a68c5-401d-4ede-aa07-b2fe9bef0ada",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b3cfa70c-6c1b-4c0b-baa4-6d2a5a74e157"
        },
        "item": {
          "id": "95a884c8-e3fa-4adc-aa3c-6e2549245a18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2ef1e5d-956a-487a-b7d9-c67ab55b93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2834a9c-9f6f-42b0-8d90-f0a49dffeb08",
        "cursor": {
          "ref": "e9107f23-a86d-4110-8374-3f83dc0414f2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8dd85cb4-6a9d-4f63-935f-f519bb18d903"
        },
        "item": {
          "id": "a2834a9c-9f6f-42b0-8d90-f0a49dffeb08",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b99050f3-59db-4a47-aa3a-1d377e3a38e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb68a66-48d7-4ccf-a690-b055015e0530",
        "cursor": {
          "ref": "a985e4b9-6474-4961-81f6-e6fb736b96ef",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d21837ca-b9ad-448e-9d52-e6b8e07e0e3b"
        },
        "item": {
          "id": "9cb68a66-48d7-4ccf-a690-b055015e0530",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5dccadd8-8d0a-4daf-b01f-4b02c214f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd501efb-ffb3-4c58-84f4-95d900528f86",
        "cursor": {
          "ref": "dc830f6b-1160-4425-ae08-3593259fa82a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fccdc0b5-def6-472f-9d33-1dec110d16cd"
        },
        "item": {
          "id": "dd501efb-ffb3-4c58-84f4-95d900528f86",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5e29b1dc-9143-4318-aed1-84c072e4f07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e68e881-02ce-4bc9-81b1-f1855e35db6f",
        "cursor": {
          "ref": "a88cc453-f7c7-472c-a42a-617f414eccc0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c0bc15ff-34a9-4a52-b8b0-630e4892032f"
        },
        "item": {
          "id": "4e68e881-02ce-4bc9-81b1-f1855e35db6f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0045727f-74d7-4c8c-a3a5-d4d0a32929d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b938e818-ca0c-4b84-9d19-e2e17d5db736",
        "cursor": {
          "ref": "de41274d-dc4a-4f89-a613-f67f2f3e8eb9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1986f97c-3dc2-4f19-bd7c-903569630341"
        },
        "item": {
          "id": "b938e818-ca0c-4b84-9d19-e2e17d5db736",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e0641b4d-9f8e-4417-b7b4-aa02e9408fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2642b8f-387e-41e3-ba85-ccbafa412aba",
        "cursor": {
          "ref": "a8913638-d230-47ba-958d-619d0ece0e72",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e400a2f4-6d57-478f-bbc5-672db8eeed7e"
        },
        "item": {
          "id": "c2642b8f-387e-41e3-ba85-ccbafa412aba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2082a984-071c-4d54-b055-f64e7d1a2e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf384ca-3835-4467-9de9-911b97cda6e7",
        "cursor": {
          "ref": "5ab46b32-b121-460c-949b-a9695d0977bf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ef64eda9-1b85-4263-89ca-2e35ea7ee8fa"
        },
        "item": {
          "id": "dbf384ca-3835-4467-9de9-911b97cda6e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "88d501ed-ad60-4ae4-bdc5-4d24f93ba869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95005285-b950-4e32-8895-7a5ed1ac1bb4",
        "cursor": {
          "ref": "333365bc-2695-4c1d-9765-6da622656bcc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6e1a69c2-c388-4487-8f5e-4bba1c91a112"
        },
        "item": {
          "id": "95005285-b950-4e32-8895-7a5ed1ac1bb4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00db20f5-52ff-4c3b-b85c-ef4030a9615b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df71cb70-49dc-4a08-89a3-a7e12f48e76f",
        "cursor": {
          "ref": "65b5cde5-6825-4142-9529-4c3b2eb96a18",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "931dfc10-63a6-409b-a693-ebf2d22ca02d"
        },
        "item": {
          "id": "df71cb70-49dc-4a08-89a3-a7e12f48e76f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a546b62-b6da-4fb0-b81e-d420afa9436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ef2fe7-5c64-4373-8693-24ea37af36c3",
        "cursor": {
          "ref": "c3cd5447-c0db-480d-b31c-25b847d1b6ad",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "38a226bc-08d5-41dc-90c8-befe813f69dc"
        },
        "item": {
          "id": "a2ef2fe7-5c64-4373-8693-24ea37af36c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ccd6f016-fab6-40b2-836f-6b34e4bff62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d87854-d324-4164-98bd-2f354c5e12dd",
        "cursor": {
          "ref": "add4f966-77e0-4257-8e03-1a04fe438b7a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3560bb3-b7c0-41d5-9be3-43757d3f677d"
        },
        "item": {
          "id": "00d87854-d324-4164-98bd-2f354c5e12dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2544208b-7fd8-4d7e-ba08-fed44eac40a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f09500c-1a65-419a-8ffe-451ec42389e7",
        "cursor": {
          "ref": "c525771a-bb96-4788-8be2-a97da0273806",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7d7e6bda-a831-4970-9422-3bf7ef828cee"
        },
        "item": {
          "id": "7f09500c-1a65-419a-8ffe-451ec42389e7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "01aa13c6-cbe8-46ee-af76-a1996b20a4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75477213-e230-4dfa-868c-b5c69511572c",
        "cursor": {
          "ref": "7efebe96-9b85-4756-8912-14aa58bffbd1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eed83872-5822-4ea4-8fc8-6ba3bd745ead"
        },
        "item": {
          "id": "75477213-e230-4dfa-868c-b5c69511572c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0f6f233b-911a-4bb1-954e-f7172001e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b75ec8c-d469-489a-94eb-2a791b88220c",
        "cursor": {
          "ref": "4d52b0df-cba7-4a74-9fe2-058c7b7fae3c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "88d9c71e-d746-4383-9485-8c0e0867d965"
        },
        "item": {
          "id": "6b75ec8c-d469-489a-94eb-2a791b88220c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d280cd46-f108-4878-a297-eea785de584e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331049d1-0b88-4e74-b748-bbd35a73d702",
        "cursor": {
          "ref": "888d3967-7974-4541-86aa-aa280796374c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2bc7506-4e8c-4be8-a72a-2b572a18d586"
        },
        "item": {
          "id": "331049d1-0b88-4e74-b748-bbd35a73d702",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "639b30e3-2663-4f4f-8a1d-111ff9729ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895d877a-42ff-4cc9-a4d3-19ff027dd0a2",
        "cursor": {
          "ref": "c419e422-7049-4bbc-be29-15f150afa9f8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2e2d1903-df65-497e-b673-546838fd0de3"
        },
        "item": {
          "id": "895d877a-42ff-4cc9-a4d3-19ff027dd0a2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fdef7dd8-b24b-4668-8f5b-27bf36e0e9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c689df-b4c9-465f-b370-b704dd9635a9",
        "cursor": {
          "ref": "ca1829e4-52b9-4f9d-8fbe-d1ce25df1a36",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cca1304e-9c22-48a9-8b40-d3878a71c96e"
        },
        "item": {
          "id": "d5c689df-b4c9-465f-b370-b704dd9635a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3498be44-db87-47b5-8e58-5a4a36937380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec50f45c-1864-4b17-ba93-6050337751d7",
        "cursor": {
          "ref": "0655520c-4aea-4b4e-a25d-5f2f7f32568c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "88b9c8db-67da-4ad9-9b74-dc746afad5f9"
        },
        "item": {
          "id": "ec50f45c-1864-4b17-ba93-6050337751d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cedc8f18-85e2-4379-b999-63c4d062cdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d072b1d9-6baa-4756-b845-922c8f961c96",
        "cursor": {
          "ref": "b450a762-43f5-4450-a975-6e82720e9f8b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "efa170d1-52ed-4221-abbb-2f97a28eb904"
        },
        "item": {
          "id": "d072b1d9-6baa-4756-b845-922c8f961c96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1fe9b71-7e6e-49ae-81e9-425c7f9abe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1a787f-936a-4dfc-ae9a-14103e299fde",
        "cursor": {
          "ref": "3ac2de43-2f19-4ff7-ae39-bb44ec8dfb31",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5fc44bc7-c974-4753-ba6a-cc6816acb409"
        },
        "item": {
          "id": "ee1a787f-936a-4dfc-ae9a-14103e299fde",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3f273a82-0546-4a0f-8c03-ec4eb9b32831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09a611b-53e6-41ba-ac61-1d401592d3d4",
        "cursor": {
          "ref": "e0c18040-c8a9-46fa-8197-9aaf6efadff9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "35c236f3-3628-4e28-87d0-86afd28a5b6b"
        },
        "item": {
          "id": "d09a611b-53e6-41ba-ac61-1d401592d3d4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f402c93d-e16d-490e-bbf3-1dc2781576ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc9876-06f4-4edf-a353-4eaf773b6b74",
        "cursor": {
          "ref": "40abc244-26ec-4407-9d97-34b6c5afd7cc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "adacb3f6-2b55-4053-acba-293b03629f48"
        },
        "item": {
          "id": "f4cc9876-06f4-4edf-a353-4eaf773b6b74",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "229559d3-3c04-4c97-8dd8-64a84fc60a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d0ec47-ef03-4fe7-b4ad-e0abf58d716c",
        "cursor": {
          "ref": "9cfdfee5-92db-4699-bcc2-46fe8293d68f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "534cdb76-99ef-4488-b2b1-cc1a6b0ab30f"
        },
        "item": {
          "id": "a5d0ec47-ef03-4fe7-b4ad-e0abf58d716c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a6443088-2a98-481c-9efb-f1f45c989e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651a0f0f-dbbc-446a-9e18-7cbc85e9c494",
        "cursor": {
          "ref": "596dd645-38e9-40b2-a086-8daef9f8fbb0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4f967174-aeab-4e94-9489-114786bbcd11"
        },
        "item": {
          "id": "651a0f0f-dbbc-446a-9e18-7cbc85e9c494",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d861c9d-d18b-4f18-b928-26ab3421a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146db15-ac69-48e8-be06-0d06cb2adad0",
        "cursor": {
          "ref": "ca7b730b-fcd1-4382-a9c8-18b131e81bb2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "196c4e20-a04a-41a2-84cf-8390362b42ee"
        },
        "item": {
          "id": "7146db15-ac69-48e8-be06-0d06cb2adad0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "331c4ccd-dd30-45f4-95be-c5e068b942a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa50d39c-b4fa-4134-aaab-4fc999ed8bb0",
        "cursor": {
          "ref": "5522431d-4e1a-43ed-b6fa-8a79e8b6f265",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "45e59749-32d4-4a40-aa56-f9c40384cc25"
        },
        "item": {
          "id": "fa50d39c-b4fa-4134-aaab-4fc999ed8bb0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3ad3dcb-452f-4683-baf9-9ec7c42be649",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146dca1a-5de4-46ac-8193-6e5f0aa5decf",
        "cursor": {
          "ref": "299a4887-908e-484e-a557-d533d3404459",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1780a96c-21ba-4381-a49f-d4e25dba507e"
        },
        "item": {
          "id": "146dca1a-5de4-46ac-8193-6e5f0aa5decf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10e25c45-657c-4aa4-869d-9b33f1d0f43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54404ebd-8e1e-4e14-a1de-fe48835d3af9",
        "cursor": {
          "ref": "1d81e105-990d-4bf0-97f2-8f7231c5c058",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a23270d-b169-4236-a829-6136effe6532"
        },
        "item": {
          "id": "54404ebd-8e1e-4e14-a1de-fe48835d3af9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a91d61c-9427-4912-b99d-d07f7c9a8667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea2984-6406-4b08-9937-f4c8875f079e",
        "cursor": {
          "ref": "e5950e91-afdc-4192-a228-4915734011c7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c475791-ac06-4738-b2ed-319da4d1faaa"
        },
        "item": {
          "id": "55ea2984-6406-4b08-9937-f4c8875f079e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc269f5d-0ec5-48dc-8ed0-bc1f77e7271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8954ae-9132-4a56-b885-ca6e731bb4e8",
        "cursor": {
          "ref": "70d7af4a-ea56-420b-9b68-c68487493921",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d5994d6d-cadc-4999-87fc-73627d1da2bd"
        },
        "item": {
          "id": "cc8954ae-9132-4a56-b885-ca6e731bb4e8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2b1bbc4-348e-41f1-9d49-b2d1f557ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bd8db7-208a-4160-b3cb-73dd1ea3411f",
        "cursor": {
          "ref": "da3cbd5f-2333-4699-b566-707a162b3e7d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4e8109d1-8b9c-4b4b-bbc3-df1bfa707657"
        },
        "item": {
          "id": "24bd8db7-208a-4160-b3cb-73dd1ea3411f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c41a678-be40-45c5-91b2-31d94e984140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0f770d-29de-4cdc-8995-00e9747d2041",
        "cursor": {
          "ref": "16578e96-8306-45b0-a383-ff16f4feb85c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3b1e3648-bff8-4fe6-b395-7600626135d1"
        },
        "item": {
          "id": "df0f770d-29de-4cdc-8995-00e9747d2041",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3840567f-7f57-4298-ba3b-1750b1d8844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e743da-47e5-487d-8275-f22d578a6384",
        "cursor": {
          "ref": "568dc131-aaff-4c7f-9f91-38d5922c01ea",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2a57ee0c-3cb5-47ce-bc59-7cbec82109a4"
        },
        "item": {
          "id": "27e743da-47e5-487d-8275-f22d578a6384",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "25cb50fe-5abd-4be8-a1ce-1f56c1e5fea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5673e5-21f0-4291-99c9-a4cbc1fb0304",
        "cursor": {
          "ref": "b96d8466-798c-421b-8276-97940a31628e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "239ff624-f6dc-4c83-8216-d47fa31f3d2c"
        },
        "item": {
          "id": "4c5673e5-21f0-4291-99c9-a4cbc1fb0304",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fd430b87-48bf-49f3-a64f-04e670ee9821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc8a197-f0c0-4659-8a57-3a532d6e99fc",
        "cursor": {
          "ref": "1327d272-b825-4664-91ff-e3311977c817",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "794bbd2a-59ed-4d23-86e6-8b147638a71c"
        },
        "item": {
          "id": "3bc8a197-f0c0-4659-8a57-3a532d6e99fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17a91681-0154-4833-ab57-275f5d122059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b67a81e-7e37-44ed-ba49-503827142a66",
        "cursor": {
          "ref": "26cca286-4161-4a74-925b-5b0cb4a32f11",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "828fa590-f915-49ca-954c-490eff59763b"
        },
        "item": {
          "id": "9b67a81e-7e37-44ed-ba49-503827142a66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28ffd0a2-1557-4493-b5ac-19ab8ca53b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705fef3d-9c0e-4c09-9c30-5e8c8e24ee55",
        "cursor": {
          "ref": "69712001-6c41-4458-9372-0b7ed0f866f7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4eb126dd-505d-4a9f-b711-04e4e731d09f"
        },
        "item": {
          "id": "705fef3d-9c0e-4c09-9c30-5e8c8e24ee55",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e04feaa-b348-4093-9720-199c3be210db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed173db-537f-41cd-8ddb-bda0d3cfb688",
        "cursor": {
          "ref": "c3325d9f-d87d-4fbb-9d46-6b63a492bc41",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9aab9939-81d5-45c0-b76d-1399bd61267e"
        },
        "item": {
          "id": "6ed173db-537f-41cd-8ddb-bda0d3cfb688",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15697b22-579c-4666-bd70-023a9e9ba7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ddd72-aca3-482c-b283-0a034b26e50e",
        "cursor": {
          "ref": "54aa2c3c-6b6c-4bb3-88a2-190ec1fb7e96",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42c95841-d517-4856-937d-8b3d4c466c18"
        },
        "item": {
          "id": "7c3ddd72-aca3-482c-b283-0a034b26e50e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40c57328-3bbd-4683-9396-e652b48412e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbefdff1-3670-4dac-9fb4-f5fdca6a8df7",
        "cursor": {
          "ref": "0fe8c7cc-ae16-4578-bb0f-9cccc319eff1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f81e9db3-dc48-4490-8966-b8f90e818fe1"
        },
        "item": {
          "id": "fbefdff1-3670-4dac-9fb4-f5fdca6a8df7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a578b6e-9a12-4d14-9448-221fe5c7e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b98d4aa-1915-4570-85b4-b22e859bae82",
        "cursor": {
          "ref": "4cf9f1b8-0180-4d95-bfaf-1aaf47b6579d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f89c872-928c-4752-a8d4-b570a11dc03a"
        },
        "item": {
          "id": "7b98d4aa-1915-4570-85b4-b22e859bae82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2008eaac-847c-4c9a-8fe2-0878a503c073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b4264a-47b5-4e88-b2a1-f932db36b3dd",
        "cursor": {
          "ref": "33ec4b42-23ad-493c-8e1b-8d2fbc9a7c32",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7981f93f-a994-4ad8-9e70-e7f41e090513"
        },
        "item": {
          "id": "e8b4264a-47b5-4e88-b2a1-f932db36b3dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e60d636-59b6-433b-90fe-240493e8dd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e17d321-c94b-4e1f-9116-98bb38e8040e",
        "cursor": {
          "ref": "9f994128-6063-4adc-9ba2-9c2d3e707ca5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "adbb65b2-0295-454d-9a94-bd549c795ea8"
        },
        "item": {
          "id": "1e17d321-c94b-4e1f-9116-98bb38e8040e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab21c60e-c708-48e5-818a-82f601170556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1f7fc7-9c7d-4b16-9b76-2ba1d4dbe48e",
        "cursor": {
          "ref": "ab634a64-d425-4ed9-bb8e-72c1e05d8b6e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ef1509bf-4f4a-41b0-bb77-275fbee51324"
        },
        "item": {
          "id": "bc1f7fc7-9c7d-4b16-9b76-2ba1d4dbe48e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b4d845e-3ff1-43bc-aa1e-0de3150a4e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1702f215-5ac0-44e0-a72a-c0f2d9c44485",
        "cursor": {
          "ref": "07d45109-1b8e-4f40-a042-2bf72c4e20f4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ccf03e0-2c05-40ca-9cc7-71e7c41c8593"
        },
        "item": {
          "id": "1702f215-5ac0-44e0-a72a-c0f2d9c44485",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbc26d9d-348b-4f8e-9dd0-d19fe6f0918b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3dbde6-4247-4157-b3df-d385001680cd",
        "cursor": {
          "ref": "82cb5aba-fc6f-4e33-a64b-3e386c28f6de",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "62685d22-41b2-4688-8103-ace3102bfad9"
        },
        "item": {
          "id": "fd3dbde6-4247-4157-b3df-d385001680cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a5f6e9e-1c42-4f8b-b97f-758c234e66eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055497b2-3fc0-4273-8eab-bafa50da732e",
        "cursor": {
          "ref": "3d85ff26-aeb5-450a-8526-a50ccf4bf642",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b14c0ff1-dea4-4d65-a096-fde403f3fe69"
        },
        "item": {
          "id": "055497b2-3fc0-4273-8eab-bafa50da732e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3b16bab9-9a2c-44e9-9ced-4ad9d78c65ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a96136-4ebd-45b1-b90a-4630bbe8de74",
        "cursor": {
          "ref": "6c4589a0-86b3-4d36-ba46-9d23c2054b03",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "215d3552-0a6b-4e93-9137-71d4ad258133"
        },
        "item": {
          "id": "c9a96136-4ebd-45b1-b90a-4630bbe8de74",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07a2d60c-ace0-431b-a632-4bc32afbc32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbd0142-6440-4e1b-8ffa-284c7704f8bd",
        "cursor": {
          "ref": "fabb1cd9-4045-4a2f-9869-a74551ade616",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e429be4d-6abd-4238-b9da-7486d79a2c37"
        },
        "item": {
          "id": "2bbd0142-6440-4e1b-8ffa-284c7704f8bd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef2bd46f-2bbb-4b26-8e24-7513d20b898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d485c994-fd6f-481d-888f-279e95709b15",
        "cursor": {
          "ref": "0601e2ff-3689-429d-a4c5-de3bddf12283",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "85eb3b88-ba0e-42bb-a83e-79e93c9ac7a9"
        },
        "item": {
          "id": "d485c994-fd6f-481d-888f-279e95709b15",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d4f91968-920a-4ccd-9997-2f833b082367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eaec57-023a-4478-aef0-709996579071",
        "cursor": {
          "ref": "5c004e23-8735-4279-a350-52c8cb150725",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5424b3b3-a547-4be7-8de1-aa7b0ae2b8d0"
        },
        "item": {
          "id": "81eaec57-023a-4478-aef0-709996579071",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "907786f9-8b9f-4c5a-bc63-781375398ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebf0018-1b81-48f8-9dbe-efd026be72e1",
        "cursor": {
          "ref": "f197ef2a-1b74-4ea9-b318-2c59eda21d69",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0530f8a4-00eb-4935-96c7-c80ebc471b17"
        },
        "item": {
          "id": "0ebf0018-1b81-48f8-9dbe-efd026be72e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71be388f-e101-4155-879b-0c4dce20cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f76264-ff2e-4d00-9300-e5fba5d071be",
        "cursor": {
          "ref": "934cb313-fb20-4087-a5b4-8f4960450bc6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ffe2cd41-0664-4986-bf6a-09a24981bac0"
        },
        "item": {
          "id": "d3f76264-ff2e-4d00-9300-e5fba5d071be",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "47489faf-0d31-44ea-a04a-3e74f3d59541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc42ce-8843-4162-9dd2-e448ddb5b84b",
        "cursor": {
          "ref": "8e6db9ef-afea-42b7-af63-b670ad8e677d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "61f0a60e-da56-43e9-9133-8bd5d47e3e1e"
        },
        "item": {
          "id": "2dfc42ce-8843-4162-9dd2-e448ddb5b84b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5eca2b4f-69fa-40a8-a6f1-156b3b0d022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b7b98-e411-4587-abf3-c2f2f95e6fd0",
        "cursor": {
          "ref": "8acb4610-0cd9-4f27-8fa8-528eae579ee3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "116879df-82c0-463d-8706-4d649d847d42"
        },
        "item": {
          "id": "1e3b7b98-e411-4587-abf3-c2f2f95e6fd0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d79cbba-eff0-478d-91e4-bc7e22293e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523868df-300f-449d-a951-d9f755b6e36b",
        "cursor": {
          "ref": "6719fd27-c73a-449a-8db1-37e4b456ecb1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "17ba5a22-59e8-49c3-b6d0-5d0b1d891329"
        },
        "item": {
          "id": "523868df-300f-449d-a951-d9f755b6e36b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "46b40c9c-a51f-45cc-9bfe-cc58f2ed6a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81472435-3f21-4145-aac7-3d9e890db79d",
        "cursor": {
          "ref": "9f1ca340-adc5-474c-b230-bd6650a7535d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "640f160d-d4be-40a6-bbe3-344e72d51804"
        },
        "item": {
          "id": "81472435-3f21-4145-aac7-3d9e890db79d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d795836-aad3-4785-b2bb-f50ba9507f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70bcb28-3ace-4b94-8783-133b30c9b061",
        "cursor": {
          "ref": "074594e8-e921-4c43-bc91-a1e3e58168b8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e80253f2-525e-467f-8f5d-f39635710d8e"
        },
        "item": {
          "id": "e70bcb28-3ace-4b94-8783-133b30c9b061",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "34353fbe-ec03-4f08-87c2-f7a8116f98e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94310d6-b752-465c-b6f6-c441e8aa3e65",
        "cursor": {
          "ref": "f53b3d0e-11bf-4353-b98b-0f253ed95db0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6b790e7f-da83-448e-b462-5a0d82495ef4"
        },
        "item": {
          "id": "b94310d6-b752-465c-b6f6-c441e8aa3e65",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d2877604-80c2-41f9-a981-c3fd8b7bed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03874ec-e3f8-4a5e-863f-2dd68db6cbec",
        "cursor": {
          "ref": "73ff84f8-660f-418f-b1e6-f9afedcb451d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "38ff3816-46f8-45a6-af65-2e2094fb2239"
        },
        "item": {
          "id": "c03874ec-e3f8-4a5e-863f-2dd68db6cbec",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2850554d-1aa2-4242-885f-4cdbc70ba6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e8fe4-4c46-4f1a-837d-a0b29a87a72d",
        "cursor": {
          "ref": "e2f39b41-5b17-44d6-8414-9a78bae08cf0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aef8de81-7f45-4a01-b9fa-0dbdff3d92a8"
        },
        "item": {
          "id": "a15e8fe4-4c46-4f1a-837d-a0b29a87a72d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b4172e9e-c3f6-46c5-8779-dcc2ac3e8379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386785eb-3367-4ba2-b509-e43351af9e52",
        "cursor": {
          "ref": "b373c4a1-3f58-4594-a767-3dbb6c4e2212",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "04c0e4de-8cd7-43ce-b9ab-e85e91fbe96d"
        },
        "item": {
          "id": "386785eb-3367-4ba2-b509-e43351af9e52",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad972175-0c58-4dd2-a06d-fdc787fd5850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b744ede4-8b83-4460-8e53-6bf2d5915fc9",
        "cursor": {
          "ref": "303385b4-c316-44ec-b96c-49013f4c3bba",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d7b3978d-154f-4ded-ab23-f51e5f999d3a"
        },
        "item": {
          "id": "b744ede4-8b83-4460-8e53-6bf2d5915fc9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db856706-694c-4c71-aafe-fcebcce8f969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f52349c-7dd4-4b98-8a49-084e4da65173",
        "cursor": {
          "ref": "cd1cbc2a-7ab9-4de9-8d35-1d55b1ebfe64",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5de4b3ba-f2dc-48c4-9576-d5a72af32861"
        },
        "item": {
          "id": "6f52349c-7dd4-4b98-8a49-084e4da65173",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7be32da1-9f4a-459d-b61e-c33b344329c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4f9d2a-eef3-4bf2-b82b-0bf458f1c5dc",
        "cursor": {
          "ref": "f5718651-f51a-4da6-9634-51b772666711",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ab517d8-c909-417a-add1-ea174d843c86"
        },
        "item": {
          "id": "dc4f9d2a-eef3-4bf2-b82b-0bf458f1c5dc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c8ffd30-70fc-424f-bf26-c153ddd550e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4992e5-a43c-40e6-8bb4-82c347147adb",
        "cursor": {
          "ref": "c199cc7e-40f3-4112-8f2d-11e4e241b499",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8bfdb2b6-0b6f-4842-bd6e-39403d2a07b4"
        },
        "item": {
          "id": "df4992e5-a43c-40e6-8bb4-82c347147adb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "478778c7-a1ff-4a13-8f62-cc3045de57db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d6a8a-ffe4-4670-8fda-ebf6148a5b00",
        "cursor": {
          "ref": "10e1d1e0-bf19-4c56-bd93-6afa57f494e8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22a1b33f-4f4f-4b03-a058-d687508ab635"
        },
        "item": {
          "id": "643d6a8a-ffe4-4670-8fda-ebf6148a5b00",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3cfdc35d-a066-41a5-8c20-0778d896b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd26def9-7a2a-47a2-b422-6e71c0ff2456",
        "cursor": {
          "ref": "a1df80d2-4509-4db5-9f60-a29865f731fb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fa499699-d5ab-4109-b309-feafe7866719"
        },
        "item": {
          "id": "bd26def9-7a2a-47a2-b422-6e71c0ff2456",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c26a403-5df5-4c3f-a226-505e56fc0f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096354d-367b-405d-b6b8-893cfac820da",
        "cursor": {
          "ref": "3f5ecfd4-e76a-42a8-add6-ba4cbe4462d5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f2cd0ce8-d563-4387-a36b-ec3e1a52c2d1"
        },
        "item": {
          "id": "5096354d-367b-405d-b6b8-893cfac820da",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "caa58c7c-2629-4753-9ec7-3fd45397041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805d4e17-d7d7-47b5-8380-53df209ea001",
        "cursor": {
          "ref": "6f81bd84-2be5-4559-a6dc-bc1200e35a27",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "776b8da3-d9e1-4548-b958-86b3e4d3057b"
        },
        "item": {
          "id": "805d4e17-d7d7-47b5-8380-53df209ea001",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6fce0510-eccf-4dfb-95b9-7b512d4b3d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1607e06a-7d28-42bb-a94f-a3b5de0f0275",
        "cursor": {
          "ref": "6f22254b-2132-44f5-8b43-e56ae1f16d54",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "28d116de-0843-4ec5-83a9-51151a54a411"
        },
        "item": {
          "id": "1607e06a-7d28-42bb-a94f-a3b5de0f0275",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "65b4cf20-395d-4ecd-b565-d9e479512ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa3c037-514f-42be-b2cd-8bb17ffe5401",
        "cursor": {
          "ref": "926afb3d-6465-43f5-9ff9-13de0e51ef9f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "01d0d9be-6491-46ac-9a39-224cc1868e2f"
        },
        "item": {
          "id": "bfa3c037-514f-42be-b2cd-8bb17ffe5401",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "33f38dff-efbd-45f3-ab1e-0b8d6d8679b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e331eda-5ead-4565-8dc4-03d5a48d6175",
        "cursor": {
          "ref": "557fcca4-4588-4acf-8ee5-7bd6041d3641",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e97b37d1-d6cc-47dc-b672-493e67415c02"
        },
        "item": {
          "id": "0e331eda-5ead-4565-8dc4-03d5a48d6175",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ba11d3a-085d-4526-8c08-8a9267c610b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0ed8d5-b181-414d-a003-1e07f8415df8",
        "cursor": {
          "ref": "c71a083b-68ef-4390-afaa-409dac38d499",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d8cad84c-af62-423a-8722-aeb95b7eec8a"
        },
        "item": {
          "id": "9f0ed8d5-b181-414d-a003-1e07f8415df8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4e7ac35f-f48d-400b-be9f-a18daedb013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135b2be-7071-43ec-9330-29bf628b8c3f",
        "cursor": {
          "ref": "8fd9d3c5-a8d6-4adc-8614-27c740152627",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ea431ab6-5ae0-4b31-89da-74d22880093a"
        },
        "item": {
          "id": "5135b2be-7071-43ec-9330-29bf628b8c3f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d232844d-677a-4419-afbc-d849cc224f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff1b465-0d2d-4c23-aa24-4745e02ec4bc",
        "cursor": {
          "ref": "a81addfd-9548-456a-9da5-c44c2db04790",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6ed882bc-9507-40a9-9bd8-bd432bbdfdab"
        },
        "item": {
          "id": "7ff1b465-0d2d-4c23-aa24-4745e02ec4bc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "656b52d2-8879-4ee0-b5d8-87795e5b8fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbadd07a-238e-44d8-bb73-960ea1b1c510",
        "cursor": {
          "ref": "5e9d6fc6-ff12-424d-917b-e6306d020c21",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8541bafd-6a54-4524-bbb3-6fe9ed6e0c8b"
        },
        "item": {
          "id": "fbadd07a-238e-44d8-bb73-960ea1b1c510",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "99261c69-f3f1-4bd2-99ba-1a8ce6b1d57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1108b5-d443-4bc3-a215-69195d9fc76f",
        "cursor": {
          "ref": "7788c5dd-2bd9-4f6c-acd9-955f2e3a3baa",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d8f0355d-bf9e-48c8-8ca2-409bddf07bdc"
        },
        "item": {
          "id": "bc1108b5-d443-4bc3-a215-69195d9fc76f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e46a17e8-47b8-4601-a569-8e22f9036881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aa8027-49b0-44ac-8b2d-1abdb104725d",
        "cursor": {
          "ref": "6d373488-db1e-48bb-bb36-a66864c627dc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e40b3d62-ee43-4529-8432-4aac5159b747"
        },
        "item": {
          "id": "64aa8027-49b0-44ac-8b2d-1abdb104725d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f2ce193e-a8d7-49cd-88f1-2f796067da2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e751e04-6466-4f85-9f8b-02df506ae504",
        "cursor": {
          "ref": "c484003d-947e-4de3-944b-0005969c69db",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4391a1d8-ef94-447f-858f-8f66fae691a2"
        },
        "item": {
          "id": "4e751e04-6466-4f85-9f8b-02df506ae504",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0c0da357-2641-4b52-9ca8-f04fc9de2d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a063c30-ed2d-44c0-a45b-05fe9e8888a5",
        "cursor": {
          "ref": "28be2c1f-a776-41a7-a8e0-d8696c917831",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "83756bce-a33a-448e-a9ca-3f73bd1b25e8"
        },
        "item": {
          "id": "8a063c30-ed2d-44c0-a45b-05fe9e8888a5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f13e8237-d28a-4372-b8d2-59d294675395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf232a7b-b04f-4624-90a9-f61cfece58d3",
        "cursor": {
          "ref": "bffb02cb-5a0f-4e82-8c1d-bbd40a1ea089",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bc069217-3e60-49ed-8aee-449858d38408"
        },
        "item": {
          "id": "cf232a7b-b04f-4624-90a9-f61cfece58d3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bdd732f1-cee8-4b97-8682-44013a0f887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe6726-e517-424e-9a9e-d0b6f63ec453",
        "cursor": {
          "ref": "135de687-8124-48a7-baaf-ae75f48ea8d1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1ccf4f2e-2a3d-4393-9ae0-0b0a70170683"
        },
        "item": {
          "id": "5dbe6726-e517-424e-9a9e-d0b6f63ec453",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "84445be9-0c79-4e3b-9ce9-e46e3ab4b732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edda424f-082d-4810-a76e-aab701720bf9",
        "cursor": {
          "ref": "3a128cde-2ded-43da-9d91-1bcefd883488",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "67861cc9-3408-4e62-985f-375e04a581d6"
        },
        "item": {
          "id": "edda424f-082d-4810-a76e-aab701720bf9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "02c079d8-288c-401a-ad06-fdacf9f6db3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86705f6c-e639-4282-af09-52004846a8b0",
        "cursor": {
          "ref": "bd55af23-ba2f-42cc-bbc6-631349d3920b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aded4b02-5f8c-4b3c-819e-9c772180af88"
        },
        "item": {
          "id": "86705f6c-e639-4282-af09-52004846a8b0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "189e908d-ee5c-41ba-acd6-578463c3d305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3848a7-e52a-4847-a6ab-80d34157be70",
        "cursor": {
          "ref": "54582259-b53d-4b83-8d8a-134a3eac4818",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "64c720e2-a840-4afa-b3ae-314c811e30f5"
        },
        "item": {
          "id": "5d3848a7-e52a-4847-a6ab-80d34157be70",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "994f294b-9da4-41fa-89a3-4eebb6e60efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2faa3dd-7b39-4423-8c3e-b427f9caf06d",
        "cursor": {
          "ref": "ffd6fb59-e3a7-4868-addc-1936458b7665",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "626b554b-954a-44ee-a19b-9a7696968437"
        },
        "item": {
          "id": "c2faa3dd-7b39-4423-8c3e-b427f9caf06d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6af5758-f615-4b48-88fd-8bbfc6bfb445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae4a059-216a-4229-896f-9f09993308ea",
        "cursor": {
          "ref": "5f4b6070-cbd2-4bfd-9460-8de2afadc172",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "03541d34-fa67-4ba8-8ef3-92f823c4f93d"
        },
        "item": {
          "id": "eae4a059-216a-4229-896f-9f09993308ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8a8a2347-e672-4ab5-bf37-eb1175f8c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81dd528-55a2-40ac-a486-63b15e6c918e",
        "cursor": {
          "ref": "2867ee76-bee8-4593-bef4-8161d5ae0692",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7beda009-4152-43f8-aaa9-6cdc6d897e43"
        },
        "item": {
          "id": "d81dd528-55a2-40ac-a486-63b15e6c918e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b2d9ff82-2a67-4dca-8d8f-9069ede641b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a63eb-a285-49da-9fd4-3ad88ac59444",
        "cursor": {
          "ref": "3d709f6c-f28d-41ec-8889-c5c9468d99ec",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "043ae5e6-0b88-464e-b23e-abde2fd93d1f"
        },
        "item": {
          "id": "7e6a63eb-a285-49da-9fd4-3ad88ac59444",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1d8612d5-bf8c-484c-aaab-2a37254a693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84877a8-39dd-497d-bff5-c6bcda038c4a",
        "cursor": {
          "ref": "f40d3d86-96d6-4efd-9a69-d96ddb1107e3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d9012319-15bf-4c61-9163-02e4ab6bd7d9"
        },
        "item": {
          "id": "f84877a8-39dd-497d-bff5-c6bcda038c4a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "964f7a29-1044-488c-89a4-f0264feae8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4d24cf-cd0e-4196-b42c-a7e1522e35c2",
        "cursor": {
          "ref": "b3f4f898-4fbb-46ab-9590-8814ddf154c7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8bbcee53-43c9-439f-b32d-3a560d7a8b14"
        },
        "item": {
          "id": "1e4d24cf-cd0e-4196-b42c-a7e1522e35c2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "89556de3-7f4c-49d7-846a-e48ba5f68c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47fcba2-23c5-4b6c-b5d3-87a54991281c",
        "cursor": {
          "ref": "a36ab193-91e1-4852-ab66-a2e018fdc788",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0465fe6d-880e-4bdf-90fb-9c1b6298a48f"
        },
        "item": {
          "id": "a47fcba2-23c5-4b6c-b5d3-87a54991281c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "61f9c2c3-d98d-4107-aeaf-b41f242e85de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cd3a40-388c-4b2e-8d70-63ef9b5e44d1",
        "cursor": {
          "ref": "0b0e214f-cb49-44ce-9785-610119e2f887",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "23111e9a-1241-4dcd-a179-c47b294aa274"
        },
        "item": {
          "id": "b0cd3a40-388c-4b2e-8d70-63ef9b5e44d1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "23e8ca09-6047-4d1b-9b5e-a07fafda97a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb85df8-1bbe-4c4b-8eb9-ef7bba9901aa",
        "cursor": {
          "ref": "7f1fd7d8-5e3c-468d-8fe2-5055a7bdbc79",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c16d1e54-1c20-4c0a-aa0e-99fc18e5e70a"
        },
        "item": {
          "id": "cfb85df8-1bbe-4c4b-8eb9-ef7bba9901aa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a64f5b85-6875-4c30-84d7-f29b0e7c3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419d04dd-3b38-4814-b40d-aa95273444f2",
        "cursor": {
          "ref": "9c106f97-a761-4e0d-b38f-366fc9e52393",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a2e68b34-e887-498a-a4f8-c3e8d1f556e3"
        },
        "item": {
          "id": "419d04dd-3b38-4814-b40d-aa95273444f2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d28329aa-75fc-44fd-8b23-ecc9b1c58a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38151211-f16a-4f22-8c0e-e4af76b55a52",
        "cursor": {
          "ref": "762967b5-0be1-482c-a704-24c0c2ac5f84",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "632abc51-a224-42a3-afa0-fda9dfab250a"
        },
        "item": {
          "id": "38151211-f16a-4f22-8c0e-e4af76b55a52",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fbb501d4-ec41-4e68-9e90-d4f51dd14bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3737e4-0d10-41e8-8e33-2dde78cd9e37",
        "cursor": {
          "ref": "740a84ab-ba9b-409a-8ca2-9ac3399d01d8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "67c4e73d-d509-446c-a872-8ef16093d44a"
        },
        "item": {
          "id": "5a3737e4-0d10-41e8-8e33-2dde78cd9e37",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "23519312-9d14-4445-9bb8-41871f974660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16872644-d4be-46c0-9375-7c7ec95f7de6",
        "cursor": {
          "ref": "4a659db8-25e8-4537-bd1c-eb909d6d9079",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "26904e29-7457-40df-8e95-fc3120639a96"
        },
        "item": {
          "id": "16872644-d4be-46c0-9375-7c7ec95f7de6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3a891031-8bb5-4322-a86e-cf8a4624ce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beafff6-b112-462e-a776-303d7cb5a38e",
        "cursor": {
          "ref": "25caba6f-2dee-40c2-9c7b-9a18f94dc3bc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6053fe81-f615-41af-a3de-d6a2f23528e0"
        },
        "item": {
          "id": "5beafff6-b112-462e-a776-303d7cb5a38e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6a06e570-83d7-4b7d-a049-ae33a67ecefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bed60a-821b-465c-9d3a-546fe2edca42",
        "cursor": {
          "ref": "886afb05-ad2e-426b-aa4b-f3a4ec7276c3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ce9ade8-ecbd-4c8b-b1b2-9ebc32549a54"
        },
        "item": {
          "id": "67bed60a-821b-465c-9d3a-546fe2edca42",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2fdbf26e-9af0-4fb4-afdb-f2e5d03715a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b0f12a-b4ec-4442-8edb-138c7b1b4e35",
        "cursor": {
          "ref": "998d66f3-49cc-4398-b3c3-32bc3c61175a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "33f36191-df25-466b-956d-6d9690ad249c"
        },
        "item": {
          "id": "64b0f12a-b4ec-4442-8edb-138c7b1b4e35",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "92caaa3a-b68c-40ce-8f4c-c005ad460ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c910805-eef2-431c-8c38-04fd3cdf2c7e",
        "cursor": {
          "ref": "add1e605-7390-444f-ab44-211055844513",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4729df79-21ed-4176-970a-08c37b7f03d7"
        },
        "item": {
          "id": "4c910805-eef2-431c-8c38-04fd3cdf2c7e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "73025658-8ac4-4973-8c36-896c54de4108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d85ea3-3204-4ebe-ab54-0db94bbb7429",
        "cursor": {
          "ref": "8725b589-3aa2-4f94-81d5-c656d3923ade",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "510aaddc-42b0-47f6-abc9-51d78d2d1afe"
        },
        "item": {
          "id": "a1d85ea3-3204-4ebe-ab54-0db94bbb7429",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f6d05fa-b087-43bf-8ec5-6f26bfd720c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14c5cd2-5d88-4460-afd5-82fa7c078643",
        "cursor": {
          "ref": "911e7b17-732e-4fda-a024-7333284c8799",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2713e0d9-b534-4428-a3f3-1841579d26fe"
        },
        "item": {
          "id": "a14c5cd2-5d88-4460-afd5-82fa7c078643",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "34f63c08-0682-4fc3-a747-7ab69b930904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26abbbe3-84ce-4173-91d5-9f77e85e8bba",
        "cursor": {
          "ref": "751197b8-cfeb-47ae-a9eb-ffb94ba532d6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "260a63be-b8c0-43f8-9d48-64034feeb340"
        },
        "item": {
          "id": "26abbbe3-84ce-4173-91d5-9f77e85e8bba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "82d5638f-0eb8-4a98-8dae-bb2888e4d392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506485d-d234-4ee1-91e3-5f63f3198bc4",
        "cursor": {
          "ref": "3578c860-8d80-411a-b0ed-4d78e9891308",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "13001301-963f-4d6d-937e-892e2470570f"
        },
        "item": {
          "id": "b506485d-d234-4ee1-91e3-5f63f3198bc4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d7373b3a-d57f-4129-917b-29723d08650f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68df69-0b9c-470a-81a5-6004453d4cda",
        "cursor": {
          "ref": "3447add9-99fc-493a-b06e-712e2aeffb6a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a54fa39-62c3-49c1-afc5-265b975d7f95"
        },
        "item": {
          "id": "4b68df69-0b9c-470a-81a5-6004453d4cda",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0102566a-8847-4ff1-9807-dd4197328484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd6bf4-842c-4e04-a7b6-3717c1a898c8",
        "cursor": {
          "ref": "c31cc801-2a46-43f9-9c03-070ee3f3dc49",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6318daa7-aa9a-4509-bec7-1b85e11ae705"
        },
        "item": {
          "id": "98dd6bf4-842c-4e04-a7b6-3717c1a898c8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "07b309e8-f13e-4150-9b7c-709e46206b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dbebbe-cd75-4140-8467-9c0abc0e4941",
        "cursor": {
          "ref": "def1cf75-1843-41b5-847d-83b5c9cc1ea4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "924b79b7-5019-4e9e-8de1-e69e34503551"
        },
        "item": {
          "id": "a5dbebbe-cd75-4140-8467-9c0abc0e4941",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9294a1f0-7323-4ba2-ad4e-f5c8f402f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0f330f-dcd6-4d2e-a9bb-737485ef08f1",
        "cursor": {
          "ref": "1f9118d7-2a27-4df9-a8c3-ab6b544c9509",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "905593d6-1caa-40c7-880c-8d3fb666d963"
        },
        "item": {
          "id": "db0f330f-dcd6-4d2e-a9bb-737485ef08f1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "933be803-6f0f-4619-b1d6-00db11ec86b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fc48b6-c043-45d7-a002-a4e888230395",
        "cursor": {
          "ref": "5a9ff281-2acc-4615-87a6-69c1ab8a4185",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3a586025-2a8c-4eb9-a22b-5c9755c6892c"
        },
        "item": {
          "id": "f1fc48b6-c043-45d7-a002-a4e888230395",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1ec3eedd-b73d-44fd-9751-a2f286aa5f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934d9e7d-ec03-4b10-826f-3819ccdebc37",
        "cursor": {
          "ref": "edd0dbac-e81e-43b0-8574-82461a6cccf4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "32421871-c2df-4f00-a622-811e16ad1350"
        },
        "item": {
          "id": "934d9e7d-ec03-4b10-826f-3819ccdebc37",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3fcbe8cc-0691-4b02-b67c-cacab09d17b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aedd020-236c-42e5-9981-cc4aaa828c64",
        "cursor": {
          "ref": "247d4aa2-dd0c-4238-a3eb-fcd17e3515f7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "219fbd60-faad-4362-9048-980fe5f88b9c"
        },
        "item": {
          "id": "0aedd020-236c-42e5-9981-cc4aaa828c64",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be8c02b1-e8e2-4757-aa52-04ea584f7392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612c00c5-34c9-4ead-b078-2841fb2ee750",
        "cursor": {
          "ref": "90e8b73a-97fe-4186-8a4b-a9d2f0e7178a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "efd58907-495c-4c35-aab3-5b3cdf63e9a9"
        },
        "item": {
          "id": "612c00c5-34c9-4ead-b078-2841fb2ee750",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "87757af8-819e-4397-9278-14f8d0cf1079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df467dce-0153-46d9-80ad-daf9eae35a5b",
        "cursor": {
          "ref": "814c7374-0fd6-4f92-8732-3c29929002f6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b117206-ad5c-45ed-906f-7953de4d5d39"
        },
        "item": {
          "id": "df467dce-0153-46d9-80ad-daf9eae35a5b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b1b737f2-fbee-47da-8cab-2bbe66435888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f2dc14-9b30-4770-a355-821de8519993",
        "cursor": {
          "ref": "c8bbf5b8-a38c-4047-a095-dc0cbbccc3e7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "19ad8437-2e5c-45b2-8990-d456dbcb92d3"
        },
        "item": {
          "id": "c0f2dc14-9b30-4770-a355-821de8519993",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "19e654ac-3170-4f9f-82a8-d4f12966a192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a5d74c-46c7-40c1-8afa-5b46f191cc35",
        "cursor": {
          "ref": "9bf2eae1-78c8-4b54-95ab-6db6d307cd16",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a0930f76-eb07-4865-8486-86408818a46f"
        },
        "item": {
          "id": "45a5d74c-46c7-40c1-8afa-5b46f191cc35",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5dc39df6-d107-4510-9653-7c34e08421d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f61386-d4bd-4824-bf57-33d870eed5bd",
        "cursor": {
          "ref": "da2d08fa-573a-44a1-a6c8-5339199342cc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "51e47ff2-51c3-4fd3-9572-cdcba5ec95b0"
        },
        "item": {
          "id": "83f61386-d4bd-4824-bf57-33d870eed5bd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee153423-3d19-4f26-9ca5-14910ffaec3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c65164-f42d-47a8-8210-41fe3a2f13ba",
        "cursor": {
          "ref": "5011c89c-c5ef-4dd2-822d-28bfa144d39a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11bf904c-837d-4615-882a-f10c3faec81d"
        },
        "item": {
          "id": "b0c65164-f42d-47a8-8210-41fe3a2f13ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "21f675bf-dd82-42dc-be6d-49fa9d3eba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd45fde-fc5f-4f12-946d-ed12095388a7",
        "cursor": {
          "ref": "fb082972-d359-4392-8f87-0df15d0c606b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e4bba585-4153-4fa2-b81b-1319912cc320"
        },
        "item": {
          "id": "3bd45fde-fc5f-4f12-946d-ed12095388a7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fadc4059-662f-491f-8820-04c141cfb061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477b1b6-6faa-47f5-a595-b79157ef168d",
        "cursor": {
          "ref": "5411f5c4-04c0-42fd-bda0-e079bf8729ee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "92591a23-3988-4075-9eb0-ed910bfabeb3"
        },
        "item": {
          "id": "2477b1b6-6faa-47f5-a595-b79157ef168d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0ed26046-7330-45a6-8760-674460f3fc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac05b72-d3e1-4ee5-a441-c29899655a6b",
        "cursor": {
          "ref": "9a980a03-9126-4e7c-9583-4cc2bd702dd0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "96f2108a-5cc0-4ecd-bd32-ac54e4a7df93"
        },
        "item": {
          "id": "0ac05b72-d3e1-4ee5-a441-c29899655a6b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "72b7ecb4-7014-4ff2-a60c-077c20755692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00246bf-2a20-4202-9f65-1ee45798ce2e",
        "cursor": {
          "ref": "ce6c1086-7b78-42c1-8269-10858884819a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7cdd1705-46f8-4746-8653-116ffd9c722b"
        },
        "item": {
          "id": "d00246bf-2a20-4202-9f65-1ee45798ce2e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fee99dcd-2397-4ccf-8a18-2603e3511153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c358b16-886f-4c8e-83ea-7cf06427d543",
        "cursor": {
          "ref": "f15c67df-3408-45ca-91cb-69c408f4c8de",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "263ee899-1f2d-493b-a155-7b127f987c83"
        },
        "item": {
          "id": "1c358b16-886f-4c8e-83ea-7cf06427d543",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "50e4f436-b981-4144-8abc-4c8bd520ef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafb3d1a-086c-4b8f-bff2-d1bc5405fab2",
        "cursor": {
          "ref": "9bb3a330-d515-4e18-9f51-2c0d54582f25",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "39b27697-8388-47a6-bdab-82f386cbf7bb"
        },
        "item": {
          "id": "fafb3d1a-086c-4b8f-bff2-d1bc5405fab2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bad43764-dcd1-40bb-8aab-278825fd7f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8893bf7f-3f31-4c75-9848-a8e716b903cf",
        "cursor": {
          "ref": "5192cdbb-763a-4908-b396-4950479cecd3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "93da01d7-4886-412d-a057-4480b19e909a"
        },
        "item": {
          "id": "8893bf7f-3f31-4c75-9848-a8e716b903cf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ab8cf41f-f277-4a18-8196-1717e967b794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa4fc4b-a17d-467f-8614-fcfb878ee1ef",
        "cursor": {
          "ref": "753d13ea-c7bc-420d-8b19-6255f4970fce",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bbb6c2e1-28fb-45a9-a2c8-11f7d629cdce"
        },
        "item": {
          "id": "3aa4fc4b-a17d-467f-8614-fcfb878ee1ef",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "67d3495d-308a-4b39-a4ac-f0181dfad8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4c3b1f-084a-4b36-892d-8dcf55e32cfb",
        "cursor": {
          "ref": "68d8decb-6210-409a-b976-59063bc352d6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "39057bd7-fcee-4731-8a18-c03b11fc5744"
        },
        "item": {
          "id": "bb4c3b1f-084a-4b36-892d-8dcf55e32cfb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f9b9d833-720c-4f28-8e10-54c7364b2b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a33bd1-8f66-48b9-8868-5de1a6af53dd",
        "cursor": {
          "ref": "04bdc7f2-f3ef-4729-9fbb-1e8377ac657a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5740ab6c-3a72-4f9f-9fab-9e8eb67f1773"
        },
        "item": {
          "id": "43a33bd1-8f66-48b9-8868-5de1a6af53dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "193217ba-1c74-4a98-b42b-a4cfe02806ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd2e391-00cc-44cb-9724-1a2ffb23cdfb",
        "cursor": {
          "ref": "6df736d0-fb39-4274-abbf-e52dc1f53d20",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "52617f58-3034-4a9d-bdd0-ecd3812a1488"
        },
        "item": {
          "id": "7fd2e391-00cc-44cb-9724-1a2ffb23cdfb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3c81f771-5f6d-44af-ad81-3b0404d31484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e919da0-e425-4ee3-ba4a-8d0a140730e3",
        "cursor": {
          "ref": "91aaf2d9-756d-44d3-a664-e040e243328f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0737c470-e97b-4f1b-972a-b9fdfa703c56"
        },
        "item": {
          "id": "3e919da0-e425-4ee3-ba4a-8d0a140730e3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2c810bea-e84f-488f-9b49-e762193936ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc65cbe4-d98f-4aa6-bc30-e1648cd92968",
        "cursor": {
          "ref": "1f1c557d-8f51-47b9-85f6-e82449fa5ebd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "857ccfd2-9be8-429a-80cb-301c6e6c23e6"
        },
        "item": {
          "id": "fc65cbe4-d98f-4aa6-bc30-e1648cd92968",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "318f5e7b-04a4-4fbf-8420-12835b582ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635d78d2-54fb-4f1f-be93-eb8ac4ab1a7c",
        "cursor": {
          "ref": "80acf915-c205-4ead-961a-447997c2924f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f3a3b2f1-6693-4a2e-8f30-bfdbb3317e53"
        },
        "item": {
          "id": "635d78d2-54fb-4f1f-be93-eb8ac4ab1a7c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa1fec57-b866-4474-be6a-893deb9c4454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ceee3-129d-4285-b521-31531a15e2c9",
        "cursor": {
          "ref": "9784e577-6b4d-4d8c-8aee-1f1d6b1d1e62",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "494de2be-4b17-4435-984e-4f62ba3deff6"
        },
        "item": {
          "id": "436ceee3-129d-4285-b521-31531a15e2c9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d6c7633d-faf7-464c-8b3c-f6bfce6d2856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14862a47-a2d7-4a15-9648-13c2e2fe8566",
        "cursor": {
          "ref": "17d1000d-9b89-4c07-bd9d-de890007da8e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97c87bfd-d5b0-4240-9d86-536e4d78335d"
        },
        "item": {
          "id": "14862a47-a2d7-4a15-9648-13c2e2fe8566",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "49f88897-cadb-4047-aaf0-530c50ad8dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44846970-af71-405e-8e46-4866c91eac71",
        "cursor": {
          "ref": "4a2d9824-f0f7-458f-bf37-921b7e32f24e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "094941c0-1865-4423-87e0-37947c63ee59"
        },
        "item": {
          "id": "44846970-af71-405e-8e46-4866c91eac71",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "996c1a42-6ac2-4b31-bffe-dde48d76c7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241d74e5-d7e7-4141-ace5-81e4bbbfe17b",
        "cursor": {
          "ref": "aa42aca8-d32b-4dd0-bd5a-09fb023344a7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "25db5d5e-6bae-47a7-8d2e-5e4c94399e5a"
        },
        "item": {
          "id": "241d74e5-d7e7-4141-ace5-81e4bbbfe17b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "330f1503-1aa3-4ec8-88ed-46137f6c37ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9839a1-6465-4245-802a-62d78927111b",
        "cursor": {
          "ref": "47e91685-821b-43b1-91af-533d1b678ae6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2c7335ae-aea3-476c-ba50-f8c44151e7c3"
        },
        "item": {
          "id": "6a9839a1-6465-4245-802a-62d78927111b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f00ea12-d51b-4ea4-9748-0b3595db4efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef6786-96a6-4928-a9c3-19fb17675433",
        "cursor": {
          "ref": "ed29f0c8-ac37-4374-b630-cfad8265d244",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "543f65b1-ef53-48c4-91f2-372bb9af6a5a"
        },
        "item": {
          "id": "87ef6786-96a6-4928-a9c3-19fb17675433",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "24a2d121-4341-4361-93f1-07f8e7731f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76100d-1ae2-4b5a-a35f-c5c3e164d57d",
        "cursor": {
          "ref": "7b293de3-c594-4b7a-9aef-5aae7ccfb5de",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5481a285-c758-4c2b-b5e9-54e6a21ac8e4"
        },
        "item": {
          "id": "8f76100d-1ae2-4b5a-a35f-c5c3e164d57d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c8827fde-90f5-4bd6-a461-7d6e0dda6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426d15c0-dbd7-4a14-ac21-171151a5e42f",
        "cursor": {
          "ref": "6b4fd073-b5d4-4b2d-8d2d-768a922b9daf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "861ad543-42f4-49cf-9f11-e0e1707ab866"
        },
        "item": {
          "id": "426d15c0-dbd7-4a14-ac21-171151a5e42f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "454e783d-1ca6-4f8d-9322-b04036792b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651f8aa6-e161-45e7-89e8-32ddcea2a659",
        "cursor": {
          "ref": "0638aa1e-e52c-460f-8235-9fc829ab9b8d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "57dd50f4-d7b1-4040-8791-f8be25be7c27"
        },
        "item": {
          "id": "651f8aa6-e161-45e7-89e8-32ddcea2a659",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "557a79b4-b9b6-40ae-901a-12758e0f8899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d05106-67a3-47d0-960c-c12f658413c1",
        "cursor": {
          "ref": "10025f5f-4250-4d99-aa26-9827bec694a4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "decef671-60f9-4207-b069-0050965023a3"
        },
        "item": {
          "id": "44d05106-67a3-47d0-960c-c12f658413c1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92ecbb2a-f56b-4c8d-9dc4-47c747dbb763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd755771-76ce-4f8c-b7ea-27d59c6aa2c4",
        "cursor": {
          "ref": "85ee6e97-ae03-409b-89d2-a00e843156cf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "94b320e4-f52b-42cf-9fec-85c3fbd801dc"
        },
        "item": {
          "id": "fd755771-76ce-4f8c-b7ea-27d59c6aa2c4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a9741f39-0d12-4aaa-a70c-6bb88be86758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def6b50e-227d-4285-b311-df58371a7042",
        "cursor": {
          "ref": "55974846-40f4-45ac-abfe-ba1ff779eef4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "73eb3c7f-288e-4445-9832-63ba0064aa0e"
        },
        "item": {
          "id": "def6b50e-227d-4285-b311-df58371a7042",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82d37c5b-1d3f-4626-8f77-9d3db21b3a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77da2b6-7898-4e5c-b6ff-b469a98356e1",
        "cursor": {
          "ref": "95530145-92e6-453d-b584-a6d98566da0e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "310a2d99-edf9-4320-ad76-316466d7fcff"
        },
        "item": {
          "id": "c77da2b6-7898-4e5c-b6ff-b469a98356e1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee50a3e2-8d8e-4b9b-977a-98566d83614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524fd0d3-cd57-4747-bedf-ebaee67043ed",
        "cursor": {
          "ref": "95dec9ac-5353-4a79-90ed-bd0866fdfbaa",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b9b342ae-d5c0-4fb2-87e8-a4ac580f93cd"
        },
        "item": {
          "id": "524fd0d3-cd57-4747-bedf-ebaee67043ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a4882a1d-8afc-4a58-8dbc-14ed031e255a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e568c8c2-b2a0-4fdf-915c-efd45e92eadb",
        "cursor": {
          "ref": "aed6b2b8-65e5-4d03-9cbc-b323545ec3da",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1a474c22-f17e-49f8-bc32-46984819a44f"
        },
        "item": {
          "id": "e568c8c2-b2a0-4fdf-915c-efd45e92eadb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f5cb8e48-2c43-41e8-ac0f-a31916a42230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d0991-6950-4237-86e9-8d00e63c5bac",
        "cursor": {
          "ref": "ae66898c-1260-4240-a6b5-45e6bb640764",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "61ecdd93-f09f-49f1-be65-098b21696947"
        },
        "item": {
          "id": "378d0991-6950-4237-86e9-8d00e63c5bac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2137b70c-e1d9-4a26-bf76-704b548cf6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4155b0-fff6-4302-bec6-875c3059e95a",
        "cursor": {
          "ref": "1d4eb409-9b4d-4c3e-ad17-e0eb05b97cca",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a91c3c01-2cad-423d-87c6-1f86773e6003"
        },
        "item": {
          "id": "cd4155b0-fff6-4302-bec6-875c3059e95a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "87865a02-d694-4a5e-8818-347a0843c020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f72b231-9b3e-4a15-9661-892523cea0df",
        "cursor": {
          "ref": "b8a7d3ce-5e31-45a0-915f-3c57f6ac187a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b08b6aa1-e1b3-4425-9fd8-75f9c930c3eb"
        },
        "item": {
          "id": "3f72b231-9b3e-4a15-9661-892523cea0df",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7b7c7e49-03ae-4a80-b05b-684f88d305fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997367b7-b0c0-4c69-8e6d-4308b75ced6e",
        "cursor": {
          "ref": "88ac44f8-ad1d-4815-bc78-bb382f191ceb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fc01ef05-7ea9-4aa1-adc7-759b425705b0"
        },
        "item": {
          "id": "997367b7-b0c0-4c69-8e6d-4308b75ced6e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a8d682f-faf4-4353-b4ef-9abdf55e0192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b2e3d8-266c-4f3c-936b-1109e83c299b",
        "cursor": {
          "ref": "03c03b27-019e-4a1e-a1f8-5611eecb4656",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1ba10a9f-a959-4574-b2c9-e69395f66dd7"
        },
        "item": {
          "id": "85b2e3d8-266c-4f3c-936b-1109e83c299b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "74586eb7-ae9d-4101-a1b3-7a8f3cc08b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71b27af-ef10-46ce-8fc2-01758f7cd9f2",
        "cursor": {
          "ref": "a638253f-3d5a-406b-b15e-4b04deacd7bf",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a2118bb3-955a-4749-8fa2-9a80724b47df"
        },
        "item": {
          "id": "b71b27af-ef10-46ce-8fc2-01758f7cd9f2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a191182-12fd-4dda-b9b5-639264a8ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8e4c61-fa4f-4df4-9028-eedfe18e732b",
        "cursor": {
          "ref": "da0340d5-ad9b-433d-bfb1-51796d3bcf7d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5f885da4-3c03-4b32-b8f4-3d697beca840"
        },
        "item": {
          "id": "0d8e4c61-fa4f-4df4-9028-eedfe18e732b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e018ef13-9a46-41a1-b410-a5226d2d73e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ba61ed-4030-44bf-9bf4-4967e62c1343",
        "cursor": {
          "ref": "bb1cae47-81f0-427b-ac71-75328a5b3225",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b2bb3530-9e56-4706-a3da-7e0ed1ac7039"
        },
        "item": {
          "id": "80ba61ed-4030-44bf-9bf4-4967e62c1343",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "25b8fd53-1e3f-4e4c-9ab8-e1248f474db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17cb314-833e-4134-b37b-f4e9fc035c14",
        "cursor": {
          "ref": "e4b45aff-7c55-4b00-a9e3-552be3d8cd96",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "57de041c-8b4b-4880-98f7-8e2b0a462feb"
        },
        "item": {
          "id": "a17cb314-833e-4134-b37b-f4e9fc035c14",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b9afe2a8-a4e5-4e32-a74b-0eb68c546c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341db6be-3283-4b77-8259-d95f199d1fab",
        "cursor": {
          "ref": "f4093439-9c82-4833-a4c5-2978539facd8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0944f483-2e72-4a18-a88f-66d4fa74088d"
        },
        "item": {
          "id": "341db6be-3283-4b77-8259-d95f199d1fab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "941d709b-bc37-4250-b2af-12e40de9dc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119bb002-4d71-4dae-a8ed-205f465e849f",
        "cursor": {
          "ref": "6cb04731-73bc-49a9-a507-e17a445b6629",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d1ad7691-6b66-46f1-b58f-332060573f51"
        },
        "item": {
          "id": "119bb002-4d71-4dae-a8ed-205f465e849f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f290ab79-9bad-410b-8234-66216a8c6078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bafb44-95ce-4095-8f04-a94779809c54",
        "cursor": {
          "ref": "a3e5fca5-b57c-4c2b-b378-f928b3191427",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1c62c383-60a3-4e3b-8203-ef05228381e2"
        },
        "item": {
          "id": "57bafb44-95ce-4095-8f04-a94779809c54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "656cd06e-06ca-4b29-9b5e-9bce0616caa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1797b095-c419-4198-ab6c-60a388d0aacf",
        "cursor": {
          "ref": "797c4c6a-c03e-4aba-9dc5-0250d3d86a87",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "348c412d-26af-4189-b9f8-3f92f8694ee2"
        },
        "item": {
          "id": "1797b095-c419-4198-ab6c-60a388d0aacf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6c9b5a5e-65a5-4046-9b04-e21f6cefea79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea05bed-3fe2-4ed8-9217-3c51cb5f8af6",
        "cursor": {
          "ref": "315b5bdf-af58-4e7a-a996-50143a8525ef",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ce1b939-3e19-4662-aa70-517032eb7ccd"
        },
        "item": {
          "id": "dea05bed-3fe2-4ed8-9217-3c51cb5f8af6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "79a1478c-e036-4532-ac16-10a5a57f17d9",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "482415e7-c365-4ebc-b9bd-9943a10c0e64",
        "cursor": {
          "ref": "a1a99234-816d-4f26-ba0c-045fbd7b3498",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "28c9970c-cfc3-4272-a6ec-cfa33641a653"
        },
        "item": {
          "id": "482415e7-c365-4ebc-b9bd-9943a10c0e64",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8fb96779-ac8b-4f3d-b752-361a982fa9bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1220,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a44f062-bdd8-41fe-88a2-286d4ea4d037",
        "cursor": {
          "ref": "f216194c-b162-4459-93b1-62937f06e246",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "981f814a-e8be-437c-a0c8-31fbd2ed70b9"
        },
        "item": {
          "id": "6a44f062-bdd8-41fe-88a2-286d4ea4d037",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e4bdd0e-6dc9-4b04-97c3-b250bd85ce22",
          "status": "OK",
          "code": 200,
          "responseTime": 1492,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee868f08-9b8f-4fe6-af26-2ba6e5567f4f",
        "cursor": {
          "ref": "240165f0-4c8f-410a-bc7a-fe66c706a930",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "448afcff-6acf-4454-938c-18a0580a0d78"
        },
        "item": {
          "id": "ee868f08-9b8f-4fe6-af26-2ba6e5567f4f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "900d3db1-7993-40a3-b2ea-4c9f5b419de0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee868f08-9b8f-4fe6-af26-2ba6e5567f4f",
        "cursor": {
          "ref": "240165f0-4c8f-410a-bc7a-fe66c706a930",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "448afcff-6acf-4454-938c-18a0580a0d78"
        },
        "item": {
          "id": "ee868f08-9b8f-4fe6-af26-2ba6e5567f4f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "900d3db1-7993-40a3-b2ea-4c9f5b419de0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddbd4cd-8215-4b93-a659-655969a3802f",
        "cursor": {
          "ref": "2fc3c598-74e3-4d6d-b412-b20c93b70d77",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3a2655fe-4295-46ca-bd67-d8e0666bd5b5"
        },
        "item": {
          "id": "bddbd4cd-8215-4b93-a659-655969a3802f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b938f669-6c5e-4fc6-b699-afa2bda865a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90369b0-05d1-4950-9bdb-dab834405117",
        "cursor": {
          "ref": "66791cc3-0724-4f79-8446-3648147f09a9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2e904b82-dac6-44ae-9080-16e5d0f94b64"
        },
        "item": {
          "id": "f90369b0-05d1-4950-9bdb-dab834405117",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b52d3c76-3adc-4635-8e9e-0c94135eb901",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}