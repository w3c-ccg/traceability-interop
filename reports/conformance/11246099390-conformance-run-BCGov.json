{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f8981bf0-8712-41bc-81d6-d35216459ba7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d9a856c9-1b8a-45ad-b61b-ac9231899aa5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4119d9fe-5874-4860-8140-7f74b57c2263",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf83ca95-f4ea-4dbb-bb5c-21d4f9b6c535"
                }
              }
            ]
          },
          {
            "id": "ef8b5101-8d54-4a1d-9588-4eb9a58a107b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3868c7e0-3b63-4bb8-8317-bce6c6b58ff2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "97b53794-09a9-45d2-b335-bff208b95cf2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "155732c6-ce9c-4838-bca4-a614eacbd8ff",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "93769d7a-16e7-434b-976e-4f574f0a8ab2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e30c988-e6ee-4f13-a14b-a54712e735c0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98132e39-4154-4885-9be7-0290352748b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "148b0bfd-654d-4fac-835d-18d369cddfc3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8d0943d-5e75-4afb-a8fb-41bbd5a8924d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e81ce76-4feb-4a40-b49f-818b7287a086"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b367147f-174a-4055-b2cc-fae36c828446",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c8fc37a-2924-4afb-97de-486fa6ceae86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40fab81c-7c03-4f59-a6d4-cb9005a84bf6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "348c9fa7-453d-4345-b654-af24641e93ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "444a2667-1b95-4664-9394-91b316eb79ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b951d1c0-13b2-4de0-848d-c45047ba1b30"
            }
          }
        ]
      },
      {
        "id": "a25bfc61-8a30-4619-aa9c-0536e7c9caad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1806c69c-99f1-4dad-9cb0-4117a0e8e826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "544252a4-91c1-4860-8ded-e7d7a71509f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d72fb136-fc95-4fae-bee9-7c78b7dc65ce",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c78e2f-d246-4be5-a51d-d0ad6b1dcf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f6ec7a-d868-427f-9c90-a6c63836637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a0fb2-831a-4f43-8d20-a7a918b6e762",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccced001-65ca-46a4-a9d3-b814edafef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "089b3eab-63c7-46c6-a948-9d2eb7dc3059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7a3b5-4270-4ddb-b2be-683422c90458",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1580aba-c99f-4b2e-8877-c5682d08afd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e879da4-af37-4ad6-a672-4aa03a5c1d5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b807ff64-69c2-4f69-9c95-a29100060267",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f9cb283-054d-49b2-a417-dabc68e2ed67",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eadeef-fa3b-4bd7-9918-13ba38f7049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e406bf20-5d3f-444a-bc8b-f217bc26ef20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a424f55b-0719-4542-a076-a48938827dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f5bbe5-3829-49c3-9da3-7153fe36f03c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e84956dd-12ae-4cc0-b7e7-ec3c768ca059",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8fab4cc7-04ec-4753-8688-326608c25635",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1ad5c80-168d-47e5-ac69-787c0c608ea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7c41959e-8aac-4423-adfd-abef4ec588bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35901d33-a015-4f70-a7b6-41e0f55ea295",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "96df7ac0-0db1-4040-964f-9174a03b208d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dc55aa7-24f9-489d-950d-80f908bbc13f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a422d7c8-9bbe-4b7e-a982-7fb913051d28"
            }
          }
        ]
      },
      {
        "id": "8e7aa4f4-0778-495f-bdd3-fd5456454c00",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e47b53c7-eab9-4064-8f8c-d7ecb1c0814e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79194032-3056-44bf-a43c-528bed9ae54b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ebe14ccb-6667-44ea-9cc6-9e2a1594a7fc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cdccaa-6404-474e-a4d5-bbffa5ff1341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ebb3b2-62dd-4653-9f45-dfd562bd41af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b2586f-e2b4-40f0-8470-4c2108adeac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "134102f9-6e80-4244-9cd3-315e6e99ec99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee66b500-e4ce-4ab2-aee6-fc1ab4129f29",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b358c0-4d8e-4b65-b066-7b0ab019d735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8534d854-ae52-4e83-bd8c-38645c1c55f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d5e029-baf5-4c42-b434-cdcf28e4b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784d82f7-ec20-4bec-8cb4-1567a13380e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5205f254-e96d-414f-b570-6d8cedc7b7f0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e8195d-a0cc-40da-a545-c2df52ed7a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692bd548-9a67-4b18-87da-61afb705fe89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4190cb86-64fb-4bba-8615-10c20b89cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cac4aec9-0c89-4bfb-a0b1-3d35bfc62d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76987b54-4122-4a0e-859e-4c9f8578cf23",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875474c1-a210-4db0-9a5e-8730e6cbf90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c01e721-76a0-4ff5-9a8e-4c0a95d731e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff41ce51-d648-4698-bb5e-ca5b98a61f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358ff116-6bdd-4fd6-8411-f2fb0e87c836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb2e242-aa84-425c-a570-51d650d1588d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e60d18-ead7-45c9-a3a0-f2ce111c72cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fb46bd-dd56-4724-8968-57bb217635d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae4ed12-2563-4464-9051-a611a92ef6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6df02d4d-9e1f-4d09-b462-72db3b04314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e19bdc-aa2b-4469-9feb-d91e2384e209",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424fea8-37ce-446c-aa25-d1bb5c6889c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde555f1-1ee1-49a4-ac1e-eafc10f15ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710166b0-d29b-4543-8acb-71168d61834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4530285d-11bc-45ef-a120-07401cc1ab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d5e16-0fd5-4739-8304-fcd4b500a349",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a911be10-8079-4fd6-aca0-abd59abbc2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d3c7b0-85f4-4e1f-a5dc-096217cc382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c11dea-507d-4090-9c14-d4f0d707b48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0156a2af-3e61-4fd7-a986-3c79d0168951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becc971f-9325-4697-846c-cecd542c473d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97791bd-d4cf-4293-b30f-615724c9fb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d83917-ae9e-46f2-9add-e3e9b8f310ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b238333-e58e-40bb-9461-a0d94e5b50bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc823f6c-9726-408c-b4cb-754d125869d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa4f410-9e60-417a-8b8d-e54e03d6159b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0c590-61c5-4c12-b46f-f3b3d29dded7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cefef8b-e50e-404d-931c-011a7c5b5dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac466d5-bcba-49cc-ad6f-75d07857c62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21af6414-f88e-4891-b9e0-bfd6897f52c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a333cc9-a90f-4ab0-b8a7-93607b74d704",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9dc383-6ede-4b64-b0d8-4054cd5faa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0ddcfc-e01d-4db1-9597-04a1ec8b7a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38774c04-44d7-4fec-86da-95b62234ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a27501-eba6-4d5f-ac1a-731fcbe2b25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37229a28-e22b-464f-8f61-30db366a63f2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3660d6-ede0-46dd-961c-d7dafda52602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605b8b72-4331-4995-8a1e-2e8e672945ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9fd795-4e02-4e7a-88c9-fa85eb843e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "396491a8-c7ff-421f-b212-a1e4ccbd8ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fd64d9-74a0-4120-8ec5-fa2f7e5d21f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e8f1c0-f97e-47ef-9d5a-7b8201f80d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7438c63d-503f-48b2-aa49-d6daa95a520f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2549c9-8cd9-4f47-9284-cb94b068a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78dc50dc-c894-43a2-83ce-5a149964c797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97f7a3f-4651-4ffd-802c-8f19ca8a50e7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bcb5f8-8116-45e0-ac85-73efb6e647c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4a28bc-9f9c-42bf-b463-9d511fac389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ba773e-3e6d-48bc-aba5-d27ab51a085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "446d956e-e557-4af3-822c-a49c43aeb384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d4b46-f2a0-448d-9125-831032279fdd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93689113-856c-4c14-9c53-7fc61c1aefa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2e4396-29d5-4fa1-bd74-8551a8b1fb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28cf04e-dc5b-4cf3-a2d4-45b18d28f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed46dfbe-2b9e-4a62-9af4-5b90a8921d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37885c0-74d6-4975-833f-2599a9266f37",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668a8542-36b2-476a-9d1c-755d8c438bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96d4a20-7619-431b-81a9-9db1dac0d70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4c17b3-2a6b-4008-9c9d-4a6816d0e179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c926c0e-b543-4409-a1a7-3001ff703398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384fad75-d5e6-40d2-89e1-147e381ba2ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0877a4e-d2bd-4fa9-ab1c-72bf67162335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f833690a-b5b6-4f40-b109-fc7e52a23e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a903949b-c3c0-4176-9682-5356e3be706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea348351-9de4-4fc4-af27-36adfb1321a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f3dd2-683b-434d-9141-761eaafd6d26",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bed7f98-fe51-4858-92b3-78f23195e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eff1744-2d92-43d4-b0a1-9778cae78243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c27f115-2e07-4d38-92c7-4ee4249767b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97957a5f-dec9-4577-af51-c7f106d75510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60c2396-9536-4d95-8624-ae9e7e85135c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0684a41d-9f7a-4859-93b7-7dcd3ba5db63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4435c1-a703-4041-8722-e94f462b0da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481bacc5-dc6d-4944-95ef-10ac6d85e076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c3b4c2-e286-4c2f-a02b-082350b45010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d7eda2-7614-4599-8077-e89f17b69459",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b3d8d-b3bf-4f71-9762-9436c8fb2510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db039c1-08f7-4df9-85b3-0ff96cada52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbc8414-1ca0-4231-9d8e-9f5a1b8708ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb9b87d-44bf-4911-818a-468621c6bc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e984100-ed32-4f0e-b69e-3d27b0874cf2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb3ab44-0d0a-4ed7-9b2e-c8786cee8909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53110090-e0da-4a48-8530-784f7067f4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f5655d-45f1-4201-aea5-bc9392d97dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e85c4730-e89e-41b7-b17f-9e982e683d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42bb3c6-d4a0-459a-8db1-bdde8c68a085",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c921ce-13e9-4fc9-823d-e24a429b14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73a6bb6-f49f-485e-a05f-4ca04a1ebe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ad7035-97cc-42dc-9379-f4527e539c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a404a7d1-35c8-4dd0-94dc-0e501915971f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321b28db-efce-4241-8874-905b2aa0521d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b04ac5d-15b2-43a0-862a-2b35a114c23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c921b5e-390f-4b32-8a89-14cb069ae543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdc456a-47e7-4889-98de-49accc82639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e63de59-fd6d-4832-82fc-da5cfa813963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb453f-b2b6-41a6-be15-8d78e197d515",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd73e7ae-8ea8-44e7-96e5-a5228bded0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5ad2b9-9019-4308-b00d-412533f2d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df25e0fa-022d-438e-abac-df378e7685c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9045b89-b707-450f-94ce-8e26ae2e957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f37c159-ab3e-4154-b9d4-8571489cf858",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e4357e-44fe-4f28-bd76-07281161b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1ddeb0-7a86-49b2-9fd6-d530f8a87798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb8dc41-8a2f-4d8e-9b5f-150b909ebbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea40876-7e7a-4d36-ba70-ca5b5c035219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e43b64e-667b-4768-a3eb-bbf0d61b1d3e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eedee9-eb56-48ac-a77e-9c336456a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82163e86-6846-4445-8ef3-47f5742afeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450db1d4-8dcf-4dfd-8e96-9d49b572799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e87a9d-356b-4912-aad8-192c7af9637f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bd5458-b03e-48fa-ba2d-0cd9afbaeeee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dab6e7c-6f33-481a-ab72-5504efa4ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a25c14-042a-41db-af8b-43ef7f511a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5286793-0138-4dd0-bee9-5138eaa6b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffec45af-fbb2-42d7-bc44-cfd05c825d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3cc02-f37c-42d1-90c1-ae94d0bab6f9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55b361-7ac7-4988-8eb9-a9a2e2a7a5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90e0d00-f695-47b6-9637-d44cdc2a94dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6c3767-8e51-4330-b822-2ee9f495651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61aa41b6-eb10-4bab-b07a-e38899e6d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15056d04-de7e-4afe-a805-8a2207ff682e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08553ca0-0ab3-4f5e-9acc-6a960ce21981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68188fe-c115-45a4-9f7e-1280f73c9730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b8d84-3bde-4047-9e15-abaff7eacab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a0a7a6-67ab-4d5f-b5ef-be6109b7d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728214c1-5e20-4fac-b7df-4668d9f3c3da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464da7d6-ffd5-4fc3-b28d-0e1b7a5c4795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6bf9f8-17bb-41e0-ba14-4eb8f5665b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38663aa2-0627-4782-9712-94e741b54c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bcbf6b-d81c-40cf-9501-8ff25e30e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da15fd4-aa7b-49ac-a5a4-3779096d8ebd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685d2522-1f98-4cd2-92b2-325e0fcf3119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f40b1dd-df6a-49fc-b70a-69640aac1a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c1860a-65d6-44c0-bee0-a8e02ad92a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f049065-a4cd-4833-a559-7bb0af2de690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b534fd7-1f3a-4599-b69c-a720b05fde13",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ad6eff-45e6-49d4-8d4d-d64d089ce671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0581d76d-6525-453f-ac5b-37c455915050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314d1eb-5b2f-4326-bc89-6c502f3cb928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdf883c-72b4-462d-9176-bde23a2c7f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3232382-f3cf-4306-88f4-40a3f6c4b92a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a992ccf1-4807-4bb7-90d8-433660369f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b25f4d-c622-4b0e-b680-fb4165a0356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02b0cd1-4786-460e-b2cf-bf2f51b1f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2716cd87-5e07-4cfa-9c1f-bf3fa9f114d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8fda24-e190-478c-8cbf-e883a71f1dcf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfac6d92-4c04-410d-8f4d-7a53ab1d54ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44475686-3836-4da7-8799-8f7ad42eaf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e823738-931e-4a54-9ad7-7125ad52dc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d30e06e-176b-456a-a264-9dd2fe40f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b47c360-f97d-433d-803f-e5a8d7f3b84f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e139f892-4b7d-46af-b2fc-c2035598fca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed529c77-8e57-40ee-8fe4-69613b4fadd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e53ff51-2254-46ab-9d9d-d07af4fcd3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58902436-f7e0-43bc-8b43-b9ea88983b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf49094-434c-45f0-b2ad-7ac90b6253ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994a3995-3837-4b58-a1ff-99c3c9a4dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99826523-3e79-4eba-839d-ba5254162719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4edc989-df76-4849-b989-f8f7d301f821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9046ba5f-a1f5-44ea-819e-e19d571567c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec3ce0-3b17-49aa-8b6e-402e133cf29a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c4a96-a0b6-47df-84d9-a0f5aaf4dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3fcf217-5e65-4f72-b25c-d9628b83a468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eece95-d47f-4767-89e0-1d98440ac56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1faf4c38-7098-45d3-a0e7-1721abf30c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c32c0-6a53-43eb-9cc6-f93bafbe22a6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ca355e-b7a7-41de-b91e-0acc73e281bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a8d2a-9ffa-4bc3-8b80-879244675d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092462b4-dd4e-495a-ab39-47f7c218f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "488dff4b-e964-45e1-ae78-d7c2ea3cb229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7689d3cb-b1de-4f62-9c10-7352f6676bee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d6094d-5771-4ee3-b0f2-6957ad18264c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024c8321-15c4-4c80-889d-b79ce58973c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab7179-654f-4cfb-864a-6d5c4ad437ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "123d9899-1115-466e-9cad-6e109449db22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5189ef-2e12-4913-9505-6be0f3c552fd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a16175-e811-4776-9bb6-996db9f828ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029c7563-b9e8-4255-abd9-7b52e8ff20e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fc657b-283d-4a1f-9e54-16119f14bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e292dd8-c1ff-43ee-a379-1654dbff95c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7148ceab-037a-4c4e-99c3-ad7d1396b0c7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc3142-decc-4e50-9102-d837ecda9d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e80b393-6562-466f-b98f-3a222422ed63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b767e-2fce-4452-8781-41d5fef9a028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2655ed1d-8a2f-4999-a0d9-d538c0fda743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c844053-0484-48f9-ba32-2ef3b3efd308",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7280c9-700e-45cc-a136-bffd94f84176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082ef954-4c5c-4b83-9114-b3648696216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be248f6-9e73-4356-b955-c48e2f6aeb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8299a0-9fdd-4f06-93b8-57dea44ffee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a718e-b957-4979-91c0-c82e074aad30",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2411b-2b6c-4aae-9731-735ea7f590f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4649cd86-14ea-4a81-b3f7-9cdc12b56df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6c64af-f3ce-41e1-a628-45b5450e3e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3131c6da-41c2-4185-aa5c-2056b8b39338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d74da8-a228-4232-a852-76e29d061616",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66d02f1-495c-4b21-b592-10c2a6027def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd72321-0fe0-4278-94ea-276df290c878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139d4ed0-8951-4930-90fc-f81c61986faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1ffb05-7fd5-486f-a416-0f93864894f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a8f6ea-804a-4dc1-a3fb-55d2a59228ba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6367739-bb4c-48c0-a69d-8cfe591f9558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252daee0-8fa8-4c0d-b006-f4f742d47c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e04d93-fe15-4857-a9df-afdd9566933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f716d0c-4b85-41c3-8546-fa5a24637f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88430d6-3758-4be7-b27c-1b766d0f97ae",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5b3c58-5611-4ca7-bfd9-66de3ef7e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef8060b-8fa0-4d38-8ac3-495ba3d27eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568a1730-7bfa-4328-a127-6425f8e5e735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecddf1dd-531e-4388-96af-b76459eca6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf56274b-cb2e-4e63-9fa1-b9e8623f16c6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1252b5-852a-4df6-adf7-430dab8b5d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed062399-36a6-4b8b-a9c4-7fb9b1d53c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460a3842-d4d4-43a3-8fcc-8663949bae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f943110-d695-49ba-845a-94776ac62a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500df9ad-8d26-4f4c-875d-761c293ab62f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192d2cf3-f73d-4885-b8c9-bc7969e564bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61a7f9a-6c59-451c-a3ee-538895f38fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3032aeda-596a-4833-9c47-22918817a0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ffc68c-c94a-487a-9fe8-e7174506d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5386aa4e-9c7a-4ebb-92a0-92a3c59d937a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66b9bc6-835a-4809-a0f6-e3ca91105251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56020ab5-18f5-4b09-97a5-7b623181bfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d217095-893c-41a4-a7d5-0f8af5ecc96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5d0400-8780-42bd-899e-eef45a140957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db50194-7e52-4a3b-9faa-0130fcca74a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8742c6d1-3da3-49fa-9d77-e6f29a6a3f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e73e57-a3fd-468f-8d02-6a60576a11a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83bb756-267e-4796-908d-98387c1200b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f807a6ee-af81-4eee-9fdd-08810a0639a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f3a841-8af9-497c-9675-d4b0c1464887",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767ce004-a115-48ec-896c-e0d803f851cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8bf678-6d1f-41d1-9837-070e3142fb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659618d1-bf48-4281-901d-1ab8f9d39235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e414b1b-f418-41e6-b8b4-ccd440d1ced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b01e4-68ac-4bf5-bdbc-ac76a848815e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d6efe4-9892-4548-a924-8766462d64b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa353d3-9c7b-45fa-bca3-a9808c26b276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53bd4d1-a4b6-4500-b09b-c2154c073458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "84db0334-7394-4f89-a0b7-1c4347a85793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03e42e4-8238-4ccd-b6b9-325a752378b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b62f0d-594c-4910-8cbe-0cfbd2041b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3832b17b-3a46-49d5-acff-c4f85d9c3726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c01cb-2d62-4a5e-94d2-0e54dff0ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0edac2e8-74d5-414d-808d-290c9e21028e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8732c10b-d80c-42b2-81ee-80c2195327cc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ed5aa0-4470-432f-8feb-b185fce303f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a407b0-249b-4cd4-af7b-871ecc075327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01d52e4-28d3-4a23-a193-380745d8655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829bbe5e-7df3-43ae-8c14-2f1e8e3430d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233bc368-144c-410f-bd95-bc10a2e37f71",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e7950-9968-423d-89b7-7f8e43ccc71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba741c-8205-4373-a842-de34b6aa2ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb54cc9-1b87-4c64-8571-c98e9e592ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baffed3a-378a-4bdb-b5ef-2465889b979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097223f9-4fd5-484c-86c6-86214c66b12a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7533bd-00ac-4674-b996-d0370b357688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4676fe90-af40-4173-9e60-fca086716fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e644f3e8-db3f-433c-91a1-6ac69ffb85a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4dedce-2838-457a-b6fe-f267215c817c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57618d7-0616-48ab-bf81-ba2e460aad1f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15d551-f81c-49f5-bf22-faa803ba724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e954c48f-0b5e-427c-8269-e4e81f2a862d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b894d7-91e4-485e-b49a-b892e008bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "31577cb1-ab77-4541-8ab9-05350cf11e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ae8e58-58f5-4295-98e5-9bbce663ca93",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472484b0-fb16-42aa-b0a4-482817b5f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83364d6e-5517-4607-972b-fd1472c62d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a4f4ca-fe01-43d2-ab47-df906e6d1659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff6ba31-712b-49b4-974d-aa71e667b065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fa1008-d633-4a4f-8b15-70115bfa4e89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9f86ba-c204-4097-90f5-ee39287619fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cee2ac-5cec-4400-9968-73b6a1742428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf6ad1-73ff-4534-adbb-961a4b46a382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a352a8-6505-43cc-97ba-af1ad870913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158ccb60-686e-4e51-b279-7e1368cfc8a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f7114-703e-47c9-89f1-483e6354ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30f53cf-8bf3-4932-8730-26747aa344f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14094ac0-6cad-4b9e-a804-b5b0959e51b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e99ecc5d-7ad0-436c-8907-af035e243687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add7513b-5502-470e-b351-81f3b84e8858",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9967c-c688-4bd6-96a8-4b4f3ae4877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd7414f-686e-4fe7-ac87-8e3d2f4bc14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d455ef-3943-4f4f-b506-ff8a8611f23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "347747b8-d3c2-4f3b-af7f-65e41fe537dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf1f411-925f-435c-ba6f-021f11082c0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d3c80-f9b8-4394-964f-b3cb67b9dc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ac161c-2ede-4d63-90ac-cc20e20ebafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52532765-a3e6-4fd5-96fc-857b6c6537e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d86e8d-ce1f-4f91-93a6-fe945feccce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c7b4f7-8449-4893-a61e-e60d7b1af512",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da51e205-2b8c-4928-bc07-53d9199d54bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd964495-2eb6-46db-b110-7bad69d8be44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a529078-ed8a-46c8-a10a-e8257d058bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9625a5ac-ab72-49f1-a308-8d17b45466e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a5a8f4-7d71-49b6-817f-ccc538ed9e7b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89669de9-8ea0-4492-8c85-0b0581f264e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d003a9d5-c09c-4d03-9c49-b2379eac5107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95295e3-dd7a-4e0b-bca9-83327e813164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f705da-4d56-441d-983f-c959586f1792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5a8ec-0463-4dcf-97ec-b932d33d0b19",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d56ad-e6a5-4b2d-9766-d06e12c3d4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf984dcf-0d7e-473c-a837-b19cc8834faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a9da53-c9b1-44b6-bd30-a954fc959c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66c2fae-7839-4e13-8d72-18714fa038c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b15a6-c0c1-402f-b5ff-2556c583475b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c2a27-01b2-469e-ad06-4c98602338c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e532a4c-09ab-4be0-9da4-9ab6917f1638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d82f23-0ef8-4ab2-9d36-8c02a006f824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcdf533-ddf2-4dfd-b9e1-df638f6194c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7f5f6-92ef-471d-87ae-ed1101fd45be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c20580e-995b-4b9c-ac0e-fa304f4b1158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e847e57-9628-403a-adf6-5bd70ba4794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b75607-8dfd-461f-94f8-8ec747dc6e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01dac07e-adde-427d-b72b-72bfca999e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f5aa49-6d9c-404a-a7f7-488c14f9577f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6df282-d8d8-40ff-8579-754a927db37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5996e5-3601-4113-a2ba-09bed7cf2dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fbd830-8bad-4c2d-b2ac-40ec918d537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c688d14-4378-4335-bfb9-8992fb9dcac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce404c05-f8e8-4258-a104-bd55934154ad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdb7732-f961-4104-bf67-b27074be1afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817da89d-33b2-46df-b6e5-2dc9ed4b70d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bcaccf-8a34-41d0-bd92-acd0e373ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c507f3-6241-4118-a2b7-8eb6d2e0745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee469e2-dd0f-47c5-98f1-186975edb1b1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17218d01-a713-4ea5-bfd3-ba96b83dbc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cbf72f-bdfe-4724-8690-e8f8d959b440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb8b3a4-0711-4211-8f71-97d7717b6558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e497b553-8a53-4da1-aac3-a5aaa1a21ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb3a38d-6cd1-4f27-b3da-7f6cfffc02a6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4c7ee0-d67d-4ed3-bfb6-5aedd6718a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0730c5e-2864-446d-a18e-3dfa7f55ac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eecee4-f085-43bf-be41-709b31b05daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67c70d7d-0603-4f7a-b05f-203ff41126a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf65b1d-2409-43fd-b0f1-9c56fe76987e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3243701c-8528-4817-bd84-848b0d9740a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f408da-6ae6-4f66-b5b0-25b78b3d969e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d48379c-5dfc-466d-8919-7908278e1e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e09f80-3b0a-4f5e-a202-34692860b144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aa168e-8b6b-48ce-a861-bba4522d0b9d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e020ee-5735-4305-bed4-a56a8697ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbe0a0a-9ab1-4b4b-ac97-673ed1492f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e6b9da-591e-440a-ace3-576b7a272d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33646d12-122b-4f62-b4b3-af56df5ce95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be81d82-f09e-48ae-abe1-4e1c94cfb443",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b4b53-4159-4d03-984d-b6c059b08926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec36297-9e41-4cc7-a64e-172b5eb2d156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4949133d-d5ba-4bcc-aa9b-2ad8925aa249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb148ec-51d2-426c-a4bf-de6a95288768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefbc364-7479-40cf-be45-3b6cab9ca5b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ddb74d-c20b-493c-9934-44d05792f591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3588d3-941a-4b4b-95cf-e78f539a696d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea660422-2e6f-4b84-8566-dcd267e0eda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa662098-fc41-4ceb-b533-be9a4e2b02c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ee0336-1665-459f-a4ea-7364c66c4ece",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f01feb3-c9b3-4d59-8703-18a9d0ac944d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef143c1-12ef-40da-8bd9-f0ec24fd3ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d6f0e1-4afa-413c-8842-e6b2cead56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ae9624-326a-487a-b3ee-222056ba48fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0263b7c-b168-44cf-9a54-4bd1d51429ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b4f761-4daf-4936-950f-5e8f767b1839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be326d1-1b60-43dc-b48f-1ca2b6789b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee332aeb-cef3-41ac-a501-5f907327173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9d7d24-b132-43e3-a0ab-7a58b821900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed89ba7d-13b0-41d2-aafb-be061b2d54d0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3415640-da68-4e95-b862-a8ca252ad80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507ea739-7b2c-4570-ac8a-4048ea1344e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a73ef72-7c66-43d1-a977-f24e9eb78635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafe6e70-0705-41d4-9880-0de0075333d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feba14d1-4ca2-436a-bdd6-fbcc1fb517f8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b351ce-d613-434b-ba86-80ec9207566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4a6cad-c55d-472f-9a41-4311309d333f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4810f8e-f075-42a4-9882-7e12890158a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22543887-d6fc-4697-8663-747ddf78e294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df81b65e-d908-458e-befd-1c92abee97d5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d46dbe5-6f1c-47a6-8987-0e432552df4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8ecdfe-8f94-4859-b1e6-2101be1cdb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2c467d-4c45-4d0d-a07e-b5b52348b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b89fe4c-0fa4-4abe-87d6-24d70e3ba10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee743395-e579-4c08-a553-803ff285290f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e90a6f-5929-412d-b96a-bfc2376405f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec75d2e1-9bb2-41c7-82e0-e29afbfeb5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6396b1c3-d3a3-426c-b2c7-37f8d2cf8acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "353dd64c-fba1-449f-a4e1-1e45231b8111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85885431-46dc-43de-9a67-e013026fb346",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebab373-c5b7-42c1-95b4-3b9c23fc9041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af948d47-cb9a-4d07-862f-5bd1202f6028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013e1dc-0c6f-4f15-a852-be80ad0e4492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec4e8df-493f-45e5-acc7-2c7e914caf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ab92db-2e68-4ced-bdb8-1182c779c92f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a19cee-5b07-444a-a4e1-61eeb5b235d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4911eef-8fbb-4999-b6e3-d7922095633b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cc6ae8-9c8d-4e57-aabd-6ddb63d5bd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b03c73d-7119-40d3-babe-aea121638cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebcf66f-0f3f-4752-b084-87c65b3dab67",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7e8c3-5a8c-4b17-9f32-b28c0a441059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023d1d56-23ff-418d-899a-a67f0b92936a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d210c0-b13d-42bc-998e-9db54c7dbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3055322d-21c7-4d9e-976c-f12b7f0d6209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eea25cd-4ab3-4efd-8bb4-2691c97ee2e7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fb70b-b523-4148-bd18-8669e3c588d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbab0283-efa0-43ec-908a-a7a305ad8424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d08f94-23f2-4614-b3dc-a15c300ca461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fffec6-e49f-4e56-ab9a-709749fd4b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07631821-ac66-4cd4-a8c8-3f90bf0df41a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a85516a-b091-4881-9cc2-09b30a5114f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d12279-82dc-4149-8143-79f84f10b474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb19a5a2-d4e6-4cb6-9c6e-c16c875b603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4499372c-46ee-40f5-9203-4f12eb524797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e85190-a717-4f5b-9c49-194477bdc7ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38b54ff-2620-48f7-9ca7-d130c76a9d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3723bd26-c974-4b7c-892f-389de088b58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7241cb61-acf5-4b4d-be4a-33204ac649ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4853cae9-0b62-4480-a4b5-8750e6ac2661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a929b1-53c8-4e22-a0c1-5850956fbf97",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8af91b6-290b-4e74-9a43-4eaf89d03d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b27470-8843-4869-8a32-9d64bd786d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8528d8ca-61c1-4509-9fb8-89135d21fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4728197e-6822-4283-8731-e97f0d60ff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d313c82-412c-4a41-9dc8-2376b4d114d2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34f435-788a-4561-9fcd-6e705167c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4c3567-80d8-496e-98eb-5e61b3190538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34231f8-498a-4a11-9eea-087187f64028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "387f3682-c1a6-475c-8e3e-e6130b9c59a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba87dafc-2b14-4709-bb3f-db0ed8bd0561",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b555435-23c4-4c97-a6fe-eccfcbeb40ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9b33be-1a8a-404f-abb2-f2944f5e4e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3468adfa-94b4-42cd-9af1-c1d45e1fa0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d8fd4b-08e2-40d0-9040-40c2fedb3f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df616733-6eb3-4643-b6d6-b0552ae792fb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564be598-8cd2-4252-8109-51140cb7086a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd27c68-e3c7-40a9-b170-fa28dec7eff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d184ff80-0f15-4a6e-befe-27df4454dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "930e6697-6814-4302-9efb-999ec7b03e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32367c8f-ba23-4865-b836-883baae3e694",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85002c2-2e14-4226-b307-7e5f1e9f6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6adbb9-4432-44e7-9310-d5247a63af95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5717dbb-7c42-4084-8166-b8f4081eaacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f72df0ce-94b1-4efc-a6a3-01521726fb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4527562-763a-4b5e-a321-06ccd66890d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb19eea-e027-455f-8b5f-cee824422150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6cc5e43a-4346-45aa-bf2b-28f64e6bd1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b8ba5b-0ea1-46a5-bf13-01f17183b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a17a444-490c-4516-b27e-260c63c50bf6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07d5adc1-296c-4879-b272-82482e9aa4c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d49ca149-d4b6-420b-ae29-bca59d1f7354",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef4424-ae77-41b3-9bff-340a0b3987a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b9fa77c-7718-4123-829c-26b3f5188353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ac828a-7177-4757-9900-508312b1b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce348afc-f4a7-4d26-b798-278ceb315a9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2a74f13-570c-47d2-875a-7a6ed66e62aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f3c7843-daac-4183-a208-2943b70b98da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c234cc9-0af5-4870-8d9d-4f852e3b8f47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd217a2-d87b-4a29-8fee-91800b71bb43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ba164cc-23ec-4c88-8104-75b91225d884",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ea13728-f4e4-45ad-858e-7e2a553dadbb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbb9825e-116b-4c9e-9509-1a160841daa1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0a3f26b-963c-4229-bcd9-17396522decb"
                }
              }
            ]
          },
          {
            "id": "3165a94b-2ca3-4c35-9f1e-d6d0eaa56adc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cd7a175-d27c-46aa-ba42-39d9336b1c1a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e9a8be1a-d6f6-477e-8908-cc45c8ec2492",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e1cc40-d1b5-41ce-be88-ec367c049243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1f407689-f451-4bef-b07d-bfde1c78f410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c064e0-6cc4-4779-93f8-b580052bf0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e4e838-95f8-455d-9906-c5257d5c6351"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93c9f7c7-e8d5-471e-bde4-962c88625a31",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a13e9f84-fc78-4ac7-b1cb-b9fcf89e5e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7c1e459-9c66-4d49-8312-b80a91de19dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5650453-aaba-467d-adce-1e7bd9b8089f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8a8dcd3-f810-4d84-98d7-a2a3605b25ad"
                    }
                  }
                ]
              },
              {
                "id": "583e2efa-dc29-4406-b142-71c7b04d6696",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2398a2b7-f47c-4e7a-aad5-5c1ea5f3feb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2988009-61f9-4e67-80bb-620ec9ceb47d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2a1a52c-b5fd-44d7-bb86-3990c403de3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35b04901-095a-4505-bd47-ede5b00f74ff"
                    }
                  }
                ]
              },
              {
                "id": "0b7592ad-4c1d-484a-bca2-94a2a4e20ea6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac7f2c5e-7d5c-48fc-9ad7-89f2116117ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d47b02f8-e44c-4123-adbf-9fb70fe46ec6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50a44300-33d6-4caf-9e51-beb685c65e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66c6af50-d536-459f-b3dc-12eef5570bc4"
                    }
                  }
                ]
              },
              {
                "id": "ec425131-32f6-46c3-a231-528596c22c1e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32759477-f612-43fd-afd8-e07e1a670b67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5501a2d-e24a-4e3c-9160-fedf7ba6f1de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f6e6d1-8cba-4a1c-938a-846168c09f0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "49749059-45b0-4340-ad51-c1e3a920a55b"
                    }
                  }
                ]
              },
              {
                "id": "33a2cba3-e422-43e1-8283-53bee9b39d39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b8206b-356f-43f3-ab93-442b955561e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e83816f-ba6c-4cde-b48f-1ff8b4f0e9ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26e075b5-15a3-4979-a478-39525b91bca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c8c02ac8-4032-44dc-aec2-dd0cc1fc9e6b"
                    }
                  }
                ]
              },
              {
                "id": "ac9005fe-91b0-444f-8779-ea6d601ece14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b50e546-1648-44ed-a283-a4fcba9a00e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f700eef4-cce0-4e31-b067-d9659ee5dac0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b39cfb64-e7fb-4a5e-9134-96abd5c84a7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2af6187-d6d6-4121-b42d-fa1535dcbe94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "903462b3-e081-426d-9cb3-06b3906e465d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55299ecb-44dd-4e28-b8c2-362eca4c2a30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46aa12ba-1c90-4f58-a019-a8acd1ae3e54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c62bbc0-7d11-4f63-b9ea-9431dd3e68fd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2be402a3-1fd7-4f57-bb8b-1e42ceec767e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "533ad2d5-5fd7-4b30-b807-06f442080349"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce419384-4c0f-4de6-8cd0-a3fcb99505d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d351ebd0-9d0b-4081-8e94-bfdabe8ab3d5"
            }
          }
        ]
      },
      {
        "id": "c467749c-4477-431f-9976-400a13fd962b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9e1063c-08b4-402e-8ce0-409ba3ff79c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21b4177d-99b7-4878-aba6-3a9ab192f53d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5361f202-0ef6-4874-b760-3e469275b6ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a53e0a-a7b5-4a53-b46f-2e3f6bb52213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb4854e-67ba-4f60-9500-bef85f169081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25583099-7da7-41fc-b0d6-8429a6710cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6ced9-430b-4a31-a4b3-d9c3349f8918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5d11ac-88d6-4337-abf3-a102b76bbddb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d61acb-21e1-44ce-b621-42bf27eae755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f592776-7671-4668-941a-96bb502bb990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9103d8f-b0f0-49e9-a442-db3f633c4547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec3426a-c37d-4cd3-9358-1853b4b52ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c32d71-f637-4a49-8084-e425b6edf9e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac74454-db71-4bdd-be52-04b07b0009a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02c66e5-ab41-4e65-bd36-6bbe8f9aaa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95427bf2-3f96-4f3a-b812-592690f343c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aeb45bf-d9d2-48c2-ab99-09f021fd0f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf39c5-9153-4e3c-a589-d42464a5035f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cca6e5-57ed-4c89-adb0-994a78b8d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5bc8be-dc8a-4838-8fc4-a76cf97210c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fa5147-757b-44c5-a5f8-a240bb57feef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "861016e7-a7ab-49b1-ac43-86272ab0ce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190bb41-20f1-4918-8ada-52c525fe1a58",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042bbac2-2df0-4c92-9d31-5540f7f11ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a170fa4f-fb33-4f1e-ac4c-dd2584173c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49672108-0059-4e05-bfe1-0371dacad096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da30b94-145f-4af2-ada5-53ef285690d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f66cbbe-be70-4c84-b15f-86de32687dd8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986df38e-bbb4-49b4-bb92-45a23dbec298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec09db42-7075-42e8-905e-2c65b5bc34a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab8067-8485-49a1-9327-81ba4acee92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "842af99b-575e-4fe5-a347-f01af62f5284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58957b38-0b64-4a8f-aecc-ef49097fbd29",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39cb9aa-96cf-40da-9c72-5082b8cf226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902d0a5b-1645-4d58-81a4-6fd889fbf77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0658f98a-9079-48e2-b25b-db58d21b38e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbfac4e-1639-468a-88c4-deeb9254b215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9657ed-0b7f-4fc1-8ef1-8a720b5433b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b10d7-c4d3-47b5-a621-718bd70db06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139f703a-77f6-41d8-95f9-e25616b48d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacaa1e5-f312-4304-a86a-c2616ae9a21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6338c819-a62d-473f-a141-8db71cb1e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f5c16d-4604-45cd-84ff-1c9308aecb23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381482fb-25a2-49e2-b787-ce01a467cb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63a2a3a-d543-4062-9fbf-5affa9bb9b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ed91f9-de14-4aaa-bd8e-2f21e463fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1daa26-d602-4b6e-8a20-381d9d5fb624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbbc42f-43ee-4f67-a0f0-2d5d2de9e920",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12355d0f-cb3a-4324-b176-e0747c257707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d822194b-72c5-4e55-800a-a474d6a4d0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb98c29-9901-49e0-b1a1-2bc13d244252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85dc145c-a0c2-4747-9ee0-2ce6bc343b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73160609-6587-4f52-a53e-17ba5b419102",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a75935-1a29-4623-a532-2cec033d05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd1b624-8784-41b0-ba05-0ee15956314c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730c0b24-0c30-4279-8e4e-bc20655c3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "febd54ce-c8a5-43cb-aedc-abb9417b9a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cccdee-fe06-41ac-bc6b-989465b96bed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439f7a6-e40e-46ab-b918-85a6e36b80ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a3f2ff-7d34-45ef-8767-e658d304c1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc7a3b-5a63-4504-88c3-4533c6721469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "520a60bd-1298-491a-9da8-baeb0c774245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c8adb0-9bfd-4c45-a98a-2be82ad3f512",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5363cd-d4d9-41ee-8bec-2d18ed8cd1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003e64ac-7b42-42ba-a8e0-4f4456342135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c55f13e-87bb-4dc5-8a04-d79c8585a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7985ebc-292e-4d5a-8e8f-c3ffbf4bfe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90919fd6-c31c-4627-a38e-38050a6df616",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30848f25-3cc4-4f16-b57e-60d318fbaba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d35ca0-b98f-4735-ad83-de52da3dea0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd8ef8b-c6da-4b47-8685-eaf2e827564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d05a31-87a5-4141-88d7-c8efed871350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c984b3-8765-4fba-aaa7-6aed85b0b50f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98960c41-b7f4-4185-9109-3ad03e2fec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c7a0c2-e9b1-4adc-949f-fdb0853ff94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae8f9d9-a599-494d-a4b9-aa78f7fa65a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4bec4a-e8c6-4be0-920a-db802826b255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b3fa92-92dd-4ab0-86db-01143577ba4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33981dd8-0476-4987-91cb-acf25da94c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8e6a29-1799-4911-aea7-8830f05324f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe7d119-7d1f-4769-8e82-f6f1a098629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "91965d51-14cd-47bc-a788-ba90646aa3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee3c240-4cb3-4fff-ba44-3ef31be273c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945dc70c-4a5f-42f0-85d8-f9d92da12683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0603a29e-72bf-4ff7-bb50-6474718d0379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80620534-1f33-4995-b056-e09c9b9766b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cef314-b116-45f3-a17c-e820ffe35bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49988a-e948-4891-8350-7c5131cf371e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ae62b-6e7b-43fa-b7c7-d5a37c25b636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd62510d-608c-421e-a0ea-6a29f65c8f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ce3a22-44eb-4d0f-83bb-991d3bf3c526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb7f69c-2c51-4e86-af82-b5cc4e2ad4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9b62e-2740-4e73-a028-0d0d717f0463",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba678fc-9736-48f9-99c1-325dfff0c91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914e1604-7cd1-42c2-b7f2-8e5631edab87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7ed4ee-f81f-4495-8099-ccf2dcf01470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29464e80-7b6a-4035-aaa2-1909b9278992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15585cca-dc75-4976-9e0f-6dc1038909a5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bca7c52-b9f1-4c36-be25-7e9d9148c34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab3807b-41a5-49ba-b1c8-715dc591e2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190793d3-ac31-4949-99b7-58ff0fd9d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1d4166-a18a-4080-80ed-43ad25b7df83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d0ffac-0e60-4cee-b53f-c9332de04941",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5fe9b5-01fa-47d6-8cbe-312d1d22ed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b394d1-33d1-4c9c-861a-1bec8e2e3d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d8045-1a89-49b5-a79a-2dcf756e13b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "941ae509-9a5b-40d2-9b3a-7da667aa8743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63011881-4d43-45ae-af4c-6e06dc9ca4c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1604989f-8d3b-4d02-acf4-1d4d215650cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f265c0a-0940-4bcc-827c-0d8e4378a1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6ec4f7-6774-4aa8-a26d-55cb6e38f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0c3bd3-a2de-4df3-bd59-76d06c6de27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca19bda5-6367-4c64-8c03-efa9ff0081b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f02504-a414-4092-9c16-0cd324225720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e24cb0e-6e24-4f4a-8541-9a54c04e6b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385fac68-68db-4851-b064-7ec0230c7827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf4193-e81a-40e4-966a-66c7ab97b91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f239a4d2-1eb0-4fdd-b7f4-c85e75308feb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a772ba4f-ec07-467c-ad87-f522bdea57b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16e7721-fea9-47a2-93df-870eb946ca04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819765b4-5399-4f30-93ad-bb2c9e699a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c64913-736a-4cfc-8f84-0c6a4e68e6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3d8186-0c6b-4d3d-a21d-bf9b80c761ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f6eed-daa1-4035-87cb-c62eb087de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfbd542-9e45-4d69-8c83-3e13a616d832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e1b7f9-8653-44cd-a823-22151765d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1dcbb0-e480-4e2f-b798-18e53b53192e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2349bd-1436-4e56-a7fc-be621d38a5f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91d40da-81b9-4890-a5ee-a8bb7bf534df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8e667f-509e-43ee-bdbe-feb8541132ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7efccb-c4e7-4314-b401-291bce0e56d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08987d8f-0cc7-4dde-931e-76bbe4bd8198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe47dbd-f99f-4f40-8671-b698c2284be5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c185ea-dae3-4fa7-b4bb-c0a4c72df492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f97a85-a75d-44b4-b489-7b58db960a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a0bd2a-e614-4856-b804-42d1bcee3bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff9bef0-48ec-405c-b6c9-0bc1f8839fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c96c28-bda5-4293-8fd5-1d36560c605f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d448bf-f4e3-4b0d-aaf0-28a99e75b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad6c50a-1528-4f04-a137-e40573a75a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e53fdb-03f1-4f09-8988-5bb9e3624dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbd42e4-c8e5-4a72-bb9c-2a93478496e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c18fb5-967f-4f00-ab37-8666f93e32ed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945a92b4-1536-429b-af3e-ff5a5f21a27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729cf30a-93c2-4d49-bbad-cf520f031c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c756e3-ad3d-4203-924a-d28be3768062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec224744-4a23-475a-a87e-e389b3632721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af76c729-707c-4b43-afc2-eddd0aaaaa50",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f225ebe-3d21-44aa-9244-f2d6c8abafe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad0ddab-58b3-4876-a58c-e756922053f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f94f68c-4ea7-4226-9c72-41f2d845d535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120fae13-f825-4694-82ab-f1b6d4746f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2df92-51f5-4585-b4d2-d4977c8671ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df9bda4-e1f3-4cd6-8376-e4268a63c570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792c33b7-76c1-48e9-a471-65b2afe84f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49753abe-c31f-4274-a9eb-26b15c6a3485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37052602-8933-4154-be94-1ec916e5d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f585c01-a7df-471b-a57e-b30d5ac49eff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e5cc80-a5f2-4ed8-95d5-99925d672dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cc720e-b3b1-47d3-9891-9c5a15002f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2008afea-1e87-4f52-b221-8b7c40e0ed8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e01d2ab-9e23-45a6-a867-27cf5a9d017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70498fe-9718-4ff2-963e-607e389961ab",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ab779b-dc34-42bd-98aa-6724d292961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98053463-f633-4c38-af3e-493d1145df66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc32e7bf-c41f-474b-8818-77a0aff37817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2740431f-9285-435e-8505-1db398fb122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87d9432-754f-4e31-a3b3-42fbbc0bb6b2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ae1aff-25b5-473a-9593-b4c8b6e888eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e57192-bda2-4cf9-9d7d-c3425df2d55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fdf1bf-9267-439e-8dfc-89f8dcc8e08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb3fc6a-5f08-4173-ac5a-85cd18f26c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6102d74-d82b-43b4-82fc-0bf9c8727034",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c059b64f-939b-4cad-93f9-ab4a29434751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea28aaf-61ad-4cb8-8a6d-5914806094bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d5c3e5-052b-4cf6-a0c5-e0bf0cb3ef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3429d8d4-eeb2-4b2e-933b-9b56acea98d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24526242-0c63-4bf5-80e7-b80a9cf525bb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff74cfb0-70c5-49b2-82aa-fd23c05f7661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf84a424-0613-49e3-992e-63a145f9c3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3610f136-d423-441d-ae68-36c5d23cb781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58544926-d3ea-43ba-8ebc-53ebbd21ac6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a552660-d483-473e-beef-87ef37e4bdab",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d036c473-dc0e-42ce-8a55-47624851eb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9c3f5b-b506-49be-8af5-1bd3dd6c636a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f28eab1-7dfb-40de-aad5-dd19badff5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a7fd99-7776-4acf-8d3d-cd02f005d5f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09ef6039-b5d2-4a3f-8197-aabcb37fed9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b28d0a81-8be8-461a-bf24-0356aa41c97e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57da3c1e-62d2-4874-916b-ab7c40cfbba5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69f11bdc-5753-468c-933d-9548bfdb2786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0d9ab6-35b4-4ea5-a113-349da18282fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f80ef2-7733-4a93-94a9-17699ec1b1c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc71514-33c3-48e8-98e3-4f482af8eea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e6ce472-8505-4388-9862-010d94105929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e16e48e-75d4-4851-8559-14a7adf22df1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dfd39a9-a0eb-42f1-9cac-9891107d513d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db678d4d-1720-49c0-a479-0e0863ea02d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1669a528-cc5c-46b4-a7e7-f26ac574d3ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a27d2cb0-72d5-424a-b94c-9cd1e877c91b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24e14652-fbb2-43f2-906d-5337897be292"
            }
          }
        ]
      },
      {
        "id": "9f70fa43-152d-4ddf-addc-e422befb794b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5a9259c3-2eb4-42f6-b93d-0455f7ce1d48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e4495f3-eb30-44e3-b3e5-5d91622fae51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1fb2bb92-7e47-4484-9d44-dfdfb3326807",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a639fec-3e4c-4f7b-850b-40ff9d76c5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc25e4e-b6df-41aa-b989-f82639000743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ab8940-2a8b-4ca7-830b-00e106089e4f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492cb25f-da05-4892-97df-cf22cc116a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46241cac-9aa5-435b-ae97-8f27a3260a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a9818-be1a-4f5a-9252-9475b5c983f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b09577-5e18-4efe-8e90-6ae5390c1632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e3d40d-39b4-4b9f-84cb-b752f5d58927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d4fae-42a4-4485-9654-27c1cc369719",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354c6cae-d9f8-46b5-9344-4cfc3c6ef5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d64d20e-7bc4-44c7-9969-b446c400fff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85776c49-598e-459d-8d7a-fca268a3a2bf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99b44e9-251e-4fb8-a3f1-94aa0a721e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a76480-23b4-4738-ab76-6d5ba57047d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0b1480-b494-4943-ab7b-67b5a5b4dd95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a4888-9ad5-48ba-bd70-6f7e5ed74713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54035e0f-80ba-4c79-aa52-ae5b3a5fe250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43ce303-0527-4719-8a9e-a52648c709ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f73f92f-bbc0-4f99-927b-9f4fe94a0168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2afd05-beea-47e8-8a4d-009e234f18fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568eaf67-1fdf-431b-a336-bc7aa50bd471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a52797-92fb-44bb-a674-8e4284926709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe618ae-c53a-4d78-bf20-d7e1daceba64",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb64e4bd-402c-44df-a41b-c538122c560e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd02bc7-49c1-48bf-8ff1-c18c4bfc9b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f172b-b958-4136-9b6c-6b553f6ef736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05633a7-f0ff-4b5b-9e87-6a0d6f94105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10b27c0-68b4-4619-af61-c1c74d2903b4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01006d-6202-4988-8e91-5e55d92198b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db941cfa-b2c5-4301-b0c2-bf526d200598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2138b7-34f8-429c-bff2-7ff79ff0a4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2358d71-6052-4187-98d8-e4a54d5d6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675e11a2-7fc8-43c1-9b4c-69acb81f0500",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4a86c-0c3d-46e0-8102-7fdc968e8679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06bd1fd-5d6a-4161-8a3d-f976b9a8e310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7df199-c626-46ce-a7af-dcc6a643893d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc330baf-82ad-483f-abbf-7a4c0b6e44c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b1feaa-3543-4cb9-8e60-e389a790547e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a082bfd-e3e9-477d-aaf4-0bcc5ea70676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49357a7-e94c-418f-b77b-e1a120121c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aab4225-a8da-4e5c-891a-42b94ae42f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f3c11b-ee1f-4f11-93dd-b42e44a5c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd0d303-cbc1-43b9-b6e4-7a582a4548f2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e5b545-b05b-47bb-b434-ec4c1f806e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fac2e5d-229d-4563-9df6-566c00a9f1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46baac1b-8212-45c1-ac19-0c6989925d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd7399e-5ef5-400a-9533-f998acae41c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396f19ad-5504-4716-aae2-c27fd70307d7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b8df35-f775-4ee4-94d7-6cd6fc316d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625fb251-d255-4011-8acb-eaed1d1472d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4781993c-0e15-42d2-a010-b3df17d56dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027aaa74-e38b-4b81-b995-9c744cb85d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87505ad1-6797-476c-89a8-504e1216f356",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e553e2b-cb04-4b37-862d-24bc9b541433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dca24f7-80ef-49c5-9660-9bdcc394fc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4842d185-7e02-478e-801a-cfd21f4949c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52ae43c-dbd6-473d-8af4-7567a6974c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc66df7f-f9cf-4045-b4f9-d9881daa36c3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102cf30-7d5c-4f96-a544-27dbae2ce634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6c917e-8c25-4288-a847-3ca89243f2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a72b15-9520-4ef1-ab18-c82c40a82cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb09356e-7aa5-4774-acb1-5a5fe64873f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83a9198-0fb9-4bb9-8556-53d03bd85337",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b992db7c-9ad0-4748-9a18-59283132dfa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245a3a13-e193-4442-8df1-114c0c2f1ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda7bbc-5d01-4a8f-9409-95f865ce1bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ed04e0-8cb1-4d2f-b916-f3b2dba21740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545e8c39-e935-4afc-8c68-696f1875c9f3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ece261-cc5e-4c2e-bf4f-4b3fdd2f8264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1276ae78-bbfc-44e4-8749-fc86c2d15366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e7b0f6-2ae9-49a9-b755-4286953658e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cc2927-e710-4786-8dd7-88763833fb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8513997-7923-45a2-9097-12e510b411c1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005606f4-2492-4161-a7d2-3f9635955017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc52e1f5-7ee5-4a52-b98a-b54eb37d0cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fccbe59-e9fd-461d-92e0-a242a47e551a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491eead5-85f9-4a9d-9014-9518700a7142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3bbf21-9eba-46a3-869f-c842592de7ec",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14092735-55a8-4993-96d9-a9193b37bea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494956e5-35bf-4109-a848-5f5f73f633c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1e160d-95d9-463c-be84-af25293d4a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18801df0-0de1-4ebe-aa24-7f3a9c425adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c02521b-16dc-44b8-aa4e-f5782cb206fe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c595d6-7a85-41e3-a610-6ce1496bd307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9d2518-b1fc-4c64-bc64-67ceaf9bc77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5b591f-7e80-4097-93cf-60a590554a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422a4502-3be1-43ff-b9a4-e7b2ed19a5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0f50c-f37b-4967-be48-698385fa8e27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d868afb-a770-473e-bd18-b15d34021340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2dfa2a-5c3a-4d0a-93e2-cd9b3e4772a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fc1526-bc23-4905-a94b-26f344796b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aaef75-fccc-439b-8840-bab3f64f078b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce8819-d159-430c-a01b-b856a2d56c6f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc808e29-2eda-43f3-a491-1f025f557818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6813f762-ded5-4c6d-a4e0-1dfacc803e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9e3910-7507-4e54-b603-377476030fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49caf109-3c37-47aa-8709-10d6408c3a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7607544-fe36-4551-aee1-066b33ef47a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa11c389-e9ab-457e-b308-7cf3cf1b9aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14970ab7-b214-4561-affe-810d6111c7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb32da-b5ac-4f9c-8644-a3abd50b3c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf51e28-ced1-401d-a0f2-7b456de014b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e6dc05-1a0d-44fd-88e6-2d39c106824f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b63fe6-d5e0-48cc-a478-5f0577e7b351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a0eff8-a79e-436a-b575-09d2af9fa406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f53026-cd18-4c54-8da5-0e44a1c3a18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b651d983-62ce-4af9-a2f5-f3ac5b69df4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac35dae-08eb-4c4e-a5da-a68042e049a6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a000543-70ed-495b-a2be-bf5a64e685e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8515f2-4ee6-4706-a8c8-08d331fb8262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63608be-2325-43ac-8b24-6182240fbcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a30af5-e877-472b-b656-2db7e932ebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507fdb3-8908-43ea-8044-edd70cfe3362",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9ec804-745c-4207-a6e1-44f21aaa5f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b665feda-63d3-4654-9d60-37be9a25f9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f303b663-b433-42b8-bf77-08a282f04642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe747aa-bbe3-4980-af11-fe96f423bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4ed3f6-f566-4b6d-a2fe-698f3d3242d3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd73c368-2f18-494b-9e5f-4f43fbac50f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3140a0-48c1-4478-92ff-45b9754e3b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a9c248-e479-434f-9ee0-7e4dee114c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ab7f38-965e-44bc-94d9-f4a9d7ea29fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed90301-7ba6-46a1-a0a6-d5fa0cb4b93d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89a3b7-77e9-4df6-be3e-d4a4c3dfe9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1215d5-6a85-4eb9-b079-08032008ae16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63ec201-351b-45a4-8ec9-7270a1c12b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23070e6-c30c-47d0-b2be-b48470ab5518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734956d4-f9e0-4075-9ad1-d2eabc0c04a3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01dd09a-8992-4e99-af67-d7d764dd1fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19491dc-3a1d-495c-9c3d-9f4274696f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a5ed03-f321-41a8-8765-73ebecfd3881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b14506-92fb-49b1-b320-46b3fb6338d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7551e668-e8c4-4662-b916-5fa41214f84b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb4b609-39ea-47b6-96ab-b0cf867a1120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6b1d62-1de6-4c2f-bcae-41f7332258bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9cd448-cbe6-415f-9592-7ee11edc72e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb166364-f142-4451-96c0-3d6e039ee4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0402f483-2290-484a-bda1-b3b34944a673",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480929aa-fc4b-4404-a8af-01ea9506158c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fe4cca-6d25-4bc1-83c8-f81abada347f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499989d2-0a36-42ad-8b62-52a6e3a9697f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed545ad0-0655-4a4b-8ee8-17c841eae97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d152c46c-4abb-417a-93e3-a824e9af56e6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb24750-013e-4bf6-8238-7c0f6c5742f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46453ca5-8e52-4fe2-91d7-d6a8874fd877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bdf95b-4c74-45e1-92d5-594fa1e52f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1875211a-df9c-41eb-a288-0d7ba9e0cbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a8534f-f70d-422e-a152-589979cad300",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb469c9-3422-48ab-987e-0e545fa70d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11429fb7-a4d8-4972-8287-fc4236e054c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6a2f3-f3d9-4892-8db8-05a22ad48826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b44ce07-b9cf-44f9-bf1d-aa414f53b5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c8b216-17e3-48ee-aeb1-23f7abfa0656",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5357bdc5-bb2c-40de-9216-2516b8ae32ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1223198f-d4cd-4982-b98a-403425371ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d63991-df06-40d9-8c9a-a82ce4f5ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98516385-ec17-498d-9c08-cc1ef317ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c61c7-faf0-4916-a4d2-35f336cd40b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960a5e09-a6c0-4a87-bf5c-cbffc52f063e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd4c74e-5959-4636-8e02-6a40e254d466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dc86b1-1b06-49b8-8bc4-cd039dd3bd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c518b165-d761-4caf-b24e-56faef11851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ad9587-4d9e-4969-a3d2-a4a995528e22",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c2b9c-9c3d-49fe-9451-235e28caf882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf3930-168c-4939-b418-8eec44fba340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5783fe-e570-4c65-8bba-f7063d7d9210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fb6893-0f3d-4e5b-a549-62e66ac67310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3970efbf-8d29-4018-a19f-429e7f6d1b0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae21f98-b82c-4b18-9e4a-f53e5e8f8b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de668f1-a8a8-4959-9081-05e5078ce121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef86c6f-1767-47c2-8734-4d8fcff52784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d55bb62-9c78-4978-bf5a-e34ba70323a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e72a3-ef3c-46dd-8dea-3b639aa395fd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49a9eee-d6e7-465d-88d4-cbb0cf0c4245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6638c536-3a09-46b3-8c85-0a9b4268c5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e824a92a-07f7-427a-a80f-0273696e4c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab0ef5b-67ec-4228-b9c6-b86e29676d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630cb602-1dec-4353-9bd5-92795e22218b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b102bcc-2784-41ae-b6ae-f9f0064fd608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1734f63f-de3e-4c55-9201-4c6905d3c7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da83abe-1c39-476e-9337-170f7df39e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4c16d7-90fc-4e6f-9154-12cef7c849c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2baed5-ba53-4baa-8d3d-0978225ec26b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43199ae3-b9b8-4792-b1f0-ddf65e9529a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b575edb-632e-4789-a7f9-e31a523b03d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4cecfa-5794-496a-9d75-becfd9fd12f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060a37c6-b575-4154-8bc0-93f4c2a018d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ddfa1d-c46e-4956-a184-81401d399a97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd0ec16-6744-4a3b-b90a-20bf63216aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417241ae-38d3-4bba-9c75-93c29fc81b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2216154-0446-4862-9ba1-5baeec141054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f1cf52-c84c-45a6-a6a5-6b9ee4b26ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc327e0-013e-482d-bebf-a185e30fa199",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dab362f-0802-45be-9e75-4f6c00f83b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ab5a6c-7bf4-495a-90f1-f8b6e7b92eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dd89bd-ebb8-43c7-883a-8c3c1b13f42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5ec410-d488-410b-923b-300c45b0c971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff10055-d402-4283-ae4d-ab9d59e28d6f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1097d876-7571-4136-b7b5-90cad7c14b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8c6e6c-b676-4a5a-8289-5ba373508252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75d03bf-f51e-48ef-9078-4ba6186a91d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781cd220-0652-48f3-a4ad-e97a52018d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c09fac-cb79-4e49-a5d9-c7edc3d1e4dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a370139-e682-426a-8ee6-8ac07c05a1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c6d5b7-79fc-4076-a1c7-4aff6f9e84fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2d0ff8-3a44-46ee-a8e9-4f6f676722a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28052e1c-b9e0-42cd-acce-e9eb0cf33959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d0b678-f5d5-4b2d-a58b-a9eb02807beb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e37123-5e7a-42b9-b5e6-9f81a515c3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f366eea-e92c-47e7-9132-27e5151e7576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4513c1cc-ce14-44c0-937c-6d71d96ce1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e99f70-4c7f-4941-8221-a9e3575d3147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e3c98-4b83-4ccb-ac00-b8ebb983cafd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7906788-0099-4da4-bff1-84926c7741a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5726b1-7806-41b8-bc33-eca4e7b54f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddf307e-eb83-4caa-b854-893ff6df7e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767ef96e-74d6-45cf-9a31-d6af26f53d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64930528-37ee-460e-98f6-5953ed1de606",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006fc35b-9423-4785-a799-d908cfb32e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8d28ea-82e8-43a4-8ed0-168a8e846ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f06e75c-3a80-4336-8075-9bf099acb0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8242ed75-3d72-4b6a-b0d0-349c412d3113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3458bb-028b-44a6-a984-fbb780730548",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b5e2e-2c11-4cc4-826d-09bba8d37fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5028f07a-a862-4739-9ed9-02114256abf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a496baf-d1a9-475a-9a54-a63402d0de12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f19201-eb62-4160-a8d3-d8388aee17b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8ea014-5b01-4799-b4c8-76a3106da467",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a98b811-42d2-4b05-b30b-8729a4f818df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d1796a-c226-4e97-a149-8a3206eb4155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a988cb14-55c5-4e2b-a75a-e53fd292ec93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacf09bc-1c1d-49c1-a4db-e6f385fb1db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad531f3e-9b67-4030-b6e5-72d3084375dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3f176e-8800-4761-932e-ae154f3f9843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4259218b-8866-4915-ae0e-bb186c19f328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d21290-ec56-4d1d-b65c-379ee3d24297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e952ad14-e682-4fa6-bf87-ad0a058bb949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e51ce9-ee1a-4045-9f53-26849e3918d1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03bebb9-9621-49c8-807c-506c9ec5ce8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be7b485-b6d1-4d5c-8763-d9a24eb0ad3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ea7173-f801-445f-a956-432773c9ce21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fdab2d-a7ec-42a2-acf8-7822961847cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bedc176-6f78-4b01-bd4b-b3999e6c6a83",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2757383b-07d5-490f-9675-df6a432bf194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94ddee0-628c-4d6e-8bd6-401652cd07fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cffc482-4d62-432a-b660-fa46b24fc7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213c0a69-bc5f-4192-a54d-478fbed54b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37700b0-5290-45b7-990f-35a22c8b6a71",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeba3cd8-4ff9-4847-9e07-53053eeca401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91229f6c-f379-4a9a-ae12-f58a9e0e936c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23d95b1-b80f-4cc6-8874-6cc94c249301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603808a2-d9d2-4bea-8311-8a87bb916bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3040d1e-1e6b-41cd-9292-6b22fe5106e1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be1453a-6c43-432c-a6ea-d5cca49be384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ededd8-5d01-471f-945d-915a698e7746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e7957b-3791-41ec-a30a-453f88fe3c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc918c4d-b066-4588-8132-9b76a3121d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8095e97c-e5d4-4b7b-97d9-107fa0cdfd75",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257a57a1-d162-4f88-a46e-526f07904500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23220848-224f-4109-8451-0f2427b3c1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283e5ec4-9597-4ad2-88b7-203aa903de79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4c7771-e312-47cc-a5ed-170ffd1db7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f77a1f-8599-470b-ac9f-1261f36d06c8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc04cce8-295f-4cf8-afad-3479e81b8a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a761ee80-bd4e-4cf8-b74d-6a0b5e5d2168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444e08ac-1391-4b9f-a125-9226454369b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb6acd5-b53e-4d58-b534-abbcf5608cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b293a9-d7af-47f9-ae7d-21187fc800c9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fca8f6-1709-449c-bae6-27fb511e370d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e84d036-d213-4c01-ac03-7bcf60c2a619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0d8769-6d2e-4b78-b31a-3ac74b6b05ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70d8152-41de-4fab-91f0-130e51f32829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05d0ac-de80-4b09-a3b7-78d93b910cc0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b688a3-e210-4ced-a3db-2bee3ef07eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b019543c-70ee-4811-b825-19c230d95bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a273978-efc0-4b50-81f5-8f5d45a60b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec31679-4f2f-4de1-b3e5-8181b1ee18e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf1b365-fd4c-4e3e-be08-471661fb485b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ad3455-98ef-4f7d-bf9e-3da76c5dde34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82069c98-3c72-4556-942a-d56fd5518475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daab1325-a909-4d68-baa4-d4ea57a52943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea548abf-ef95-4635-a029-0eec248696a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed2e072-de08-479f-9b9e-4bb0b83ab525",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857e0ab9-c894-40eb-ad48-0240e062424e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daed44d6-821e-4997-9390-20e4a3f06a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d67250-f665-4643-9b58-e87ede14d235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6863b79d-5be5-4181-90df-f77040807a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3b1057-85b0-4145-915f-4173fde84947",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec336a3a-5b2c-44f9-b3a3-9e1a48e2c1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1c4b39-0ef2-45f8-9994-d12b924055d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae972493-b56c-4a36-8a74-7c68804e20a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f781ea76-0c72-4ebf-9b9e-07d73533f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abea593-5caf-458a-8fb2-9a0f1f9e765b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee147eac-daea-4577-b287-c819109ee2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a63fc6c-ba6f-4823-9297-f41f46748d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2f7ca-f74d-4bf5-ac88-3542f7081185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ee377c-b7f1-447b-b057-f686ef670493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c08f14-6b65-4395-ac13-aca9ddf9a735",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438ae6a-1fe3-436d-ae59-6a9bd61b8de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0910f-c9c1-43d7-a45f-f4c68660887e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b047326-5ded-42c0-b9fb-841f6cdfb875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be61307e-21aa-4809-a208-d55bb8e0f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391b05b-bf26-402e-aa30-c3f070f756ba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeb5a59-e130-42e5-9ab1-18def79fd589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27b6dee-ce0c-47d6-95d3-9bd1de1bce7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ee72ad-b412-4e35-ba82-39432e7917e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b2fa98-2af1-4b99-9bba-78acd06a71e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bce961e-00e2-42e4-9cd5-9b73c972fd20",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfeea15-b885-4b7d-81cb-b55375672ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe44990-7e41-41c8-a717-a625fe286470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617d0e7b-5e1a-45c4-9df4-3b5ee4eaa38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9b0c46-7a20-4f1e-ae2e-fd299e06f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fa0d0c-c7d1-4d78-b636-f36d42e824ff",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d5c5fd-7117-4abe-8f38-2dd059d59472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85971fa1-9bc0-4b3a-8dc1-8a42e581e23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa684b6-71cd-405a-b7f9-9d14140b9971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2528d6b0-3b21-4ca8-a9aa-ea58b782f5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56932a5-322d-4609-b6ed-a27641604e4f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930f22d2-6656-4b79-afd0-510c9dee65b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c306c5-72ce-4fd9-8fed-4bf3e7145078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4bd81d-0117-4e31-b688-a20e57490eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1048c2a8-f45f-496b-a93e-7c0e4e31a1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9138e023-f31e-49d3-a047-70c3bfea31f2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cde8a0-55e7-4084-bb22-f129cc9a6eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6c0c8f-2154-4414-93b9-d51db945d663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c986c63b-0ee6-42db-afec-2046353801e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecb7fb5-9f74-4193-8549-081dec65ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f400102-d63d-4484-910f-e82854afc954",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813367fd-f389-4283-b225-75e5bfcf81c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48edac9b-5f45-4c87-b900-29496c46b375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e164ec-5f4c-417c-b4f1-f00d05cde2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec03a34-40da-42b3-a153-c47c70e272e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb6f3f0-1f29-493f-9cb5-82854f66cd87",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97054db3-f6b5-4877-9992-b8190fa88704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73d2bb7-5839-4255-9d37-9e7e5c5ba1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c130e522-f730-4623-9ee3-9bbf220c04fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753290f9-2abb-401d-b9e0-59ad783faef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532529f6-d1d0-4d45-81c7-6ea929f213ce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f3ea60-ab63-408f-8eb3-a829af2f9a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307fa941-5e28-40fb-9032-71016bc80546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006a777-b497-42b4-a3eb-6915bbd325a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9a6cdc-1a2c-4c1c-9260-0c726c0f652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99608c80-78a3-46c7-a44f-3b3ffbec5884",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856f624-960e-401f-b05a-6cff09dc9a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e83261-1d14-40b1-813d-5605487f8f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9602876-8353-46bb-b635-e8884ccebdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb7469f-a783-4308-a357-b999a280fa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50b3ffa-a3bf-441a-9ffe-d3a9ae377851",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aca9fa-ab8e-425c-9dea-7c553ec0922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92ccf59-7ac8-4ad9-8d6f-8aa0928e2558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344dbd8a-3b85-4439-9a75-b664adb685dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e376a7fa-e7d5-43d3-916a-7529195acaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d48303-ba92-4d78-a59b-9710afdc6617",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a63192-a261-49ed-a165-930f0b29952b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa7be02-8889-420f-966f-adc58d7731b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3121d-a5b6-40fd-93fa-30c28dcf6349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28727a22-4f86-4195-a0ce-453e2045d2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1e579f-71ef-42d1-9345-01e1299c811b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e611e-0a28-4814-b43b-91c99216a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495f985d-8482-43fa-ade3-77af282edd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9889d1-a6d1-432c-ba9c-2e841cebc6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b30e2de-877c-4c27-8a23-41207a6e6a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880fe19f-65c1-427d-968b-400b2de84f93",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c31ee4-937b-49f7-9cd2-686c0de5d032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f43fc59-24b5-48e5-a063-a56a76b42e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98254903-7f66-402e-9dd8-cab854874961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba45d22-eeb4-4497-a185-21806525276f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c6578a-efeb-411a-b2bf-ff775048c858",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea4326c-534c-4156-b869-b2fe31a4891f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf98692-261b-481a-ac14-72737e92873d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78a81b3-0e47-4910-a5e0-d43d14d54abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83cc460-9c48-4cc4-9c18-2b338c6b7d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e01010-61ae-4e78-aab5-fd4b70cdc501",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb411eb3-3939-4601-b8cc-cbe62cf42458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299c5244-4438-4fda-910b-8406c2c3a1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff2599-e3fb-4254-bfc2-f72c6f036231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284ef942-03b2-4081-b032-cd9d6af86e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdcd44a-ef6f-4532-9987-0113174c8062",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3b687a-adfc-4bda-b39e-6c349586f229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93dcddb-47ce-4e5f-a7b9-a2621dafd8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38cbd5d-87ae-4521-8f26-44ad123ebe61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fe8190-d452-4231-82e2-d2086d94ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa6e4e-2a81-42ab-9d07-4bef1139bd57",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a6c45-003c-416a-9281-692de29071dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f1d6a0-1612-43ef-9d55-27644dc42047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910f9e69-3958-4674-bf2b-901b59829351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77ca6c7-7896-4560-b078-10d954f136ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20f4505-0b78-4c2c-9300-4adc5db99762",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7197e9eb-1f70-4f8d-a73e-e842c7cb7aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb96b06-6d36-47f5-90ba-2aae2ab76557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c5e6b7-996b-4b7a-bb03-8bec9382a3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242d1d2d-7e10-44c4-a2d7-2c154ed9c674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110bd587-d2c5-4157-a4ad-12cea658f4be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4b3007-913b-4a9a-80a6-9472cf6e3828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef51870a-fc44-4cfb-bce7-577bf97e2c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e877e419-f6e0-4dc9-a70b-e3cbfab142db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2bc035-1530-4874-8120-fda57fa4076d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b673bb0-ad96-40e9-acf9-16f5ed816440",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab655b-66e0-4a33-9429-20f217f8b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd186d6f-96f7-451f-a6f3-49ae23fdd7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b94d42-601a-4fc2-b9a4-b2c407a5ca6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3804e9ee-dfe1-4a52-b600-5a69b91936a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b74b0d6-d949-44a7-aa7c-bd1ebaa969b4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84b2332-6bef-43ce-b050-b1a08fdac2d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffaa5a37-fe8b-43b5-9c11-429db93a5bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ff357c-96f8-4ac5-b02f-533f7e1c1db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299dbc8f-d33a-41fa-9c07-151abb60ce52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92226ef3-c43b-4f8e-9f38-216cc6acb6f3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f738fa2-1329-471a-a420-9be827a07f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43248c7c-ef47-44ed-864b-0d5876debdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce11769-a4ed-45c2-90b1-900e2befbe7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5264f86e-f503-4174-9fbd-f86f378232d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6125301d-5e45-4dee-833c-7e3d8dd12660",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455bd039-bf86-4db5-a48f-5778d0470cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ed693a-a060-4156-8f2d-1f7993912bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccfe4b3-e723-4943-85a4-93382a1835e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65085119-319c-44e6-a00b-1ba1880fbbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bacef4-86e6-4d68-ab36-5c77623168df",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae334e5-1098-4dfa-9302-1eb84cb86e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d3f8ad-e014-47a2-950e-bbf04320277a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c950483-6846-4aa3-acb1-0f5319ed54bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4002600b-db66-4ebb-bc8d-7cbac4a51ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14abdada-5f1e-4b84-a904-feae4da6d50d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac500570-32c3-4826-a5d3-aff61bdc0134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0ad98f-0f74-4e97-ad0a-873780ec0e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0162df-b28a-4a50-bb6e-c7b3673fec89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eeb8f0-2fd4-4bd0-9eca-99fcc5e3c10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e73658-3aac-41dc-b54d-9e773c5233d9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e895f-61f2-4a9e-9353-76de44c38a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb9f835-504a-47d0-a729-e8a27ae113bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73cebeb-f1ee-435e-9442-1f864c7aef14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1db3d7-93f8-4405-bb46-002b66ff3a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c61f5-e19a-4282-8353-12cf98730e3e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3171885-516d-4936-8ccb-0fe31610be15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "498402c8-1819-43cf-a1b4-f8427910acf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490fd554-e0c7-4542-954f-7b48c033b4e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465161b6-daa8-4936-9ce7-fc99ea15d0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76edda0a-e8be-4ed1-aad0-496a227720b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ce5bf6-6ad8-4be9-b425-6cdb00b80b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ce2505-1137-406a-ac8f-874835caa0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c9c25e-8034-45a7-9e7a-e003c168fe3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22da023-2315-4522-b0e1-1e278d77eccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdc11c9-598a-427e-84ab-1e0f17f93baa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decfae70-0984-46a1-857c-a5650ef27d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fb4c3b-9f33-4be7-8b68-1311a1cfcab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd5181-bdd7-4179-bc93-5fd718488b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086a0613-a93f-431e-af38-985f15ac6ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dda5372-a1d1-4baf-a9be-6899e1004fc6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b4d086-a5ac-4576-a56f-e54aa5b8558f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ff4fe2-0bec-4684-b69d-04ae9eef1a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3898509-2985-440b-b00c-a9093f88da10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe362ff8-d769-4f33-b685-f3bf14557891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f20b8-ecea-424e-9c4d-89ffcfab4ca2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b72bfd-0f0e-4ff0-b785-556896becfaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45589fc0-b815-4064-9c4e-ab5aa3bfaca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a982c30-ca72-4187-b38c-59df58576264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb35250-f608-466c-97f3-33ed08ba1183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73600523-c7fd-4589-ac67-f9c99a8efc61",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89042f67-d2bc-4d08-a696-f08253ca9a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f4737a-317a-4420-84d6-a5997c0c0d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7feb59-8002-426d-9e50-8421703ab8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8d5954-b075-4076-ad4d-88edb67b0f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef43347-10d7-4166-8306-cbfd670e261c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7453b02-98e7-4f0d-ad28-edebcebec5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e95f41-1355-4afa-bf59-5e80331838bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573bc0e6-79ae-4c18-8cce-3b1ba4a9b91f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acd0dc7-7a7a-45a1-83a5-1a03ed8232d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843819b5-3100-4be2-9eb5-20d6832e7f5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217b4ca9-eb2e-4f7a-b39b-20fab7227a0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b44e6a1-e413-4277-806b-fb727fd4ddd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78c7743-63a3-4a56-b701-29d9559eacd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5edc4dd-b8f4-4ce0-9d24-c355d4e0ecb4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "895635f3-a91c-4aae-b187-dbd2ae40dc3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d99b2c8f-3534-465e-b77b-bae2a96c6658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7dacf81-4b2d-488d-b42c-841402e548ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "326f1dad-a711-4189-83db-fd47011559fd"
                    }
                  }
                ]
              },
              {
                "id": "3ec98f8e-4cf6-47ce-bb21-9de46c3352c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "559d8597-aab4-4928-9c7a-38ef69983f48",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998dc2c9-86f6-4304-a203-751c82cb0220",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c892658e-d939-474d-93db-28013c5cfdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a250d1-f7c5-43f0-8b8b-d6b358bef436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76103b7f-62b0-45a1-9fd3-8d7d9fc10dfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db1e06c-a7fc-470a-a6b2-85527d926665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a88540-c671-47d0-b25a-bb59dffb147a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e572e913-2760-4720-80af-3de9c499ec9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ea42580-e49a-4134-a30d-11f53dcf5912"
                    }
                  }
                ]
              },
              {
                "id": "4992daaa-82dc-469d-bf9a-9f92678a6ebd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dd1b883c-c9cf-4b6d-bcf7-d25e3b581254",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c4da0c-9db0-43b1-96fd-6c1e1188cb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9033b2a4-bc5e-4ae0-ae38-ab9730a16a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448033fa-15a6-470c-9b35-b18618868c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158cecd7-8cd1-499f-b8ac-9610374eefab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3a5e6161-085b-4a85-9b80-ef77c8079ea2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c6487af-f570-4ab5-a986-b6f6e19cc341",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31d07f51-d3d8-48c4-af20-8b91537558fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "87f625a9-b8a1-4576-906d-97848f21ce0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ae79985-eade-481a-bdba-b104aa28d765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f93431b-9063-4929-95c0-c8337da302a6"
                    }
                  }
                ]
              },
              {
                "id": "a5c76c33-8f38-485b-b05e-a59ef319d183",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49580cfe-7364-45dd-bd79-062311d2581e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47d8b3bd-4c4a-4e19-9d21-2ded3d82d2a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8976183b-e33e-4c92-9743-09633ed0f360",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06920600-4d64-411e-bf20-d447f18a718c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2052c05-ed8f-4276-9149-a58c642473aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b02f4d3c-adfc-4f56-9799-cb3e10e599c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7707a5e5-2f83-475b-8e48-ade828aa8704",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32d2421f-321a-4ce0-aa56-bcd79269bd12"
            }
          }
        ]
      },
      {
        "id": "c47a058e-3321-4994-a9f8-4f9f7b32d726",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b83d730-0036-4d80-bd6a-0dffa7495463",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d9364db-b55f-407f-a780-ae2ba366a477",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83f20acf-1f5a-421c-9739-ef98c5a6ec61",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a037b72-e8b5-4d99-aff4-1ce41e92b55a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a8a76108-4377-4935-a695-9be6eb5ccef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6959e20-b333-4d17-81fa-5b8c2407f52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "039f2615-8b63-4b73-9ca5-37ad00deeed4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "363c6a54-1e97-4bf0-b988-22f5322a2766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "789b4948-22e4-4111-969e-1753f78abe33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2b5cd0a-9b7c-43e0-962b-a0019db34884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31af45a7-68ee-402d-910b-265b5bccd8b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bda89bb5-cc21-41b1-863c-712dc8ea772f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e69c010e-8d37-4d75-8827-83078962cefa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b5e5a0c-6aa1-45dc-b380-968045ccf685",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e505ca60-9388-4117-bb41-dd88c8923279"
            }
          }
        ]
      },
      {
        "id": "583d33de-4d85-492c-9596-546d7d604ac9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "90480a39-1d08-4e72-94e1-ab75b6d95be3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b89a3e41-814d-4d22-af4f-a45265a5d3e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e1fc178-cb18-4702-92ca-5f4b845db536",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df50002a-f153-46c7-a9b4-1b187d834977",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c254c2-94b2-492b-bd1f-5ee2b8d56649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4e5540-dfb2-41d8-8bed-e2c8e9c80097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd9f2956-eeb4-463d-b304-f0b0e4e72054"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f02b6ef-feb5-461e-b679-476cf971d537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca22b55-f692-4637-b513-04f5b5d81235"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac481d70-a84e-45c7-a7e3-9c87703acc56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0977ff61-38ad-45cf-addc-fc6c5ddfe862"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c22947c-db40-487e-b0d9-a7c4c0f8148e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3bed0f9-b614-412b-9ebe-2ef158c9d993"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c30eae2a-029c-463a-80b9-fe347bd24865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c809f0e0-58d0-4ff9-87a8-9c08b0787c12"
            }
          }
        ]
      },
      {
        "id": "cae7c86e-ba9b-436c-b3c9-e5563ed856a5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ac180a11-5d74-41e5-ad3d-bd51ad94f885",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff27bb6-2176-4086-8ca0-d1d3fd2e5992",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3865b12-970a-46d1-9c95-8ce44214d4b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95d12c-3145-4928-abb5-fca7eefa2bf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c8fd83d-1552-4e1b-a683-5dfaab91a5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2abf698-ba7e-483f-aef3-d43cf742e2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf9684b3-a239-4011-bc5f-ccbe6af345a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e6d486d-06bd-4019-9f34-2bdbe0bdb772",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9af2be59-e5c4-4b78-af1e-29057942192f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0919360-106d-448d-b7b5-f3880c57742e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d427609b-cda3-47a8-995a-92a5828f1e70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e031ae2-c97f-476e-982f-0281325b4e3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "061cc250-e1e7-4079-8e50-ecbc0388e610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69aea549-addf-481e-a7c8-604b08edabb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b20da673-4d33-40a9-8780-a77c5e26c6a5"
            }
          }
        ]
      },
      {
        "id": "ad10a50d-e842-4e70-ab2f-1c8121abfabe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eb587a3-3c42-49f9-bf12-899abb501dde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95c5c1de-a842-4257-9fc3-65141c7ae680",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f9c3c605-f454-4eaa-b03d-ab40ab7a2422",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffbf129e-becc-497f-abe6-38658b08b84a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6428129-fc99-48e0-8440-d4242da28f52",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 807.6150793650792,
      "responseMin": 10,
      "responseMax": 28166,
      "responseSd": 4176.415007649719,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728434693730,
      "completed": 1728434905815
    },
    "executions": [
      {
        "id": "d9a856c9-1b8a-45ad-b61b-ac9231899aa5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e1eeaa1d-7462-4ed5-98cf-591621f59250",
          "httpRequestId": "8dd50a5a-b84b-41dc-a8ef-7fbc0e90ae06"
        },
        "item": {
          "id": "d9a856c9-1b8a-45ad-b61b-ac9231899aa5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a410b9d1-d8a4-413d-b735-c95c8cf979b2",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "ef8b5101-8d54-4a1d-9588-4eb9a58a107b",
        "cursor": {
          "ref": "31e4d5e0-f47e-400b-9d6f-8d3851cde615",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "31697e16-ee43-42b5-8122-c8254c97cb76"
        },
        "item": {
          "id": "ef8b5101-8d54-4a1d-9588-4eb9a58a107b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57922d70-a177-4e11-aab9-816c6a222fc8",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0e30c988-e6ee-4f13-a14b-a54712e735c0",
        "cursor": {
          "ref": "8a6e994e-b589-4dc9-ae2c-e726dc574ceb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "58355f5b-3a52-46f0-ae08-afad387ce23b"
        },
        "item": {
          "id": "0e30c988-e6ee-4f13-a14b-a54712e735c0",
          "name": "did_json"
        },
        "response": {
          "id": "385b2e13-c04a-4e22-b0d3-842e40be4835",
          "status": "OK",
          "code": 200,
          "responseTime": 577,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72fb136-fc95-4fae-bee9-7c78b7dc65ce",
        "cursor": {
          "ref": "bae25ae6-48a0-466c-9885-5b852d27f4ee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c5daad3-4b49-449d-8b92-568ccccbf6cc"
        },
        "item": {
          "id": "d72fb136-fc95-4fae-bee9-7c78b7dc65ce",
          "name": "did:invalid"
        },
        "response": {
          "id": "6df16796-7d9f-4d95-8727-ef9f5ac46749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2321,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72fb136-fc95-4fae-bee9-7c78b7dc65ce",
        "cursor": {
          "ref": "bae25ae6-48a0-466c-9885-5b852d27f4ee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c5daad3-4b49-449d-8b92-568ccccbf6cc"
        },
        "item": {
          "id": "d72fb136-fc95-4fae-bee9-7c78b7dc65ce",
          "name": "did:invalid"
        },
        "response": {
          "id": "6df16796-7d9f-4d95-8727-ef9f5ac46749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2321,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a0fb2-831a-4f43-8d20-a7a918b6e762",
        "cursor": {
          "ref": "a6c91ae7-7f9d-4581-b705-96848201a598",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "189aec65-fdb1-4f50-b9d1-4b5b3260b24c"
        },
        "item": {
          "id": "707a0fb2-831a-4f43-8d20-a7a918b6e762",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8c7255b-9425-4e8e-b8cd-6b1c150088aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2743,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7a3b5-4270-4ddb-b2be-683422c90458",
        "cursor": {
          "ref": "15d14697-7575-43d1-824f-80efc6de2641",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f10fb52e-ca68-4d22-9daa-f7818ff69c26"
        },
        "item": {
          "id": "52d7a3b5-4270-4ddb-b2be-683422c90458",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9efac873-01e8-455a-b20d-99cf811145ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2346,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9cb283-054d-49b2-a417-dabc68e2ed67",
        "cursor": {
          "ref": "4b116d42-d1b6-454e-8782-bf889c77aec9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8428dfd8-95b6-4277-8213-79cc7a3d05ba"
        },
        "item": {
          "id": "3f9cb283-054d-49b2-a417-dabc68e2ed67",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "465d38d4-7505-4225-91aa-543e1a8a133a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab4cc7-04ec-4753-8688-326608c25635",
        "cursor": {
          "ref": "fd5101e2-7437-4326-abf2-2cc14d6c98d1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a03f9a82-e131-4f11-a3e5-615c1e61ffb5"
        },
        "item": {
          "id": "8fab4cc7-04ec-4753-8688-326608c25635",
          "name": "identifiers"
        },
        "response": {
          "id": "cf899feb-ec57-425d-84de-81c61ff24675",
          "status": "OK",
          "code": 200,
          "responseTime": 2539,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe14ccb-6667-44ea-9cc6-9e2a1594a7fc",
        "cursor": {
          "ref": "def3d10e-0e8e-4b47-8261-3eecf1bc169f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d8e35a4d-fea1-4276-aa60-0b4544b70d7e"
        },
        "item": {
          "id": "ebe14ccb-6667-44ea-9cc6-9e2a1594a7fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30419bf0-e8b3-4ea8-8469-bf64532791d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee66b500-e4ce-4ab2-aee6-fc1ab4129f29",
        "cursor": {
          "ref": "fb074efb-f0f0-4bc2-90d0-07a01d8fe5c9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24b47504-1fce-4a69-a10d-3d7a7196be0a"
        },
        "item": {
          "id": "ee66b500-e4ce-4ab2-aee6-fc1ab4129f29",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d7733e29-b348-4f12-a858-0b5226a088c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5205f254-e96d-414f-b570-6d8cedc7b7f0",
        "cursor": {
          "ref": "086f6a61-8434-429f-9ac8-3c3720a4b756",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fbe79b59-f205-40dd-ab92-be0296d68263"
        },
        "item": {
          "id": "5205f254-e96d-414f-b570-6d8cedc7b7f0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9dde8e74-599b-4e78-b0af-cf6ed9f24842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76987b54-4122-4a0e-859e-4c9f8578cf23",
        "cursor": {
          "ref": "c39ae7e5-2a8c-43f8-9fdb-3ce48f281c77",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6004049e-e098-42a3-9dce-e11711035e91"
        },
        "item": {
          "id": "76987b54-4122-4a0e-859e-4c9f8578cf23",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2c31702b-6366-4a70-84d6-5f52a881ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb2e242-aa84-425c-a570-51d650d1588d",
        "cursor": {
          "ref": "49db0336-3957-49c0-b7d8-3f7161c2ce81",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f134003e-de63-4d71-9146-4719fa6b76bf"
        },
        "item": {
          "id": "9fb2e242-aa84-425c-a570-51d650d1588d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6477b9e1-18b7-46c1-8cff-c51a505ed5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e19bdc-aa2b-4469-9feb-d91e2384e209",
        "cursor": {
          "ref": "1d59d8e7-2613-4ffd-b035-43355ed98770",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de6d6691-6d52-4080-baf5-df5ee3f968c4"
        },
        "item": {
          "id": "d1e19bdc-aa2b-4469-9feb-d91e2384e209",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fcd00373-efa0-423b-aea2-0e59425efe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d5e16-0fd5-4739-8304-fcd4b500a349",
        "cursor": {
          "ref": "782640a9-8517-45c4-851e-979b86e473fb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f9eaa2c9-06c8-4fcd-b852-30e5b8de6ec1"
        },
        "item": {
          "id": "ef4d5e16-0fd5-4739-8304-fcd4b500a349",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "012e27cd-edf0-4bc4-9af2-616d7207cdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becc971f-9325-4697-846c-cecd542c473d",
        "cursor": {
          "ref": "6e07d468-f49f-41d7-bf82-9a24d8321994",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ffd3957-0c7d-458d-956f-5c412745f6a3"
        },
        "item": {
          "id": "becc971f-9325-4697-846c-cecd542c473d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4dc69ae2-a308-44c4-add9-afd9200b6bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa4f410-9e60-417a-8b8d-e54e03d6159b",
        "cursor": {
          "ref": "d0eac261-4d5e-4e0f-9c67-1bb81dd8125c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e2d4eab5-cf41-4b0b-a869-33f00a98a7fc"
        },
        "item": {
          "id": "0fa4f410-9e60-417a-8b8d-e54e03d6159b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f7b021d2-a7f0-4155-ac49-531a563b2adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a333cc9-a90f-4ab0-b8a7-93607b74d704",
        "cursor": {
          "ref": "b5880769-d124-4642-a128-5293cc034680",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fcba63d-b69f-4424-9a83-39cf4e65f253"
        },
        "item": {
          "id": "5a333cc9-a90f-4ab0-b8a7-93607b74d704",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "48a04e7f-1083-405a-8bd3-9016e0b13017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37229a28-e22b-464f-8f61-30db366a63f2",
        "cursor": {
          "ref": "125e2702-421f-4213-beda-401eef3bdb80",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "87798351-bfb7-40b3-8e3f-ee0cdbbf332d"
        },
        "item": {
          "id": "37229a28-e22b-464f-8f61-30db366a63f2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6b7faa89-aa8d-4dad-bea3-8d653dc3b943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd64d9-74a0-4120-8ec5-fa2f7e5d21f9",
        "cursor": {
          "ref": "78000107-a77f-4460-bed1-d92a878391d5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "581dfa55-e78d-4b99-b54e-a76c531b869c"
        },
        "item": {
          "id": "03fd64d9-74a0-4120-8ec5-fa2f7e5d21f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fb213630-b84b-43cd-944b-d53458161329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97f7a3f-4651-4ffd-802c-8f19ca8a50e7",
        "cursor": {
          "ref": "d027be79-1428-4ae8-bf8a-a1416fb9f47a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d75d4ea7-626c-4aa7-9dff-b190663db1d7"
        },
        "item": {
          "id": "a97f7a3f-4651-4ffd-802c-8f19ca8a50e7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e2b8e55e-1efc-4660-a9bd-95a5a2191c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d4b46-f2a0-448d-9125-831032279fdd",
        "cursor": {
          "ref": "38f93c5b-97b7-447b-88d7-87181af4fe5c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e34b2c1a-3686-4bcd-82ab-df9c1a4402ed"
        },
        "item": {
          "id": "7b5d4b46-f2a0-448d-9125-831032279fdd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aea7a2c8-4e51-416a-a0e3-d62468a75902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37885c0-74d6-4975-833f-2599a9266f37",
        "cursor": {
          "ref": "953769fe-6e90-4bc7-8923-faa7cd284d3b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9757a783-43bb-412b-a187-b16d8e8236b2"
        },
        "item": {
          "id": "e37885c0-74d6-4975-833f-2599a9266f37",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "262673d6-d2c8-45ff-953a-0c104a6cf0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384fad75-d5e6-40d2-89e1-147e381ba2ee",
        "cursor": {
          "ref": "66ac347a-e3c9-4461-8c22-f5f19c125319",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0de3e2e3-89d3-47ba-a347-a8145f55431c"
        },
        "item": {
          "id": "384fad75-d5e6-40d2-89e1-147e381ba2ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "197a9fc8-72ec-46a3-a7c8-0eedcb9cfb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f3dd2-683b-434d-9141-761eaafd6d26",
        "cursor": {
          "ref": "b2990054-4c4b-41f5-b8b6-923500ebb0b1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dfb4da46-ccbc-4692-8db3-6c1967430fbd"
        },
        "item": {
          "id": "c65f3dd2-683b-434d-9141-761eaafd6d26",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "209b1949-46d7-4ca7-8f26-1de25c9c5cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60c2396-9536-4d95-8624-ae9e7e85135c",
        "cursor": {
          "ref": "42c2715d-58f7-468e-9f41-dd5bc09757b3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "25c3381c-6af5-40cc-910b-dacfc2105963"
        },
        "item": {
          "id": "c60c2396-9536-4d95-8624-ae9e7e85135c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "089cdf5c-6d16-4062-b35c-30fb3aed8a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d7eda2-7614-4599-8077-e89f17b69459",
        "cursor": {
          "ref": "d91254f1-6e44-4c6d-baca-9fb8e3fb1e0e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "680a3a8d-4c7b-49bc-a9aa-90f2d68d0d9d"
        },
        "item": {
          "id": "91d7eda2-7614-4599-8077-e89f17b69459",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "17656220-aa62-4314-b072-9b1137c7b50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e984100-ed32-4f0e-b69e-3d27b0874cf2",
        "cursor": {
          "ref": "7f73b405-6d75-4a22-8fab-b5365d2dce2a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4cbe0c1b-1238-49b3-902f-a2ea11096558"
        },
        "item": {
          "id": "4e984100-ed32-4f0e-b69e-3d27b0874cf2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "56fa1a69-886b-4bc5-b952-10a8bea7e54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42bb3c6-d4a0-459a-8db1-bdde8c68a085",
        "cursor": {
          "ref": "92d21b72-76ff-419f-9bc7-dec68454ead1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3c5eb67-7f61-4fda-9005-9316f87812a6"
        },
        "item": {
          "id": "d42bb3c6-d4a0-459a-8db1-bdde8c68a085",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ec71c10f-40bf-48d7-b29c-aeb75beb66ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321b28db-efce-4241-8874-905b2aa0521d",
        "cursor": {
          "ref": "8dc6fb38-7ea8-4a52-8a6f-862b8a702aad",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1e3d4eab-c870-4d2a-a461-79ce48b3564f"
        },
        "item": {
          "id": "321b28db-efce-4241-8874-905b2aa0521d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "77cb901f-d18b-45cf-b220-0a6398a3067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb453f-b2b6-41a6-be15-8d78e197d515",
        "cursor": {
          "ref": "7f3f4864-d3bc-4e9e-9d31-0b9cda093762",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "40d0e96f-a5ce-438d-9391-9e033be81b78"
        },
        "item": {
          "id": "a4bb453f-b2b6-41a6-be15-8d78e197d515",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d90f2c7-1284-49d4-ab2f-621210014d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f37c159-ab3e-4154-b9d4-8571489cf858",
        "cursor": {
          "ref": "d591e3d2-ec46-403d-8876-a2de32567b83",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "95537774-9f7a-46fc-8f26-857db551d73f"
        },
        "item": {
          "id": "8f37c159-ab3e-4154-b9d4-8571489cf858",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "47b459ad-119e-4a2f-ad5a-56db47cb3319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e43b64e-667b-4768-a3eb-bbf0d61b1d3e",
        "cursor": {
          "ref": "d3db9aa0-18f2-461b-aec4-96e85697c40b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c58d5a42-4611-44b3-8c93-97a803194584"
        },
        "item": {
          "id": "3e43b64e-667b-4768-a3eb-bbf0d61b1d3e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "704525c1-41b5-422e-886d-0fb4761325be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bd5458-b03e-48fa-ba2d-0cd9afbaeeee",
        "cursor": {
          "ref": "30fb66af-3e20-4c9c-8d80-c3e40f14b2e8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4ed3a88b-2922-4ef5-b330-dd4f83526ce8"
        },
        "item": {
          "id": "92bd5458-b03e-48fa-ba2d-0cd9afbaeeee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "54a7e5b5-c77f-40a0-acc8-5c30b5f449c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3cc02-f37c-42d1-90c1-ae94d0bab6f9",
        "cursor": {
          "ref": "fe8fcadc-316f-43b5-b491-2174003196b1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4634dbca-9f94-4cb6-be44-70421391976a"
        },
        "item": {
          "id": "2dc3cc02-f37c-42d1-90c1-ae94d0bab6f9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "39464384-8044-4a7b-b066-6c88aeb31d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15056d04-de7e-4afe-a805-8a2207ff682e",
        "cursor": {
          "ref": "70294253-4827-45b6-b844-810a19c2f637",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "288647ef-0c47-401d-badc-693334d7902a"
        },
        "item": {
          "id": "15056d04-de7e-4afe-a805-8a2207ff682e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fa731c61-d941-4a71-9ed2-b352d7b918b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728214c1-5e20-4fac-b7df-4668d9f3c3da",
        "cursor": {
          "ref": "de36082a-ffa4-4256-88ff-80d865d29f54",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "615bf5fb-4396-4d36-a8ac-4bc7668601ed"
        },
        "item": {
          "id": "728214c1-5e20-4fac-b7df-4668d9f3c3da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4b2fc65-c166-4a81-a07e-2e5e646795d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da15fd4-aa7b-49ac-a5a4-3779096d8ebd",
        "cursor": {
          "ref": "b4634930-fa45-4b24-b893-fa020e004413",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2f5a69fe-7ec7-4d73-8d14-b79049c9d125"
        },
        "item": {
          "id": "3da15fd4-aa7b-49ac-a5a4-3779096d8ebd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd5400db-7e3e-443e-a6e3-4733884c0fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b534fd7-1f3a-4599-b69c-a720b05fde13",
        "cursor": {
          "ref": "8768c5ed-5431-4958-a16f-1674dffecb8a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "28f3a01a-e3cf-43dc-bcb6-a15ecb396675"
        },
        "item": {
          "id": "7b534fd7-1f3a-4599-b69c-a720b05fde13",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d06bfa59-dcbf-4676-b306-86e20c3b7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3232382-f3cf-4306-88f4-40a3f6c4b92a",
        "cursor": {
          "ref": "03a2a7e6-512b-4636-9345-004421ee48fc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "84fa0f26-974a-4ac3-ae62-521fe600b575"
        },
        "item": {
          "id": "f3232382-f3cf-4306-88f4-40a3f6c4b92a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d1996550-3017-4993-913a-e07bb59c66f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8fda24-e190-478c-8cbf-e883a71f1dcf",
        "cursor": {
          "ref": "a80f90e9-e1ef-409d-ab47-cf2f3d2b74e5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "932d4116-212a-41dd-8ea4-1139cff4229b"
        },
        "item": {
          "id": "eb8fda24-e190-478c-8cbf-e883a71f1dcf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a49d226-b965-4369-9971-0cd89000e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b47c360-f97d-433d-803f-e5a8d7f3b84f",
        "cursor": {
          "ref": "55e6fd49-164c-41fb-90af-4506597238f6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bcb5116f-493c-4267-bc66-8850b7ca4a53"
        },
        "item": {
          "id": "7b47c360-f97d-433d-803f-e5a8d7f3b84f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d38e3eb8-247c-47b3-9bb2-8affa2dd7af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf49094-434c-45f0-b2ad-7ac90b6253ea",
        "cursor": {
          "ref": "cd494c36-b97b-44bc-bca6-f65ccad4b039",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7063dfc8-b85e-45b6-a7b5-9e0d19b4805e"
        },
        "item": {
          "id": "baf49094-434c-45f0-b2ad-7ac90b6253ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4efd2e67-3092-442f-b529-530466b93054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec3ce0-3b17-49aa-8b6e-402e133cf29a",
        "cursor": {
          "ref": "f9511b77-6b84-4ae6-ae39-ccf8ca3079ef",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "05e40ea0-4bd9-464f-b754-507f9f6b95b1"
        },
        "item": {
          "id": "6cec3ce0-3b17-49aa-8b6e-402e133cf29a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9073a8ba-60db-4ac4-b792-5a134343fa76",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c32c0-6a53-43eb-9cc6-f93bafbe22a6",
        "cursor": {
          "ref": "b1364392-7ec0-4bb7-adc0-1d5615fce893",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9f2d229a-2cfc-4171-a0c1-bffe1839f590"
        },
        "item": {
          "id": "796c32c0-6a53-43eb-9cc6-f93bafbe22a6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2e8a280c-e96e-4d60-81e4-d65025570e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7689d3cb-b1de-4f62-9c10-7352f6676bee",
        "cursor": {
          "ref": "aedb0b77-347b-410d-83e9-387f24f19520",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "40b8893a-cbd6-4f0f-9169-cc481ef55fe6"
        },
        "item": {
          "id": "7689d3cb-b1de-4f62-9c10-7352f6676bee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f7bf876e-516f-4a57-9399-e68ecb180c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5189ef-2e12-4913-9505-6be0f3c552fd",
        "cursor": {
          "ref": "14ed37b7-b713-4b85-939a-7914e3213ac5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3ea04c8b-eb71-4865-8c49-0a40943a1744"
        },
        "item": {
          "id": "3b5189ef-2e12-4913-9505-6be0f3c552fd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8f3f2283-57c2-4868-9f5f-7d734d0c3c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7148ceab-037a-4c4e-99c3-ad7d1396b0c7",
        "cursor": {
          "ref": "46b8532d-dc79-4dcd-b089-adbebae406e8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a13afdde-adaf-449c-af9f-f4bb2b39c10e"
        },
        "item": {
          "id": "7148ceab-037a-4c4e-99c3-ad7d1396b0c7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "23fa5301-37ea-4493-a056-4941f70d30e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c844053-0484-48f9-ba32-2ef3b3efd308",
        "cursor": {
          "ref": "9624744b-c4fa-40b3-94ad-135de463868c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e1e5be9-f7a4-4369-b76a-4563116801bd"
        },
        "item": {
          "id": "0c844053-0484-48f9-ba32-2ef3b3efd308",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "13a20025-8d61-4396-9d78-d5d462867f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a718e-b957-4979-91c0-c82e074aad30",
        "cursor": {
          "ref": "be7d8961-ff0d-4554-815f-335b1382f3d7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "547d56fc-f03f-49a5-ba11-48388c985ee4"
        },
        "item": {
          "id": "757a718e-b957-4979-91c0-c82e074aad30",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7b64dfc7-797b-48b5-976e-5b97263691f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d74da8-a228-4232-a852-76e29d061616",
        "cursor": {
          "ref": "5b42f35a-11b2-4407-836a-2a1cc08306b6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0ef9e1aa-8c24-41da-abfd-46dd728549ce"
        },
        "item": {
          "id": "b9d74da8-a228-4232-a852-76e29d061616",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6e1ed52c-c53d-49f7-9c45-4aec14f233c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a8f6ea-804a-4dc1-a3fb-55d2a59228ba",
        "cursor": {
          "ref": "cab50209-eb7e-40b6-8df1-661e27e5f50f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6fa16dd5-7ec8-4789-8ba5-a76d72ae1fe7"
        },
        "item": {
          "id": "b1a8f6ea-804a-4dc1-a3fb-55d2a59228ba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1afbd7fd-c837-4dfe-a2d7-b93dde7a324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88430d6-3758-4be7-b27c-1b766d0f97ae",
        "cursor": {
          "ref": "53dc069b-5ea8-4804-afd5-305466a338ac",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d1d785c1-8183-4f77-82d4-9b7702a1429a"
        },
        "item": {
          "id": "f88430d6-3758-4be7-b27c-1b766d0f97ae",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "83a10dba-96de-45fa-a053-b171f9aeb9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf56274b-cb2e-4e63-9fa1-b9e8623f16c6",
        "cursor": {
          "ref": "d336fecf-13b3-4dd1-8c91-419f2ed43364",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1d2d6bd3-8ed8-43cc-bf84-c9ac179cca67"
        },
        "item": {
          "id": "cf56274b-cb2e-4e63-9fa1-b9e8623f16c6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fbd58e78-7a22-47fd-8688-e54fdfa9bf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500df9ad-8d26-4f4c-875d-761c293ab62f",
        "cursor": {
          "ref": "3885be62-cb59-44c7-9a41-714483c846db",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "36ce30a6-a1a8-4965-a121-ded2ddd546b1"
        },
        "item": {
          "id": "500df9ad-8d26-4f4c-875d-761c293ab62f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "46b3754d-d08f-4ceb-8fa6-01f3b60a8a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5386aa4e-9c7a-4ebb-92a0-92a3c59d937a",
        "cursor": {
          "ref": "e12a3db3-da6a-4d5a-ad7e-83dc7e63892c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "014094ef-28c3-4258-a514-8d705b356a91"
        },
        "item": {
          "id": "5386aa4e-9c7a-4ebb-92a0-92a3c59d937a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "02970540-5e36-4f2e-ad92-954b927313b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db50194-7e52-4a3b-9faa-0130fcca74a8",
        "cursor": {
          "ref": "65948168-1a98-4091-b8a3-f94c1906aedc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a34025db-8c26-47d3-ad5a-a875a094fc8c"
        },
        "item": {
          "id": "7db50194-7e52-4a3b-9faa-0130fcca74a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "357430ac-dc22-4f21-9dc7-8be63e37696a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f3a841-8af9-497c-9675-d4b0c1464887",
        "cursor": {
          "ref": "10b06a39-5843-46f1-a849-ecdf8caac006",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "329c02e4-bba3-46eb-a36a-a02790c19b5a"
        },
        "item": {
          "id": "d3f3a841-8af9-497c-9675-d4b0c1464887",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b42b6d2d-ba6a-432f-93bc-c4cf04342340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b01e4-68ac-4bf5-bdbc-ac76a848815e",
        "cursor": {
          "ref": "965c204d-a944-453b-b6ad-75da4f4fc933",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6915c25-b4cf-419a-9baf-b4e6c0e0933d"
        },
        "item": {
          "id": "953b01e4-68ac-4bf5-bdbc-ac76a848815e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0e1ac1e1-7a93-4bde-8e70-c026ec4b9c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03e42e4-8238-4ccd-b6b9-325a752378b3",
        "cursor": {
          "ref": "59c60851-59f9-47db-82e7-40aad5f3fc80",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2cad878f-3e9a-4027-a3eb-554ec5ddd4eb"
        },
        "item": {
          "id": "e03e42e4-8238-4ccd-b6b9-325a752378b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fde58899-38ff-49b5-904c-6f7f64493ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8732c10b-d80c-42b2-81ee-80c2195327cc",
        "cursor": {
          "ref": "712320b4-2a10-424f-8118-5b3adcfca9ac",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3486ac7f-c812-49ed-b74c-0ad5793040e6"
        },
        "item": {
          "id": "8732c10b-d80c-42b2-81ee-80c2195327cc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a7e1b894-8edf-4e99-bcd7-4e7a971226be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233bc368-144c-410f-bd95-bc10a2e37f71",
        "cursor": {
          "ref": "d620892d-12ce-4e23-afe7-cf33d663fb91",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b3e452b-f632-42b0-a8b5-16fce126ea71"
        },
        "item": {
          "id": "233bc368-144c-410f-bd95-bc10a2e37f71",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5bedd074-097e-459a-a5a9-9e10e846052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097223f9-4fd5-484c-86c6-86214c66b12a",
        "cursor": {
          "ref": "ab4b92dc-d9c7-48c5-9c44-010d80ef43e0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d512fdd-1469-40ad-9ae4-9d7cc3d0067c"
        },
        "item": {
          "id": "097223f9-4fd5-484c-86c6-86214c66b12a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1e867cd6-6623-459f-8184-1e299cf2726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57618d7-0616-48ab-bf81-ba2e460aad1f",
        "cursor": {
          "ref": "b4a513e4-dd34-45d7-b8f7-dd37beaca857",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8da4b707-6ce4-402f-bad1-860dc8d2ac18"
        },
        "item": {
          "id": "d57618d7-0616-48ab-bf81-ba2e460aad1f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e1631a65-e17f-49b8-aece-9a706e325224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ae8e58-58f5-4295-98e5-9bbce663ca93",
        "cursor": {
          "ref": "ec9f4484-da15-4d92-a4ae-e38179c3bca1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "04920131-44d0-4b32-b697-496695979044"
        },
        "item": {
          "id": "34ae8e58-58f5-4295-98e5-9bbce663ca93",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a8b8ecde-e613-4187-adbf-ef9b7aff2ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fa1008-d633-4a4f-8b15-70115bfa4e89",
        "cursor": {
          "ref": "d86b729c-21cf-42f8-995d-836b21e6d78e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9320f5e4-d38a-47f2-a151-ce0a31c3e9eb"
        },
        "item": {
          "id": "16fa1008-d633-4a4f-8b15-70115bfa4e89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "67b5a3d1-5563-46e8-9ce7-e2591d28c4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158ccb60-686e-4e51-b279-7e1368cfc8a6",
        "cursor": {
          "ref": "bc503dcf-c2d0-4f5e-b2ec-9af025788f01",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "453b2a8c-9ffe-46f2-8e88-59d6720e3060"
        },
        "item": {
          "id": "158ccb60-686e-4e51-b279-7e1368cfc8a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d86de3fe-9541-4026-9637-877639787f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add7513b-5502-470e-b351-81f3b84e8858",
        "cursor": {
          "ref": "13c99427-dcfb-4115-8ff6-2549b04293e8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "64ae5aee-1a6d-4b13-98f1-a2894c9340e9"
        },
        "item": {
          "id": "add7513b-5502-470e-b351-81f3b84e8858",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aee907c4-4332-4d07-98b5-b0045dc35fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf1f411-925f-435c-ba6f-021f11082c0a",
        "cursor": {
          "ref": "a7176c4a-7ca2-4225-ad63-189e538484f8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "37ffb1c2-7830-4b05-9ccb-e77494b9ae76"
        },
        "item": {
          "id": "dcf1f411-925f-435c-ba6f-021f11082c0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7c0be1c7-d060-472a-bd75-43ce1c07aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c7b4f7-8449-4893-a61e-e60d7b1af512",
        "cursor": {
          "ref": "b15b7b48-eb3d-4786-89d2-e6743776fade",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "991b7a4b-3bbc-40c6-b709-642ed81a0171"
        },
        "item": {
          "id": "50c7b4f7-8449-4893-a61e-e60d7b1af512",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c04a53da-20cf-4912-b4ee-1976109e5ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a5a8f4-7d71-49b6-817f-ccc538ed9e7b",
        "cursor": {
          "ref": "f86d1145-c382-46d3-8c88-4edd55575173",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b8766903-0b56-4df0-88a8-f96b02ffcbac"
        },
        "item": {
          "id": "50a5a8f4-7d71-49b6-817f-ccc538ed9e7b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bcead197-f7c7-46f4-979b-d4eadc826f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5a8ec-0463-4dcf-97ec-b932d33d0b19",
        "cursor": {
          "ref": "6a0200f8-b736-4a6d-b228-3692453151aa",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d26a920-a4b1-41c4-8138-d83611a2c53e"
        },
        "item": {
          "id": "fce5a8ec-0463-4dcf-97ec-b932d33d0b19",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f091fcbc-892c-4e78-ac36-6bcc90b0b5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b15a6-c0c1-402f-b5ff-2556c583475b",
        "cursor": {
          "ref": "9e62f801-2251-47b2-af0b-a8a004555c37",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "624d8a96-3086-43e8-aa2c-2f9246400d94"
        },
        "item": {
          "id": "850b15a6-c0c1-402f-b5ff-2556c583475b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48d90bab-106a-4ae3-b6e0-fceff76f5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7f5f6-92ef-471d-87ae-ed1101fd45be",
        "cursor": {
          "ref": "8a0c5cd8-9cd3-4b43-9e47-6d31a38877ee",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4a681632-567e-42ba-b33f-fdb58c9e53cd"
        },
        "item": {
          "id": "52d7f5f6-92ef-471d-87ae-ed1101fd45be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bf764bf7-86b9-44d5-ac0a-e63c9ff2b238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f5aa49-6d9c-404a-a7f7-488c14f9577f",
        "cursor": {
          "ref": "303fc009-b981-45aa-9da7-2a6770658618",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "44dcfda1-29a3-42bb-9bfb-928f09c02a21"
        },
        "item": {
          "id": "b5f5aa49-6d9c-404a-a7f7-488c14f9577f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "028426e7-56b1-4eb2-a428-335277b66f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce404c05-f8e8-4258-a104-bd55934154ad",
        "cursor": {
          "ref": "5b1a6d32-ba5b-4197-9ac8-1f2af7e59492",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7f614fe-a3d6-4f31-aece-c98fa0323618"
        },
        "item": {
          "id": "ce404c05-f8e8-4258-a104-bd55934154ad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6940b96e-fe4a-49b2-96ae-c17ea015f234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee469e2-dd0f-47c5-98f1-186975edb1b1",
        "cursor": {
          "ref": "3b575943-96ec-4a6c-a5c3-af5917a6f340",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "714eb308-6e1b-4e17-aeae-62b214394d74"
        },
        "item": {
          "id": "4ee469e2-dd0f-47c5-98f1-186975edb1b1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "577417b6-b114-4a4b-8de3-5cb341dfda1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb3a38d-6cd1-4f27-b3da-7f6cfffc02a6",
        "cursor": {
          "ref": "2df232b8-e06a-47c9-b902-e23bc4282e3f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b26eb945-dab4-46a8-86d0-3ad35f96afa5"
        },
        "item": {
          "id": "9bb3a38d-6cd1-4f27-b3da-7f6cfffc02a6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d1435fa-0519-4c88-aa3d-6c2d00370544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf65b1d-2409-43fd-b0f1-9c56fe76987e",
        "cursor": {
          "ref": "07fe29c8-d87d-431e-8087-493d22451170",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c334204b-9b31-4c64-aabf-05317d49cc2b"
        },
        "item": {
          "id": "4bf65b1d-2409-43fd-b0f1-9c56fe76987e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a5b3263c-4304-4018-a615-f87481235dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aa168e-8b6b-48ce-a861-bba4522d0b9d",
        "cursor": {
          "ref": "3d9dcbdc-64ab-49b8-a17e-279779e304a9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "700c7dd6-1bf9-43d7-bd27-a25e648cb332"
        },
        "item": {
          "id": "a0aa168e-8b6b-48ce-a861-bba4522d0b9d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cec95b4d-8cbb-43c4-9b4a-970cbdae72a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be81d82-f09e-48ae-abe1-4e1c94cfb443",
        "cursor": {
          "ref": "929990cb-c0e8-424f-b211-d1e69addbf98",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ab308d5-bd82-4145-a357-d817754be734"
        },
        "item": {
          "id": "2be81d82-f09e-48ae-abe1-4e1c94cfb443",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "865d56ad-1878-4ac0-980a-59b6c498cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefbc364-7479-40cf-be45-3b6cab9ca5b4",
        "cursor": {
          "ref": "d681d948-dac4-4aa2-8824-cd4911f617b6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0cf18255-2b3e-4551-ab36-e80252a81c54"
        },
        "item": {
          "id": "aefbc364-7479-40cf-be45-3b6cab9ca5b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3f22ef77-f37d-495c-9e06-f5cc7bcf6d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ee0336-1665-459f-a4ea-7364c66c4ece",
        "cursor": {
          "ref": "5d607428-0dd7-4ac5-8663-39b021fd46ba",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "31ccfb04-d0cd-48bc-b25b-7ce350cd2947"
        },
        "item": {
          "id": "b9ee0336-1665-459f-a4ea-7364c66c4ece",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c4b3abda-16c2-49be-968e-ca1e4f91d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0263b7c-b168-44cf-9a54-4bd1d51429ea",
        "cursor": {
          "ref": "33994a75-b0cf-4769-ba60-25a20f9d2dbf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8de3fed8-23e0-40ff-bfa8-4219ae8754e2"
        },
        "item": {
          "id": "e0263b7c-b168-44cf-9a54-4bd1d51429ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "034fd74a-4c6c-4ad0-ab2a-c7008c89aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89ba7d-13b0-41d2-aafb-be061b2d54d0",
        "cursor": {
          "ref": "65804a3f-a21a-4de0-9390-77f4c87ce3c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a7820c7-2a56-4e5e-be66-ef4adbec1f68"
        },
        "item": {
          "id": "ed89ba7d-13b0-41d2-aafb-be061b2d54d0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8830c639-b957-4201-8e30-3e1c28752abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feba14d1-4ca2-436a-bdd6-fbcc1fb517f8",
        "cursor": {
          "ref": "daf76d46-6d44-4650-ab9d-59986239186c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f0e4bc5d-cd88-4731-93e3-daa8b5e041a5"
        },
        "item": {
          "id": "feba14d1-4ca2-436a-bdd6-fbcc1fb517f8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b5a69e8-1af9-4027-8e50-0cf81c69173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df81b65e-d908-458e-befd-1c92abee97d5",
        "cursor": {
          "ref": "2cc5316a-1e2a-42ff-b434-d99e465d491b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd37689c-fa65-483f-b186-cb53bd2505db"
        },
        "item": {
          "id": "df81b65e-d908-458e-befd-1c92abee97d5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b7907d6f-8482-4ff0-9f29-d4b147f132d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee743395-e579-4c08-a553-803ff285290f",
        "cursor": {
          "ref": "afdfda6d-e828-44a2-bea5-18b0e73ac16c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9c7b1619-f9d5-4ddf-81b6-e0233c697a0d"
        },
        "item": {
          "id": "ee743395-e579-4c08-a553-803ff285290f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0bc8ef56-7902-4230-a373-47260ed808de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85885431-46dc-43de-9a67-e013026fb346",
        "cursor": {
          "ref": "96d22d4e-f328-4d56-99d0-4fc2fc5fc2bf",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d5eed328-cfa9-44d3-8011-24f6dae77a36"
        },
        "item": {
          "id": "85885431-46dc-43de-9a67-e013026fb346",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "43cff221-9197-4d98-8031-b4ec70f5e2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ab92db-2e68-4ced-bdb8-1182c779c92f",
        "cursor": {
          "ref": "dc20d37a-b6e6-4b62-98f3-5c72cbcf5522",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d170c3a8-5888-4261-b745-059aab8bb531"
        },
        "item": {
          "id": "59ab92db-2e68-4ced-bdb8-1182c779c92f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c57210fb-9006-4331-ab57-11ec3e288bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebcf66f-0f3f-4752-b084-87c65b3dab67",
        "cursor": {
          "ref": "5e3b4021-6be1-4e92-b2b8-f9de2ab9edd4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "919d0038-c574-40f8-b389-df4818840530"
        },
        "item": {
          "id": "4ebcf66f-0f3f-4752-b084-87c65b3dab67",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff3d9a37-3300-4554-8ef3-6b60f099465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eea25cd-4ab3-4efd-8bb4-2691c97ee2e7",
        "cursor": {
          "ref": "59fc6eca-2723-4608-9808-189a27eff14a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04bd1251-710e-49e5-bb12-9764d00ef561"
        },
        "item": {
          "id": "7eea25cd-4ab3-4efd-8bb4-2691c97ee2e7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e3d4d308-9add-484c-918f-004c4d78cdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07631821-ac66-4cd4-a8c8-3f90bf0df41a",
        "cursor": {
          "ref": "cc67316a-031d-4404-9f62-ab4ba0dfe7bb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "64efdf8f-c157-43df-84f8-957e164d3a55"
        },
        "item": {
          "id": "07631821-ac66-4cd4-a8c8-3f90bf0df41a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3870cc0c-1d03-42fe-abe7-4fe661fe239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e85190-a717-4f5b-9c49-194477bdc7ae",
        "cursor": {
          "ref": "ac2999a8-ec48-4897-b5be-9c6242263b75",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e32ed98b-7d04-4ddb-8194-cd2013a4ee76"
        },
        "item": {
          "id": "c5e85190-a717-4f5b-9c49-194477bdc7ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b98277b6-a5d9-4680-b6d8-7e80751f4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a929b1-53c8-4e22-a0c1-5850956fbf97",
        "cursor": {
          "ref": "5b2ffa34-72e5-41cd-9de3-fb67e26ca211",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4e3573fa-1176-42e7-8d75-fab1e525cb92"
        },
        "item": {
          "id": "82a929b1-53c8-4e22-a0c1-5850956fbf97",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "097d14d1-1e84-4cda-872d-2273512c3885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d313c82-412c-4a41-9dc8-2376b4d114d2",
        "cursor": {
          "ref": "2aa9e09f-89d9-43a2-b4f2-54cfb3215b58",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "68e3877e-50fa-4b50-bb45-41a1e3aa88f2"
        },
        "item": {
          "id": "0d313c82-412c-4a41-9dc8-2376b4d114d2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "670ef63c-ee33-4dd5-9075-0bbaa1b69fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba87dafc-2b14-4709-bb3f-db0ed8bd0561",
        "cursor": {
          "ref": "082b2d30-3f46-4723-a1e6-426b44b5f6c2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "73fec0e3-f72e-4a56-98de-f2c3321ce415"
        },
        "item": {
          "id": "ba87dafc-2b14-4709-bb3f-db0ed8bd0561",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75156e85-dca0-45d3-ad48-e84a7e07efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df616733-6eb3-4643-b6d6-b0552ae792fb",
        "cursor": {
          "ref": "4104b6e1-8170-44ef-bb6e-c4e7f16f16ed",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a44f77e3-f13b-499f-92fe-ba935ffa0147"
        },
        "item": {
          "id": "df616733-6eb3-4643-b6d6-b0552ae792fb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f36e4f40-e840-43ed-bb7d-c6b85307f8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32367c8f-ba23-4865-b836-883baae3e694",
        "cursor": {
          "ref": "1e98ead6-9d64-4023-8015-79eb933eee25",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d30d9d3-a6ac-4575-bd8f-9f1b930b85dd"
        },
        "item": {
          "id": "32367c8f-ba23-4865-b836-883baae3e694",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eae6b4c8-4cc3-4e6c-bacb-7d3d98fdc52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4527562-763a-4b5e-a321-06ccd66890d4",
        "cursor": {
          "ref": "afd7f554-5ae4-4e3f-bcc4-ddff837ec387",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9acd952f-959c-4a1d-961d-c062ce805b4e"
        },
        "item": {
          "id": "a4527562-763a-4b5e-a321-06ccd66890d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "92f5d6a1-b28d-4e2c-a7e7-98f6320ea364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ca149-d4b6-420b-ae29-bca59d1f7354",
        "cursor": {
          "ref": "4b6493b0-a4c6-4d18-9463-6ca9f61744d2",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c052da95-333d-49f2-918e-7c86fab3195b"
        },
        "item": {
          "id": "d49ca149-d4b6-420b-ae29-bca59d1f7354",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f018e692-44ce-4584-a451-541386e72b8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8be1a-d6f6-477e-8908-cc45c8ec2492",
        "cursor": {
          "ref": "09636291-1cbe-4a5d-8677-cb0a3d9cdbd8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4e1b5c1f-71e5-466e-8202-de78e5a9217f"
        },
        "item": {
          "id": "e9a8be1a-d6f6-477e-8908-cc45c8ec2492",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "12d99db0-6d8c-425c-9dc0-c1fef47c3db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "93c9f7c7-e8d5-471e-bde4-962c88625a31",
        "cursor": {
          "ref": "d54a84c8-d792-4e95-accb-ec337361d1a7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9addc2d8-bc27-47be-bbe2-30cd9f67d3d6"
        },
        "item": {
          "id": "93c9f7c7-e8d5-471e-bde4-962c88625a31",
          "name": "credentials_issue"
        },
        "response": {
          "id": "67c48e2f-8361-46fa-9599-cc2bc23e05c8",
          "status": "Created",
          "code": 201,
          "responseTime": 28166,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e2efa-dc29-4406-b142-71c7b04d6696",
        "cursor": {
          "ref": "ec5adc35-4352-4910-9b01-217a280aadac",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7f1b634e-833a-4c0a-b129-e7f65661d895"
        },
        "item": {
          "id": "583e2efa-dc29-4406-b142-71c7b04d6696",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9c59e777-1246-4e0b-93b4-977f331c2b89",
          "status": "Created",
          "code": 201,
          "responseTime": 27580,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7592ad-4c1d-484a-bca2-94a2a4e20ea6",
        "cursor": {
          "ref": "f1654f37-3648-4b38-ae09-66e1fc2414b2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d0958cf-89c1-4c0e-bfb4-aec4dceeac3a"
        },
        "item": {
          "id": "0b7592ad-4c1d-484a-bca2-94a2a4e20ea6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d80e5c0-2d49-40df-b0d5-04e244ca4ae1",
          "status": "Created",
          "code": 201,
          "responseTime": 27165,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec425131-32f6-46c3-a231-528596c22c1e",
        "cursor": {
          "ref": "9c6348b7-79fd-4337-84b4-d8d0f046065e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "285922cb-39ac-4dfb-bd13-8f5ed0a937ce"
        },
        "item": {
          "id": "ec425131-32f6-46c3-a231-528596c22c1e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b6843c03-ce50-49b6-8ab1-baa3284ad832",
          "status": "Created",
          "code": 201,
          "responseTime": 27217,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2cba3-e422-43e1-8283-53bee9b39d39",
        "cursor": {
          "ref": "c9652203-3733-4cd1-b609-531513f8811d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1b154296-50ba-49d5-8640-c579310fbe31"
        },
        "item": {
          "id": "33a2cba3-e422-43e1-8283-53bee9b39d39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5c0436fa-7285-44d0-aa5b-c0d4a3c3f385",
          "status": "Created",
          "code": 201,
          "responseTime": 27108,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-09T00:47:33Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-09T00:47:33Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ac9005fe-91b0-444f-8779-ea6d601ece14",
        "cursor": {
          "ref": "20f31375-a004-4e4e-add2-076d0b507eae",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3b17c41-57f5-416a-ac29-7226b4e8f5fa"
        },
        "item": {
          "id": "ac9005fe-91b0-444f-8779-ea6d601ece14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2af58eec-23df-46b4-ae6a-afcf9a6d6bb3",
          "status": "Created",
          "code": 201,
          "responseTime": 27083,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5361f202-0ef6-4874-b760-3e469275b6ee",
        "cursor": {
          "ref": "658bfb1a-d56b-452e-a576-783f6add735d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "efa30951-3ed9-4d98-b152-cd86c666671e"
        },
        "item": {
          "id": "5361f202-0ef6-4874-b760-3e469275b6ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "538ca0c1-3166-4d2d-95b0-4db0eed20487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5d11ac-88d6-4337-abf3-a102b76bbddb",
        "cursor": {
          "ref": "b0de9851-b7c5-4e0c-adf3-90441d6a962b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26ffddaf-931c-483f-b9ca-9b42e1a3ee99"
        },
        "item": {
          "id": "ea5d11ac-88d6-4337-abf3-a102b76bbddb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca55f008-44d9-45bf-96d9-3194099af8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c32d71-f637-4a49-8084-e425b6edf9e3",
        "cursor": {
          "ref": "d7bca247-ce61-4fb5-b9d2-531093428dfd",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a644866b-1655-4c40-97ea-1ca1f51358b5"
        },
        "item": {
          "id": "62c32d71-f637-4a49-8084-e425b6edf9e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c1d93db-755b-4b6d-82e6-3ae7ceb63271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf39c5-9153-4e3c-a589-d42464a5035f",
        "cursor": {
          "ref": "550443e6-498f-4686-b3b7-1c8336078eb9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4e5d5c87-a75e-4b67-b31f-fea3a76b3f04"
        },
        "item": {
          "id": "0adf39c5-9153-4e3c-a589-d42464a5035f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6ee90e3-5311-451f-8dad-fd26968d48db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190bb41-20f1-4918-8ada-52c525fe1a58",
        "cursor": {
          "ref": "feb7898d-f593-42d5-8c70-4071d59dfd8e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fd6308a5-625b-4481-a2aa-a74011ca7db1"
        },
        "item": {
          "id": "5190bb41-20f1-4918-8ada-52c525fe1a58",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5c96c6b3-b960-46b8-95bb-7fadabc1a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f66cbbe-be70-4c84-b15f-86de32687dd8",
        "cursor": {
          "ref": "678ec9f3-6c1f-4c9d-a17b-2f04b980193c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "db045b15-f23b-45de-828a-b6bde2d02c0e"
        },
        "item": {
          "id": "0f66cbbe-be70-4c84-b15f-86de32687dd8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "568cc289-1602-4b31-a0c3-6a90766969f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58957b38-0b64-4a8f-aecc-ef49097fbd29",
        "cursor": {
          "ref": "941b7991-6b99-43fa-9f5b-b33aa1437750",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "33f34ab8-8da7-493d-a5ba-d406756a2155"
        },
        "item": {
          "id": "58957b38-0b64-4a8f-aecc-ef49097fbd29",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4235430c-47be-42a6-969c-33c23dcfe1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9657ed-0b7f-4fc1-8ef1-8a720b5433b0",
        "cursor": {
          "ref": "b54c9baf-8ea0-47cc-bdee-50ebfb668ce4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8e234e0d-3506-454c-bf4b-4015981fef60"
        },
        "item": {
          "id": "1f9657ed-0b7f-4fc1-8ef1-8a720b5433b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc62cf23-4380-42d9-bafd-e1c718db5db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f5c16d-4604-45cd-84ff-1c9308aecb23",
        "cursor": {
          "ref": "5a78759d-9bd3-4ee0-8d0b-ef780ea850fb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49b2a19b-4671-41fa-bef0-1c88625a1474"
        },
        "item": {
          "id": "d2f5c16d-4604-45cd-84ff-1c9308aecb23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0ff1f892-252e-4d84-b24f-68f7fc10f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbbc42f-43ee-4f67-a0f0-2d5d2de9e920",
        "cursor": {
          "ref": "df598172-8028-4df8-a07a-d09bddbb2648",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eb2bf4ee-99c8-4f69-a416-9ca0a2438159"
        },
        "item": {
          "id": "ddbbc42f-43ee-4f67-a0f0-2d5d2de9e920",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eaeab3ec-2bb0-477e-8a21-a06f0f9193ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73160609-6587-4f52-a53e-17ba5b419102",
        "cursor": {
          "ref": "7a37e92b-c1f9-42a1-9755-1473f9812108",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5adb43cb-942a-41c2-a6b5-943044c00b52"
        },
        "item": {
          "id": "73160609-6587-4f52-a53e-17ba5b419102",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "861cbc87-21c8-4bf0-8bc7-46325a0fd2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cccdee-fe06-41ac-bc6b-989465b96bed",
        "cursor": {
          "ref": "ee5845be-e423-4fad-b355-88785fedf410",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3108c2ff-7177-4d27-8993-11c1396aadff"
        },
        "item": {
          "id": "c1cccdee-fe06-41ac-bc6b-989465b96bed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc8696a5-6324-4f9b-87bd-b48326f6b697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c8adb0-9bfd-4c45-a98a-2be82ad3f512",
        "cursor": {
          "ref": "3f139619-44f3-4d33-99ec-7716cd1c81f3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "107f0f41-6f79-4641-8d82-d9a063bcd52b"
        },
        "item": {
          "id": "e3c8adb0-9bfd-4c45-a98a-2be82ad3f512",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb4bea51-4cf6-4a84-a5ed-7767e68b3c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90919fd6-c31c-4627-a38e-38050a6df616",
        "cursor": {
          "ref": "7b8e89d4-346a-4448-891b-003b8ecdb9b4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c331ea63-80d7-405d-82e6-beebc4540f41"
        },
        "item": {
          "id": "90919fd6-c31c-4627-a38e-38050a6df616",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "183cdfdd-2fed-4789-ad7e-a94b794f4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c984b3-8765-4fba-aaa7-6aed85b0b50f",
        "cursor": {
          "ref": "f5b1f268-0245-41ab-b61a-5de759ec9a41",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ef1dd733-1483-40df-9544-84c1f7a48b39"
        },
        "item": {
          "id": "16c984b3-8765-4fba-aaa7-6aed85b0b50f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f07a0d08-8e2a-479c-ae18-2dd305844d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b3fa92-92dd-4ab0-86db-01143577ba4b",
        "cursor": {
          "ref": "a858fc06-4f40-439d-84cb-ecc2a8a9d839",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8312b8a0-ff40-4c7d-b7d8-80fcff0f2f1c"
        },
        "item": {
          "id": "66b3fa92-92dd-4ab0-86db-01143577ba4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "91497c7e-b5c7-460d-a38d-ab33f2df90c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee3c240-4cb3-4fff-ba44-3ef31be273c1",
        "cursor": {
          "ref": "78bf1376-d584-4ca1-92e4-e1ec35b7fa29",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "256b12f2-99c8-49dc-a11a-ec3bb811dd05"
        },
        "item": {
          "id": "5ee3c240-4cb3-4fff-ba44-3ef31be273c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "76111032-d487-45f4-9fbd-2a084359a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49988a-e948-4891-8350-7c5131cf371e",
        "cursor": {
          "ref": "19813d82-ec8b-48e8-88a6-c419e5989c53",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "817ee375-20c2-4535-9eae-b5b47a215d65"
        },
        "item": {
          "id": "7e49988a-e948-4891-8350-7c5131cf371e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9744c6ac-bea8-4c92-99b8-d9fd1e250a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9b62e-2740-4e73-a028-0d0d717f0463",
        "cursor": {
          "ref": "57511abd-9fbc-488d-93ee-f132d4bbfe5a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c8f9c720-0fd4-42df-a3f8-57ae9aa29414"
        },
        "item": {
          "id": "1fa9b62e-2740-4e73-a028-0d0d717f0463",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "decdd821-4502-4473-9209-96304acf8dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15585cca-dc75-4976-9e0f-6dc1038909a5",
        "cursor": {
          "ref": "c8503410-a26a-496e-bc9c-24130a99c932",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56d32d06-2042-45a2-8b5c-f77a3576046f"
        },
        "item": {
          "id": "15585cca-dc75-4976-9e0f-6dc1038909a5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9e443caf-5255-43af-a6fb-099ac67513e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d0ffac-0e60-4cee-b53f-c9332de04941",
        "cursor": {
          "ref": "5c1c4570-8ca9-4e6e-aad4-890cf05ee75f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "76ee61e0-d572-4144-aef0-ec791750535b"
        },
        "item": {
          "id": "85d0ffac-0e60-4cee-b53f-c9332de04941",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "97bdfbbd-328e-48d0-b455-26b47e71474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63011881-4d43-45ae-af4c-6e06dc9ca4c3",
        "cursor": {
          "ref": "f79b7e04-fff6-44c0-a5e6-85323ea34fce",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e1952790-8ac5-46f2-b7aa-f30f18343e7b"
        },
        "item": {
          "id": "63011881-4d43-45ae-af4c-6e06dc9ca4c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ea318218-54e5-471d-bc7f-751ce1c99824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca19bda5-6367-4c64-8c03-efa9ff0081b7",
        "cursor": {
          "ref": "5f11c813-1e79-4441-bdf5-a05ddb6e90a2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9ddb794-8df8-4a21-8fe4-a5e9887b7961"
        },
        "item": {
          "id": "ca19bda5-6367-4c64-8c03-efa9ff0081b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01b2a393-5bc5-4167-9592-b4b983b0d105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f239a4d2-1eb0-4fdd-b7f4-c85e75308feb",
        "cursor": {
          "ref": "e8ba8e52-24e3-4223-9f14-bf3861f8a156",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b3464c7-e4b8-4d7c-bdbb-91797efc24e7"
        },
        "item": {
          "id": "f239a4d2-1eb0-4fdd-b7f4-c85e75308feb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44147be1-3484-46ef-b33c-ddeca8f7481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3d8186-0c6b-4d3d-a21d-bf9b80c761ff",
        "cursor": {
          "ref": "684c30fe-532c-4ad5-9ee0-47d5da79c84b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7fe81b5-c60a-4373-a2ef-6a27713cc70a"
        },
        "item": {
          "id": "1e3d8186-0c6b-4d3d-a21d-bf9b80c761ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee0f1134-7c74-43a8-a1e0-e05cd834b209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2349bd-1436-4e56-a7fc-be621d38a5f1",
        "cursor": {
          "ref": "c554748b-e239-48df-b3a4-eaa429925162",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "05fa8fc2-619a-4111-9a1e-e1c33d70f31e"
        },
        "item": {
          "id": "2d2349bd-1436-4e56-a7fc-be621d38a5f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1fe7a6af-080f-41c1-b9c3-a2dbfe93a0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe47dbd-f99f-4f40-8671-b698c2284be5",
        "cursor": {
          "ref": "e5cf2dc1-c935-4307-9e3c-5a9b6c44f9f3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c6234399-841a-4e1e-8338-ad4e7533d13a"
        },
        "item": {
          "id": "2fe47dbd-f99f-4f40-8671-b698c2284be5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "14cc0375-6b23-4496-a8df-e092eb9651cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c96c28-bda5-4293-8fd5-1d36560c605f",
        "cursor": {
          "ref": "7bedc1d2-f4cf-4ef5-8131-69944296f07c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e64ceaf9-50e8-4656-aed0-df5ea39e0339"
        },
        "item": {
          "id": "91c96c28-bda5-4293-8fd5-1d36560c605f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11b850b1-c2ba-44f4-9dbe-e7f1dbc793da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c18fb5-967f-4f00-ab37-8666f93e32ed",
        "cursor": {
          "ref": "9d98e0ea-1921-4d9f-a998-42ff6bc6a369",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8baadf54-d93c-4d9d-9c45-029a24a37705"
        },
        "item": {
          "id": "30c18fb5-967f-4f00-ab37-8666f93e32ed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "695cb9d9-b002-4074-9aba-6d52a983eb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af76c729-707c-4b43-afc2-eddd0aaaaa50",
        "cursor": {
          "ref": "4fa2ef4c-bf2b-4613-8d07-80e4fa81d268",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "003f8510-f35f-4fe6-9039-21a8198cc82d"
        },
        "item": {
          "id": "af76c729-707c-4b43-afc2-eddd0aaaaa50",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "885fa4d7-152d-4982-b6ff-40766b1a835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2df92-51f5-4585-b4d2-d4977c8671ee",
        "cursor": {
          "ref": "dded97d9-435e-49c5-83e1-1894768f4357",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6c672625-a1a9-48e7-a1b0-1edd6c4c7aa1"
        },
        "item": {
          "id": "06f2df92-51f5-4585-b4d2-d4977c8671ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c87c797-e0da-446e-8f6e-658c8f91260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f585c01-a7df-471b-a57e-b30d5ac49eff",
        "cursor": {
          "ref": "4b29d518-0215-4486-a157-2fe79b0d3ae5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b13f32d7-7875-4fdc-bd04-4ec3275754cb"
        },
        "item": {
          "id": "6f585c01-a7df-471b-a57e-b30d5ac49eff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "00f42254-fa0e-4fa8-be08-11244fcaaffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70498fe-9718-4ff2-963e-607e389961ab",
        "cursor": {
          "ref": "75bd3485-a262-4409-88ee-50430bc472d2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "13cc05c8-3248-4012-9b4c-a8078f445682"
        },
        "item": {
          "id": "f70498fe-9718-4ff2-963e-607e389961ab",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "645e2807-a401-4dbc-b049-208068398626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87d9432-754f-4e31-a3b3-42fbbc0bb6b2",
        "cursor": {
          "ref": "4bafaaac-60a9-42a5-8d35-cd270b4ae94f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d8100ceb-803d-4824-8542-b0bf71f399cb"
        },
        "item": {
          "id": "a87d9432-754f-4e31-a3b3-42fbbc0bb6b2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "85178628-32c3-4490-8e7e-f217a377fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6102d74-d82b-43b4-82fc-0bf9c8727034",
        "cursor": {
          "ref": "3237e68f-2f85-45e3-96d6-0867e72d2b6a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bf336907-6700-4807-90ba-409159e1c2b4"
        },
        "item": {
          "id": "e6102d74-d82b-43b4-82fc-0bf9c8727034",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b27d5884-4873-4991-a04b-8b82dc4f256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24526242-0c63-4bf5-80e7-b80a9cf525bb",
        "cursor": {
          "ref": "1e072211-3678-4b12-a486-24f0a398cdee",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "595b69a3-1b1d-4c5e-b43a-7b882707b2fa"
        },
        "item": {
          "id": "24526242-0c63-4bf5-80e7-b80a9cf525bb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a8c35cb5-0470-4172-88cd-3a3d77c7b29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a552660-d483-473e-beef-87ef37e4bdab",
        "cursor": {
          "ref": "c41a0393-1ee3-4841-9eba-b3990cd79b01",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f14dabdf-1663-4f28-a13c-6641bd0c9058"
        },
        "item": {
          "id": "4a552660-d483-473e-beef-87ef37e4bdab",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8c712c5f-378e-4832-a09e-370e9b74ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d0a81-8be8-461a-bf24-0356aa41c97e",
        "cursor": {
          "ref": "4665cb21-9432-44d6-bdbf-4c4ec8bf5868",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bcf88821-da7c-47d1-b247-e9f9e214bbc6"
        },
        "item": {
          "id": "b28d0a81-8be8-461a-bf24-0356aa41c97e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa5a55ec-f4a9-4f56-8fd6-b844a36323fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb2bb92-7e47-4484-9d44-dfdfb3326807",
        "cursor": {
          "ref": "33600400-d141-41e9-918f-fe879690e47b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "64c67e58-8706-48d0-828c-55ad876802cb"
        },
        "item": {
          "id": "1fb2bb92-7e47-4484-9d44-dfdfb3326807",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "670827dc-5019-40a4-a872-f167d572139e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ab8940-2a8b-4ca7-830b-00e106089e4f",
        "cursor": {
          "ref": "e73c14b5-fc68-4443-9c6b-5ddfb2ce7b2c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "89db1d54-64d6-492c-8552-a0df938ddc89"
        },
        "item": {
          "id": "72ab8940-2a8b-4ca7-830b-00e106089e4f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be05fd52-528b-4135-ba1d-1a291781d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a9818-be1a-4f5a-9252-9475b5c983f5",
        "cursor": {
          "ref": "0ce41e55-e16e-4555-8188-bf0e63e6541c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5790381-d32d-4a6f-b948-189fd54e25fa"
        },
        "item": {
          "id": "276a9818-be1a-4f5a-9252-9475b5c983f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76796d72-80d0-41fe-ac4f-efdc58f77dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d4fae-42a4-4485-9654-27c1cc369719",
        "cursor": {
          "ref": "84315992-46ad-4b1a-82b2-e39ba620e3f5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5b75f177-220d-450e-8b89-69bf25317ea7"
        },
        "item": {
          "id": "358d4fae-42a4-4485-9654-27c1cc369719",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6bb30bdb-8ca5-4800-a71d-01c9f9d267c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85776c49-598e-459d-8d7a-fca268a3a2bf",
        "cursor": {
          "ref": "9e15c926-5535-4a04-8dc3-d876fa847d3d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f5d10025-11e6-4fe6-a74a-6ecd7fc9480a"
        },
        "item": {
          "id": "85776c49-598e-459d-8d7a-fca268a3a2bf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f5722a1b-316d-4747-a116-bb560152d045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0b1480-b494-4943-ab7b-67b5a5b4dd95",
        "cursor": {
          "ref": "9f796c85-de43-4a10-b29d-97232ffdcaa4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "188a93b8-d5ea-4447-9ef3-fcc5ddf03536"
        },
        "item": {
          "id": "1f0b1480-b494-4943-ab7b-67b5a5b4dd95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6dd13037-a1d4-4928-af1f-958fdbba66fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43ce303-0527-4719-8a9e-a52648c709ce",
        "cursor": {
          "ref": "369b1131-7d23-46e7-8b37-5c1b474aceea",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b5f86003-138b-48f2-ba56-00a3765f9c30"
        },
        "item": {
          "id": "a43ce303-0527-4719-8a9e-a52648c709ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8a6a7a55-eff9-4971-97d1-d9c395bc5801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe618ae-c53a-4d78-bf20-d7e1daceba64",
        "cursor": {
          "ref": "b865452f-9869-4c68-b810-0824f5a8348a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fb012548-d47f-4bfc-94a4-fb687dc8419e"
        },
        "item": {
          "id": "7fe618ae-c53a-4d78-bf20-d7e1daceba64",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ba77b73-dec4-464d-8da9-a8491002bff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10b27c0-68b4-4619-af61-c1c74d2903b4",
        "cursor": {
          "ref": "e84c1d49-f5a2-4f57-944b-b786ec255312",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "401c1000-90c3-42ed-a941-cdae60a21ce9"
        },
        "item": {
          "id": "a10b27c0-68b4-4619-af61-c1c74d2903b4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63171e41-6a11-4803-b726-ad230e0b03e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675e11a2-7fc8-43c1-9b4c-69acb81f0500",
        "cursor": {
          "ref": "91fdb542-9f81-449b-8999-a7fe975d6b9e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09bca02c-f088-47e0-a572-d572dc03add2"
        },
        "item": {
          "id": "675e11a2-7fc8-43c1-9b4c-69acb81f0500",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d376e8f1-3634-46a4-b700-93a7d72462a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b1feaa-3543-4cb9-8e60-e389a790547e",
        "cursor": {
          "ref": "3d871c78-30ad-4301-840a-247d6713a483",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c0900673-4dff-4e22-b2b8-5ed326331f10"
        },
        "item": {
          "id": "68b1feaa-3543-4cb9-8e60-e389a790547e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f2c4669d-e74f-4a6a-8d28-44eb6e2a8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd0d303-cbc1-43b9-b6e4-7a582a4548f2",
        "cursor": {
          "ref": "073a9551-46bc-44ac-93b7-2bd6eea02707",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5c5bd887-7386-4840-a31b-0257569d6325"
        },
        "item": {
          "id": "bbd0d303-cbc1-43b9-b6e4-7a582a4548f2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d95bab76-895d-4989-adfa-403998753c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396f19ad-5504-4716-aae2-c27fd70307d7",
        "cursor": {
          "ref": "c3717906-024c-4e80-9a82-5c985a991cb2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0ddb873-92e4-420c-bfb1-c4fe60321d9b"
        },
        "item": {
          "id": "396f19ad-5504-4716-aae2-c27fd70307d7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "50132cc1-0b73-4919-9a64-75f0648b8249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87505ad1-6797-476c-89a8-504e1216f356",
        "cursor": {
          "ref": "96b4e3ab-d9c8-4e44-8049-f5b1aa5ce639",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b613ba15-8589-4d27-9e37-8f9d79cf1586"
        },
        "item": {
          "id": "87505ad1-6797-476c-89a8-504e1216f356",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d65475bb-a1f3-453c-8ff6-e852ccd99845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc66df7f-f9cf-4045-b4f9-d9881daa36c3",
        "cursor": {
          "ref": "d2430750-cfdc-4637-a1dc-5d0758f92a89",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ab477336-bfe9-4b34-b669-9fac289e85e7"
        },
        "item": {
          "id": "cc66df7f-f9cf-4045-b4f9-d9881daa36c3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5c17d17e-4c07-4283-8205-6e9557f22df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83a9198-0fb9-4bb9-8556-53d03bd85337",
        "cursor": {
          "ref": "6177a730-60f2-4514-b151-755cfed2a869",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0831f388-1aa1-4573-abf3-69850d61366e"
        },
        "item": {
          "id": "c83a9198-0fb9-4bb9-8556-53d03bd85337",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea8a80ac-f410-4993-b041-57e25f50d364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545e8c39-e935-4afc-8c68-696f1875c9f3",
        "cursor": {
          "ref": "6df5dcdd-22c0-4d9d-b314-7d24ff695019",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c05797be-650c-4286-932b-2ad05c931c1e"
        },
        "item": {
          "id": "545e8c39-e935-4afc-8c68-696f1875c9f3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a1606b8f-e0e6-42a4-9c75-c2302b3df28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8513997-7923-45a2-9097-12e510b411c1",
        "cursor": {
          "ref": "a81d5d5f-3e9c-4801-835a-bc6849e012bb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c203f238-65b8-4e93-9a95-bfb7ddebaf87"
        },
        "item": {
          "id": "c8513997-7923-45a2-9097-12e510b411c1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "758d8853-c5d3-47bf-8c6c-bf4580e2ad7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3bbf21-9eba-46a3-869f-c842592de7ec",
        "cursor": {
          "ref": "2fd0a4d1-9ed3-434e-bf0e-58d86567a884",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a6b7b89f-8a99-4780-8e2c-f4c52995e9ae"
        },
        "item": {
          "id": "4b3bbf21-9eba-46a3-869f-c842592de7ec",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "adee9812-ad51-461c-a8ac-200f76b78b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c02521b-16dc-44b8-aa4e-f5782cb206fe",
        "cursor": {
          "ref": "0b24bb51-8a25-4a06-a3e2-6dd301da9057",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8eff9926-fce1-4262-a676-2843241f7b48"
        },
        "item": {
          "id": "4c02521b-16dc-44b8-aa4e-f5782cb206fe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1687a3ad-b357-4084-ad22-36257e2417ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0f50c-f37b-4967-be48-698385fa8e27",
        "cursor": {
          "ref": "a2cfa736-f3a4-4288-8ae4-ff13e05f2167",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "170b21f3-e3df-4de8-b264-bd75e00e307a"
        },
        "item": {
          "id": "fed0f50c-f37b-4967-be48-698385fa8e27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4aa4bf75-2537-48f7-bcc4-a0373aa49e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce8819-d159-430c-a01b-b856a2d56c6f",
        "cursor": {
          "ref": "1386df8c-40d5-4923-bdd2-e38bf8889482",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "abefa2c4-6b2a-4dcc-9176-7771be854c2f"
        },
        "item": {
          "id": "56ce8819-d159-430c-a01b-b856a2d56c6f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "19f72c3d-48cb-4883-8cf4-b6d242c2d229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7607544-fe36-4551-aee1-066b33ef47a0",
        "cursor": {
          "ref": "476ce10e-aead-4993-aad4-86df14c3f3a2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a6f16f9e-7bab-472b-ba6d-1979a033c2a5"
        },
        "item": {
          "id": "f7607544-fe36-4551-aee1-066b33ef47a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "79275209-9e5d-42cc-a84e-1c403896145a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e6dc05-1a0d-44fd-88e6-2d39c106824f",
        "cursor": {
          "ref": "65a42398-3558-494b-a862-417d99ed8144",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a68687b-6057-415c-b23e-f543b9e2cd1c"
        },
        "item": {
          "id": "67e6dc05-1a0d-44fd-88e6-2d39c106824f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7d2c411a-c94e-45e1-982d-f57f8a25c177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac35dae-08eb-4c4e-a5da-a68042e049a6",
        "cursor": {
          "ref": "14b95be3-06d7-4d31-9077-b99eb0de74be",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "46915b64-7f47-4936-b094-9d3c9481e004"
        },
        "item": {
          "id": "3ac35dae-08eb-4c4e-a5da-a68042e049a6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d0c18089-4e67-450e-8f91-0595fa046dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507fdb3-8908-43ea-8044-edd70cfe3362",
        "cursor": {
          "ref": "452d91ea-4040-4902-8164-86964a09f875",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "20477d72-8939-4505-a283-8a4b7c323c7e"
        },
        "item": {
          "id": "e507fdb3-8908-43ea-8044-edd70cfe3362",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "04cbe193-494f-4840-9dff-444b31e8785e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4ed3f6-f566-4b6d-a2fe-698f3d3242d3",
        "cursor": {
          "ref": "3d279730-deb6-47c6-b714-9a3a64ac227e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a4193ebb-d3a0-4760-8e2f-412b9ce7c880"
        },
        "item": {
          "id": "9a4ed3f6-f566-4b6d-a2fe-698f3d3242d3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "094e155a-d4ac-4385-893c-dffcc839862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed90301-7ba6-46a1-a0a6-d5fa0cb4b93d",
        "cursor": {
          "ref": "1e21972f-81d9-4390-86b0-98775113dea2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0bbe0d6c-582e-46d1-b499-2b9747861270"
        },
        "item": {
          "id": "1ed90301-7ba6-46a1-a0a6-d5fa0cb4b93d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0a7f343a-25ab-4539-a879-7d8a1b8c781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734956d4-f9e0-4075-9ad1-d2eabc0c04a3",
        "cursor": {
          "ref": "c0b62d6c-c30e-483b-8f64-c5d94a946995",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e95f9acd-2ce6-4a3f-ae99-e55ec01c0a86"
        },
        "item": {
          "id": "734956d4-f9e0-4075-9ad1-d2eabc0c04a3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0fb44314-1069-40c8-94fa-3805d5757c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7551e668-e8c4-4662-b916-5fa41214f84b",
        "cursor": {
          "ref": "a2afdc0b-d964-4e38-9d98-44bb80fdb1e1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dc61a964-e48a-45c2-92fc-34a32d95b962"
        },
        "item": {
          "id": "7551e668-e8c4-4662-b916-5fa41214f84b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d82ad74a-e945-4464-adbf-fb150c6f8864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0402f483-2290-484a-bda1-b3b34944a673",
        "cursor": {
          "ref": "d345c161-4ed1-4936-83be-2f6d43ac141d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6ad348e6-5a7f-4411-9401-97fd582be41f"
        },
        "item": {
          "id": "0402f483-2290-484a-bda1-b3b34944a673",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "75f5d193-aaad-4f29-a664-3ec9e500abe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d152c46c-4abb-417a-93e3-a824e9af56e6",
        "cursor": {
          "ref": "16831776-437f-4824-b95f-d367fd7097c6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c22d8a81-78ec-4e9a-a6aa-a0f2b6b28016"
        },
        "item": {
          "id": "d152c46c-4abb-417a-93e3-a824e9af56e6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ead5a08-f62c-4b06-96de-c1f1b48d3bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a8534f-f70d-422e-a152-589979cad300",
        "cursor": {
          "ref": "c3ee5564-5a98-4860-8828-516448f93e11",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d94bc04a-8073-47f6-bd57-5068e42ee885"
        },
        "item": {
          "id": "b6a8534f-f70d-422e-a152-589979cad300",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7158b973-1aa9-4ae0-a486-5ebaa6ced322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c8b216-17e3-48ee-aeb1-23f7abfa0656",
        "cursor": {
          "ref": "1cb98564-41e6-4c1f-a386-63edf0d525d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2ef3ded-52f8-44ee-8551-e49a258476f3"
        },
        "item": {
          "id": "51c8b216-17e3-48ee-aeb1-23f7abfa0656",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "721d0918-f49e-4cdf-b4f9-ad162ff96b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c61c7-faf0-4916-a4d2-35f336cd40b3",
        "cursor": {
          "ref": "32f18ab1-6130-44cf-b64a-719c96a94d50",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "919fc361-1e4d-45d6-92bf-e8a6b10622cf"
        },
        "item": {
          "id": "1c1c61c7-faf0-4916-a4d2-35f336cd40b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aac8c81e-5b8b-4f48-902d-ecb0c3c96de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ad9587-4d9e-4969-a3d2-a4a995528e22",
        "cursor": {
          "ref": "0830d1fe-a861-47fa-9083-baa21ca92991",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9aba3b0a-4a16-498b-8451-33a64b8cdcb6"
        },
        "item": {
          "id": "e1ad9587-4d9e-4969-a3d2-a4a995528e22",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "73a9f47f-22eb-4447-8af9-4ff7f28076f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3970efbf-8d29-4018-a19f-429e7f6d1b0d",
        "cursor": {
          "ref": "231dc0f3-57f1-41f8-94dc-b33be347696e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1729df56-8b42-47f8-8aa3-13ad187fd31f"
        },
        "item": {
          "id": "3970efbf-8d29-4018-a19f-429e7f6d1b0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fc4b37b6-d144-4d88-a4dc-292f783c7425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e72a3-ef3c-46dd-8dea-3b639aa395fd",
        "cursor": {
          "ref": "7cd5aa5c-e795-4067-a45c-2aa57f6cef1b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5609e448-e2f6-4767-abf4-5c43ae09123c"
        },
        "item": {
          "id": "817e72a3-ef3c-46dd-8dea-3b639aa395fd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5e364c35-3d66-49ec-83e6-9a881fa14a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630cb602-1dec-4353-9bd5-92795e22218b",
        "cursor": {
          "ref": "ad480be9-1736-4dfa-819e-8fa226bc38b3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70397f81-a8de-4fca-9c3e-23de50876f9d"
        },
        "item": {
          "id": "630cb602-1dec-4353-9bd5-92795e22218b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f41e2556-6e0d-4124-9271-397de0db451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2baed5-ba53-4baa-8d3d-0978225ec26b",
        "cursor": {
          "ref": "62d132fd-6cc7-463e-a125-5c2b17101110",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d1858e14-ed63-42ff-96d0-f0a2476e216f"
        },
        "item": {
          "id": "ed2baed5-ba53-4baa-8d3d-0978225ec26b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b180326-3dde-4338-8d88-447baabc3b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ddfa1d-c46e-4956-a184-81401d399a97",
        "cursor": {
          "ref": "1723b0e3-4d0b-4ce6-9c4f-6cba6cef01cd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "91e1c9eb-cd89-4721-be17-1eefc3f5aeb8"
        },
        "item": {
          "id": "97ddfa1d-c46e-4956-a184-81401d399a97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b615e974-aa52-4b2c-a149-df8e6083e04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc327e0-013e-482d-bebf-a185e30fa199",
        "cursor": {
          "ref": "24a60ed7-8181-49b7-9b8e-3685aaef32fa",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7396b93e-171f-4087-8eb3-48b114f90592"
        },
        "item": {
          "id": "7fc327e0-013e-482d-bebf-a185e30fa199",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c5c68aed-22f6-4b52-b674-56dba42c8f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff10055-d402-4283-ae4d-ab9d59e28d6f",
        "cursor": {
          "ref": "311344a0-287a-4e37-9f6e-8886294a0d2f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8947cdf3-3c57-40fe-bb3c-d4e8ceb699b7"
        },
        "item": {
          "id": "5ff10055-d402-4283-ae4d-ab9d59e28d6f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dd8b5f06-7760-4947-8464-ae526577867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c09fac-cb79-4e49-a5d9-c7edc3d1e4dd",
        "cursor": {
          "ref": "074e1ad8-58cd-4aa3-868a-a2d29c1dd672",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "265183e5-a6f1-482d-a3ab-cf43cd5586e5"
        },
        "item": {
          "id": "f0c09fac-cb79-4e49-a5d9-c7edc3d1e4dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3bcbfa3-b6fb-48d0-91d4-01a6e6800532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d0b678-f5d5-4b2d-a58b-a9eb02807beb",
        "cursor": {
          "ref": "d8134895-7ede-4167-afab-0b0111a3bc57",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "49f3fb42-0d23-4a76-9205-578f33012afa"
        },
        "item": {
          "id": "50d0b678-f5d5-4b2d-a58b-a9eb02807beb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2fe196f2-d107-41cc-b4a0-9b5a92dcdbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e3c98-4b83-4ccb-ac00-b8ebb983cafd",
        "cursor": {
          "ref": "4cd0e821-1c0f-4ab6-b26f-f084b62560ea",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6aa4a47e-be61-4a3a-a463-d58af21999ab"
        },
        "item": {
          "id": "630e3c98-4b83-4ccb-ac00-b8ebb983cafd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7845901d-a2a0-4179-bbd4-55863e1b6fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64930528-37ee-460e-98f6-5953ed1de606",
        "cursor": {
          "ref": "69021d07-7d3d-4a3f-b248-c6888f365b75",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "34d6304d-285b-4e92-afae-55ce6b97d054"
        },
        "item": {
          "id": "64930528-37ee-460e-98f6-5953ed1de606",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3137d790-2128-4fe1-9be9-94b663a09338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3458bb-028b-44a6-a984-fbb780730548",
        "cursor": {
          "ref": "d4def418-f513-4c56-99f0-885deb84a987",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9f09ee0-1007-448a-943f-cd9db390a3e7"
        },
        "item": {
          "id": "8e3458bb-028b-44a6-a984-fbb780730548",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "354eaee4-d0ca-4343-a3b6-a61a4529582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8ea014-5b01-4799-b4c8-76a3106da467",
        "cursor": {
          "ref": "5d9061f8-a270-4490-b0d1-f251c87e5d1c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8df9b53e-bd9c-440b-9d34-840d8faaa86a"
        },
        "item": {
          "id": "5d8ea014-5b01-4799-b4c8-76a3106da467",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b1b99d38-3973-4ba8-a671-6f9639b1b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad531f3e-9b67-4030-b6e5-72d3084375dd",
        "cursor": {
          "ref": "d81af0a3-e37d-41a2-bf23-b3d034a5297d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1cc57fb5-2b44-4717-91ad-2f1c69aa00ee"
        },
        "item": {
          "id": "ad531f3e-9b67-4030-b6e5-72d3084375dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "48929d20-51b8-4a53-9fc1-b885fe41a099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e51ce9-ee1a-4045-9f53-26849e3918d1",
        "cursor": {
          "ref": "62ee8927-c70d-4c94-8b0f-feacbfebab85",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b3a6f26-5a28-4f6e-80ad-f7ea32d01c6d"
        },
        "item": {
          "id": "74e51ce9-ee1a-4045-9f53-26849e3918d1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "db453a38-73e3-4ccd-9608-fddf0d9cfaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bedc176-6f78-4b01-bd4b-b3999e6c6a83",
        "cursor": {
          "ref": "00de1ad6-cb0a-4d3b-8afa-db31eeeb166a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "26b671fd-bb57-451b-bc30-43a36f5bce62"
        },
        "item": {
          "id": "9bedc176-6f78-4b01-bd4b-b3999e6c6a83",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "732c4375-8948-4f83-9980-77b757eda8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37700b0-5290-45b7-990f-35a22c8b6a71",
        "cursor": {
          "ref": "acd61309-b8d9-43fa-bda4-e56995b2dfbd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "67c69cc1-89af-4db5-b01d-5d5ee4daeb40"
        },
        "item": {
          "id": "a37700b0-5290-45b7-990f-35a22c8b6a71",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a0ccabb-54de-4a80-8a09-9a8f2744af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3040d1e-1e6b-41cd-9292-6b22fe5106e1",
        "cursor": {
          "ref": "8c4d8f74-bc38-4c2c-bb1d-00b8bc1acb71",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d8695d10-af05-44d0-8e8a-b08075f5a430"
        },
        "item": {
          "id": "e3040d1e-1e6b-41cd-9292-6b22fe5106e1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d0bd9ff-91e9-418c-8f21-b650a47fb89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8095e97c-e5d4-4b7b-97d9-107fa0cdfd75",
        "cursor": {
          "ref": "8b52f817-3664-4869-b2c7-52965b8466aa",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c2814946-1b7e-4eb8-91fa-e1ca70a79768"
        },
        "item": {
          "id": "8095e97c-e5d4-4b7b-97d9-107fa0cdfd75",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "422919aa-a426-4e87-9a10-83edbce10ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f77a1f-8599-470b-ac9f-1261f36d06c8",
        "cursor": {
          "ref": "ead1136b-e916-4c71-b2fa-b1bd5ed1b77d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "24881f43-c5b7-4fec-805d-cb425f7f353b"
        },
        "item": {
          "id": "96f77a1f-8599-470b-ac9f-1261f36d06c8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ae5a1633-ecf6-4158-9c06-26bc45abdfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b293a9-d7af-47f9-ae7d-21187fc800c9",
        "cursor": {
          "ref": "5a247355-5f4b-4fc3-9c7e-77d9de8c621b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "44de4ca4-c6ec-49a5-a52b-7ad78a19f33a"
        },
        "item": {
          "id": "78b293a9-d7af-47f9-ae7d-21187fc800c9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3c06069e-14b7-44de-a0e2-977677a481b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05d0ac-de80-4b09-a3b7-78d93b910cc0",
        "cursor": {
          "ref": "941b386e-b93f-4393-a409-eed029f17034",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bce3b874-e27f-4b02-bb5e-aa10c2225355"
        },
        "item": {
          "id": "df05d0ac-de80-4b09-a3b7-78d93b910cc0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "77998c48-6dbb-41c0-8de9-fcbe59a56df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf1b365-fd4c-4e3e-be08-471661fb485b",
        "cursor": {
          "ref": "3023c4a1-507a-4e79-8a91-c774399d791c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad06697c-2f66-46d2-8c66-34c32f4afbe3"
        },
        "item": {
          "id": "bcf1b365-fd4c-4e3e-be08-471661fb485b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3ba2a6db-bcc0-4940-9017-09c93b1858c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed2e072-de08-479f-9b9e-4bb0b83ab525",
        "cursor": {
          "ref": "0f6ce353-aa37-48d7-9601-ebf767ff2046",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "50c28e3d-204e-4a92-8262-ddcd8f3d706f"
        },
        "item": {
          "id": "4ed2e072-de08-479f-9b9e-4bb0b83ab525",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "773aa9c2-8085-409d-9cfc-127b9f34f8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3b1057-85b0-4145-915f-4173fde84947",
        "cursor": {
          "ref": "239849e5-e0cb-41ba-9114-4b3e6c53877c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c76a5b9-6661-4a3f-b67d-bd13991792ba"
        },
        "item": {
          "id": "6d3b1057-85b0-4145-915f-4173fde84947",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "19514089-050a-427f-88b6-6585b63545e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abea593-5caf-458a-8fb2-9a0f1f9e765b",
        "cursor": {
          "ref": "385859e6-5df5-4e4c-9c1a-9598cae95c80",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f46dabc7-bbee-422c-8332-23690bbf67b5"
        },
        "item": {
          "id": "0abea593-5caf-458a-8fb2-9a0f1f9e765b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bed1e4a6-0051-4834-8236-7902f8f40aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c08f14-6b65-4395-ac13-aca9ddf9a735",
        "cursor": {
          "ref": "c93c0f49-48c3-42b4-bbc9-061da4e2914e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71ee99ce-4f2d-4b69-a08e-0db060743afb"
        },
        "item": {
          "id": "e3c08f14-6b65-4395-ac13-aca9ddf9a735",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5b3aabe3-d6fc-438c-837a-94fe0e724c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391b05b-bf26-402e-aa30-c3f070f756ba",
        "cursor": {
          "ref": "eac6d0f4-08f1-4c76-ba6a-234aab62bf01",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eee76e00-4c14-4d8e-a1a6-efd79dc886c4"
        },
        "item": {
          "id": "7391b05b-bf26-402e-aa30-c3f070f756ba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "79ba31ca-b83b-411e-b4b8-2c695463ce78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bce961e-00e2-42e4-9cd5-9b73c972fd20",
        "cursor": {
          "ref": "ee03af12-e956-47c4-892b-e7342b9583ef",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b8c72afb-292e-4625-9de6-7fc310a22a50"
        },
        "item": {
          "id": "6bce961e-00e2-42e4-9cd5-9b73c972fd20",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "97dd7890-5680-45c7-8c3e-18a80b79e4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fa0d0c-c7d1-4d78-b636-f36d42e824ff",
        "cursor": {
          "ref": "e856f9d0-b813-49c2-aa5b-58775b6e97f1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35c44f91-c0e1-4f37-90b9-92608ce6ed6e"
        },
        "item": {
          "id": "37fa0d0c-c7d1-4d78-b636-f36d42e824ff",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "df73bc07-9f45-4e35-b1a4-a85acfd10022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56932a5-322d-4609-b6ed-a27641604e4f",
        "cursor": {
          "ref": "4d13c0bf-ec75-4ace-9a13-ac2afc3414d9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "338fb304-ef43-44e5-8857-e63f0cd44fcf"
        },
        "item": {
          "id": "b56932a5-322d-4609-b6ed-a27641604e4f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "af2405cd-cc52-47df-bf57-55f356c254ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9138e023-f31e-49d3-a047-70c3bfea31f2",
        "cursor": {
          "ref": "f5800ccb-147f-4900-b971-864dfd46c66f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "92765ae9-761e-4278-9096-74fcccf307a5"
        },
        "item": {
          "id": "9138e023-f31e-49d3-a047-70c3bfea31f2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "22ca8bfa-bc6a-435e-bd69-e5eb1cf2b99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f400102-d63d-4484-910f-e82854afc954",
        "cursor": {
          "ref": "4ba94da2-31c4-45b4-bcd3-43a3c23d5782",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "30ba2d19-4d0d-4bcb-a0ec-5255dab6b6de"
        },
        "item": {
          "id": "7f400102-d63d-4484-910f-e82854afc954",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c45a54dc-0f5f-453b-b37b-23e0811e2508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb6f3f0-1f29-493f-9cb5-82854f66cd87",
        "cursor": {
          "ref": "582d53c0-904c-4fd8-ad32-172e363b7423",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b99aab65-2586-4d1f-9112-138c05255c33"
        },
        "item": {
          "id": "0bb6f3f0-1f29-493f-9cb5-82854f66cd87",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0dfe71bb-de06-4983-93a8-c125eaf9afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532529f6-d1d0-4d45-81c7-6ea929f213ce",
        "cursor": {
          "ref": "7c0d6afa-83ef-4578-9c5c-bbf0c8067273",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cfefdd55-5f3a-4c72-8c24-dc8c12ebb548"
        },
        "item": {
          "id": "532529f6-d1d0-4d45-81c7-6ea929f213ce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "677b5a6f-4282-4259-836a-f18611a85d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99608c80-78a3-46c7-a44f-3b3ffbec5884",
        "cursor": {
          "ref": "fc1c4f47-6e24-49da-a5bd-ebe9b495ce03",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb453ff2-c770-4b12-b2c2-055fa9fd38ea"
        },
        "item": {
          "id": "99608c80-78a3-46c7-a44f-3b3ffbec5884",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ce01d72f-ed0d-46c9-848c-e30342ad46d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50b3ffa-a3bf-441a-9ffe-d3a9ae377851",
        "cursor": {
          "ref": "ce00e1b2-65d9-4207-8d68-bf8e65ccb9f4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "105302e4-9dda-46ef-9efb-e2c2e9d2f011"
        },
        "item": {
          "id": "f50b3ffa-a3bf-441a-9ffe-d3a9ae377851",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d5cc2892-db8a-441b-a26b-c95f1395111b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d48303-ba92-4d78-a59b-9710afdc6617",
        "cursor": {
          "ref": "40e535d0-7327-43e1-bfdb-52a81d1037a0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70a549fa-68cd-4652-91ec-e5726c993353"
        },
        "item": {
          "id": "b6d48303-ba92-4d78-a59b-9710afdc6617",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e24c23c6-eb81-43f4-8ec3-cf7e784d8a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1e579f-71ef-42d1-9345-01e1299c811b",
        "cursor": {
          "ref": "716df06b-fdc8-4e09-891a-779e0f710213",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6b782a89-ef13-4d8b-822d-896178d4499e"
        },
        "item": {
          "id": "3e1e579f-71ef-42d1-9345-01e1299c811b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ad6da64a-1554-4d7d-988a-af7779ca7424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880fe19f-65c1-427d-968b-400b2de84f93",
        "cursor": {
          "ref": "86b35724-fe36-43c4-8693-b63465a191cd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5be5e594-e328-4e8b-bab5-67e3b9e976ef"
        },
        "item": {
          "id": "880fe19f-65c1-427d-968b-400b2de84f93",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a7a46d7c-c67b-415e-ae2b-e2cc6b8afbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c6578a-efeb-411a-b2bf-ff775048c858",
        "cursor": {
          "ref": "b5dc243f-0e0c-4358-9630-fbdaadce2992",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5219c264-fc78-4be9-845e-3ad7c239a761"
        },
        "item": {
          "id": "48c6578a-efeb-411a-b2bf-ff775048c858",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f492890c-3d66-4021-89f2-83d1a8c5e80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e01010-61ae-4e78-aab5-fd4b70cdc501",
        "cursor": {
          "ref": "f352ef92-7d1b-4ce5-afdc-240506a998bb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fff0fac1-0ba4-4f37-891e-1e9893db1641"
        },
        "item": {
          "id": "29e01010-61ae-4e78-aab5-fd4b70cdc501",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "45218617-0cf3-4d30-8b59-75e9db89edea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdcd44a-ef6f-4532-9987-0113174c8062",
        "cursor": {
          "ref": "d823a423-5dcb-4412-a5cd-df8db8a57461",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d6daeedc-57eb-4011-aae3-e6bb140e4df8"
        },
        "item": {
          "id": "0fdcd44a-ef6f-4532-9987-0113174c8062",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cc6a3f1c-7f75-439d-9aa0-d220de371188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa6e4e-2a81-42ab-9d07-4bef1139bd57",
        "cursor": {
          "ref": "a5d39b2c-22d4-4ba9-a2e8-c74c93fa3d0e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cb768e3f-8cd4-4e99-be37-7e4b745c01b7"
        },
        "item": {
          "id": "a0fa6e4e-2a81-42ab-9d07-4bef1139bd57",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d07d3ee5-088f-4169-9f30-63752b7609e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20f4505-0b78-4c2c-9300-4adc5db99762",
        "cursor": {
          "ref": "ce8f3d23-0001-41ed-82aa-c38da181b6f8",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5611f2c-03ed-461a-bd91-94cecc4499b8"
        },
        "item": {
          "id": "f20f4505-0b78-4c2c-9300-4adc5db99762",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c756971f-6c40-4714-be48-8546984d941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110bd587-d2c5-4157-a4ad-12cea658f4be",
        "cursor": {
          "ref": "412d69b7-5dfb-4b32-a4e1-a5f3edafec4b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b4a9c055-77a4-429e-95d2-2a3aa6b32c02"
        },
        "item": {
          "id": "110bd587-d2c5-4157-a4ad-12cea658f4be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b098910-8ac4-436b-89e8-1de197cca499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b673bb0-ad96-40e9-acf9-16f5ed816440",
        "cursor": {
          "ref": "6b30a14d-2f7c-4cba-946c-9d8b89751740",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0a357295-767a-4539-91d6-aac3e89bcd29"
        },
        "item": {
          "id": "2b673bb0-ad96-40e9-acf9-16f5ed816440",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "644186c4-33cb-4d21-94a4-b719559add13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b74b0d6-d949-44a7-aa7c-bd1ebaa969b4",
        "cursor": {
          "ref": "2f0936c9-1150-4b25-af33-843ec452b8f4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d823c39-b554-4a9e-8801-8e252a7d486d"
        },
        "item": {
          "id": "4b74b0d6-d949-44a7-aa7c-bd1ebaa969b4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "06c78f94-58a4-4b50-b6c8-c5f093229b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92226ef3-c43b-4f8e-9f38-216cc6acb6f3",
        "cursor": {
          "ref": "ae6a4f1e-6a9a-45c8-886d-fdb36300da2c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ee63c5f4-5cf9-4fd3-a5e7-196a09b8cb22"
        },
        "item": {
          "id": "92226ef3-c43b-4f8e-9f38-216cc6acb6f3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8facacfa-ffdd-4979-b754-74c4bfb0f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6125301d-5e45-4dee-833c-7e3d8dd12660",
        "cursor": {
          "ref": "34eef6fa-a4c7-49dc-8bed-0501b5a3ac4b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7919ed5f-aff0-45d4-8c67-4cf4c06ab3ec"
        },
        "item": {
          "id": "6125301d-5e45-4dee-833c-7e3d8dd12660",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f9c2a5c0-0f61-4ae7-bf3b-8345d1fa82b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bacef4-86e6-4d68-ab36-5c77623168df",
        "cursor": {
          "ref": "0c446d5d-b764-4cf6-807a-489fdf74b45c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a57bf124-2c05-4d17-945d-d45b0ea8a8b8"
        },
        "item": {
          "id": "b6bacef4-86e6-4d68-ab36-5c77623168df",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6bb3e50a-facd-4a81-b766-d4b810266569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14abdada-5f1e-4b84-a904-feae4da6d50d",
        "cursor": {
          "ref": "b03f0f5e-92f3-4603-97d7-83ffad442126",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "afe4abc6-f291-4241-aabb-8834e1a0e0cf"
        },
        "item": {
          "id": "14abdada-5f1e-4b84-a904-feae4da6d50d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a739ee07-1359-4aa4-8dc3-2ecb736a301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e73658-3aac-41dc-b54d-9e773c5233d9",
        "cursor": {
          "ref": "126d6130-ace2-4c7f-ae38-f61ecaa84d35",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "af5b8bda-c3f3-458e-97fe-be73caa9da37"
        },
        "item": {
          "id": "65e73658-3aac-41dc-b54d-9e773c5233d9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eedf3798-cac4-49d5-bcc4-1416242b76c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c61f5-e19a-4282-8353-12cf98730e3e",
        "cursor": {
          "ref": "e192c937-0d5f-4478-b950-2599d782665e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1ada899f-2d34-42d4-8fac-d1117a4aa92c"
        },
        "item": {
          "id": "5b5c61f5-e19a-4282-8353-12cf98730e3e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d2b2d0b4-ffe1-4d9b-b004-d192294c1735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76edda0a-e8be-4ed1-aad0-496a227720b1",
        "cursor": {
          "ref": "9ff54ec9-905b-4e4b-a66d-72f353886727",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9af6bc2b-2943-443d-af17-472c1cd58900"
        },
        "item": {
          "id": "76edda0a-e8be-4ed1-aad0-496a227720b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0968b6bc-1554-4e7a-9a64-1ee7b9171a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdc11c9-598a-427e-84ab-1e0f17f93baa",
        "cursor": {
          "ref": "05e47d0b-adbf-426c-89e3-0d81673fae0a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0fcf662-6283-4ef8-a496-af6e0e32953e"
        },
        "item": {
          "id": "4bdc11c9-598a-427e-84ab-1e0f17f93baa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e05fba3-e713-4185-8c8a-05c3dc265d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dda5372-a1d1-4baf-a9be-6899e1004fc6",
        "cursor": {
          "ref": "b33af55c-555c-4c38-b53a-3b9390945faf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e32ca91e-a0f3-4e38-9d27-d1c9d4157fab"
        },
        "item": {
          "id": "4dda5372-a1d1-4baf-a9be-6899e1004fc6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3d52666e-c9d3-454f-937b-b7327608dc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f20b8-ecea-424e-9c4d-89ffcfab4ca2",
        "cursor": {
          "ref": "7a1b21dc-b8a7-45b1-8987-3d58693944a8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a3b60af4-2c66-4f7f-88fa-d7ac6c8b0cce"
        },
        "item": {
          "id": "b27f20b8-ecea-424e-9c4d-89ffcfab4ca2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0872b0c6-8269-450b-941f-6db5a3a01ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73600523-c7fd-4589-ac67-f9c99a8efc61",
        "cursor": {
          "ref": "458e07d2-a755-462f-a652-8314640b1609",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eba039c3-4048-4c5b-b7b7-cafc0c594ed6"
        },
        "item": {
          "id": "73600523-c7fd-4589-ac67-f9c99a8efc61",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a9928ce-0cae-49a4-b74c-02661cecae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef43347-10d7-4166-8306-cbfd670e261c",
        "cursor": {
          "ref": "98806d6c-13f7-42de-b94e-4aee8722a083",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "627b18b9-cd09-431b-a983-9367382e0ad7"
        },
        "item": {
          "id": "aef43347-10d7-4166-8306-cbfd670e261c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "349e632f-5d99-4132-8ef0-3cfee93f916e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843819b5-3100-4be2-9eb5-20d6832e7f5c",
        "cursor": {
          "ref": "8f392533-0c7d-4662-8320-28bafe3da065",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "647b3873-8abc-4415-bfc1-49d5e084c3e3"
        },
        "item": {
          "id": "843819b5-3100-4be2-9eb5-20d6832e7f5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4c2818c8-2fb5-4230-9e72-137b64647fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d8597-aab4-4928-9c7a-38ef69983f48",
        "cursor": {
          "ref": "d6d21e5f-1367-481c-bb14-807a68967c05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a3186260-6a8d-4a21-8f2d-cefc7c33ab5a"
        },
        "item": {
          "id": "559d8597-aab4-4928-9c7a-38ef69983f48",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "317d6ecf-bfce-4fdb-b9b6-508d5afdf69b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1b883c-c9cf-4b6d-bcf7-d25e3b581254",
        "cursor": {
          "ref": "6f21ba65-8743-4ff4-a994-61795721a5d1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "17ddd40f-c3a3-4bf3-851e-d811f501e541"
        },
        "item": {
          "id": "dd1b883c-c9cf-4b6d-bcf7-d25e3b581254",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "edd9cf3c-500c-49c0-92a8-6f353d366ff0",
          "status": "OK",
          "code": 200,
          "responseTime": 2356,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6487af-f570-4ab5-a986-b6f6e19cc341",
        "cursor": {
          "ref": "17f062a6-f7cd-4314-bcc5-3544697e84b7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d7fbf937-2ec5-436c-8c88-33313727ada0"
        },
        "item": {
          "id": "6c6487af-f570-4ab5-a986-b6f6e19cc341",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0cfdd0aa-5d96-41f4-8d1a-75065e398253",
          "status": "OK",
          "code": 200,
          "responseTime": 3888,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c76c33-8f38-485b-b05e-a59ef319d183",
        "cursor": {
          "ref": "23dc1e14-b631-4be3-901c-d6d9f100bd50",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4dce9c5a-5232-49fb-8a25-0c1ba61aac8c"
        },
        "item": {
          "id": "a5c76c33-8f38-485b-b05e-a59ef319d183",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7437a853-55ba-4c85-9833-8411ee9b00ce",
          "status": "OK",
          "code": 200,
          "responseTime": 3355,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f20acf-1f5a-421c-9739-ef98c5a6ec61",
        "cursor": {
          "ref": "586b8754-c760-4410-bf38-e9871ca2b64e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3c184e2-d03c-4528-ad86-874aa7d96bd7"
        },
        "item": {
          "id": "83f20acf-1f5a-421c-9739-ef98c5a6ec61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a86d027-6a0f-40a4-a50b-53cf3c2b0ac7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f20acf-1f5a-421c-9739-ef98c5a6ec61",
        "cursor": {
          "ref": "586b8754-c760-4410-bf38-e9871ca2b64e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3c184e2-d03c-4528-ad86-874aa7d96bd7"
        },
        "item": {
          "id": "83f20acf-1f5a-421c-9739-ef98c5a6ec61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a86d027-6a0f-40a4-a50b-53cf3c2b0ac7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1fc178-cb18-4702-92ca-5f4b845db536",
        "cursor": {
          "ref": "d270b894-c88a-4784-b9a3-bb607c8b2c19",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0765f61d-16ec-43cb-b9a3-50045fb7b6ad"
        },
        "item": {
          "id": "4e1fc178-cb18-4702-92ca-5f4b845db536",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd3c62ff-2d17-4f3b-97e1-604f4b32aced",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3865b12-970a-46d1-9c95-8ce44214d4b8",
        "cursor": {
          "ref": "2c9aa8e3-1282-4b36-b67d-769681c22b3c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c1383ab8-10c1-4b4a-8b92-a5bce8690c93"
        },
        "item": {
          "id": "d3865b12-970a-46d1-9c95-8ce44214d4b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "434d2e8d-51b0-4f69-b136-d438fb061e12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}