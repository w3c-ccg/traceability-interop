{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "84d7f4d2-2c3d-4c43-8e82-cd546ed6dcb0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "48db615f-fbc3-426f-b66c-63d115867865",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bfb9044-fa1c-4eb1-9524-f8c40b5c0050",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cd99f3f5-f87f-4986-9ed2-ca3987804c29"
                }
              }
            ]
          },
          {
            "id": "627f609a-23d7-443b-baa6-e09315d11a43",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16e6079b-1067-427a-a1ef-c433a08f7f62",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c4e1709-fd48-4c74-8e08-3600d0316349"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2a31e576-ff7c-41f2-b5d4-bf82927f7ead",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "482fe2dd-96b0-420c-83e8-7f13220852c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68f408bd-29f3-47bf-9c05-4d262566d93b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04ac749c-3b7c-4ee5-a5e3-5a21fd338c40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcb89e7f-1f4b-413b-b15e-4f832f270508"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4dd1b71c-35dd-4b18-bb6a-222761d3b854",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "131097c7-3516-4075-bd4b-f9edff0cf445"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58dd58d9-c780-48fe-a61e-c9afa15ce4eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55b9eae1-2f52-471a-a95a-d5a7c9d9e953"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "358d33b1-c672-44dd-b40a-3bed7de34a16",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9554d484-b849-4f25-8f23-a8a333e76018"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4801b84b-6a01-4178-8d99-c1b665620ba4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cbabf46-9639-4aaf-825b-b03da6523ef5"
            }
          }
        ]
      },
      {
        "id": "a749d4c6-2410-421f-bf1b-459cf36c28e9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2b939575-a0d5-4d7d-8e0c-434095ac1220",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ecfc394-04fa-4a2f-9e82-486f1cf0626d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27cb4931-1211-4c77-bce1-b2fe44ced4c0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de59256a-e1b5-492c-8a2c-346728e7b0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c641a341-6576-4b3f-884c-9326d7b66b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6615f939-f15a-4951-97df-c501548bf4a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf0f7bb-f0b7-4626-b9b4-89a9c103ce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cda3d776-3840-4257-a558-a1f288473ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d3145c-1566-4e99-a7dc-5187660631a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f266b498-e75c-47b5-b86d-8cf8040dedb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12d772c2-30af-4c4f-84f0-bf36306cd4f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ea59ef1-379e-4865-ab1a-2ae1313375f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ca87256-7e2a-44e4-89d3-1063abdb4d7c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffe7e6e-60d6-4ba3-8adb-866bd07e7412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2be3f71f-3b58-4964-bb5e-661c0413db25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a63f76-ba71-436f-84d4-b1e06bb80cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfacf3c-d5a9-41ec-a6e6-9b8a0fd96c4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "87d60f97-54e8-44fd-afa1-d7b078508931",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea57f418-34e7-453a-98a5-0d155d1320c6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f91d447-8023-44d5-b57a-806ad9823a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b80e8e08-e3a1-463a-be7d-a80dc641ee3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "448e4361-ab03-42ce-a82e-97622d060a0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1f49dfe5-6918-4032-858e-0027f3ddd3bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "266ca21e-5dbf-42e1-b49c-7130f85334ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ba2c8d2-b0e9-4d86-bf9b-c39d49a8a055"
            }
          }
        ]
      },
      {
        "id": "dd4bf1cb-3fd6-4557-ab90-76942187fa8b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3129c079-3c4b-4f6d-b30b-9735c52bc71e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d091cdcf-d9bd-48ac-83ea-a612a933c48c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4647cb08-a640-42eb-8ed7-8ebe4a34c611",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565149f6-f344-4515-a638-da4add1dd838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbceefe-9b28-40e5-9466-4cc61501e52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fd3729-a554-4c49-b270-e97fd39203c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "609871a4-b640-4f3a-9511-9e504b40099c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d711edc2-b1ac-48b6-ab7a-d35e8dfa1806",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f758afb5-3a94-46d8-85f5-7ff30eaec20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50847c5-fd23-4b3d-a4ae-5ed5667247f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a3d5c-ff65-45d0-9183-30ffd179af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba5f6528-1f94-4387-85b5-47af904231d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa741bb-f81b-4bf0-9fd5-13bd6fa74906",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0761be34-35e5-4633-86f8-0866573b7188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2684293c-71a9-4650-bd9f-f7599c4e5e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb9cc2d-aeda-4993-8a9b-3da54beef8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83360f84-758f-44b7-a1ff-b092930d1c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b52bc4-5bc3-4901-becd-bb2bdf667c3a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21f89d0-a57a-4fa0-82a1-c440412fe7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8b295c-5d23-4a26-97b2-f8e0c60e8356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cc98f9-4b08-4551-a60c-0adea79e72e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c64f72e-85b4-4d40-9c8b-98e2c9b65163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87512f7-8b68-4ed9-808e-35e860edf499",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931b9f3-2b85-4891-86c3-f9c7f11763b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cb0e05-9c6d-4219-a46f-9bbcb4d92af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687bb90e-61b3-45b3-91a7-f5bb9665c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32012ecc-6808-470e-86e0-e2ccc66b62e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dafb4d-307d-4a6b-9af2-3be4c7cc5f1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf4855e-8848-4c59-a553-be4e27e59eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd38383-3e4d-4450-91dc-6e2b87cfe5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eea463-91c6-460c-ae60-39b972e47180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f73f0d29-aa02-4ef3-99fd-2278c6da0be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b3ed8-4383-4c82-af5f-684327945d25",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec53d3f3-8759-47e3-ab61-d89e5ed2490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0fe1b7-64de-49df-8153-a373f5f81417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a792cd-c321-41d3-afd7-82fea570cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5daeaad3-f53b-4e64-8172-53282d079b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0f5ce8-3be3-4694-8585-6285de636287",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a684c5-7795-4976-b021-75cfb79a4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48af28f3-dea3-4aee-8ffb-75b23e82e0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c55d7-a717-46a8-824d-3a2b84a85c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4f670d-a3c0-48ac-b698-39284595b660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a0996-a9ac-4559-b00d-7b4f97d75897",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6e886c-a7bb-41a2-8ba7-0ad123d053db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4d93c3-8f45-4108-98ea-d5851199b21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b4b31-1d61-4338-b123-9e18166db509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2802139-cdd9-4152-a097-c6c8b52fdcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c3f02-ecd5-4585-9919-5ba0a0bdb81a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23948fbf-4e9f-440f-817d-a703fe0c61e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617205ea-a9db-49ff-88e5-e490ca76ac00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a465cad-abf5-401d-a639-f8fa0682f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4349762-a18d-4b48-8dc8-9905c693f540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f3412-365b-4f27-9451-aaada66104b1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b1b651-8831-4ca3-a848-60dca760d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305c9f1f-73a0-4e5c-870e-09262f32b81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b82062-13b7-499f-8e91-a2705bc9ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0608148b-43dd-4c34-9a83-a9c29d8cfa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70834c9a-d255-4c37-a1bd-0eab6c06d5b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4da84-b6b3-4670-852e-4a642602e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f595aa-bc54-40b3-9c7c-62410641ded0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9092c9-5561-4a88-b827-63888babf1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15bffbfa-bfe6-4ae9-9030-acd08b170998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626b3b1-5230-4323-bbb2-fb030409ebe9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951757d5-64dd-4758-b965-39e989743a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809682ad-65e3-47b4-9015-c0167c50b7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b792d2-81f0-4a77-9549-f5eef967aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d7e4dee-decb-497d-bc39-88f1388481a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f613cc8-cce2-4ee5-9b32-c20faf92e4fa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28157b2d-dc48-4613-af64-392c7b2b108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f368a0-f1b9-4e6b-8f18-29a03816147b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b5669-d71e-4daa-85ba-a3d9feda6cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14a635e1-effe-45ba-a468-1f27f948977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cda7b7-2584-47e1-bc58-98665c92eef5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f1d93-aae3-4a3c-a74a-52ca36842ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7adb56-58ed-4b87-ab07-b6bcfa0c9026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb00bb-e9cf-46f6-8486-12b8095c1eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb910cfc-4358-48fa-af58-e526caad7a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270ee34-0a5c-4eb4-b8e7-2bebfd777e10",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4a49e1-2ec4-4b6b-91ed-7d35a4682c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392feff9-8b7b-4d29-898f-1de3b01dd1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42d6e76-1350-4bba-afa9-03f52df613b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33506588-40d5-4ebb-9fbb-e724e5fc69d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9339cae7-3a1d-4742-9227-710fc376c862",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fb70d0-de77-4cf2-bc06-595ba106a144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca70bafd-9f00-4519-b83b-e19d5c94bb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdf4d78-ea37-4c57-b030-7f3ba8898f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8014bc85-c74a-43b3-b438-ff67b9131638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c643cbf-deee-4327-967a-62b9c45fd23c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14800a51-bf21-43ef-9d64-ca7cf94666c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce1e8ed-64bb-443f-9760-edee02069e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d7079a-5d35-4c48-aa96-5f2bce8bec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "838c985d-8176-4c35-bc59-01bf2ca5f2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda6d401-0f52-4a2c-b813-6772f23faa11",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ecbfac-13aa-4902-82d0-057cb8d09dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253348de-a096-402e-8093-a3651b3bc587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d1896e-ccc9-4211-bb00-67a3584adcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8da6819-bcb0-4210-b9ab-e72744dcdeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19b0b50-4df8-478a-9558-c19897b8e69a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276d40b-6ccb-4cfe-8677-9e62643217d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae71727-48cf-4c7e-a2de-95eb209b1a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbbad3e-a68b-4e23-9f8d-e60682167854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda0431f-2c40-4a8e-9134-a6ec16053be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4041a6-5548-4114-9c39-1a11c91dac4d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3fbb49-bdfa-47b8-acde-49e1f111c6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183e6f4d-7d21-429c-8d09-494733b5c1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8289500e-33b5-42d0-a77d-e1aaa9bce2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cce20f2-83cc-46c0-8053-ead114269a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a64bc3-4bf0-4b79-a466-94d5b8ded3f9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6521eb8b-45d4-41cf-8646-5d94f63a8d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122d8f32-05d6-4a23-905e-5c1bdb956800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347148d-bdc8-45b5-a67d-17a59ca9235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfd5f52-e927-49bd-8288-dbea4a3f867e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a14fdc-4daa-47eb-b670-d379c5b60e09",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7c04a9-779a-4f08-8897-1735d33be461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee846e3-69c3-4d21-9ffd-78c8e963cc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932adabb-76ef-4997-9342-0d3a1bf083a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78cf1e79-183b-4908-86d4-8f5d9b2cd83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa4794f-2fb7-4a8a-9332-925317ea11a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ae922-b07e-44ef-96d2-d726b76ba4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f404b2f9-34a5-405d-836c-687eb7316751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d11741-1ea5-4f37-85fa-3ddfc7b1306f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ceccff-e5be-48ee-bef3-df0e88def40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a6df50-2d12-4f0a-9951-df26c5a1f5a9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069cfd0e-62cd-48b6-9bd3-7b48f337b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724ba201-2dad-4253-b18d-2981ea0ab65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3281ec8b-c74b-4935-a10c-1925d801a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c34ff13-a8ab-4025-b9e5-043faa99840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff666565-1ee9-4f98-ae7d-bacf9d80b132",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc3cb41-6e49-4ae4-9c5b-5437418bea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2eaa8f-53a5-4fe8-87b8-2c13a430dd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a9ce9-24ef-4193-90b8-c477b12aa69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43773abe-6ebf-42bc-a184-343f179eb5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc6cf4c-96ac-45c2-8474-f6d1fccfd845",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524be47e-dfc6-4a7f-86da-13b8fd78f372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187c130-e26f-4757-84bd-406016d7dc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a5dcba-6682-46eb-a2cc-61bdb0a95886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a39fa68f-49df-4b0b-998a-d1ab649f6a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171ae61f-94fd-49b4-b2c1-4fd1d48ad7d8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cda94a-6d6c-46a0-9a66-ed2114f7b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235e7607-0d64-410c-874e-92ed355a2c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425c070c-4c14-4c55-b37c-593b979122d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1064125-a86b-4268-a496-63ecadba6f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d632cc4-71ef-46d3-87be-7291c94aba68",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbfda38-2dfc-4245-97f7-055c0eedf82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f813908e-dd2e-4730-b4c4-6e441859ef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc28be4d-ee8e-45f4-8619-db9e5cea61a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22c40ff-aa45-4d1b-b4cb-37a369c0019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9ea15-8e1d-40d9-a369-5eac4f7a4b43",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b669530-50b4-4ce4-b3a1-53ac7c4a1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5722ddc-3425-4f17-9f3e-6d2b71398b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ff243-09f4-4cfb-b090-6793c8a4a094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bbad00-fdaf-4a0f-95dd-128272bc4e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1273eb-a267-444a-8a75-131e752a4586",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbfe640-cadf-4352-b597-db1a10af9b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03995002-b863-4c54-a37c-31e26cc985fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b42d246-95f9-4c6e-adba-28d4d9228c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d67783-1539-4c7d-b003-8b35643f2b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e982b524-7d9d-454f-840e-76314549668c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761810b9-e56a-42f9-b59c-ed8ab943d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c26758-06e3-4832-8bf6-cd21faedbf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed454114-81d3-49dd-9f14-54d1817c7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07658cd-6f11-4196-9e48-b6d5fbd39c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057aeff0-73b5-4339-9320-d5378201c3fd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d66622-0fd9-4850-ab61-6771af2a7c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632410fb-8bd0-4deb-9b8b-320896d6a14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c98701-1dca-4364-a161-4c2037eb9cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "066dbf0b-23e4-42dc-8da1-866a34491718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354a1c80-fecd-4f64-9837-13b40efa8b2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59cdc03-ab77-48c8-87c8-60f594eb23f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d2c9f6-bd0d-4ddc-ad8d-a032ab2c2393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7b16f1-0933-4e6f-a0dc-3aa741b3bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38408ca-056b-4149-8830-8e0f560d1681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b69926-3f04-45d4-8d44-3fb677015549",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491ee660-70e9-488e-89f3-d31175490f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648ecab7-afa6-4c9e-a00b-66a19e92bbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8037a2-5704-40a6-a5bd-c84c20a32bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcc5e55-8f4f-4f8d-807b-9c0cf2965dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed8c360-c621-4c2c-adf5-01058c47b79e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7072a6af-7778-416f-bba4-66b844c6d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "462353b8-e973-4255-8f21-6c3b7b7f7d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9461d3-5b9d-4bfc-bd18-79814eee2ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8357e3-ce1a-49d6-b605-ac8eb69107c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269940f4-a9de-449d-ad21-e225130cbaac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246ee5f0-7af0-4298-8679-1d750c6cf85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bc8fdf-a823-4cf7-ad46-1062d0026e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070323f3-e1f9-4fef-b882-1898ff170030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0011785a-b176-4f0e-8ed4-4d597614c151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3acfdf-c3cf-4116-9243-1da00879c2a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8236e1d-fa6e-4a1e-8a21-530a6108c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d61f90-6d54-4280-a931-8098da0c72ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8349fd-c6f0-456f-b510-f33f6e99f7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "408d4606-42b4-469e-89f6-fe6fa7aa39fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175afde5-af5a-4bef-a727-5c3edfabb67b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1be5fbc-6668-4235-84a8-daae43ce8f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aa1a12-ddd0-4135-aba8-eb44fbfe0bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef817b1-1552-4b02-9729-ecbd9cd84e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae2ce34-37b7-4230-ab4b-08c9151f6c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc32f1-9008-449e-aabe-bfb298ecd590",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14301559-95cf-4c2c-9176-11884a629828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc602a5f-aa97-4297-a122-a81046a3504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fb0b59-3eb7-452f-8b36-c2161f6db850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "410ad941-139f-4e98-8229-12e620f5aba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de8937a-28a6-4756-9112-6f5ebbeeb822",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ede0634-aade-4ebe-9344-ca5ef10b648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0648db38-7b0e-47fb-b38d-0156566ce5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974953dd-c49a-4de8-93e6-51a63d0e0bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0b512f-742b-40a6-bba7-f02e070ac746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931a1d4e-9d3f-4f9a-b410-3b01833f24fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee040ad-6220-4396-af5f-68a6fdad3de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01e02fe-8921-4fa2-bcc4-d281ad33f398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49b7a56-cca2-4966-b666-9e05b23ea97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2054a988-34f6-4363-8b2e-e81f8dadfcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2b8f51-7089-4c03-a895-813b128eb7bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126702a2-2c86-4d00-883a-2f015f0b9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9394c4c-864c-44be-af1c-f2546e14e386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a00b8ec-ea46-4b19-8c33-5bc52c47f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e113c66-5849-4d6b-a143-98f217006a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44f6139-9576-4922-ab46-c9f296886c94",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879b67dc-8343-4e30-b46f-65aa9af65824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfadff3b-0e15-4761-96aa-21ee89a68d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d2c52-6cff-4d46-ac8b-e1a83c0cd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8c8f41-33ed-4b1a-8e6b-f609c5b0528e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53189ba-940a-4411-9471-abbea972a4cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc5067-7730-4098-a252-d1632ac09bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d41d6f-19aa-4007-a5c8-9eb49fe70862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8e9ef7-073c-4d08-ad72-3ee491fcbea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "874587f0-f325-4b18-aee3-b01ded7b19b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffb750e-661b-4347-be59-230cfca6009e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00885df1-0c3d-4c23-aacf-7e333bd640d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c6b038-5950-4fe6-86bb-e0f57c3ca126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561546c6-0955-4e4b-b2a7-f641f9e75447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf9fa36-2598-44f9-b5e8-c3144b037168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7faf6-776b-4725-a142-7fd7ba285fad",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0026d3be-c4e1-47e1-838e-84216ccc0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75b2bd9-a046-4c33-a124-5bb8152e7ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7676a389-8c66-4999-8701-864a427d1f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c5dfeb-016c-44ca-8524-0214551fc8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1042e059-e7d9-414c-9fe5-eeb304e05a08",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774df17-5d85-4da8-a558-81aabf688a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a886e4d9-ec85-4c9d-a312-e280a862d5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb9ef6d-4f12-428a-bc80-01b2ec911024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "104ea796-131f-42c1-8a70-1a11febcf867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff5ad6-13fa-4f52-8cbd-07c1f1158380",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea90e2f-c8cf-4a5e-af0c-bb50b9e4be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8124fbc8-cca9-48de-b37d-c1f724a0f279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc66dd6-602c-4f7f-8eb4-f89f04edf126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af3476a-783d-4122-81a2-ae59952cf2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdf9127-2424-433f-9ce3-f67f369f2b85",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555103cd-1522-494e-9084-dee0edd696f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc415f9-4d9f-4ba6-8c9c-9550b18436b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd07e3-1e42-46b4-b8df-59d25718f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08609ca4-cea0-407b-aba8-6c3d9c164503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05c760b-6aaf-42ee-bebf-48bf046a5747",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da83a9e5-e6f4-4c0c-83a9-b443f607bb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4953ab25-6fca-42a9-a4d1-88cab2a4f7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7752be16-cd49-47a1-853f-d936ca6803bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a432ec56-0001-4fa6-8dc1-e43be75659a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd08d8de-abb7-4616-9593-b10a20b86c5f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354cbbcf-7157-46d1-8808-70a5a6d101b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80b9727-f4be-4c60-9bc2-cc231bdc45af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bbae6e-762e-4019-bca6-37ab84a4545b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02b2d5b-14f5-4d5e-ad9b-e9792a11ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d6a9cd-bcc0-4aaf-a844-3c717e066907",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fce7f6-52ea-4008-9b1d-691b83fa311c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2331801-f885-424b-8fa8-b583cce0dee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad6526-2ecc-4c5b-b587-cc7e652c4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd914c06-61a7-4122-825f-31ab0fa198b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe14cbf-1ad4-43ef-89cd-664c7d70ee7e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651c54b5-b30b-40b4-8379-f35d837c47bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04e0871-cda2-4242-8700-bea635259488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b6bd31-82ea-4fd5-8cef-2b0da9db5ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b99ca2-cfb9-4ce7-8e2e-c42c1e687cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcea41b-0d7c-47e0-9163-aa3f28739afb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be17968e-da82-4cdc-a5cb-09586ec33c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4106b826-76a5-4059-b9ba-7c71406b70e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554fb642-dab5-4069-9c9d-5550ffb36f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c78ed1-f0dd-4da8-93f2-54a2f4ba1d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0a821e-850e-41d3-838d-6189ab9aaa39",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae36f67-fdcd-4be4-afbe-e95a1ef19bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2f7ccb-7bcc-46e3-aa9e-cea34625a437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed18e0-eaae-42d7-a415-9ca864d78090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "754830ce-487a-4350-a8ea-31c1c8c99bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f50fe-034a-4e22-b6f3-8aa2c39705e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e12008a-6fbd-4bfd-a88a-71d415c533a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2189867-bc8b-4ae7-a03c-d2dca6174cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315ea4bb-c0f6-4ffd-a841-25558658fcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72cf2f37-f96b-4fb0-bb25-ae3beb81e750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f7f184-0136-46be-92bc-1935185e7d6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9829ef17-1830-41e6-8f82-0562fc3cd63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04c1d5a-6365-453b-ad2f-569afe458299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6156e248-4e2a-4d34-ac1e-f5986b91e33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5af94615-76e6-4246-ae98-bdaacb38f299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b5f932-7615-41cf-9ae7-101b9059e9f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218ab6da-f82c-4769-b607-dbd86616f465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a1abe-c9b6-489d-832d-88133ac0e263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478277b8-6d5e-4d5d-9624-346e01d613d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c38e186-b1ec-43ed-8e7a-efe9ed37b8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a6ef9d-2286-417c-ba8f-feae5a207e83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e966ae-ffae-4a28-8277-b443d97d651b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6196e46-6a77-4fc9-b0fd-bef73b23383f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3ec2a-a147-42e7-b013-ae9272ea17c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c114d30-708e-495f-aff7-255552488f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85dbbcb-1bda-4405-bc52-25c404b3f3ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3350ac-7e21-49c1-885f-150cd2db8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52720b91-4b73-4569-a066-d73209555a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90482b78-ee9d-40ea-8462-2d81f5ddff98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9e4309-9699-4f0a-82cc-f225da54af5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da0997f-0491-4321-b667-0cf54429f140",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a601bc-5d20-428d-a338-56ea53d5042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3be0d69-7b84-4e16-a2fc-17d60cac6cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9093c01f-6e62-4440-8ec4-2abe53fcb872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5b3bd7-b440-49cd-85ca-060eb35b3ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bc2801-7adf-4111-9d55-bb9c84c7c1ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cda2c9-3c43-442c-8570-b8dfcd870553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6def3986-3bf3-4c96-a6b6-01c3ec7b62cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2943d97-88bc-4387-86a4-a6fa9b0e9fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b808bc00-59af-4269-acaa-7842089081cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9b3825-679a-49ad-8365-ea0bea4e45ac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf73da4-6ac1-4e61-88ad-d862fe936552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36d78ca-58ed-47ec-b290-6ce4747cd25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f9318-c5c6-4507-8644-95ddcebbb7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86cbbb05-ff7e-4951-891d-d9169abe794b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f6b827-f8b9-4e27-9b29-37c36e69868d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f42a1a-810e-4854-98d3-8d4c437744b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204ae81d-5d6e-4748-a146-e674aacf2994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f031a7-ef16-4a72-b578-62601e63addb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d003392c-5622-4692-8a1c-8c2a29f696f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd00c34-ea79-4efd-8775-06b422d8d000",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9714db47-6d73-4b9c-a091-b1ae9df1b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c80424c-f373-4e62-b30b-4dcd72b01afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d9675b-d7dc-4c19-a77d-8628baf3f227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf2f44b-12fd-45f6-bed8-a50c07ccde5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4830564-0c8d-435f-aeae-97c8d03c8d9b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a710121-257e-4abd-af85-f12605caea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e42d0d-06a8-49a0-832a-c5c8ce898447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1c78bc-f06e-4ed8-a7c4-c2e98a708aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8232d3d2-88c5-4206-8f14-de388f7622e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84adfbac-2b13-4504-951a-f56f90c0dcfc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e2da35-214c-4dbd-96d6-c4793af2597e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4b44ea-108c-4f5b-a7d5-d67cfb075db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00df201c-64e6-4b60-81af-25faca3c2f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30980cc0-74f0-4ab0-934e-f63fb844e51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a583f03-3ae3-4fd1-ad97-1318753fd3f7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21a4f8e-a680-4b67-a875-0449eeff9221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877326fe-f410-4113-9d36-c30a1fab03df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaefbaa-4951-4205-b743-378b6301db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d731720-669f-4550-af8a-cdf72cff94ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ae4f3-0faf-463b-9caa-5bac0eb169d7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a12f2c-4a3c-47ed-a47b-11b95b3d8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b6addf-2256-4664-ae3e-8b6beed0c459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e12083-0f81-4a28-b34a-ccba6876d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42bb51c-3785-45b8-8ace-8f8a9a52fe4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc192c1-92a9-4119-8bcc-3a70c3d8a91a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace9292c-b667-4b4a-9947-5c4685be5d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3897e0f8-3e4e-4100-affc-cb369fb703ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b510ad-8ab1-4557-8319-1b628860224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58cd534-1d90-41ed-87d9-e4992467379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b846c1-2324-4982-a4e0-e23f3c2d63a2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9122ce-cba2-434e-92e6-20102d0dce00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a713d92-1094-4951-9d16-3449e83056b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1b51f-1c28-4b85-99a8-dda136fe321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "820c19b6-1abc-4a6a-b66e-f07c417aae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92e024e-484b-47ad-893a-401ca30cae19",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893695d8-ef7c-4be7-812e-e00cbff1165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fbf34c-5714-4987-b0af-c520dfc3a8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5846a9-bc56-40b6-a873-9d147f9e72f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b927f6-9ab5-48c8-94dd-77e9aacb8f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61794b4-50c3-4731-9d76-cfe1eaf479ed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60f3106-539e-4e82-9df0-e682f7fb309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a8e75-9cb3-45cb-8d37-4ea7b2311b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4c98ff-cb30-4b85-8896-b10ed556c237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acf513d9-379b-4faf-a2b9-237ad07a87dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee7526e-c7cc-4fe2-8bd3-af9ff41a6ddb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cdfedb-19f2-4637-9bc1-4ed1116eaa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25944145-4ab5-40dc-b150-371b83093b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00777379-4ba1-4a24-a86c-329df27880a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c4b5e5-fe0e-4334-9da0-09d2e73e1e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4cd117-3eaf-41d9-b337-02a3fc802cf3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a853786-a038-4f7f-bfc8-bac3a01effdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af02cafb-ba31-4928-ab0e-1e5a5cd39646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6188f199-12a8-4cbb-b929-9c60f7a8d551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0552b55-3bac-48f7-aa25-6bc673c81d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e218481-b4f4-4e72-8fce-1030e6e2d8d3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58b948b-0f07-4dc3-a5e1-26eee6f98981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4aa2f6-4578-41f6-8060-e88431d27a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1facce6-e40f-46bb-904b-7db724656a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1a0e2a-53fe-415b-8ecb-866ffb4b73ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4308bbd6-fcc0-4be5-8614-87c66a859c6f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1729df-407d-4497-b09c-49abfaaac691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93496d7d-336f-4cb8-9b04-483b7b0ea16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a165fe-3b7c-4a81-a08e-f70bdaad1d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2109b0c2-c1e5-4267-a672-34b0ed67b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0dcd38-26e4-425c-8412-a5e88c1271f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a8ce67-2e83-4e7c-ae15-7ea0bf250f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c32d6-dcc4-410c-9d29-03a704cc51dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b170349c-2eb5-4e8c-ad58-a6985d7defb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeba78e-ca1e-4814-b4e7-7f4c83663fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc31dfa-fd7b-48cd-8fb6-c4df5d02f845",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b499e9-9461-4432-809f-88214317b026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4480e3-bdd1-455e-8e80-d22c75fba2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac08d646-8035-47f1-9645-3e61903a8271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59532c7f-1bca-4515-b2c8-223e96cf7139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b144e5b-c63c-445b-b03f-2685943fc9f8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fd60f0-a0d9-4c07-b586-d07dd67b8baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e013a7f6-f3f9-42a9-b1e2-5a204f7b2a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6418df-b64c-4c76-b18b-d44a71f4ef5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "700838c6-0080-40b7-b565-441085462f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b729a3b5-716a-4190-9011-befe2e07ed2f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50761d87-ab2c-4d1f-a07f-0e5715a2814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabcfcc2-c15f-47fa-bcb1-c4740203ea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5483c8-806c-4479-bf19-c1fa085fc496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c8ad9b-ac9b-4343-b416-c877bc4dffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d6d9b-8223-48bf-96e0-93641ec93108",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e3def5-3594-451a-b3d1-df628b269c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bc2d92-5d70-4af9-9c54-4a754038dcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e562b2af-15ad-47af-bb3e-e8a03c786a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea0427d-e739-4dec-b5a4-570872e7c3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa113568-d2c3-4644-ac66-915155a232b7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2207b45b-6ae4-4346-9fc6-b5dac2e60bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce3d612-0368-4db2-a96c-98f4cb014114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710380c1-542e-47a2-8655-3697fae502da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c232b9f9-a6af-42e2-bfc5-3008974af414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1177048-2ad8-4683-9712-7338dd6b15e8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671ccce-42a2-4e71-b4fa-d232ac98f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ab821d-a8a2-4dbe-8548-602f72e2357c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25371cae-b880-4bfd-b3e0-79a1759c06ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c874e69a-6b0b-4375-8c73-84b4fd6ac760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28efce45-97aa-4aea-96b6-920112d9042b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4806b305-cae0-45b4-a7a8-cec46b1f4ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d6b5dd-1a42-4381-ac0a-e3366d77d8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6221dfe7-7082-46cc-9596-a7e932b3600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d88e930-da1b-4e5f-a9bb-c2ba72cca5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa6f41-aeea-48e2-a446-437a37c886ed",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc736f77-9a67-4ec3-8c13-afec6fd5b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44d17f0-2c0e-48ad-b8af-dc9f30906543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d8e69-a2a0-4e6f-92e2-402212c3142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7de407-6bd6-43f7-916f-89043129981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab3e1fb-9e62-497a-b1f4-a96dddc66c43",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf9d284-954f-4750-82ec-45529b822452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156a0c28-a941-4e24-944a-1cb515371f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03475060-0e41-437f-9670-02ab4d327bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc57ba0f-95af-4414-8ede-0c468e9c081b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f20e9c-a976-4e69-ac39-24c9a24d5eee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb49203-3bba-4645-8107-f1ba72ce7fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba033e2-948f-4952-903e-6fabe0a5b2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1480936-7f8c-4839-9b3e-f6bd3dfe41e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e816a79b-3898-430c-a735-5fb9ea0bac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3560a29d-526e-4a06-b142-10a563039a0b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c4cce-339e-4e9c-86f1-5893c4f27706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d07ffdd-f0f1-46ad-888c-8ca4ee66edf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f26dd5-176e-495f-be66-05e247a06093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bba1e159-caa8-44a5-8058-a74cf9e3c223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475288d-65b7-4bbb-a414-d927e63c1b6b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573909b4-2da2-417e-b5f1-41020bade3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381915a3-fead-49d8-8de4-83f6dcb0aee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f1703c-b42e-431a-a0e4-a3e4a835723b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf39fd95-b0db-4613-967b-6e2213e64d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71788ce7-316c-40e6-b781-a0f1c5735e0a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3889839a-b7ea-4f99-a729-e4b44dc5bb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13029520-a297-4199-a9d7-1dd53bb11293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4fb918-2da8-415f-af42-9d0c764620a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f64c88f9-23a5-4695-9471-8536c7873e17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8691a42-c73a-4482-8435-a51ee5af16ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e214e89-b0d8-42d2-9f3e-d9784a26b976",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0865dde3-f010-4d5c-a933-20a7f7bfd46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf45fb10-08c5-4527-b59c-43b09164ef41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50200654-b498-4638-9d39-fe0206264da9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5c5f710-6ef5-4994-8d32-c20e72f451a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7bd25f4-c5b4-4ad7-8db6-cfac54ef6193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49a96ebd-785c-4a5c-b4b9-6b8788e810f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00bbc1d7-ebf8-48ff-af4e-cbcf823b25a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b433e3-ac04-4a62-b945-77ee8ccd8876"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22859129-f181-440c-9110-9310ffabd974",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e92a5cad-6df1-4b77-9709-02d841d7a3d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "472e0ef9-64cc-4400-9c9e-e116d9f877f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5835409d-f8c8-4b85-a543-eb696665c3c1"
                }
              }
            ]
          },
          {
            "id": "bad749e8-afb2-4ed6-8c58-7743fab983bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "449bdab7-501b-43c0-bcee-3df90a9ef70d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "964140cd-0f33-4f20-b56c-077b51a86d27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "388699fd-f077-4e7b-b1db-076657047fe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb5614a-f432-424b-b900-e426fb1a4f48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbb2b12a-a599-4618-889e-42c938e8ccbe"
                    }
                  }
                ]
              },
              {
                "id": "30601f98-0687-474e-98fa-2f296d5738e5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70c128a1-c143-40b1-a60c-d3d6b1dc13e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "107bb1a8-71f5-484a-b768-87f979e7af4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fccf777-bc30-443b-8e3b-8f7c869bebb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa6d1e97-8d30-4077-8632-7c9195328151"
                    }
                  }
                ]
              },
              {
                "id": "97baedef-c2db-4138-bde5-20c76fd4db37",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dd61bcb-e640-411b-805b-bb058fe59f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d67fad76-8690-49c1-b83e-e375f3735a27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2acdd034-858a-4197-9f24-00e80e13b035",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c3355de-1e37-4aef-8e0c-1eb880773a7e"
                    }
                  }
                ]
              },
              {
                "id": "7a01b113-6172-4c40-bedd-691725c814ab",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "365ea8e5-3ee8-456f-a0da-348fc21f8133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a56226d7-f5bf-4c83-a570-b99894e44c43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0d62167-40d3-4fe3-94a0-97b6781ce907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2a4e903a-591e-49a4-89c7-b5ce020e6b91"
                    }
                  }
                ]
              },
              {
                "id": "a567b986-bfaf-438d-910d-aa4184ea5685",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc31a7fb-8495-49ec-abfd-43069a38082d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1991b450-bc91-4083-986e-9103bce69df4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83223f88-2ac0-407b-948f-60a446355b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bfa09f5b-a902-47ab-b9bb-47cb8c7d4633"
                    }
                  }
                ]
              },
              {
                "id": "23ef5641-89e5-4b3f-bb5c-1cc572fe1ce0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e465e4a9-d1a6-4964-84cd-9f73f4d29670",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8d943db-eb47-498e-a985-5ae08d65d194"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb844f2-da01-410c-acc4-4ae1714662e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0435bed-3a5a-41c6-9445-918f341bd24c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ecd1ada-5788-4161-b5a4-4724037d2817",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0593c536-0933-4e8e-b3fe-f941f15fd01a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75244dd5-1dea-4872-9816-1a68fef2f2b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16001bcd-f727-4ef6-a51c-4a9cafcfc577"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98647026-d24a-44ad-8257-8c738c97e68d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "35418c3c-92ad-42f3-a110-173adf2a260a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e31f6e51-0832-4d30-8308-78789dd264f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13ac954e-b56d-4487-bd0a-aa4911dfb633"
            }
          }
        ]
      },
      {
        "id": "e5f2143a-2120-4122-85b7-20a0181b9b2d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a8fa864d-7d4d-41b2-8011-95ebf5247d5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85f6cfae-06d3-491e-9978-6fdbd227584e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ef001e7-e176-46d7-8e87-854c3df3d270",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b653b5-d0d3-4dd8-bbb4-e1021f9f84d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c495888-d025-47df-a0e2-85eed354b3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a45cc29-5bf2-4f68-8fb0-905c65811efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "40067418-6f90-44d4-92cf-851a390bd7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e01f99-303d-4686-91ea-0b3d5f7ce4f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aa6c45-82cc-496a-ad8b-734d35f83c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd58ba9-6f19-41a0-985d-7b12976a5ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343ef1d0-a51b-4154-ac41-dd30a6f6b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b6386b-67bf-4ee0-914e-6d7085031602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c2006e-f7a9-4545-a69a-3a1693c6f2c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b62485-fa19-43fc-aae1-4a0d94bdc75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd5946a-138a-4181-926d-b15ff428a6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c60fdb-40bf-4975-bf31-87a08e3bb79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "115f2813-872f-44e9-bb17-240963db1fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e106171d-1da8-42f1-9b5f-d318c0451a20",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057f1648-d195-494f-8996-ab75a405e1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4174601d-63fc-45d1-8ef3-a4d626b28fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6092d2-6427-4c04-9a1d-04eb73dd3bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d5bc80-4fba-44ec-956f-ebf3080fe8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1008b1a5-7e40-45fd-bc66-29344e3f477e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b0fe8-a805-43f4-86cc-b0fa5a6a737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07c9678-6187-411c-bc25-885935450c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b406e1-689c-4863-8414-3b5136e16fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b6b3a1-44ff-4d43-8034-15ab147798a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51acf90a-fe09-48b9-a653-ace39146c617",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867677b7-d629-4ea5-b829-9910542b7de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f461c9-b3c4-4f52-9e21-cb8e21e2ab9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de73c21-5ef1-42e2-9ef6-b7e6493edbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb47407-8048-42c6-9351-339ead1f61d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419c98ed-2861-4465-ad4a-0466c85ce748",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f37d239-3423-4a88-9322-bacb3f98e5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a09c7d8-3bb4-4f6e-8759-437a4b96e2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aee3682-518f-49da-83a7-7d9945cbfbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "129ceeea-f029-4eef-a6e2-1fa1b963635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5eb47c-108f-47f5-876b-b298bf825660",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a648cb7e-53bd-4f42-ac4c-5d66fb379d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c5a1cb-1b04-4d5d-9666-2705978587c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402139bc-2aaf-447f-beab-27cd962fe4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e137a5-5c97-48ee-bc4c-a9af93c0fb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fed4a1-de62-4cd1-a444-5597e93dfd52",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b3c8e0-aa2d-4b1d-9d6b-d6091a79f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98157e4-9561-4f9a-b6f1-f84a3ccda067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888deccc-f654-471e-9c9e-9979d16e3578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedb33b0-8b03-4754-8b6d-a18497b2e591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a624d-67cc-42d6-81d4-bb93abf17fc1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d201ea-1e2c-41eb-820f-7b6117311d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377b6887-b6f3-4e24-b58e-babffe21ffa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316bbb9c-67a9-4013-9e63-6ff53f2632dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9216b2fc-3ce2-4042-be80-720c495bd694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb1dff-377b-4aec-a85a-f041dc590e35",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0c3813-2ee9-4c3b-aa70-f4ac8a5e8d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f13ddb9-6278-4bf6-bb2b-23a4bd572cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a51ca08-e4ab-46a0-b636-9446b1958fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba0bb62-ead9-46df-84bd-e72194ba34d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8bed8f-d7ab-4ccd-896d-e3509dde631b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de81b86f-c760-4194-83e4-858344719d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605ed9ba-9bd0-4f3b-ae64-458a6b4c8d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b7112f-e0e7-4844-b358-384cd01a15c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6e988a-340d-43dc-b8bd-2c4cd769df0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5626a-69bf-4532-9dc1-de3812e5032a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a02924-4678-421d-b134-27d265877428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746aaa9f-e7b3-456f-93f1-bb8a0d8e89a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bb00df-a050-43fc-9069-9853d7d95e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4e1914-b224-4fd8-bf76-efbb3512ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c37b3b-09e1-4870-9915-2ad4776fe538",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce76ac-24cc-49d0-9786-051b83575b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c991e263-1cdc-468a-986b-db7a88621c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a562e8d6-0d19-42e9-be01-cffd8e19e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2d9001-ce7a-4090-b08a-a6fa1390ced3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff2283-6f27-47c8-b33c-e78d8216e7db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851a9c4d-7d5d-483c-8b25-903925d52c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04239458-f15c-40b7-895c-39aa655c0b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2580e898-fbee-4b62-bad1-e6df46643cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7824287-3032-4ab0-a48e-62b517917930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed79f642-dd93-48f5-9663-c17921fb60f2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8792e3a9-7816-48c0-a38e-4cb791f92b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f21c8c-0868-441d-abc6-26ae284d6e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6685c8d0-8bc5-4497-b677-8bf17953d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea6cf85-61c5-4f16-a250-17bc47c7ef3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85367912-fb77-42ff-8a6f-f79ef5f46f71",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b23368a-6b0a-4d54-833d-778e66a5dca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fd5af4-11de-4f54-b259-50776a101fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe838c1-8d62-4fec-bfea-e8f34ea43883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eac19d-7619-4214-aee6-30a8cc9d81d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41f67d1-0bc0-4745-81f7-cf3456910c37",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61256b5-1656-4aeb-ac3d-d5f06a8ee290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75aafb01-1852-438f-a14c-7f637b28774e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f499d-61da-4ab8-ac14-8af411712667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "375dc6f0-3ee6-4f9d-b387-b46b42542e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b77cd65-85bc-43ae-85b7-4207d05262de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0a6948-854e-43c2-8234-32399a95d167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac68e064-e798-4957-b78d-755c17c7c7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50117e94-51eb-41f3-88f0-10122c15181f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f5dfd3-887d-4322-809d-c685d6c66f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591d498-63ae-4bad-b222-8104899a0d83",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ea763-937b-42c7-894c-9954358ecc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f89969-d604-48f5-bf42-269463c758de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45292160-58f3-4bbc-b05f-61baaedf0775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1090e5a7-aa2e-41cf-84b6-bff434d67e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2715be-f3d5-4357-8bb9-196007858ed8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55eee95-1b0b-4bad-9c22-d85293394537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4465cee-c092-4945-a8ee-96d380daebbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876d2016-38de-4b8d-9558-47c815f88dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "473a52cb-7852-413a-a0f0-43f25611d3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd8c446-0075-4636-a719-619cf986db18",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94928651-1479-4ccf-8108-08c5216642a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b52df-a0d9-4344-8802-ddb457cf44ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d95845-8030-46b4-9e05-126acbcf4feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd761f4-605a-4793-a028-1cbbd031504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f0c182-04c8-4e3f-8350-b697f4a3e1f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54bc22-87e5-430b-bcf5-0525419828e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee5ff8d-d2b0-4a86-af3b-bba841cf356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8449ea7-bc12-440f-b318-331fa74a1c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d95fb8-b12a-4dd6-ab64-383f559b2adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e184593-9bd7-4d0a-8f3c-d0835a32a112",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884423fe-3cb6-430f-a520-2f1bed5fe863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3254c73-0aad-4442-8483-0d9f2112c0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da883f-a29a-49b0-a341-b182a3b3f89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d83cc09-a300-430e-b7e8-30779e4cde9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d9ddf2-23d3-4875-8669-058a0e1602e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a22813-2f2c-48e1-98c8-4a7ddf36e25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc6fcea-f5fb-4e91-b414-1db38192098d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5ebe1-d3f4-499c-a1a5-feceae353972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "393e88f5-ac65-4df7-a7b4-0ae61062ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027ae0e6-cd59-4acb-b43a-c0bbf6b84db3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8563f9-d129-4e32-b8f9-790260d6e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd057d8-2f25-451c-8f97-194ea4e77243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e82241-4503-432b-9901-25aca2e68119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd91ee4-c175-4249-9177-54115d53d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7add47-9e13-4ce5-b5e5-85ca99f9539a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e220481-5a3e-4ab5-981e-0936fe87019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc343da-8bf9-4b3f-8e14-ff5a75b4be12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd490670-b66b-405d-a965-bb560645d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b795214-ea1b-445f-b3f8-c499a67fc17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b471df03-9b57-4088-8089-f8e1e1b69a44",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2d0fdc-bb51-4e3e-b655-df1a2dffca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f8338c-dfda-4dfd-9329-03be6f036561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c31eb0-06ff-48dc-a4cd-33dc23d3254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58757b19-7b19-4383-a160-0b7224390351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae041611-d3f6-49be-aa7b-0c085cea3ed9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76726b3b-1e4f-4dc6-a6e5-3d4cc2c12038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0d61e3-5646-4c81-ac6b-79c374b55473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd8ecc0-8a71-44d5-b96e-f39217a649a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242ada8f-3fb2-49d0-9a43-335155f0880b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bb8e42-aff4-4200-a56a-83ea0a0dc39b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7858d046-72a6-4784-87b6-ec67822bb848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632fd23a-5409-459b-bea3-895a860a253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04dc37-3948-476c-9edd-a7d824920e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed129487-d566-46c4-a4e5-f3988b08e568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc65724e-563c-4df2-9243-e78abeae076d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd30e088-f364-427d-81ca-097fd527f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1a0edb-66a6-44f8-a5c3-4d75c0a6af4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d72cdd-ca21-4b8c-a6d8-a2714105f05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "020b874a-d0b6-43e4-b026-3ef5a4576a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18590870-d71f-4a67-88b0-c616177aa123",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3d1e3-96f7-40c8-895c-943f85048876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a249cbf-4c3c-4d91-8cae-0e4fa66e9950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aa6523-632a-44a9-8a34-f43de0492877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e5d4fd-0025-46a1-9de1-7bdac0fc0782"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbb632e6-4614-4e20-b0fc-a3cae8388e0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1400c7a0-1ea9-4610-9d8c-59de1d313c9b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2993c827-7ca5-48bb-b7be-61460cd21730",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "13c86ead-eb56-443f-bf7a-1793ff30a713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314c890f-d021-4863-acb9-ffc6ad195103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5481d641-e2b0-4298-ab2e-711a9e0aa9ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4aa3362-a313-4e94-98ff-d764ca0355b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "947215c0-31f0-4116-be4b-c252e1db5044"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f987f20c-26bb-400e-8fbf-3d4d1f9dc512",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a783f0ed-ba32-4974-ab27-1dcb83cca239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d847f6ad-7062-48fa-96b5-7ea00f97954f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6106049-e3b5-4821-b117-3a4d7ebce929"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91810f69-0c62-4ef8-a78c-b0dcc19673ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3a309d8-c56c-4859-8151-488a9c1b0043"
            }
          }
        ]
      },
      {
        "id": "da32944c-1453-43e7-923c-9fb2dcd6d969",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "011d061f-9c95-42b2-82dd-85465f0c15ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37be21eb-3c90-4c98-bf4c-99bcfc127a74",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "407b86d9-9a35-4b6e-bb26-ca99818ab558",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a0fa39-9234-4298-887b-1583be23df83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d23b2ab-8d3d-4eee-a368-2bd671a09f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c18c75-6b7f-4768-aed5-77e81a213bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25c17b7-d084-4fbc-92e8-c714d501310d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420325b8-9449-4b6b-92e2-9d8f94326be9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4505f7c4-1aaf-4bbb-b730-65756f24effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654c789d-e426-4bf3-90f0-4cb4c99324c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bada73-5f22-4c07-99f4-f4fda315aefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5f170d-0f27-4cbe-884c-5dcb5e5dfbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2ecc49-2056-496d-928d-589bb3e7ac0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96343cec-1d15-43c6-bc47-a9f1d05e6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a8f965-4c6b-4ed5-9229-3963b7441994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44af7c88-4130-4e53-8093-1e1d0b33fd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cc3225-5683-4a3e-9bb8-f51e866887cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef9aca3-a1de-4f11-a44d-5e6f0f1e2ef8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063aadce-7c1e-45f1-b08e-d438a0a1ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a0be3b-ef4c-4747-97e9-c351aedc9e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00ae034-7c1b-487a-bf35-b6a26e9028b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebe5d13-6726-4823-a327-1c03c178fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1068db99-1716-4cf9-b564-116318bd946c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e777d7fd-7bd4-40e2-b2a7-0df95c6decba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a102916-6b1d-4b4e-8c34-6b099d6c3496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8d362-0822-48b4-8695-f3fdda39c11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0dcd76-11a2-457e-9bf7-01111575760c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305beda1-71ff-4132-87b3-283a3fefd827",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f5fc6-d91f-4a4e-b63e-123b07dfbe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422b5bc1-f293-4aa3-87b2-81b4000cfc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca753e-50de-45ac-becf-219f7a5f483c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf37d2a5-3cc3-409d-b6e5-c9c476ad6eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e22b7-a719-4af3-acd4-bfb530ad7ef7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e3f1d5-a6b8-42b3-90d3-9261adbce944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7598c81a-248b-4192-bb85-e1b21e5df27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb64149-3068-4cf9-9556-7686aecd6c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25370b1b-b46b-47fd-b513-e057006c760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bb509c-86bd-4638-8b61-8bc370aafa15",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc4f37f-7552-4646-95e4-5ca888d45bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce9824d-17c3-4fe1-bf5f-b2ffd6d9925f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c39ad48-e6ad-46f6-ad12-9bb46a7438eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15132688-aafa-4f13-8568-99f51d5e85ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe3fe25-8eeb-41b1-9769-93c005e4ae16",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c88b40-0724-460c-b52c-5bb79d7ec0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0b4a46-bcd2-4023-b6ef-66a9b2365c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63c4acd-0956-4fbb-a574-2ae5c0ffc942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5bd0bd-ba14-455a-b053-73c6d7859b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5934c6de-4482-40f2-be44-15e100e34830",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7a2976-a47a-4670-a9d9-426eef8ac5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748acab-7203-4634-a5ac-44af8a10a5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b45317e-2830-47dc-911a-776f89de6e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e845d25e-aac1-44ac-b770-03368bd8bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ddd447-52db-414d-b084-1567671d3a00",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8abeaaa-d388-4252-b922-8fcdca4dbfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca208f74-a92b-4b20-afd6-a3a7305b0fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420d5179-140d-4656-8808-6c42f2d6598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0741002-216f-4b46-836a-74efdcf83c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2641eceb-c598-48fb-9826-688c66e32d32",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47204ec5-ba89-4ca5-8a47-07ff8b66f461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a135dc25-25ed-49db-ba5b-c5c61077e029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0503e1d-6794-41ce-a07a-720b8bc8447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0bb8de-94b9-421d-b335-c0438d00a471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fd207-9fa6-4c62-9b86-34582ccdcded",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66e6fae-6ecb-4ebb-8197-459b70fdf459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad785842-dca2-46a3-9e29-4552ff722f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b204ee-c7b2-4a21-8731-ad7485e8c6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edb0aab-8944-4dea-9f11-427cc51d6aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233f8b7d-198f-44a6-bb55-6ea39c3d88a0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e45bb80-f7ef-4b10-9689-a076d606472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a01552-5ed8-4f85-a336-aa3c704d2053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69123924-6d03-430d-966c-98b48049e23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6124bbc-e740-4d10-a685-c4bf26d8a71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbd91cc-283e-47ce-967a-a3058f8a036a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c713de40-4e43-4922-8eff-f93a3159ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564e8303-d6df-4d45-a8ad-11aa5b43282f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65f8a55-b9b7-4f53-aa23-44ed67b29060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da17dff0-6fe1-4027-9947-a3aeb5fab0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518a672b-ffdf-483a-af50-048defda413d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d6b3c-7139-4096-976e-536f76ddbc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ba0bcd-e0a3-4c9a-a2e2-100ea0104cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c8998-77ce-40a8-973e-e1e557914d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c650e16-def3-44cd-8a68-09051b2d90da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233240e4-6302-4158-81bf-90899a9d0e41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf2c75-ae3f-4dbe-a28d-4aca3af2fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7313409-8db6-42c3-8c2f-dd95398a156d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5c365d-a4de-4766-9ee4-000dfff194e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8b6a41-aecf-4a85-9fcb-6d09363128b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3399e4d7-fe99-4d1d-b1b8-9411ae200647",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f3c1c8-5cb2-4416-a011-256cf976946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ec533b-4352-464e-88d6-417ec0d2ff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f0d0a4-8fae-45e4-929a-3e3cd0f68e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56e91ab-5089-4e28-b677-f3c203c19bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b5222b-d72d-4b69-867d-ce0c24b790e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfe718-7546-40c8-a3d1-8f735da90932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807ee060-e419-4335-b542-ef8d1618ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac179004-af66-4901-9d35-09c943065022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c14433e-ab39-4c04-846c-32fe313a279a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aee41d5-5f5a-4c99-9fb7-25f481653301",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4772d-bb6a-4816-a13f-844be0daa7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d646c55f-753a-4e6a-8334-9309cbc72a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b789e-9b79-407c-be9d-eee6aa0aab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b86942c-c625-4001-8910-b46480a2cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3367abba-bf1f-445f-a786-bd2be020d943",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5450e290-723c-4298-8918-041fc297de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4b0083-dc81-4e59-97ae-6437da813791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d03098-228b-42c1-a508-5240e133536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e405ee6-9d5a-4df0-a0ab-dbc2228a56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3a1ddd-2cb9-41a9-bf6a-1b6ead32497a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6b9e3f-cacf-48c7-a3e1-3048c4bdca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1a55c4-2ddf-4cdb-a462-da8c7bea46ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e75e5e9-8005-4d45-a1d6-82826e4acd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88fdff3-bcdb-49c6-9c60-9b0a5d3b7822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962cc449-1082-446e-8d54-b19423f6310c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156796a3-d0c3-44d3-95d8-41b49ee78bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ae7b29-c4a0-4fc3-a17f-36ca39ede53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09acf02-188b-40d3-988a-7036d5bdd159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9becf6c4-581c-4c65-bd78-2d5a918b038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e4291f-d9de-46c2-8077-ef17d3e8bec6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd450026-75ac-4382-aa51-895e5fe9b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b382b91c-2e69-42ce-9dd8-60ce28403c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce76e0c-052c-499c-bb5e-c0704a2e0ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d83b887-a824-481c-9be1-9147e21781d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabd5ec5-4658-438f-a0f0-bdf634d67476",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ee52d0-1711-4e57-96c5-0e3d0ef06766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2760b3-63c0-47cc-a7d6-919c9ae4f96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a6bc0-428f-4bde-afe9-7e99d9e4c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1152503e-25fd-4e92-8389-936ddabe0822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0e6d6b-de81-49e9-aa9f-c4f4ebb246b9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f28d4e1-cba6-4139-ae9a-7ace47a31b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36b82e1-b82a-4ccc-b907-3b8c573b57a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028a0244-930d-4e59-a64b-68653ddc2d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a613659-d8f9-4a0b-b4d5-0dc3a3fb20cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9b5cd5-ac13-475e-b8f7-afbee807c353",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ea85f-27cb-41d6-81c5-190211fc027b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1fe8d0-f118-4ebf-a568-8739411472be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dd98d6-1770-48e2-8198-b4c5179031a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987da952-ec4e-4034-9c4d-8a864b76c9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369534fb-654f-4e90-8b22-9956e7ed4a65",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c4d3a-c194-47d8-bda6-ba758d3ff37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feab43c3-8c08-420a-a75e-3ca2df92b9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99aeaaf-b85b-494b-9085-a2b152b1cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115dfe30-50c1-4f94-9be6-4c618854aa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c3ac9-2d02-4f68-813f-3b83632d204d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2782519f-b4f9-4849-a3e6-4f5d4c2863cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a8413f-db2b-4ac8-a31d-87eae53936fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371ff3a6-48f7-4a20-ae76-f3738e4046f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9e1a82-69b2-40e6-9eb6-998b1c2321ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682d8607-7fcd-41c3-a2c3-683e0765f0bd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e2b120-2370-4a4e-907c-4d5d5a4c2777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45b981a-5cad-4572-b38b-f19393a4cd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3153a2-4eb2-47cd-9354-22c8ca7ea641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d1ac53-05ef-432b-adc4-343fb3556d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad7e6d-b38f-45a5-8a43-3c32c249a6aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76948ab-93d3-4a10-83ee-6987d0a3d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eb0fb0-eef8-4758-b735-20725d513265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39632b72-04c5-40f9-a345-1680c199ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37df406-6266-4b0c-90ff-37b27236a33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a3b4b-8a13-42fa-b68d-a16f88d17caa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedd61ef-a5b5-4ba8-8a7c-331a1ab33792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65da43b-2df9-4533-8e37-c93fe7b426c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46e37e4-1b7b-434d-99d3-b90ebcffede7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70bffc8d-25de-4cb7-9a08-bb972c7b5d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89f73f-9eba-464b-92e1-aae8e562b8d0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f94b339-6758-4f25-a159-808ca413dd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79babb3-4f1b-430a-a1a0-130152852a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1804b5e3-4286-4966-a46c-9ed7897b67cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a588fe2a-5fcf-48b6-ba50-e145dd48b053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c1429f-84a7-4343-8e68-4b02bcf094a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad7968f-0f4e-41fb-a6fc-b97d779817d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad37f6ae-99c3-4853-b97e-a3517643583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707dc330-bdd3-48b4-9fec-5196aad8ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28279a8-b0de-4918-b247-fa144c8c1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164767e6-f775-4c9f-a524-881e26b0f784",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ee04de-8b5e-49e5-a47a-e2ac004ec54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c587706-74b7-4543-a366-57b0f174e16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56e2f88-1c90-4655-b0c4-c73229083fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c62518-d723-4109-b465-15d062fb05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202da94-51a1-40e7-b738-69036a2cf7f4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea7195c-3bad-492a-8e56-f275c85545e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cb4321-4ff9-432f-8c26-a180c9d57b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9be8f92-103c-4aed-a1a4-9cbd2a49d4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06da665f-0390-44be-892a-81cad397e19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45c6181-11d3-4dd2-8213-023a57e60265",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3d9791-81d6-4842-aec6-94e281a49bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92181d37-e0d3-4f5e-bf90-bda03299cdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851b8232-575a-49f9-8f7a-249cf6816e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd41b4f9-aa32-4e88-ad6e-f8b08945a990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "328675eb-cefa-4b79-ba3c-897c9d35d248",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31632566-311b-4173-a3d3-1fa11d21ffe6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c2928-1c3a-488a-b9ef-a36682188c2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8439850-e4fa-41d4-bd6c-5493ba3ee86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da702ed-b6a7-4816-bc8f-df523a64e27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a4fb006-a374-4126-b55b-bd3df9fb2b46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13b66876-a1b3-4a01-b37e-fb415a41b169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "465fd230-446b-46a4-9ed8-6a221223be72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13275878-0064-43ce-9561-8e3ab28f546e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae50f614-ca5c-4b41-afaf-6d26113032e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d033f24-7e77-4830-bc58-33e1bf732a01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9020c51-f299-45d7-a7c9-1b557fdf241b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18455d69-deb7-424f-8a9f-ace5f32d830d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42072d84-4084-471e-98f3-99fb971255ec"
            }
          }
        ]
      },
      {
        "id": "1ee25b78-fb3f-46d9-bafd-e00c55cc78a3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e3921435-e976-41b3-9ba9-9649337fb329",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a23e56bd-151f-493f-8017-2c87bb3a39dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d265a03-5a47-4964-8450-530cc0fe1802",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598e65a-3c5d-4f0a-b9ba-fa3b1e8812a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d449381-82c6-4dd2-92e5-a21a8184840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4ef04-713b-4cbf-adfa-dd7d29d8e961",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91857e1f-7985-4a6f-ba1f-92c7bdc142b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d2982-fa6d-4198-9e25-64e5375fdd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f184f807-e3bb-4d6a-9cd3-9ecae0dc77db",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8458937-dd27-4bdd-a03a-6d93e44d9459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c364f2b3-0c18-4afc-a9f7-64ba0c154c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5542964f-f9ab-433e-a312-dcbcf5c01834",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c319ca-b269-442e-a07f-dba8c77ab7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f374253e-bd89-4242-a0a3-4b4dcc8582e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2593b10-c149-417b-af4a-bd71c56dc6f5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd6f8c9-ae82-4cb1-9331-c9fc43ce759d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de36b00-da71-44a0-83ce-1fdf4902dfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5800ba-03ab-4d73-a481-77913534a438",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684ec927-fe07-454a-851b-f606552b5824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c21f79-b836-4894-8457-417cea109270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8885ee96-387b-4d24-90ab-511a0f7bf1c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a621e-0052-4d17-8334-38aaeffd611d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080201b5-6967-4c8d-82eb-4845540be964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbfceab-207b-4207-99a5-6d6ef3e0a62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5dda15-6635-4388-bb39-9747fd6e2f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca51c1ca-abd6-453d-8fc1-ca4d34625339",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a9f3ab-7777-48c8-a48c-1a8271cbe67f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3dd0a8-1ca1-4eb6-8549-5b11e1d01836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba87c531-8d9a-4497-b3bb-959ab8b6ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c28d56-ba05-471d-b44c-f362c4677fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b967271f-3b97-42d1-bfca-e6b48ce64d6a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea4bd27-dfd0-4ca4-92d4-f591a665c360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad00008-4f2f-4b67-a9a4-f1a582b49d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ac7753-d874-446c-afbb-8c5c5bf7f94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117b6ebd-6457-4383-94ee-e0933ca464fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ab87da-67bf-478b-b439-09b1b4961ce2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d799054-3efe-407a-8262-d3678b0d215d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30543ebb-474e-4acc-b342-67ce09e24090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e3575-9b2c-44ab-b1bb-4aaa4e14ac04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850bb787-0b0b-4343-8158-d56693c3f03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd00620-d1c2-4020-a35e-728ce3c17e07",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35871f42-c1c8-4191-88a0-ef081be18426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fd9496-9017-4d9c-a06d-152c0423f77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d059883-1991-4456-ad79-7ab79a8a464e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275c394c-3d47-4cb7-9375-727ef95a1409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a05933-846c-408a-84e7-3c162c337ecb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9332f8a8-f457-4211-82dc-f80580cb40d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d607e058-0838-4c1c-8624-d27f80960469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f00ed8-5d04-41c0-b664-1d138d7b3cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fd51ba-6142-46cf-8390-7d7ec1385908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db751a-42f7-46f8-be18-5caca20e8acb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f340bb1-7088-43a4-8c9f-7b3c6eafa122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d6ec50-1bf0-4320-a2c9-41e4fadb14f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0595c02-c30b-4ade-a0ad-64ab8f90a312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda40048-778e-484d-8515-e3b33a5b49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe23d3-beff-4654-9040-35d5ccfdb519",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dfaf6c-67e9-44da-9f77-2c0f07e69fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5364f17d-a414-45cb-9361-10b1a2736251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd21ae60-c5df-4604-bf2d-ab076cea4f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a13836c-c51e-4b0e-a14e-965566f728ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4af094-58f2-4e3c-ad41-7595d5c25864",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca2f82c-15fa-43d1-865b-a20101b08f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb75148-fc28-47f0-b2f5-e37b5278b95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb7e961-b7b9-443b-af1b-2bf7a73841df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4e9cc5-30ea-4763-8b32-78c9e6c700b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6eaf50-8b51-446f-8124-78ac0889f57f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a3e745-51d5-4785-acda-33bbb94831b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c59284f-f453-4658-9d5e-9c31b9e0801b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564126ee-7d0f-49ef-bfbe-84fdfbaacca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe2b160-c781-4ad0-9799-14c574e5879d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827545a2-937e-4c33-a4c8-d814b7621da1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31675a78-1b2a-4e4b-813c-6df0b0d31c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c485184d-1447-47ea-a46c-fe6448463c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495c251-ff81-41bb-b29f-ff482499e991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f2ffab-b811-437d-a2fc-b18ed9d8804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568cacba-3732-42de-a3e6-871573928d8c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4faf46-adf0-40d8-87d1-1adc3b36d01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0522fb76-c486-4718-83f9-582a9d2e72a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb01442-0e5e-4c89-befc-f1ff9c47cab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf71fc59-7f2a-4241-aec4-a6da7e7c4d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9b6fd7-f609-4fae-8dd5-6514a2d0a53b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e8237-be6e-41fe-8fd0-e50849f65b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526ffe99-4700-4dcc-926f-ed299a71e8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae94032a-bb25-4add-a332-f1891922c229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779b231e-5850-41c8-a7a3-d6d1a8655497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ef8061-7738-4373-b548-7c9c3c65b2aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c12dc83-478d-4d84-ab3b-efb7c079faa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d0106d-2b16-4708-b707-750b5d6ec1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b44ef-e80d-4932-be72-ba917df959cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b2cc58-18a6-4145-9c60-3668b251f046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58db8d92-0bed-406b-ac49-e6cb184512d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ed44d-4efa-4d31-b2fa-acff631d4da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a6e681-42ef-4ba0-8dbd-0ae2db0eb2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100accc-c34a-48dd-9a12-b9ddd29cf116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6a876d-0f21-469f-81da-068e634fc3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a555d4a3-756a-4aca-acd8-47dcbee0950c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0d454c-a905-4664-bc34-136eee7175a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f7d968-7420-4949-8b05-9b8d2e7b6978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a79a3-367b-4785-994d-e962e6ab69d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb493c7f-d1a5-4829-bcd7-6bac1d85c749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63979668-58b4-4682-b0f5-66cd332c0ae9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff097b7-eb4a-46d6-bafb-e2d4eb1038e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf9a5b5-730a-4ea0-9e5e-b02601e98af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1caa7ec-4bff-43cd-af59-2a5672992d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59e8c66-928b-4346-9912-8cfb25465256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0920dc26-7c35-4474-b760-180a85b65b1d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb844667-80c6-459e-b0ee-8ceac7345982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02fece17-4588-486f-97fe-5edc33d38b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8339ee-c838-4b51-b26f-33e905f96926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d0cd0e-8fd3-4e78-ac35-623ffb5f3505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7d8954-4ddc-477c-a316-0da307e41113",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233566a9-a5ec-488a-914f-0546788da303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f247ff4a-fb1c-4dca-b76b-1de048160294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ec4964-832e-48d3-8989-54a82b80abe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac47aef-bf16-448a-af4a-fa862fbb18d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97633911-b036-414b-af29-262229a4f9d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923cb14d-ce4b-4ae0-81a2-fd3d8903c30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef555b61-e097-458a-aac1-4d3118f95639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9530d8d9-dbf2-4b07-ab37-2b82e688e3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c0a071-3900-48ec-8af7-bfc541996fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b0d90d-6e0d-4c32-b0e7-efdd7bf9c23e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b23701-e541-41a2-a791-9b866501459b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622e28dd-bab5-4938-b59b-222b1e8312d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7de5d9-334f-468c-a42f-18db44c5e027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d402a4de-0f7d-4ab7-8ea7-f2830804c1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c641f-7c9e-4a2f-badb-0bb75f99c2bb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ea6aa-801d-4a2a-a779-e98a78c64302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb14738-6a0c-48a4-bd27-8067b1baa3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093136db-a14d-4f03-ab88-9ef907f060ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7beedd0b-cf20-4de4-9445-6e7ff063700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb476cf-4107-44d4-9f2a-ccd35c366f41",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60af7c20-20a5-4433-a8b1-01ba9d829c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a21759-fb56-4a4f-b290-2f1ac0fd39da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774a4acc-bb26-499e-88b7-4e938414fd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6306664c-b81b-4746-bb8a-0be7ec7df813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c36ca5-cb03-47d1-9f71-6db40be52e54",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ca5945-e8cf-4b08-b572-a3c736de9e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4077c547-20b7-47b2-b5c4-192dc8d7e553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f76194d-624d-4319-b22b-e6ebb9b45db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f803f4-a088-4219-bdcd-a34630900945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de018305-2337-4968-a6a0-2d59ea4562ca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebfbf0f-59dc-4276-8a9a-7d07aa0f282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc754a47-ced7-47b5-ab8d-27707ff02132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfbcb24-43c9-4ef5-9855-7ad748e56e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6f65f5-9701-4aaf-99d9-92ecfba5f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaeda59-db06-486d-bd89-e13c2f0d3980",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d83c768-d13f-4001-bda2-c1db403f1d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e4eeb9-8ec5-4f08-a849-5dfa7f3bc876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb769eac-4992-403e-bae9-6962e88df220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a03ba0-1959-40d0-b90c-73c2d724cebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2677b2-48da-453c-b77a-8774a6c61cda",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41032808-2acb-41b2-ab2c-547ca3b6fac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0dfe55-0ec7-4be8-8a5a-bd97348614f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7096d6-f4f6-4413-a152-ffdfe5284f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d0f7a4-7fe9-4d3e-b091-648f60fce279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c3fed-9158-4d10-8027-ea1975ce0fa1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e15a98-c139-4ae4-a2bf-ba1bd2af8f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf67c0a-a719-44fa-9ff0-e8883c844c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9630f4-bc5d-4d0e-ab8f-534b9b187aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1e7139-bac2-47dd-b65a-f000f19e7d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08768e6-50af-4004-b505-c40e8f480f02",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8f3d2-4ba5-43b4-86be-a75f5be8ec61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1907bc-0f4d-4da3-8660-3f7ac427c113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6a278e-f450-4e34-9e15-76e2a2f58232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9e993a-b652-445a-be7c-c4f99b27d733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88492b7-d429-42c6-a5cd-fbcded1b28e1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80ccac-f81f-44be-81a7-681e053a03df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abd8459-5089-48de-86d0-28936f265fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8add6ef3-1b5a-40ab-98e8-c44f3d91e888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1b7c7f-7857-4cc2-b923-b8802d78566b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a804c81-6c39-4aff-a9b5-a9eb795fce77",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56cc6de-cb64-453c-9fa1-f8105303331d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdd992d-743a-4a2e-b854-dd960e99f593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630ad2c8-f66c-4ce6-9f87-25172f588c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c4584a-949e-41f4-b99d-ed63db60aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c99ae-c4c0-4292-995c-7b6a41a75503",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834a11fd-b0cd-4e60-9b37-cff2c4ac8df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b544c077-1b40-44d9-91b8-3a9d8d1d3ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca41c7-60e2-403c-84bd-b1bba4c91b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550927ee-b6da-43bc-bb60-274d7e8744d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfff722-cd22-46e5-84ea-b0240c39808e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4095a5a-3eb7-4ee3-a2f4-b25dfe8d4e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96233e25-18b3-40d5-9a6d-97aa99d4f63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e10e5-15f4-49f9-b6ec-3649f6dba5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c783f274-b65f-4a1c-95f6-a8a688d663bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f726adbe-a7b7-4f1b-8da4-c1d80c17ff55",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a0affd-31d0-4870-9264-bf65df0a0be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7697845a-c753-4e9b-81ce-786dcad2352d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7362d94-592f-448c-af59-645dad5b35e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f75934a-4184-4a02-b00b-9bfe5fbeb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8307fc-5d03-4875-8b2f-abe0b3d4917a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129ebd9a-26d5-4a82-8741-0156d45d3093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9548c09a-cd99-4695-bfdb-28d3e2a833d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce9a1de-0251-40c2-adb8-8380862ee471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e17731b-5ac8-4829-bc30-b53f7115fee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93872e19-4d96-441f-8c08-f475ee92e1e2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec21eb0-0609-4a39-91c9-789ee8ebfcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab6f2b3-b6d9-4801-aa8b-c348e0f9fc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5759ff-4dd8-4c17-bdc8-ecc3bbd13535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c25ce1-9393-454c-945f-e4683859f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ee76ee-8aa5-430c-8a01-36689a04952c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5db92b1-df7e-43cd-8bf7-92989801d004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f194095b-aeb1-4e0e-b2f2-47a8d03ba04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ef79a8-8fdb-408a-be8d-d2b9de68ae81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1091ee-d7c0-41a6-915a-dd3c47120ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec19a1-9ad1-4a8d-8869-82941577191f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56009349-d7f8-4d72-a019-0a5d522254f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c08123f-04be-406c-be99-0b661e83b9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5856edb-59ee-4073-8a65-60aee69e1cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c0965d-8a0f-447f-8a46-d63abb0f74c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ba5b5-7e15-451a-b712-684d8526086e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5716b5-759f-4261-a908-9467135d17d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb10463-d6c0-4d62-bf6b-90feed7b921f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a193632-6c31-4495-922e-94520cd16aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb56a73f-6b9b-4467-9f71-7aaa175ecc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9427a73-8917-4828-8a6d-dbb7c655e779",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b06ac1-441d-46c1-8a33-2cb14e345129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d82fce1-2d8b-497a-9205-005f7be096d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06d9e61-5b8a-44de-9ba3-803d5a8a985b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea55ded-20f5-438f-aaa4-9ecd5d4f55a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a05bffa-58e5-4472-a7ec-2fbe6b98ca84",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e765478-4054-421e-af64-c11c1db8f2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c507876a-bf29-4a60-af66-ec4a02edb22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa41f2-4201-4fa0-9c71-da623819f783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324a863d-1a6c-4414-8ba3-de3480ef4d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4631fae2-de2e-45de-9717-b490369ba67c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f315415c-4b9a-4189-969a-4594fd76b984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158e07a6-6cb5-4bca-8dda-593147ce9ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e489f74-6f38-4738-8260-c142470d8fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1a2389-2c02-4a0f-8cf0-433ecb82aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ea4d1c-5e1b-40ee-9806-78846bc0b17c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b42b28-b429-4fb6-a943-9164561ef04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a986ea-0c73-4832-8a03-e78a1c3b7276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205016a5-1965-41fa-90a4-e9d7357cfdde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5574734-913b-4a4d-adea-7d6da3ccf8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1aeb4b-423b-4db2-a636-13a6c755d73c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ff895-bc3b-43c8-b1ef-acdfcfca2b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c1d509-9926-43f8-887a-4bad5cc3b1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f892c09-3529-47d3-9ebb-7f1b16d97139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468ce7db-6d59-4d5e-988e-161b992b4b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7ef757-1e70-455c-8427-9273d6135ca6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5eda1a-b7c7-4e2e-95e8-20fc6382cb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972529dc-86ef-4864-a383-769eaa2d7970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630f62ad-5237-4e92-b0f8-3bb0168795d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754eb40d-6c05-4f65-840f-3ee1561d9ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e4e6c1-1c06-415c-9681-0e3d1518cb7b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a10d00-11b1-4741-b83d-2dbcfc3588fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd8488c-5790-4445-8dc5-f860ba91dd25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260eb591-5bab-44be-b6a3-e1bea37f39b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4d2d85-4728-422e-8c79-50b13aca3d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ebc573-b8c1-48ea-a528-093f8bde17db",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab913b-99be-4c99-be37-ced28d7d1e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dfc195-cc54-49cd-9b47-8360bb2e4c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ee4c40-543f-415f-8865-fa061946a5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5a7e02-4a22-430a-bddb-ded22a6eb3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845e81ed-c4d3-45d6-b411-27a9cea4f2ea",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f84f90-56ca-4c48-96fe-08938a38e691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49342bae-6844-4ebf-ab07-8c91e18cfc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5517502-3916-4a67-9288-a2369e0f686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4cebce-8533-4c40-b629-e3c07a7f75cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a253979a-4bbc-47b1-b833-8e9e45e1dd59",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a018bda2-4ca3-41dc-961f-d39ec18a763e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5649cfe-a524-4db9-8abf-3a3cd5d03053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db20d1-f0b0-476f-96e6-2bf12740c577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2acf779-dd93-4f4f-8b4b-2fd8db6fc010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eca2d15-b0ef-421e-9d04-c3f90914b78c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f033c9-a5e8-4d40-a665-9525b221c1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1728e4f8-e6ff-488d-b1e9-7ef058f5fba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b65f37-80dd-4dc2-b012-ba9064900af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9f852f-01a9-470a-9227-dc6e88519a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe07c8d-a878-443f-9dbc-9749222967f6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5014496-ae3b-4772-ac3e-afdf7db8464b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19f0fa6-c399-45fd-af38-c942fa4b4f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8b98b-3afd-4792-9495-fb85424cb249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6783a71d-51ef-456d-8545-a3920b1e98bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a393c6-a20d-4962-9625-d5e48509c148",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120616ce-aeff-40e4-980e-5bcc34cf95d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7161e6-e9f5-4a6d-8833-8565f9e22c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65e2672-0a77-4be3-baf9-b6a9f04f7cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456b4ea1-5bad-4466-a25f-9382d796d72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2763fd3-668f-4294-94bb-2fa077a0f35e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe001a8-40a5-40f5-914f-51faab652699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3c20da-46d4-40c6-b008-0ba16f979d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f6dfcd-cc2f-463a-9dc8-f4a68ce35f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb36450c-6ad0-4cce-a830-bbd3f34e588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41e4d5d-aecc-46d2-880d-e0777fe68d95",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb423fb-1f17-42f2-ba84-94e6be4c9e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb7b949-9df4-47e1-a3a0-9508da0247c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4ffb6-d4e4-4f47-8b45-6fe3fd593eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebec077-7e78-43ba-8f80-b8c6355d6437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8c80a3-4f98-4e0f-b506-81ae4d8681e7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1802a83-8d38-493b-aee1-d91fc030dbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0f0649-d61d-4e2b-b52e-ec88198b2a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aad0da5-ff82-4175-ba67-d3cc4da31561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb84d186-57b8-4e52-9f04-a3d853c52e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d49c90-9cd0-4970-9121-c1da269cc7a8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f57b13-64f1-4557-95af-0be86375e3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b5360c-1bf6-4514-a54f-a8476d961f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049b1ca4-f79e-4307-a9be-7d751889ad33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2383fce4-857a-444d-98ae-8ffcd6454e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b7b3e-a34b-4d3d-8674-09b5d97e8f36",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ca0511-9e26-4d7f-8e5c-78ba9669f63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bee7f9-6357-4a4c-a818-ffa00c577e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceaa6ac-f44a-4a5a-be0d-b3e57c30c763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc9362e-038e-435b-98c9-f7d62c98b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d211bc-54d7-43c1-a03f-9e11ac3aafb2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6ca7a2-3380-4b85-8d4f-a31fcf6bc842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e76cd23-d898-48e5-8132-4763922c2e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47988a0-ac76-40ee-8119-2edebe0ae0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0570bb38-2d5f-4212-addd-b53c15754426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d4d94a-960a-488c-8ae0-9cc2a11bd618",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8532445f-3315-49c6-b34d-ee7e9be1dada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ea3d46-a216-4dee-a917-000ec1f60f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b84c76-1996-4c54-bd08-c8e641d9f3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785f753e-df9c-4c63-b5b3-8bf66fe7a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e57e0d-786b-423e-8bbf-03a93f5cc053",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30c20ee-fffe-4be1-ac26-e38f1750363a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb331583-cfae-4212-acd8-561d3612063c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b0f62-6834-4f17-96f1-0a74567cdb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd39e49-b0bc-4652-a2ba-82531067b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376ee69-51bf-4602-8539-8c285f09b786",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa0e7df-3326-46b2-996f-05430b75e282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bce4f83-a6cc-4bbd-87d8-c1bfc12a79cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7938bb5c-16ca-42d0-98cd-e42114272fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90904301-0b4a-4d9a-bce4-cd57254be9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c572eb-9a6c-463f-8c7f-fad40afcd443",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d19ce2-5b3e-4483-94ec-55d6bd5825b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0c97bf-8560-4f76-8d89-e299a108cd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75dd814-056f-477f-a9c2-95747059f521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46d6355-85b4-4588-b18e-96e9365fdad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b95430-16bf-4e99-9f35-d32cc18c223a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c89c763-17e2-4def-abf4-7f71b4856a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d99190-86af-4c46-868e-12ee2b451143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfbd7b8-4d18-4947-af8b-7d366b0392fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cd19ea-dfc3-409f-abcd-c3d64b76eef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42247a24-d9ee-41b7-9898-93b2a219c50a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672600a3-2654-4c3b-bb3a-3288681a15d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc254ef-60b3-498b-89c8-2f3e9c005bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1e4c64-818f-4251-895b-cda65c9cd4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a673bd-49f5-4970-8a0d-e67b287f9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d902834f-4d62-4f63-9aa4-8c911060bf7a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4955016-9efa-4762-93ce-059616dd6e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6461fd78-e122-4abf-a3a6-0e6e67581ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ca607-9d91-4043-899a-033a5b1ef158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0ddc54-46f4-4f0b-8bb3-33c055a1ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4582805c-417d-4272-ab38-0286ed4478ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b19914d-4683-407f-931f-aa227e0aa99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db647a28-b852-4126-9855-02bb8be013d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce99e6-85b3-44ad-86e8-bec35692683a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd53315f-e3a0-4095-945c-5401bcabbcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb21fc4a-78f9-400f-9049-1ebea4ebc1e4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4d5032-d7a0-466c-9be6-808ea8ae1631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17abc1aa-2186-45a7-8f52-4483aa28948c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc4d25b-4a79-4b4d-bd8c-2d85b8da5708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b590f0-e78f-448d-9ceb-c43364c46faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd2a381-3d79-4d0e-b481-f75c67ad4a3c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139c97f7-13bf-4606-b254-9938f059d10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81c6933-fa7f-4a7a-a774-421fc31b0937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd60e9-f20b-4940-9e11-bd4878f2c9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e27fb7-10f9-4c15-ab84-a59fee48c72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39880ac9-e62a-4061-ba08-22371da7f351",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd2bf44-7d5e-493d-8e52-74c5d86b063f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a26daa2-3782-49d0-8a3c-8b01ec5bd8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baaeb32-4d4b-41e8-95fa-e3eaeae8d970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a9d8a7-8af3-417e-9f40-70b0cca804a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3db0f-e48c-4054-b5ea-eee70e048aa1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1155e671-2d0d-4b0a-b6e1-00dd728ab6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dccb327-5ba0-4be5-a6bb-a9607a449933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd1331-7059-473c-b947-c675598bed3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f746514-4c08-41bd-bca5-b29714e7a847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3151e3f3-84e6-403e-9bf1-660c915cd869",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d7db01-8ba1-49bd-811d-ef241aa5283f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0382307-f499-4e55-8a72-d535e7e94be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2db4c05-c434-4119-8d55-32bd08e958b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d9cc73-4d8b-4cae-b524-33252eb229e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ce9a65-2ee2-4cbd-9c4c-bee577e43cb3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0885236-10d6-48b9-b012-b7b4bb0617bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c1a818-1595-4919-ac85-a37ab159355d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa7ea55-d288-42f7-bf40-63d3fde5819b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570d5118-ce3d-42a9-b9e3-ff23ca286c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8fa350-03ff-490a-9a40-07a55f89c05c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f84d413-e2de-4d7b-b634-682f524280af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f1b8ea-1c88-494c-81ec-6c08f9d78e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb57c7-8345-4bd3-b7a4-207827968ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdc713d-9771-4ba0-9f06-35e0c9259ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb446f26-f577-48cf-a146-5c8a69f2e69d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d58537-326e-46cb-801e-fde958b95b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a51bf9-1e7b-427e-a622-92bcb3684189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c7472e-4ecf-4a3c-8891-1465ac00b73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d8ac4c-9051-48f2-b61b-b8f89c21c236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01cb0b7-90bb-4ed1-b9c8-03ad0a2ff54e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa785e-59d2-4ddb-bd41-f77623b7d741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ccb594-d004-4cf3-9e94-f15ed5372221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb5612f-dd26-4a78-8397-5c42e6a45ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0607638c-d296-4bc4-ac8a-d203baae2ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b694a8f-6a3c-4a3a-9a8f-65fecb37567c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344d171e-ae87-4a5b-9d54-bd6395007425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a3c270-0271-469b-9b8e-bc9f061092d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba02c2c2-2bbb-4d92-8e2b-4779d6503ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdcf42f-5eaf-4342-9ffb-60861b90d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae287e7-e6db-4cd9-8e80-d456173b24c4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd60eaa-7940-42dc-b54e-df59e8995914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5049141-022e-4f7a-90fe-7cba7b9fca21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484adcd2-27ee-42aa-8fc4-da6024bcbeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78657056-43d5-4dc4-ada8-1595e720de5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b031e453-ac57-4d86-bede-7cb69b5b585c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9955975d-0d12-4324-bcdc-b1c629454cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b78650b-29f7-4991-bc3a-4427afcb65aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33510b82-1579-4b8b-b63f-562a73cf2f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdcca63-a4d0-4679-896e-376ed9d5c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81859e3-4c91-430c-8def-abae7e6dd88c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952e0fc-3098-4f18-baaa-4d509512f842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0c98a8-8add-42d3-8abb-1165531f8bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c4e1e2-af30-41f0-92ed-08f8eb113478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f0f63e-a0f7-4bc3-bf19-caef9055d680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c69b8d-58e8-4913-95b3-f5b687ccc56e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e167123-c556-46ce-b621-4160eee84080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eef110c-605a-4250-be30-0ccecc2655de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b06ffe-ce11-4b09-94f3-bfb87016ed0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7778fe9-5c87-40b0-9136-628885db1ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fab765-8764-4302-983b-dcfd924ecda9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd8422d-ab39-4f31-880d-593dc5b1d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df63fe82-8808-4197-a59d-afaf8a49f273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be9fd7f-6a42-4c1a-a921-c28ac55604ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6930992-a941-4b24-8abe-9c8539ba138b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dfc311-d7ee-4738-882f-51ae1a6ce3b1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4deba9b-78e3-4399-bf5e-23a689b076a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf4245e-bcc6-4c18-88e7-a377f67c4836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e85935-35eb-4aa5-81d7-04d30b5ff0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9090ab4b-2afc-4150-953c-5ac08b93cc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b784e51c-986b-45b6-a2ec-32983007294a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87113ef3-6a5c-41ca-b11b-36509f6be1ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c101c17-d8d4-49a3-bf75-ef92f3b1b9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4389f356-3cfc-4889-ade4-e0e3aea55fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394364dc-4925-470d-b205-0be89bbb65b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6e9051-45c3-4ceb-904e-b62e786802c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d25269-7051-4d24-9d12-57cddf561061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9cf6b7-28d9-4e83-90ea-d2366b96de38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589005bf-503f-4130-af19-31f529b999ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c1aaf5-967f-42be-8401-492887460e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864c2a53-eafc-4430-89c7-2819f7924ba0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf37a3f4-cb3f-42d2-88ba-775d9d8945e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f677e727-01c6-4096-bd5a-e4b96c2dcf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4de10c-4780-409c-a1eb-a66a8e2ffaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c438139c-63e8-41af-9915-e99c6f6c51e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef297b9f-fdbc-446a-baa5-428c41e5bf5e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd0ef96-2d7b-4f21-9034-44bb64cc9127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b29703-66e7-4b76-8b47-200bd55c90cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589888e6-10df-4768-b7e8-4f6503130712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ae0496-f4ab-4eb1-9160-f52e6b6525b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0395a-02d3-4db8-bce4-799240eddd0e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baa7faf-99d6-4840-bd9e-b405ecab8ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0162cb-e97a-4054-9c4d-0bec51d0637e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2278f555-d4e6-403b-a521-0147d5897bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88950c0-a4da-4db8-9029-61bcf8e6cae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b656faad-469f-4824-ad38-73a7154da20c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7ce9f1-38fe-4423-a962-6bfe29145a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cbe44d-8d0b-498d-95aa-929bae096a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4040874-c54a-4abd-b039-318a105e5091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99ec3ae-cc24-4830-95df-40fd4cb091f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45136b5-5979-4682-8216-121826d0259d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b933036-556c-4f39-b022-63d15bc850bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b12a09-001f-4252-8247-2d92db874af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937d1643-1169-4180-a77a-21a27dd974dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed4e3fe-62ff-4daf-9f4a-d9b38b581235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d3ac10-7af1-475c-95e7-ae6f80a9611c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748ee47d-4b22-41fb-9921-6a2e623b6359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a105ac6-8e1e-4a7e-a272-b6098a55011a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f0c30-f90c-4b79-a0d4-aef4428e0936",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335807f5-445a-4c12-96bc-0f78315c385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f18802f-96f8-4940-b672-668ae68a6fb8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e102d72e-9099-4d03-b3d8-29d9bb2fb4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0824d1-4359-420c-80d3-e31c0231ebfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64e1040-45bd-4c87-bc57-4d8dc8759b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3988bb03-48d5-47f4-84c2-ae1bb8cb7548"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1792f5a0-14e3-4a47-9f5f-2eea6400fe31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdbce188-f4d2-4a5a-ad62-8309e166e0bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3be26821-4e31-4bca-93ad-f8e99b362351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d6d98b2-7529-4b8c-a27c-64bc9713089a"
                    }
                  }
                ]
              },
              {
                "id": "409ee1b2-15f2-43b9-bb56-a85ac703d2d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92883118-cf00-4e4c-84c2-04822f063c21",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0134d312-4b8d-44f5-ac6c-ebe66f08f74f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80007072-0491-469f-b987-e61d8b0668e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360fe78e-9edc-4ed0-bd7f-ec19ada35951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de394790-a751-481b-8f9a-5b87e5e1eb8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfdb52ff-5bf0-4091-a351-e29564425ee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a5ff7d-d943-4c16-b599-398a0c30950b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d16fe7b-0f10-4365-96b7-21ea3e254f0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07006181-033b-42a6-a38e-a717991459e4"
                    }
                  }
                ]
              },
              {
                "id": "dc10f1d1-ca2e-40ab-b4e3-be6b51545c11",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1e52146d-d6e3-4bea-ab30-836e012b1367",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5082cf87-0a16-496a-a47c-722306eb6c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c5089ac6-35c1-49fa-a823-7b67c8a070ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a082b6ed-c96f-40b8-a284-2c27c55aec9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036858b2-a58b-4d0f-8182-10ce688630e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3bf50310-9f5c-4e34-87fb-65c425cb0bb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15028350-4236-4fcc-9e0e-5b49f60233e4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c53ce394-3e32-481c-b6bc-5245466391de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "985dace2-9a41-4da1-a186-0779b39417ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7aa7f0a-7428-43eb-b991-997fa36f3835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5204aef4-ab4d-4036-a4a5-4afe01d4dd50"
                    }
                  }
                ]
              },
              {
                "id": "2c931efd-f244-40b6-9860-fc330ca8b0ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be74f4f6-125d-455d-8a62-dec5f4b5180a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "831c2707-d719-4d14-8022-94d7218f0a0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "796c9a70-e44d-4ca7-bacf-e940d8b57cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ce8f6c9-1e2f-4c55-b92a-bdbb2cb89f50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aca1c2ad-5344-4e85-af5a-aa04e7b413c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8bd554c0-95d4-4892-826a-cb716fe708ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a839be9d-a494-4c12-a882-35b31eb80185",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0eb6f3a6-53ca-423d-aa7b-3b2fe934c3f7"
            }
          }
        ]
      },
      {
        "id": "9d37855f-ba73-418a-8421-00cf574430e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "20cdfc59-9065-4655-9dae-281d1cbfad2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6021147f-8931-42a9-a373-ae26854983c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa48b94-455a-4911-b925-c5f9d773b55a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f86d3cc-2efb-4232-aacc-609fb96a1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7ceb556d-fa65-4587-bf2f-d980f7415767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b855c-4f01-4c9a-843d-106e9dccaf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b0b7474-da8f-45e5-bf07-7308224a2619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1498858-cdd0-43e2-85db-867285fdfbb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8b67d3-0d44-4e8e-abf6-2b4c18e2df54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "475984ef-aeb2-439c-9cf7-dbfbb15bf086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a91be940-d12c-42c2-ad99-e5342145e354"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb0fe5cc-b732-4fb4-86e7-bdb301f98f96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05515740-9978-44f6-96fa-aae343025304"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b397f44-5655-4e0d-a0c0-49445d53a250",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ff13e5f-bc65-499a-afc0-f00b9ac0ae90"
            }
          }
        ]
      },
      {
        "id": "d37e2018-0b94-43c6-b609-54073cb39a5c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c97c187-6df7-4171-8cc4-c96c367a0a25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "961680d2-9d7a-49fb-a70a-62bbacbca59c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06c65727-f1db-4e94-9288-15811aeb9c73",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbd5311-d528-492c-bc96-d32707790db3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ac3028-c462-4735-9234-754a69b5dc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df492c84-3d73-4a52-ade0-f79fd4b5dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "144a862c-9029-4648-a2c8-947e2f9f058b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b259d9-6a58-4e7f-a14f-0f005c486eb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ec3d98f-4edd-42d2-ab4b-4884eb44a3cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5165ae90-6746-4c96-b58c-b318a6f37f8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f29404e-82b2-4969-a9f1-d7f944e075e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "014638a2-5c4a-4b3f-801b-b34e55e15e5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1487abe-90d9-483e-83e4-33f8a0d2dede"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25027e14-8446-4b36-b666-9e7acc793334",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f36dbdb8-7aa2-4175-8b80-83240b955e83"
            }
          }
        ]
      },
      {
        "id": "320069a9-46e3-4f99-848e-9188b3303960",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78d0fcc2-92a0-4a21-ac0b-bfd1830e5ed6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5fc879a-0d73-4975-807a-f256a9161f3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fee89de2-9ee7-43ef-b751-df6bb46cf0e2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d287b1-6f25-4d03-8be2-487df2096005",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec5161c7-eb33-40f2-b943-ad3d361b7d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2852a7c1-33b7-494d-8d4e-2137f9444463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c2e14c1-6d4a-4270-b458-461419d25e41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eccc216-1a5f-4890-9323-c13e0e58823e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6006960-f53e-4ef7-bbb7-a51ec393ec61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5725cc71-420c-4807-8b9b-61e4b3133024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3436691b-b75e-43a8-b1fd-5c9813d8bf74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f09cf2b-b070-4c36-8924-ca6b70b6103c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d64edec-2525-4e19-9440-5d5a078380fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bac599c-61bc-498f-8dbf-3b1864206452",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee7f0d4e-33fc-43ee-a9d2-b111bc137ccc"
            }
          }
        ]
      },
      {
        "id": "51736edb-f53f-4349-aac1-be0c4ef09175",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53931421-0915-4270-93af-f1fb44d9ea32",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e34f5e9-dd75-4550-a76e-03bbbfac8ad2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0e7d7f46-9bf1-48d9-83e6-84f9c7047fa7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d95e4f75-a899-48fc-b0a1-b599db3e6cc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "499f1fc5-7159-4052-ad57-4b213853c5fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.116197183098596,
      "responseMin": 4,
      "responseMax": 268,
      "responseSd": 17.818842445623808,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696206841309,
      "completed": 1696206855543
    },
    "executions": [
      {
        "id": "48db615f-fbc3-426f-b66c-63d115867865",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab0d81ea-b049-40e0-bb98-ae386d529c78",
          "httpRequestId": "c5badca6-294c-4eb8-93f3-fbcfe9b9ebb2"
        },
        "item": {
          "id": "48db615f-fbc3-426f-b66c-63d115867865",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1e6b7461-34aa-4730-a2ea-5450aac51135",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "627f609a-23d7-443b-baa6-e09315d11a43",
        "cursor": {
          "ref": "c0d78cc5-d1d7-4a67-8c2f-eec0252a4214",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a705d8ee-c2fe-4144-8ca3-4bb24d96e0de"
        },
        "item": {
          "id": "627f609a-23d7-443b-baa6-e09315d11a43",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef7f4cb5-3d24-4349-917b-e5765df2c096",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "68f408bd-29f3-47bf-9c05-4d262566d93b",
        "cursor": {
          "ref": "7f895132-663d-4dfa-908b-b00b84869e0f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "91442299-ca7d-4199-a642-2d27c4904131"
        },
        "item": {
          "id": "68f408bd-29f3-47bf-9c05-4d262566d93b",
          "name": "did_json"
        },
        "response": {
          "id": "a06e0924-bb72-406d-a130-55e4b0c376ae",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb4931-1211-4c77-bce1-b2fe44ced4c0",
        "cursor": {
          "ref": "5ba09547-cc20-48a1-9d13-584cc9092be1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c95b5e3-35b4-444f-a507-b51f0366e756"
        },
        "item": {
          "id": "27cb4931-1211-4c77-bce1-b2fe44ced4c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "595f187e-1063-49a5-a776-c34d0d5a8b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb4931-1211-4c77-bce1-b2fe44ced4c0",
        "cursor": {
          "ref": "5ba09547-cc20-48a1-9d13-584cc9092be1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c95b5e3-35b4-444f-a507-b51f0366e756"
        },
        "item": {
          "id": "27cb4931-1211-4c77-bce1-b2fe44ced4c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "595f187e-1063-49a5-a776-c34d0d5a8b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6615f939-f15a-4951-97df-c501548bf4a2",
        "cursor": {
          "ref": "adae9be8-b375-4ec5-9a00-5aa8d6a6322c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d19b2966-ba75-4e27-92d2-addc3aa45c42"
        },
        "item": {
          "id": "6615f939-f15a-4951-97df-c501548bf4a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "05db8df4-9e0a-4209-b27e-f9e19a7e671d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d3145c-1566-4e99-a7dc-5187660631a9",
        "cursor": {
          "ref": "4014c61f-4622-42ce-a4b6-5bb8aa3662ed",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2c9f0e59-9943-43ce-a37b-280144a719db"
        },
        "item": {
          "id": "b0d3145c-1566-4e99-a7dc-5187660631a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38c1d6d5-0094-4d64-88b9-dd2ef94ffeed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca87256-7e2a-44e4-89d3-1063abdb4d7c",
        "cursor": {
          "ref": "e76c1b92-1480-4ab9-b8e5-7fb12aeb0ba9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ea9976a8-0e35-421b-afd2-537af7dfb247"
        },
        "item": {
          "id": "3ca87256-7e2a-44e4-89d3-1063abdb4d7c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c8baa0ba-d6a2-468c-915a-4a4ae31c5ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea57f418-34e7-453a-98a5-0d155d1320c6",
        "cursor": {
          "ref": "deba5e0d-afb3-4261-8549-36477c9df897",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "13f6df52-215c-4a97-8cc1-f6a692eb5476"
        },
        "item": {
          "id": "ea57f418-34e7-453a-98a5-0d155d1320c6",
          "name": "identifiers"
        },
        "response": {
          "id": "3a25c08c-6c2f-4933-830b-a201bba4145b",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4647cb08-a640-42eb-8ed7-8ebe4a34c611",
        "cursor": {
          "ref": "b12294ed-6eff-4466-899f-db687325a32c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00883ad4-2afc-44b7-a228-93ca50567cb9"
        },
        "item": {
          "id": "4647cb08-a640-42eb-8ed7-8ebe4a34c611",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4b2c448-a19a-47a5-b583-66947d3febf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d711edc2-b1ac-48b6-ab7a-d35e8dfa1806",
        "cursor": {
          "ref": "25c8932e-4812-4f70-9084-8e7406d8820f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dc1362ff-82d5-4d5c-b8b8-21cf4fab9166"
        },
        "item": {
          "id": "d711edc2-b1ac-48b6-ab7a-d35e8dfa1806",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6d9abc4f-f552-46b3-834f-a0892530b00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa741bb-f81b-4bf0-9fd5-13bd6fa74906",
        "cursor": {
          "ref": "0794044a-28cb-4c28-81a1-ef15cfb466a8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "933670eb-b68a-4df0-ab0a-e2882622bbde"
        },
        "item": {
          "id": "daa741bb-f81b-4bf0-9fd5-13bd6fa74906",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "59acd54c-0da4-4361-b0fe-ce5c9f4a7075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b52bc4-5bc3-4901-becd-bb2bdf667c3a",
        "cursor": {
          "ref": "a161feba-fd61-45d2-8956-9609181e2b25",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "40988103-0487-46aa-b375-93253c4cf513"
        },
        "item": {
          "id": "12b52bc4-5bc3-4901-becd-bb2bdf667c3a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f2bf116b-e0c0-4372-8776-f3a3dbdaa9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87512f7-8b68-4ed9-808e-35e860edf499",
        "cursor": {
          "ref": "53527617-78e4-45ed-9b11-930e3f872817",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4244865e-8a04-42f5-988c-617729ff5cee"
        },
        "item": {
          "id": "a87512f7-8b68-4ed9-808e-35e860edf499",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "913bd713-0812-466a-b7fb-626e362f8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dafb4d-307d-4a6b-9af2-3be4c7cc5f1c",
        "cursor": {
          "ref": "049c7415-70af-4453-ba18-974ec21800a5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d13cb51b-0f3b-46dd-afc2-2c13fcaf4662"
        },
        "item": {
          "id": "97dafb4d-307d-4a6b-9af2-3be4c7cc5f1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "674f510c-a14c-437d-a6af-77bbb4a35c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b3ed8-4383-4c82-af5f-684327945d25",
        "cursor": {
          "ref": "2f22f520-c4f7-4b23-96d8-604db9cda1ac",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "23371606-4a41-420b-a2d6-dd0896541523"
        },
        "item": {
          "id": "263b3ed8-4383-4c82-af5f-684327945d25",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6ac669c-e1a8-4a25-abae-8e96137555b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0f5ce8-3be3-4694-8585-6285de636287",
        "cursor": {
          "ref": "f0ae5a31-30f1-4ce1-91f8-a3186bff3280",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c8ba06c8-8558-4035-8216-7fb506483444"
        },
        "item": {
          "id": "bf0f5ce8-3be3-4694-8585-6285de636287",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9a9cc157-f0cd-49d3-bd2e-63a46c5bb955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a0996-a9ac-4559-b00d-7b4f97d75897",
        "cursor": {
          "ref": "cf305575-0566-409f-806d-a67011289213",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "339acc97-a264-4c72-a4e6-d3731c69044d"
        },
        "item": {
          "id": "290a0996-a9ac-4559-b00d-7b4f97d75897",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3e22562e-0c06-4c09-82df-b9bcd003645d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c3f02-ecd5-4585-9919-5ba0a0bdb81a",
        "cursor": {
          "ref": "1e4fd35b-f1df-4250-99d2-3ed30f50678f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "356d84c1-0738-4c4e-ba77-83f5617a90c8"
        },
        "item": {
          "id": "b00c3f02-ecd5-4585-9919-5ba0a0bdb81a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4c07ab84-1326-47db-a7d9-80e167f26912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f3412-365b-4f27-9451-aaada66104b1",
        "cursor": {
          "ref": "1fc136d5-8af0-444b-bafc-1280ef31a573",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "28148f22-f5df-4ea2-91c6-b9b90ce66989"
        },
        "item": {
          "id": "3b8f3412-365b-4f27-9451-aaada66104b1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e2b5e678-51eb-47d9-8d3d-7dd5e45eb029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70834c9a-d255-4c37-a1bd-0eab6c06d5b2",
        "cursor": {
          "ref": "937dbd45-3119-4af6-918b-4070616d5554",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c46cd7aa-c03f-4726-a4e1-ca621a4cb725"
        },
        "item": {
          "id": "70834c9a-d255-4c37-a1bd-0eab6c06d5b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "28a25d3f-0bf9-4b10-bdc9-0b8eac192e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626b3b1-5230-4323-bbb2-fb030409ebe9",
        "cursor": {
          "ref": "7ca16c58-4ca7-4be7-8cd9-b22e7f88a4e9",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3492276c-b2bb-415e-ba39-df4b013a506e"
        },
        "item": {
          "id": "5626b3b1-5230-4323-bbb2-fb030409ebe9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8415b41c-5032-49a8-a899-b39333b29a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f613cc8-cce2-4ee5-9b32-c20faf92e4fa",
        "cursor": {
          "ref": "b95a97b4-e161-4f23-b286-7f06efb8123e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "48c1827d-78a2-44f1-9025-51b4518af6d3"
        },
        "item": {
          "id": "7f613cc8-cce2-4ee5-9b32-c20faf92e4fa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0c2fdadf-743e-47f3-b900-ad186fef36bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cda7b7-2584-47e1-bc58-98665c92eef5",
        "cursor": {
          "ref": "f7cf1a35-9821-4400-a6da-6e0afde9cfa5",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "171c96af-b347-46bd-b204-5f927d96c512"
        },
        "item": {
          "id": "c5cda7b7-2584-47e1-bc58-98665c92eef5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "678207df-3cd3-4cd5-ba18-b0ede6221fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270ee34-0a5c-4eb4-b8e7-2bebfd777e10",
        "cursor": {
          "ref": "d100a2ed-682c-4f8a-ae01-bc16b460a776",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b7b18e0a-714f-4b4c-bcdd-9e275ccc90fa"
        },
        "item": {
          "id": "c270ee34-0a5c-4eb4-b8e7-2bebfd777e10",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "daed9fe4-bf1d-406f-ad69-bada256c7fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9339cae7-3a1d-4742-9227-710fc376c862",
        "cursor": {
          "ref": "16e786f0-0bd3-45a0-bef4-d627f3c4ac3a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3842fac2-14d7-4288-ba84-74b6aea42a94"
        },
        "item": {
          "id": "9339cae7-3a1d-4742-9227-710fc376c862",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "226210e6-d8c2-47dd-8893-8622be0112d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c643cbf-deee-4327-967a-62b9c45fd23c",
        "cursor": {
          "ref": "040a0f7e-349a-4467-ae8d-eb1af4e3fe18",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ffe56385-0f34-40d0-851b-9664758f6f1c"
        },
        "item": {
          "id": "3c643cbf-deee-4327-967a-62b9c45fd23c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2e33a450-b544-4e5e-9b38-ef22e8d05f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda6d401-0f52-4a2c-b813-6772f23faa11",
        "cursor": {
          "ref": "a800c7ae-4195-4188-bfc4-d465c72a5446",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7024d4f3-5fd7-4d74-8eec-3baebff06f8e"
        },
        "item": {
          "id": "eda6d401-0f52-4a2c-b813-6772f23faa11",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d9e55cca-5257-45e0-9f38-ae9516732467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19b0b50-4df8-478a-9558-c19897b8e69a",
        "cursor": {
          "ref": "a491094e-2243-46e7-8887-fc569645cf7e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "96edfc8a-dd86-4fb0-85fe-5bd886c7019e"
        },
        "item": {
          "id": "d19b0b50-4df8-478a-9558-c19897b8e69a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2d81d242-9093-4e6e-a152-efe81539ae0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4041a6-5548-4114-9c39-1a11c91dac4d",
        "cursor": {
          "ref": "25ce8100-9f04-490d-95ff-b0913ac8c156",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f62a94f6-5ef5-49f5-ad1c-bc756b8debdc"
        },
        "item": {
          "id": "9e4041a6-5548-4114-9c39-1a11c91dac4d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6b5cb6f3-0b18-44ed-9925-b9e033f4f695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a64bc3-4bf0-4b79-a466-94d5b8ded3f9",
        "cursor": {
          "ref": "0923d55a-c01c-4e51-a95b-5e0282025c63",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1c085cb6-cd73-4022-9d3b-e841be5d3e49"
        },
        "item": {
          "id": "27a64bc3-4bf0-4b79-a466-94d5b8ded3f9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db2471be-ffde-491f-b414-30327fe4f95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a14fdc-4daa-47eb-b670-d379c5b60e09",
        "cursor": {
          "ref": "39cd0f1b-d8e1-430f-9b50-95d237d46548",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d1b33bb-59c0-43c5-827c-681073c58bbc"
        },
        "item": {
          "id": "a9a14fdc-4daa-47eb-b670-d379c5b60e09",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d835930-3511-4e5d-9b2a-e91d4996744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa4794f-2fb7-4a8a-9332-925317ea11a6",
        "cursor": {
          "ref": "c482c851-f522-48ee-9cfa-fbf18eecc9c1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3cb3dfd3-48ae-4db7-aafc-b371624abd66"
        },
        "item": {
          "id": "dfa4794f-2fb7-4a8a-9332-925317ea11a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fcaf0d05-fe51-4930-a7c7-9eb1ea15aa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a6df50-2d12-4f0a-9951-df26c5a1f5a9",
        "cursor": {
          "ref": "b3785bd9-a1ea-4a64-9801-0a14edb1d0c1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "07395b4b-9d65-45a3-ac3e-5e124f5e8027"
        },
        "item": {
          "id": "26a6df50-2d12-4f0a-9951-df26c5a1f5a9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "da3e82ed-faeb-4ad2-9779-d2a67cc123b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff666565-1ee9-4f98-ae7d-bacf9d80b132",
        "cursor": {
          "ref": "69ffe114-20fb-4c77-bf30-3d44632ec0d3",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1184c35b-92e5-457c-837c-3f91dd25ffa3"
        },
        "item": {
          "id": "ff666565-1ee9-4f98-ae7d-bacf9d80b132",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "116f792d-9a55-4855-9d31-223268654526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc6cf4c-96ac-45c2-8474-f6d1fccfd845",
        "cursor": {
          "ref": "1eed6926-7395-4da3-9a23-2a0b5bf2ec26",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "888e9cad-f9fd-4714-958f-4ae1c5523dbe"
        },
        "item": {
          "id": "ffc6cf4c-96ac-45c2-8474-f6d1fccfd845",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bf88ee2c-ca35-4492-b4b5-0ff78c8aebb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171ae61f-94fd-49b4-b2c1-4fd1d48ad7d8",
        "cursor": {
          "ref": "0622f810-4f16-4e53-b4d4-45a582b877a2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "69665ecd-df42-4532-a165-479844ec328c"
        },
        "item": {
          "id": "171ae61f-94fd-49b4-b2c1-4fd1d48ad7d8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eea58282-141e-47e5-8984-ee30fcd39e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d632cc4-71ef-46d3-87be-7291c94aba68",
        "cursor": {
          "ref": "f719f34e-ccd0-4f17-b617-af9c62ab9b37",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d12e8577-61e5-443f-8fae-122d79090c73"
        },
        "item": {
          "id": "2d632cc4-71ef-46d3-87be-7291c94aba68",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "23d5f187-d504-41f8-b8f8-03c3c0212776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f9ea15-8e1d-40d9-a369-5eac4f7a4b43",
        "cursor": {
          "ref": "fc2388dd-a260-4d78-8e93-1612b43dacdd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc91f378-831e-4c55-baac-cd0ea808127b"
        },
        "item": {
          "id": "98f9ea15-8e1d-40d9-a369-5eac4f7a4b43",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a5e85a7f-25be-4f33-9d1f-8b7323906897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1273eb-a267-444a-8a75-131e752a4586",
        "cursor": {
          "ref": "13d5032f-3bff-4b60-a6f9-b9259e8796fe",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "89290a3a-3f88-44c8-b14d-60780ffbe80c"
        },
        "item": {
          "id": "3c1273eb-a267-444a-8a75-131e752a4586",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d6aa7211-e0ca-49d9-a7a2-0ed4c6feefaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e982b524-7d9d-454f-840e-76314549668c",
        "cursor": {
          "ref": "304dc6fc-a501-411c-bd53-c343162f75e1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3249e17-0f69-4a6b-b0a8-536074fd7312"
        },
        "item": {
          "id": "e982b524-7d9d-454f-840e-76314549668c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2650846a-77f0-404d-b2f3-d689e5a2a71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057aeff0-73b5-4339-9320-d5378201c3fd",
        "cursor": {
          "ref": "8e5f8238-3187-4c70-a71a-8679fb4326bb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "26bbe26e-ff96-46e9-8682-ddfb714a3f0b"
        },
        "item": {
          "id": "057aeff0-73b5-4339-9320-d5378201c3fd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "52d39e79-dc2e-41ea-b3c6-565f4272f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354a1c80-fecd-4f64-9837-13b40efa8b2f",
        "cursor": {
          "ref": "a0e768f8-30ff-4f0c-b46e-32cc63b400c1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b83577b-2db6-4530-8e38-748229feba16"
        },
        "item": {
          "id": "354a1c80-fecd-4f64-9837-13b40efa8b2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "debb0064-edce-454e-99c5-e1d2d0eaae7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b69926-3f04-45d4-8d44-3fb677015549",
        "cursor": {
          "ref": "6d132820-05aa-45b8-96d0-dbc707947384",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bda275f4-a5ef-4a95-b6a1-ac3e2c52e273"
        },
        "item": {
          "id": "25b69926-3f04-45d4-8d44-3fb677015549",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9b95c6e9-b909-461a-82cb-51a76e7730f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed8c360-c621-4c2c-adf5-01058c47b79e",
        "cursor": {
          "ref": "4fc53fc3-bacf-442e-b149-7755781e70d1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b2e8b9e3-fe95-4484-942f-089b37067b4d"
        },
        "item": {
          "id": "eed8c360-c621-4c2c-adf5-01058c47b79e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8f83013f-d2e4-4f49-9c1f-67a7f4efc65c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269940f4-a9de-449d-ad21-e225130cbaac",
        "cursor": {
          "ref": "06a72f2e-3a01-444d-9a60-2f9c6181ebc2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2cf459bf-5567-4624-bbe4-a8a4fb6e3228"
        },
        "item": {
          "id": "269940f4-a9de-449d-ad21-e225130cbaac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7cd9f760-31d8-4bfa-bbfe-2ea0b8b42bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3acfdf-c3cf-4116-9243-1da00879c2a4",
        "cursor": {
          "ref": "c9acac22-0508-4578-8015-13e78b9c8f82",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b8ea9352-869d-40cb-9fac-164797b27f01"
        },
        "item": {
          "id": "4b3acfdf-c3cf-4116-9243-1da00879c2a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ee968d34-a4db-4986-b978-d2f50021ac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175afde5-af5a-4bef-a727-5c3edfabb67b",
        "cursor": {
          "ref": "889b3177-4a6a-4288-a2a8-46e152f46e26",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95974c4a-bf7c-4b22-bc7e-e0261db2e9e1"
        },
        "item": {
          "id": "175afde5-af5a-4bef-a727-5c3edfabb67b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b317f1ff-273e-4183-bdc8-33661390b19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc32f1-9008-449e-aabe-bfb298ecd590",
        "cursor": {
          "ref": "9ca7410b-fd8f-4a02-9893-a5e6b185966b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eccb14ba-dc66-4d82-bc25-bdeef28d484d"
        },
        "item": {
          "id": "72cc32f1-9008-449e-aabe-bfb298ecd590",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8e4ffbcf-2575-4db0-9587-81ebb0cfd18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de8937a-28a6-4756-9112-6f5ebbeeb822",
        "cursor": {
          "ref": "09748911-b7a0-442b-9bdc-8cb447bd56dd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f135eecf-083a-4fda-9733-fa002bd9e22e"
        },
        "item": {
          "id": "6de8937a-28a6-4756-9112-6f5ebbeeb822",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0d76ecc7-13e3-4a03-bb12-f08fa047fb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931a1d4e-9d3f-4f9a-b410-3b01833f24fa",
        "cursor": {
          "ref": "4b42fe4f-a4c7-40d1-b1fa-73f6a049c760",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "68dca612-fbd6-4ccb-a9b1-753143ac03a7"
        },
        "item": {
          "id": "931a1d4e-9d3f-4f9a-b410-3b01833f24fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8d9a0592-0cd5-4c44-a082-4651a4bb6af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2b8f51-7089-4c03-a895-813b128eb7bd",
        "cursor": {
          "ref": "74bdee4f-dd26-4e22-bf82-e6fa43cdb02e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a705446-8738-492b-a82c-af30dcbd9ea0"
        },
        "item": {
          "id": "0f2b8f51-7089-4c03-a895-813b128eb7bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b6a0fc91-a982-44a2-b081-3b8c88dde80c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44f6139-9576-4922-ab46-c9f296886c94",
        "cursor": {
          "ref": "1e0f34ff-d535-48be-95e2-b1560bfe1af2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4ac2c838-d838-4568-b233-8abba678a8d9"
        },
        "item": {
          "id": "c44f6139-9576-4922-ab46-c9f296886c94",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "effe5804-ade4-4b75-a259-10ad09c1e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53189ba-940a-4411-9471-abbea972a4cd",
        "cursor": {
          "ref": "6a904f7a-6142-4d17-a302-d64b6a70dc97",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3ca13161-9b22-4f7c-b6cd-a2f445d85a37"
        },
        "item": {
          "id": "a53189ba-940a-4411-9471-abbea972a4cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a55ea2ef-e963-4c55-9b2d-27276cbd2bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffb750e-661b-4347-be59-230cfca6009e",
        "cursor": {
          "ref": "46c0ea8c-f449-4314-82ba-6e3ede711797",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "efec57da-c576-487a-bcce-7167057bd05b"
        },
        "item": {
          "id": "9ffb750e-661b-4347-be59-230cfca6009e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a12a72eb-1d40-4326-86eb-85aabffc1931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7faf6-776b-4725-a142-7fd7ba285fad",
        "cursor": {
          "ref": "3f130576-1673-4f50-a942-27c5c6d68132",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9605a329-3a8c-4ab5-9df5-f1a5dff71dbc"
        },
        "item": {
          "id": "12b7faf6-776b-4725-a142-7fd7ba285fad",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c95c7e4f-53fa-4b8f-862e-0f351e201c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1042e059-e7d9-414c-9fe5-eeb304e05a08",
        "cursor": {
          "ref": "e125758c-f364-4405-b6fb-0ff91f74c06b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "835486de-2a4c-4f0a-a765-fa53cf1c03f9"
        },
        "item": {
          "id": "1042e059-e7d9-414c-9fe5-eeb304e05a08",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7e89c4b-8514-4d46-ae4f-6ec1d4913d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff5ad6-13fa-4f52-8cbd-07c1f1158380",
        "cursor": {
          "ref": "0d3eecbe-af34-4c78-9ade-c279c80b072f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a8c4116-5414-4424-b87a-bec3f47a4912"
        },
        "item": {
          "id": "9dff5ad6-13fa-4f52-8cbd-07c1f1158380",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a83b2e70-9d10-4742-b340-62d9287c6ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdf9127-2424-433f-9ce3-f67f369f2b85",
        "cursor": {
          "ref": "9fae621f-d796-456d-87cb-d831a13b8bfe",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e1e1f380-a430-4cd3-9870-dabb0660fce8"
        },
        "item": {
          "id": "0cdf9127-2424-433f-9ce3-f67f369f2b85",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ff826d13-2d94-4918-be83-87b2c9ee8bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05c760b-6aaf-42ee-bebf-48bf046a5747",
        "cursor": {
          "ref": "6e184c48-5921-449f-85eb-94c4b45dcb0b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "33634d34-9665-4914-abc8-28de16cc40fa"
        },
        "item": {
          "id": "f05c760b-6aaf-42ee-bebf-48bf046a5747",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6029abf7-3879-487c-b162-d7552392ab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd08d8de-abb7-4616-9593-b10a20b86c5f",
        "cursor": {
          "ref": "e015daf8-ab10-41fc-91d5-b0842eb53287",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9924151d-3e8d-4946-bbaa-e1673388ea19"
        },
        "item": {
          "id": "cd08d8de-abb7-4616-9593-b10a20b86c5f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ebc126a-15c9-4564-817e-a875a9dbdcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d6a9cd-bcc0-4aaf-a844-3c717e066907",
        "cursor": {
          "ref": "ef4c61ab-4d4b-4ae0-8104-f5f29447090e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c04654b9-fe6a-4733-8def-d6561505522d"
        },
        "item": {
          "id": "19d6a9cd-bcc0-4aaf-a844-3c717e066907",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b29d047f-e50c-4c8a-8175-1d685490e2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe14cbf-1ad4-43ef-89cd-664c7d70ee7e",
        "cursor": {
          "ref": "4aad4e68-876c-45ac-83a2-41866c155986",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "495ec9a6-3f35-4848-906e-2b4ba19dfc3b"
        },
        "item": {
          "id": "bfe14cbf-1ad4-43ef-89cd-664c7d70ee7e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1fb6d96f-ce08-4493-8b53-6b164e83d6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcea41b-0d7c-47e0-9163-aa3f28739afb",
        "cursor": {
          "ref": "6e8a9c6f-5606-40a5-8904-75e82bd2787a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b9ca2adf-8c78-48eb-9bc5-d18fafd3c03f"
        },
        "item": {
          "id": "0fcea41b-0d7c-47e0-9163-aa3f28739afb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6251b12c-601f-4041-a2b6-31be70a07364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0a821e-850e-41d3-838d-6189ab9aaa39",
        "cursor": {
          "ref": "d2d46f3c-cbd5-446e-a0f8-4f00696b9821",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d6872b6b-46b5-4665-8b19-8a6e6804f3c8"
        },
        "item": {
          "id": "3a0a821e-850e-41d3-838d-6189ab9aaa39",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "111857a9-45e4-4620-a2f8-6a42e4bebfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f50fe-034a-4e22-b6f3-8aa2c39705e4",
        "cursor": {
          "ref": "d79b9184-cc77-4d9e-a28b-4d34f65cbfa2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "433f185b-2d13-4dd4-a907-eb016650bad1"
        },
        "item": {
          "id": "809f50fe-034a-4e22-b6f3-8aa2c39705e4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2f734ebe-fdab-486a-ad46-6fd934139e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f7f184-0136-46be-92bc-1935185e7d6b",
        "cursor": {
          "ref": "a7b8e2ae-b86e-49ce-a4b9-3da57a1faf75",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3aa8065f-79a7-4815-be10-c2391b265b3a"
        },
        "item": {
          "id": "c5f7f184-0136-46be-92bc-1935185e7d6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "855015d1-e8dd-4442-8bfa-152e2c62cbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b5f932-7615-41cf-9ae7-101b9059e9f5",
        "cursor": {
          "ref": "140d21ba-779f-4714-8430-b80a684da8b6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "99a15b5c-3f94-4745-8018-5d77643ef165"
        },
        "item": {
          "id": "e3b5f932-7615-41cf-9ae7-101b9059e9f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a3a44421-09c7-425a-9cc4-17c32b4599f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a6ef9d-2286-417c-ba8f-feae5a207e83",
        "cursor": {
          "ref": "278a77bf-b8f6-428b-b608-2e64e2ba9134",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e489031b-f909-4000-bfe1-1e274ced3e7b"
        },
        "item": {
          "id": "f8a6ef9d-2286-417c-ba8f-feae5a207e83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "08292a1e-3d36-4e29-9bb0-1eeb6901a921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85dbbcb-1bda-4405-bc52-25c404b3f3ca",
        "cursor": {
          "ref": "d74e98b2-b4d0-4e9e-a4e3-f1b07c184a8e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "009e91bb-b927-4a40-b842-c8d3915d5348"
        },
        "item": {
          "id": "d85dbbcb-1bda-4405-bc52-25c404b3f3ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d4ea3e46-5e0a-4719-a4f1-22c9c22a22a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da0997f-0491-4321-b667-0cf54429f140",
        "cursor": {
          "ref": "51c85e1a-eb90-408b-a3f0-e2d5d151924d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "97a62f3a-ed6e-4b6e-b8c1-6cb5d82c2ebf"
        },
        "item": {
          "id": "3da0997f-0491-4321-b667-0cf54429f140",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "98b9b185-5656-402e-a56f-6bf234979cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bc2801-7adf-4111-9d55-bb9c84c7c1ba",
        "cursor": {
          "ref": "f1403de5-e45b-4d48-b31b-f8be2ccf065f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5b5270fd-ed1a-4cd8-8abb-5106a0e8cdaa"
        },
        "item": {
          "id": "e2bc2801-7adf-4111-9d55-bb9c84c7c1ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "796a0dbb-9753-4a83-ac3d-c53d6aa0848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9b3825-679a-49ad-8365-ea0bea4e45ac",
        "cursor": {
          "ref": "9bd193e3-5e15-4dd5-a942-f94b915c10c3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c24eeb19-6a0f-451e-b277-e7e5aad76972"
        },
        "item": {
          "id": "8e9b3825-679a-49ad-8365-ea0bea4e45ac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4879cc3e-9028-4d56-9800-90522b973813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f6b827-f8b9-4e27-9b29-37c36e69868d",
        "cursor": {
          "ref": "3978b044-2756-43fd-9dc7-a4717937996f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9ce408d5-1c51-44db-9c74-532ac205fbca"
        },
        "item": {
          "id": "46f6b827-f8b9-4e27-9b29-37c36e69868d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c3a632ec-6475-418c-8840-41c80e47927c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd00c34-ea79-4efd-8775-06b422d8d000",
        "cursor": {
          "ref": "69310e14-6369-498c-af6d-a703ddcb7105",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c15f694f-4539-47ca-81cf-ea706dfa8bbc"
        },
        "item": {
          "id": "2bd00c34-ea79-4efd-8775-06b422d8d000",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f24b820-637f-4fce-a604-9639c9be21f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4830564-0c8d-435f-aeae-97c8d03c8d9b",
        "cursor": {
          "ref": "1a87672f-e723-480f-bdf4-0699185930c0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a01f6dbf-8a3f-471c-845a-fc4371620a1b"
        },
        "item": {
          "id": "d4830564-0c8d-435f-aeae-97c8d03c8d9b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ff5c81d9-2eda-4a15-b69c-6d32612b7a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84adfbac-2b13-4504-951a-f56f90c0dcfc",
        "cursor": {
          "ref": "16ea5722-67e6-477d-98cc-c28da71c5658",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e0a277cf-ebaa-423e-81bd-81c947d371a0"
        },
        "item": {
          "id": "84adfbac-2b13-4504-951a-f56f90c0dcfc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30afdd41-4293-4ec7-82da-4a1ddbed7bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a583f03-3ae3-4fd1-ad97-1318753fd3f7",
        "cursor": {
          "ref": "113856aa-3031-4591-a054-27d70982265f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c4633c46-b186-43b6-8215-b75b5f3c8fc4"
        },
        "item": {
          "id": "0a583f03-3ae3-4fd1-ad97-1318753fd3f7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "16b7fd0e-0971-46c1-93c4-fc521e7e2dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ae4f3-0faf-463b-9caa-5bac0eb169d7",
        "cursor": {
          "ref": "a6d0d7a0-59c3-4bdb-84dc-bc35902f1f94",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a584e65d-33a8-42ab-8459-122aee5d1fce"
        },
        "item": {
          "id": "bd7ae4f3-0faf-463b-9caa-5bac0eb169d7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aaaecc90-b8dc-4cda-8904-599f0def1080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc192c1-92a9-4119-8bcc-3a70c3d8a91a",
        "cursor": {
          "ref": "5bc2b4db-cc51-44f7-9029-b70c5f530105",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "93a2a2c7-eee9-43d1-94f3-8c6a1b5615a0"
        },
        "item": {
          "id": "5fc192c1-92a9-4119-8bcc-3a70c3d8a91a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3689250-0e72-483b-a55c-f75fd17c2879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b846c1-2324-4982-a4e0-e23f3c2d63a2",
        "cursor": {
          "ref": "275ce2b3-23e6-4a16-a4cb-d67723cc1fda",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49bafe81-5335-4739-9f8f-0de1416f3bfe"
        },
        "item": {
          "id": "69b846c1-2324-4982-a4e0-e23f3c2d63a2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73be6dcc-a15f-462e-90c8-2d40d5053cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92e024e-484b-47ad-893a-401ca30cae19",
        "cursor": {
          "ref": "94fd6cee-c8da-40c4-96b6-2874729b3f04",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6eaf3cf4-f2f1-4af4-97fa-4b42a99d83cb"
        },
        "item": {
          "id": "a92e024e-484b-47ad-893a-401ca30cae19",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa86f1e3-95bb-4ffc-a142-3607e100a8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61794b4-50c3-4731-9d76-cfe1eaf479ed",
        "cursor": {
          "ref": "04753f98-3b36-43b1-8b1b-e5cba8bcd92f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5a6782df-54f7-4cbf-95a6-cf2f05ddb714"
        },
        "item": {
          "id": "e61794b4-50c3-4731-9d76-cfe1eaf479ed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "212b0b85-516e-4961-9442-cfc5a40c3068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee7526e-c7cc-4fe2-8bd3-af9ff41a6ddb",
        "cursor": {
          "ref": "de480ba4-bf36-4755-ba0e-884590e404d7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "965b5a0d-52b2-4e16-911b-dd94458e1d21"
        },
        "item": {
          "id": "cee7526e-c7cc-4fe2-8bd3-af9ff41a6ddb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2bbe9404-e859-4e40-b8e6-5eef7dc6f5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4cd117-3eaf-41d9-b337-02a3fc802cf3",
        "cursor": {
          "ref": "bba8245b-1545-4ff2-b94c-28c9efdbf9fe",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "065e42f0-072c-4271-bc33-f4d259ab9930"
        },
        "item": {
          "id": "3f4cd117-3eaf-41d9-b337-02a3fc802cf3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "119aec01-159a-49bb-a9a4-def45cc6571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e218481-b4f4-4e72-8fce-1030e6e2d8d3",
        "cursor": {
          "ref": "282e0bc1-ea71-4788-8ff9-2a7482f06d9b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "722ae4a4-2fab-45fc-a304-b5b4bb2c52b1"
        },
        "item": {
          "id": "8e218481-b4f4-4e72-8fce-1030e6e2d8d3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "999ac467-fc3c-429e-940c-f74a6a685f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4308bbd6-fcc0-4be5-8614-87c66a859c6f",
        "cursor": {
          "ref": "9c7b80c6-224e-4637-9886-63709825bad3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a7be1a77-bec1-40d5-9400-64896399bf87"
        },
        "item": {
          "id": "4308bbd6-fcc0-4be5-8614-87c66a859c6f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3548cb2c-b792-4263-bf74-dc08fa220519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0dcd38-26e4-425c-8412-a5e88c1271f0",
        "cursor": {
          "ref": "8aa145ea-9206-4426-88a2-79b5b3454ec4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "598c9deb-baab-4ea4-9c23-240b4c7ce1c3"
        },
        "item": {
          "id": "8d0dcd38-26e4-425c-8412-a5e88c1271f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b194a3f1-6f2d-4b8b-b698-f4931ee83132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc31dfa-fd7b-48cd-8fb6-c4df5d02f845",
        "cursor": {
          "ref": "1e39e662-902f-47ac-9274-f4eae7f1f695",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6824fb11-61d1-49d2-90c2-925a1e54a7eb"
        },
        "item": {
          "id": "1bc31dfa-fd7b-48cd-8fb6-c4df5d02f845",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "11414493-5f1a-4ad8-b0f9-1c6289d3449f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b144e5b-c63c-445b-b03f-2685943fc9f8",
        "cursor": {
          "ref": "287b26ff-d913-4007-af9a-7ca20bf0c27a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "da614186-6cde-462c-b3b3-8b6347ab2762"
        },
        "item": {
          "id": "4b144e5b-c63c-445b-b03f-2685943fc9f8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dd74b273-60f4-47c6-9cea-30311a081154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b729a3b5-716a-4190-9011-befe2e07ed2f",
        "cursor": {
          "ref": "3f199b7e-83be-46f8-9fcf-ca7fa53b9730",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7a0d60b7-ff77-40b0-b1eb-4f54a9b2c2c3"
        },
        "item": {
          "id": "b729a3b5-716a-4190-9011-befe2e07ed2f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c201554-e8f9-458d-b780-6ea134c23aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d6d9b-8223-48bf-96e0-93641ec93108",
        "cursor": {
          "ref": "c6bd5f1f-166e-4b99-a238-c9b8286719fb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1168e8cd-3eeb-4333-a638-1b3dea8be6da"
        },
        "item": {
          "id": "660d6d9b-8223-48bf-96e0-93641ec93108",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dc04ffab-19f1-4dd3-a150-cb5f479027cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa113568-d2c3-4644-ac66-915155a232b7",
        "cursor": {
          "ref": "78c0bfca-834d-4d37-b3da-9e0a079b1c9a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7ba35ee9-efac-49e8-94bc-babc2e69d5cb"
        },
        "item": {
          "id": "aa113568-d2c3-4644-ac66-915155a232b7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b22bd5fe-ee7e-490a-b135-02271cefc1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1177048-2ad8-4683-9712-7338dd6b15e8",
        "cursor": {
          "ref": "ff5c33c1-bb83-4090-9b49-e8ddf5f4e9e8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "58e4e4eb-6db9-4c9b-8b5d-af66ad26921e"
        },
        "item": {
          "id": "f1177048-2ad8-4683-9712-7338dd6b15e8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e94c8967-b040-44a6-b205-6b3b679bd778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28efce45-97aa-4aea-96b6-920112d9042b",
        "cursor": {
          "ref": "5275d339-2b05-4610-8c4a-14ebb8a82c72",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3a0d62e9-3cfc-498d-a256-9714db107b16"
        },
        "item": {
          "id": "28efce45-97aa-4aea-96b6-920112d9042b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d526db36-ba45-4f3e-ba01-7b6e460485c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa6f41-aeea-48e2-a446-437a37c886ed",
        "cursor": {
          "ref": "97271933-f93b-4168-878c-c7713bc2df3c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2de24b3-0e0b-4d87-b185-90e0d2fcd34b"
        },
        "item": {
          "id": "59aa6f41-aeea-48e2-a446-437a37c886ed",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "74bf4c6d-de5f-474a-926f-1b934e4743a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3e1fb-9e62-497a-b1f4-a96dddc66c43",
        "cursor": {
          "ref": "cac770d3-935b-48e6-9b72-d6492ed89678",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fb3f1dc6-20d5-4c9e-8732-23161061e9bc"
        },
        "item": {
          "id": "8ab3e1fb-9e62-497a-b1f4-a96dddc66c43",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4a2fb64f-ce06-47b7-9f95-572a203ee45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f20e9c-a976-4e69-ac39-24c9a24d5eee",
        "cursor": {
          "ref": "e982d257-6095-41b7-ae31-02c452f86263",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "655864a7-0604-4bba-a105-443e6d522c38"
        },
        "item": {
          "id": "c7f20e9c-a976-4e69-ac39-24c9a24d5eee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fca174f0-0075-4450-b199-5d9196b0fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3560a29d-526e-4a06-b142-10a563039a0b",
        "cursor": {
          "ref": "e25abb50-1896-4474-9f34-15f1b6ea445d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0ce5a177-6b05-41c5-b2b4-b9e100715fa8"
        },
        "item": {
          "id": "3560a29d-526e-4a06-b142-10a563039a0b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bdbd4177-d7f6-47b0-8bf8-073fac182535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475288d-65b7-4bbb-a414-d927e63c1b6b",
        "cursor": {
          "ref": "24790ae1-13cf-48b0-b3b8-d60ebdbe8436",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "45b202f3-5aa4-4be4-90d5-b12935c3f065"
        },
        "item": {
          "id": "2475288d-65b7-4bbb-a414-d927e63c1b6b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c74c81d3-bf5a-4263-86ba-c5b06d491aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71788ce7-316c-40e6-b781-a0f1c5735e0a",
        "cursor": {
          "ref": "9bfa2262-9bd3-4ee9-8897-3bfddf13e48b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "da50c95b-5198-4f0f-9ac1-06cfcf2da203"
        },
        "item": {
          "id": "71788ce7-316c-40e6-b781-a0f1c5735e0a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "47a08121-63f1-472c-9a09-dbc65fd41f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e214e89-b0d8-42d2-9f3e-d9784a26b976",
        "cursor": {
          "ref": "461cae6d-1f82-4879-9456-da6186f9bd1c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "849b9818-9235-4cc8-8bc4-76ee625851a8"
        },
        "item": {
          "id": "9e214e89-b0d8-42d2-9f3e-d9784a26b976",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0db14a0a-090d-4285-87cb-4c6da0ca9bba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449bdab7-501b-43c0-bcee-3df90a9ef70d",
        "cursor": {
          "ref": "ba493b68-1e37-494e-8efb-a4896ad29833",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f671cb06-75f9-4def-a976-63c23e9f563f"
        },
        "item": {
          "id": "449bdab7-501b-43c0-bcee-3df90a9ef70d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c27e827c-ad09-48b5-8434-ac3edcb326b0",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "30601f98-0687-474e-98fa-2f296d5738e5",
        "cursor": {
          "ref": "002c5203-e2f3-4e4c-bac5-01ae66b5587b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e765bdff-d5bf-47e3-a5df-44f968ddb24a"
        },
        "item": {
          "id": "30601f98-0687-474e-98fa-2f296d5738e5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "201ed12e-b69e-4b83-89e1-805490339b3d",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97baedef-c2db-4138-bde5-20c76fd4db37",
        "cursor": {
          "ref": "433d8443-02b2-43b7-b0aa-9419131e25ed",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "32aabf05-52b0-4be6-8650-4ec815371160"
        },
        "item": {
          "id": "97baedef-c2db-4138-bde5-20c76fd4db37",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f18cab8f-2a0e-49a2-8a1e-3a5fced45a2f",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a01b113-6172-4c40-bedd-691725c814ab",
        "cursor": {
          "ref": "3582b796-f0fd-4da6-82ea-4c3f5a28d94f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9ecba756-3d81-4088-b60c-69c2ba059671"
        },
        "item": {
          "id": "7a01b113-6172-4c40-bedd-691725c814ab",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fb1ecfe2-5983-4b41-b329-8a3107ace8fd",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567b986-bfaf-438d-910d-aa4184ea5685",
        "cursor": {
          "ref": "6d95083b-92d7-48f3-aece-68905c498847",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9102bd1a-5a72-4a4c-becd-24f19be6233d"
        },
        "item": {
          "id": "a567b986-bfaf-438d-910d-aa4184ea5685",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "185fbc56-b12b-4745-a3a6-6c3756f6a042",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ef5641-89e5-4b3f-bb5c-1cc572fe1ce0",
        "cursor": {
          "ref": "79e3b028-1222-41ac-b17e-89913650eead",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fb3afb88-e270-4e87-b3ee-b9be51afd7f4"
        },
        "item": {
          "id": "23ef5641-89e5-4b3f-bb5c-1cc572fe1ce0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "78386bef-94cd-4523-86f0-71a6667c2527",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef001e7-e176-46d7-8e87-854c3df3d270",
        "cursor": {
          "ref": "72a52bac-2709-4ddb-9c69-bca5fc26dd85",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "890bd606-4d86-4f64-a336-0fb4334d54a1"
        },
        "item": {
          "id": "4ef001e7-e176-46d7-8e87-854c3df3d270",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e21a636-f930-4370-8785-1aeb9a02fb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e01f99-303d-4686-91ea-0b3d5f7ce4f5",
        "cursor": {
          "ref": "cfb757e3-422c-493f-af27-905a935d171b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "46e34ec0-5ef8-45c3-8d90-173d0cc48266"
        },
        "item": {
          "id": "c6e01f99-303d-4686-91ea-0b3d5f7ce4f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8046b839-24ca-413c-85c5-52140ac5e794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c2006e-f7a9-4545-a69a-3a1693c6f2c5",
        "cursor": {
          "ref": "fda612e8-6217-4369-8cfc-a8462240fb0b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec72eac9-a310-4d14-af49-98fbe39dcf2f"
        },
        "item": {
          "id": "d4c2006e-f7a9-4545-a69a-3a1693c6f2c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d757ca6d-b6ce-4ded-a766-a6a414a29e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e106171d-1da8-42f1-9b5f-d318c0451a20",
        "cursor": {
          "ref": "5779ac3e-40d2-47a6-a6e5-28dd08419490",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "99bdc2ad-3654-49c7-a4ad-76b3b8f402ae"
        },
        "item": {
          "id": "e106171d-1da8-42f1-9b5f-d318c0451a20",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "00ffd623-ef4a-4a0f-b553-4cadbee488dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1008b1a5-7e40-45fd-bc66-29344e3f477e",
        "cursor": {
          "ref": "ac3e0cef-0102-45cd-94cd-5889e35547fc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fce014e6-4096-470a-8316-0d61fb89c6b8"
        },
        "item": {
          "id": "1008b1a5-7e40-45fd-bc66-29344e3f477e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc66ba2f-4526-4509-8e10-fef8129f0332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51acf90a-fe09-48b9-a653-ace39146c617",
        "cursor": {
          "ref": "55661321-002b-4e01-92a6-b6ec00a52316",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fc7f944e-223f-48fd-8b3f-4cbec8d2c09a"
        },
        "item": {
          "id": "51acf90a-fe09-48b9-a653-ace39146c617",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "81afc44b-69b2-4194-92fb-2c4b8876e8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419c98ed-2861-4465-ad4a-0466c85ce748",
        "cursor": {
          "ref": "1ca0e4e0-e48c-4b00-b25b-63f61b49c0a2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1bbe98d3-3765-42fc-af90-1f5f33afc1c3"
        },
        "item": {
          "id": "419c98ed-2861-4465-ad4a-0466c85ce748",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ae40454d-7b00-468f-8a61-9820a946a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5eb47c-108f-47f5-876b-b298bf825660",
        "cursor": {
          "ref": "f9990561-3b28-4f8c-83b6-52fc0aaa148c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a63c2d50-15e3-4c5d-b5de-72380cfa5edc"
        },
        "item": {
          "id": "6e5eb47c-108f-47f5-876b-b298bf825660",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "df72a436-eb9f-4624-8057-61307a483727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fed4a1-de62-4cd1-a444-5597e93dfd52",
        "cursor": {
          "ref": "cf4ab554-fa85-479a-87f3-4090cd5d573f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c9de2f9-6184-40a4-9367-e5f43589b30f"
        },
        "item": {
          "id": "75fed4a1-de62-4cd1-a444-5597e93dfd52",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "37779c63-350f-4e99-89dc-0a02bc5b9c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a624d-67cc-42d6-81d4-bb93abf17fc1",
        "cursor": {
          "ref": "aa62c9e7-ff07-4d5f-b736-36ccc2e4b0e3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9011c6ab-e992-48ed-b10d-c46f65752758"
        },
        "item": {
          "id": "2d7a624d-67cc-42d6-81d4-bb93abf17fc1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7ba3c8a1-c31a-47e0-a8fb-1b6f078d7589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb1dff-377b-4aec-a85a-f041dc590e35",
        "cursor": {
          "ref": "2a7ee2d5-cdc3-4ddf-90c8-e81214f5f319",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f45519ef-f32c-46e4-90d3-47bfe707d24c"
        },
        "item": {
          "id": "c3eb1dff-377b-4aec-a85a-f041dc590e35",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9eeac3f6-77fd-4714-bfaf-db6107a9ef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8bed8f-d7ab-4ccd-896d-e3509dde631b",
        "cursor": {
          "ref": "83dbf515-496d-4c56-b9c6-30cc1444a4c8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b0cb0a32-0529-456a-9227-ea919c2dd828"
        },
        "item": {
          "id": "0f8bed8f-d7ab-4ccd-896d-e3509dde631b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "57ca7c32-5736-41d9-b71f-c20e20e13c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5626a-69bf-4532-9dc1-de3812e5032a",
        "cursor": {
          "ref": "970c0d2e-3118-4170-9674-0d1676e435be",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5ac4b395-7142-4f36-9b97-a644a0668330"
        },
        "item": {
          "id": "f8d5626a-69bf-4532-9dc1-de3812e5032a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f16f36a-d37a-4e48-8ff1-1ddccd807a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c37b3b-09e1-4870-9915-2ad4776fe538",
        "cursor": {
          "ref": "9c37a57d-5f1a-459f-8fa2-d5659b7af5f8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8cc6c967-2052-49a2-81eb-7f4b1df0aa08"
        },
        "item": {
          "id": "84c37b3b-09e1-4870-9915-2ad4776fe538",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "770bfe92-e7de-438b-b37e-0b76e16898d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff2283-6f27-47c8-b33c-e78d8216e7db",
        "cursor": {
          "ref": "f1285c57-a5fc-4b40-89b0-86fa7a96658b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c831aa0e-263d-4281-b30b-848af9f033ba"
        },
        "item": {
          "id": "26ff2283-6f27-47c8-b33c-e78d8216e7db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "feecf36c-bba0-4b08-87b0-c604f5dd3b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed79f642-dd93-48f5-9663-c17921fb60f2",
        "cursor": {
          "ref": "26d1aa41-9ba8-4c48-858f-04590296284a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a42af7f8-2051-4f08-bce1-6e277a4bc3e5"
        },
        "item": {
          "id": "ed79f642-dd93-48f5-9663-c17921fb60f2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14aa9721-63e4-408c-9696-4105584bbb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85367912-fb77-42ff-8a6f-f79ef5f46f71",
        "cursor": {
          "ref": "3e31dd23-e129-48eb-b505-044925bf15c6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c3430d64-d5fa-4c6e-9743-88e18c7441be"
        },
        "item": {
          "id": "85367912-fb77-42ff-8a6f-f79ef5f46f71",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17e1aec1-4c55-46f1-b3ae-7cb39dd7ac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41f67d1-0bc0-4745-81f7-cf3456910c37",
        "cursor": {
          "ref": "7c6f2d6b-e8eb-41e3-a3db-4cfe82b5cfb1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f8b6bd12-a74a-4e3f-bb0d-6b9ab5d27474"
        },
        "item": {
          "id": "e41f67d1-0bc0-4745-81f7-cf3456910c37",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6d931dce-8535-4b35-8c92-0ab24a5b5c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b77cd65-85bc-43ae-85b7-4207d05262de",
        "cursor": {
          "ref": "6919b6b9-732c-4cd2-8b10-2d6a3b1c1c32",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9e32054f-5e45-46f4-a7ca-473364850898"
        },
        "item": {
          "id": "8b77cd65-85bc-43ae-85b7-4207d05262de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c767bf2-cac7-4abe-82aa-b2d8484aa7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591d498-63ae-4bad-b222-8104899a0d83",
        "cursor": {
          "ref": "a54359e2-3e0d-4199-be4d-7ee877c8f9c7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bddc997b-663f-4fb2-9df2-bfa6bce5e21e"
        },
        "item": {
          "id": "9591d498-63ae-4bad-b222-8104899a0d83",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "181879f6-1c48-4777-aad4-8fcd16c389f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2715be-f3d5-4357-8bb9-196007858ed8",
        "cursor": {
          "ref": "cbdf6d7d-99b5-47f9-ab08-96bcf38b304f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2fac9845-cf68-4f88-9330-c6ae900a6dd8"
        },
        "item": {
          "id": "8f2715be-f3d5-4357-8bb9-196007858ed8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "34cca4bd-046a-473e-8902-2ceba7a75544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd8c446-0075-4636-a719-619cf986db18",
        "cursor": {
          "ref": "6e386bee-701f-47dc-b3dd-46454f41462e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dfbab60c-cc83-416b-86dd-77559ac4734c"
        },
        "item": {
          "id": "0dd8c446-0075-4636-a719-619cf986db18",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "182fb37f-6073-4ee9-9f83-1a24dbc6c38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f0c182-04c8-4e3f-8350-b697f4a3e1f0",
        "cursor": {
          "ref": "989db602-94e1-4f79-ae42-09b8b80ef8df",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0596bae2-b480-460d-83f5-486368a6a471"
        },
        "item": {
          "id": "e6f0c182-04c8-4e3f-8350-b697f4a3e1f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "644f6e8b-9a73-42e0-af75-437ff094c41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e184593-9bd7-4d0a-8f3c-d0835a32a112",
        "cursor": {
          "ref": "dbd78f26-c931-4d93-ab18-7a47cde80503",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9ea07e2b-e27d-4667-9d33-2bb81de217fa"
        },
        "item": {
          "id": "6e184593-9bd7-4d0a-8f3c-d0835a32a112",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9b1a3b9-d9c1-4bfb-a88f-a08a8adf98c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d9ddf2-23d3-4875-8669-058a0e1602e2",
        "cursor": {
          "ref": "6d6a87ca-18f5-44c9-908c-7ecbb7f05d85",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1dfa98cf-0ae3-4418-bd45-9caf662664b4"
        },
        "item": {
          "id": "17d9ddf2-23d3-4875-8669-058a0e1602e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a726f50f-955f-434c-970a-887f6030584a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027ae0e6-cd59-4acb-b43a-c0bbf6b84db3",
        "cursor": {
          "ref": "88aa0516-6919-49dd-8a8c-e7b7d758e726",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d4fc3651-1ff1-4aea-a2ac-fb818d5e9da4"
        },
        "item": {
          "id": "027ae0e6-cd59-4acb-b43a-c0bbf6b84db3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aad63eb3-3cac-4368-85fe-9482cf413004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7add47-9e13-4ce5-b5e5-85ca99f9539a",
        "cursor": {
          "ref": "4a018a50-17df-4570-a32c-b767d96e86ae",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a8753375-8dea-44ac-9960-29e698d6bb88"
        },
        "item": {
          "id": "ce7add47-9e13-4ce5-b5e5-85ca99f9539a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "597b9539-8c72-4dd5-966e-e343fdcfd8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b471df03-9b57-4088-8089-f8e1e1b69a44",
        "cursor": {
          "ref": "b37a2a80-e69e-487f-b0f9-e88244fde0e7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3a3883e1-a92b-47b1-8a02-4eaa4acb60c5"
        },
        "item": {
          "id": "b471df03-9b57-4088-8089-f8e1e1b69a44",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "332b4be1-3c3c-4824-8cce-7f8a3b5521bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae041611-d3f6-49be-aa7b-0c085cea3ed9",
        "cursor": {
          "ref": "743c40b8-e814-43bc-a87e-e15db5358000",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "06052b0a-861a-4ce0-beb7-30d3e1f14dfa"
        },
        "item": {
          "id": "ae041611-d3f6-49be-aa7b-0c085cea3ed9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0cad73e-ddbf-4bab-9001-f975553acad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bb8e42-aff4-4200-a56a-83ea0a0dc39b",
        "cursor": {
          "ref": "63b55d27-29c4-494f-ac5c-f78032256a98",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "941d9c66-0a7c-4366-9870-58f07eb1e112"
        },
        "item": {
          "id": "38bb8e42-aff4-4200-a56a-83ea0a0dc39b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1bfb2cd6-1e89-4a0b-b4cc-4d414461f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc65724e-563c-4df2-9243-e78abeae076d",
        "cursor": {
          "ref": "5cd8c056-fc6b-4ed2-b36c-05764a82956c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "807b0ec8-bebd-4f73-af0e-e52e04180e70"
        },
        "item": {
          "id": "cc65724e-563c-4df2-9243-e78abeae076d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9f497775-2467-420c-b17a-56a2c264521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18590870-d71f-4a67-88b0-c616177aa123",
        "cursor": {
          "ref": "7fd35054-8548-4704-bf34-63973c2a0ed7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "226d4592-372c-4548-869e-d306464d155e"
        },
        "item": {
          "id": "18590870-d71f-4a67-88b0-c616177aa123",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ddf8ca2a-0b38-43ca-9834-f2f926708adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1400c7a0-1ea9-4610-9d8c-59de1d313c9b",
        "cursor": {
          "ref": "e83c5c0f-d608-401a-9620-9e390d4a7e07",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "69352de3-60d4-4f45-a110-2bfcf4e8f497"
        },
        "item": {
          "id": "1400c7a0-1ea9-4610-9d8c-59de1d313c9b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2800a64b-1762-4518-b509-a1f3bb23644e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407b86d9-9a35-4b6e-bb26-ca99818ab558",
        "cursor": {
          "ref": "06224b5e-be9b-4cb7-962c-cdb25b4bb658",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8bab467-7e8a-4363-ba9c-d7728126b883"
        },
        "item": {
          "id": "407b86d9-9a35-4b6e-bb26-ca99818ab558",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65e1eb66-ca6a-4b75-87bb-0765f46a5da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420325b8-9449-4b6b-92e2-9d8f94326be9",
        "cursor": {
          "ref": "99a00fc0-e788-46ee-a860-0bdfa9a471c6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9b95a766-0392-4b9d-8b10-a3cb9c61b775"
        },
        "item": {
          "id": "420325b8-9449-4b6b-92e2-9d8f94326be9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b91cd0d3-3237-4161-97f8-22ce96faba73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ecc49-2056-496d-928d-589bb3e7ac0c",
        "cursor": {
          "ref": "aa860178-e9b7-42de-8f0d-524f3efd0d63",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7f276598-68ee-4433-b258-d4f9a8d64ed5"
        },
        "item": {
          "id": "2d2ecc49-2056-496d-928d-589bb3e7ac0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "391d8cac-10aa-47c5-a9a9-692884a2035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef9aca3-a1de-4f11-a44d-5e6f0f1e2ef8",
        "cursor": {
          "ref": "91d54a0b-d13e-4a31-86a5-9bacaf67466c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ade5884-c365-4cb9-b5b0-706e93cf3923"
        },
        "item": {
          "id": "bef9aca3-a1de-4f11-a44d-5e6f0f1e2ef8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc0083af-2c96-42a2-a06a-13ce6ced8837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1068db99-1716-4cf9-b564-116318bd946c",
        "cursor": {
          "ref": "3c37c434-c331-4f67-b9b8-6695ba979612",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "423ee7f4-db45-4071-a72b-e598c6929879"
        },
        "item": {
          "id": "1068db99-1716-4cf9-b564-116318bd946c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d10fd23-636f-41e6-9f13-e1ed233381bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305beda1-71ff-4132-87b3-283a3fefd827",
        "cursor": {
          "ref": "3e44666a-1fd3-45e8-a6e6-95ba7fbc780d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3c50c5b8-73ae-46a3-9a2f-4bb613a11e9c"
        },
        "item": {
          "id": "305beda1-71ff-4132-87b3-283a3fefd827",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d2f3af2-4f1e-4fd3-8e9c-284cba6fd8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e22b7-a719-4af3-acd4-bfb530ad7ef7",
        "cursor": {
          "ref": "095e2452-7427-4138-884e-dea6ba2860a9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5a45e8d5-17b3-4004-91dd-993519ee7ed9"
        },
        "item": {
          "id": "5a3e22b7-a719-4af3-acd4-bfb530ad7ef7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb2a9907-fce0-4a1c-a5f7-36365552732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bb509c-86bd-4638-8b61-8bc370aafa15",
        "cursor": {
          "ref": "92204d21-1ebf-4a68-835c-5681e6949d66",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "60e3e64d-8d12-4ecb-a917-6b1ffee2f6a5"
        },
        "item": {
          "id": "44bb509c-86bd-4638-8b61-8bc370aafa15",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06f2dc4a-967b-41cb-9997-9efbad094e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe3fe25-8eeb-41b1-9769-93c005e4ae16",
        "cursor": {
          "ref": "b75fd801-5eb4-4f45-a08f-55d0aa4197eb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "563f910f-2c70-4196-adaa-c2d01310c0f3"
        },
        "item": {
          "id": "dbe3fe25-8eeb-41b1-9769-93c005e4ae16",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d609257-86b9-43d5-b6d8-218e58dc2294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5934c6de-4482-40f2-be44-15e100e34830",
        "cursor": {
          "ref": "8bdac9c6-b468-4d43-b4a2-2d7042fe80ad",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1b9a3826-9e1f-45a7-99ad-1086c4d2313e"
        },
        "item": {
          "id": "5934c6de-4482-40f2-be44-15e100e34830",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0fce5168-10b5-4790-8066-be60e718ea31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ddd447-52db-414d-b084-1567671d3a00",
        "cursor": {
          "ref": "df5ee840-1b3c-4479-affa-8572d489d19b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "79fa0b80-da7d-4d46-bb77-40a002901c7e"
        },
        "item": {
          "id": "16ddd447-52db-414d-b084-1567671d3a00",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79f4e96a-d503-4ada-ad22-de9b8b1ad23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2641eceb-c598-48fb-9826-688c66e32d32",
        "cursor": {
          "ref": "dbf62615-e844-4540-ab9d-a0799fd56511",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f1e9e67-7a29-4741-8433-94861e2e1c4c"
        },
        "item": {
          "id": "2641eceb-c598-48fb-9826-688c66e32d32",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0765a597-b3ca-4a21-893d-af5d4b7527c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fd207-9fa6-4c62-9b86-34582ccdcded",
        "cursor": {
          "ref": "14cd532a-736d-4160-936f-9047f7a2bd80",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "102509a0-1850-4118-b50b-8bb8a1e6dc11"
        },
        "item": {
          "id": "f87fd207-9fa6-4c62-9b86-34582ccdcded",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c6425d51-df21-4c7a-8138-0fee596d2f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233f8b7d-198f-44a6-bb55-6ea39c3d88a0",
        "cursor": {
          "ref": "51a6514e-2ace-47b5-aa81-264f0fd08b8d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5630d3c3-91e1-481c-891e-446aed1d616c"
        },
        "item": {
          "id": "233f8b7d-198f-44a6-bb55-6ea39c3d88a0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3aab92a3-895a-4f90-9c29-dfb6af8fb175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbd91cc-283e-47ce-967a-a3058f8a036a",
        "cursor": {
          "ref": "efb3e66e-2a71-4eb9-8781-b39856477a17",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f8d87240-36d1-450d-a6a3-d06fdd2c343c"
        },
        "item": {
          "id": "fcbd91cc-283e-47ce-967a-a3058f8a036a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "242f7466-515a-4f83-a69c-200d5242bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a672b-ffdf-483a-af50-048defda413d",
        "cursor": {
          "ref": "47d782c6-07ea-4614-9d3c-3c6cae8b3324",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ea762eab-e0cd-4fab-ad7a-5e2665d2268a"
        },
        "item": {
          "id": "518a672b-ffdf-483a-af50-048defda413d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2bdd74ef-ec4c-4c9c-825a-28e11ba8575f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233240e4-6302-4158-81bf-90899a9d0e41",
        "cursor": {
          "ref": "7800d8d1-6c2a-443a-8abd-ed80eb1c9142",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8889b376-d4dc-43c3-9081-b2e412ed4c0f"
        },
        "item": {
          "id": "233240e4-6302-4158-81bf-90899a9d0e41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83f0cffe-1558-45d2-9243-950217ed49a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3399e4d7-fe99-4d1d-b1b8-9411ae200647",
        "cursor": {
          "ref": "a9cd67da-5808-4912-9d78-7240bc096fe5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "19cdc216-1187-41ca-aa2c-46f5e1f45ed9"
        },
        "item": {
          "id": "3399e4d7-fe99-4d1d-b1b8-9411ae200647",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "916cfaea-04d1-49d7-9152-fd0c6b4d43b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b5222b-d72d-4b69-867d-ce0c24b790e5",
        "cursor": {
          "ref": "546a78d3-899b-4a90-9ae1-d827e04c4002",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13d21247-cf50-46e4-9ec7-a256fb5af9ed"
        },
        "item": {
          "id": "27b5222b-d72d-4b69-867d-ce0c24b790e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "690e663c-67fa-4ebe-9880-672ae8f3421b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aee41d5-5f5a-4c99-9fb7-25f481653301",
        "cursor": {
          "ref": "17f0d5b9-7b77-4adb-8f20-8a3415344a18",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "91fb1232-31f0-480b-9c55-17236e04cdfb"
        },
        "item": {
          "id": "5aee41d5-5f5a-4c99-9fb7-25f481653301",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a100ab1a-b483-4934-9f10-b9d1407a721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3367abba-bf1f-445f-a786-bd2be020d943",
        "cursor": {
          "ref": "dfc1d750-893d-4d03-bba0-80daa6a3732c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "559cd2c7-4f8f-4d7a-801a-eb8b4fd8ee97"
        },
        "item": {
          "id": "3367abba-bf1f-445f-a786-bd2be020d943",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec871de1-6761-40ca-874a-d7f1398a8dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3a1ddd-2cb9-41a9-bf6a-1b6ead32497a",
        "cursor": {
          "ref": "0df86cca-f5ab-4453-be31-6d4cfad8c1ee",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5dbec5d4-fe86-4ceb-aee2-6ca5f0a15beb"
        },
        "item": {
          "id": "cf3a1ddd-2cb9-41a9-bf6a-1b6ead32497a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5681ae9e-33f2-47ff-b6ec-08db726d6dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962cc449-1082-446e-8d54-b19423f6310c",
        "cursor": {
          "ref": "1538e09e-7aa8-4268-ac30-0898f59b9ea4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ff5c1b3d-151c-4561-97bd-75365d907bd8"
        },
        "item": {
          "id": "962cc449-1082-446e-8d54-b19423f6310c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f659dd40-f511-4b6c-a237-56045e869fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e4291f-d9de-46c2-8077-ef17d3e8bec6",
        "cursor": {
          "ref": "6cf0ae1d-b380-4dc0-96eb-3ffc3f4444e4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "63ec97d7-3614-47df-8f16-a35a7539289b"
        },
        "item": {
          "id": "b7e4291f-d9de-46c2-8077-ef17d3e8bec6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5aa5efc1-9eaf-406f-9104-2f9426cf8bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabd5ec5-4658-438f-a0f0-bdf634d67476",
        "cursor": {
          "ref": "6ac71a4d-1516-4ccf-8ec8-8740a5c78d1b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9cffe508-d6f8-40ac-b835-f92bcc6089dd"
        },
        "item": {
          "id": "fabd5ec5-4658-438f-a0f0-bdf634d67476",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4f4f463-a335-457d-bf51-63b18e119c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e6d6b-de81-49e9-aa9f-c4f4ebb246b9",
        "cursor": {
          "ref": "be233866-bf50-4082-9ba4-5f6a6e3f8a59",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35331e1e-8e5e-45ee-baf3-42397fcf8e05"
        },
        "item": {
          "id": "bd0e6d6b-de81-49e9-aa9f-c4f4ebb246b9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "561e2f8d-f988-4508-969f-3136d4db28cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9b5cd5-ac13-475e-b8f7-afbee807c353",
        "cursor": {
          "ref": "e9d8b186-a73f-4db1-b37d-876ddebaffe9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "621b006d-6f60-44a7-9877-9a40d9d44b02"
        },
        "item": {
          "id": "6d9b5cd5-ac13-475e-b8f7-afbee807c353",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2434cac7-45ee-4996-8dc6-677d0cb7a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369534fb-654f-4e90-8b22-9956e7ed4a65",
        "cursor": {
          "ref": "1995a9dd-5b36-4040-b256-77b2bdfca784",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "26406766-0cba-4901-819c-7286c3e07731"
        },
        "item": {
          "id": "369534fb-654f-4e90-8b22-9956e7ed4a65",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62d665ad-46a0-41a6-809f-3fe6c2eaa468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c3ac9-2d02-4f68-813f-3b83632d204d",
        "cursor": {
          "ref": "6181cda6-2c5f-4042-925a-6368a66585af",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a9ecccb3-c780-4af5-b956-439b19a6afe4"
        },
        "item": {
          "id": "6a7c3ac9-2d02-4f68-813f-3b83632d204d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9782bac0-cd60-4ab0-bd7a-bf1fbdec5268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d8607-7fcd-41c3-a2c3-683e0765f0bd",
        "cursor": {
          "ref": "32286255-393d-4975-980f-c506c0fbf544",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "df41750b-6151-4d82-8961-560c1e669758"
        },
        "item": {
          "id": "682d8607-7fcd-41c3-a2c3-683e0765f0bd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f1fff829-3e89-44df-930a-f18388a8bb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad7e6d-b38f-45a5-8a43-3c32c249a6aa",
        "cursor": {
          "ref": "e4e186a8-faec-4b1c-8f70-caa035eb6bbf",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bfa4457a-9a2a-4e2e-a27d-65e48069fa99"
        },
        "item": {
          "id": "b7ad7e6d-b38f-45a5-8a43-3c32c249a6aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b26bd1ed-2acf-4413-a011-2111f360656b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a3b4b-8a13-42fa-b68d-a16f88d17caa",
        "cursor": {
          "ref": "d80ed01a-4c58-4d9c-a37a-2f6596964321",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "46ff6b15-0523-413d-9da4-e842e6506e1d"
        },
        "item": {
          "id": "e93a3b4b-8a13-42fa-b68d-a16f88d17caa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8fdc7943-de65-4742-aff7-aa11dfd636f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89f73f-9eba-464b-92e1-aae8e562b8d0",
        "cursor": {
          "ref": "892fb8c1-3c3b-41b9-80c8-48126cc63cbd",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "34148983-dcb9-44c4-abeb-3a65dacae4a8"
        },
        "item": {
          "id": "4d89f73f-9eba-464b-92e1-aae8e562b8d0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "818da937-44c3-4faa-9b73-b1da0918f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c1429f-84a7-4343-8e68-4b02bcf094a6",
        "cursor": {
          "ref": "430c3f8b-4e47-4f8e-b602-18b4ed5025c3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37e0c54a-3496-4bdc-b43f-d7ae3e5da94f"
        },
        "item": {
          "id": "02c1429f-84a7-4343-8e68-4b02bcf094a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a73fb321-0e8e-4547-bc3b-7ea8f3b6bf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164767e6-f775-4c9f-a524-881e26b0f784",
        "cursor": {
          "ref": "2bed27d2-a0d3-488c-b5b5-8576e6059225",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "04898e1f-538e-4971-9a95-614959952659"
        },
        "item": {
          "id": "164767e6-f775-4c9f-a524-881e26b0f784",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1303b6d0-c9e9-43aa-87cc-ef333895939c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202da94-51a1-40e7-b738-69036a2cf7f4",
        "cursor": {
          "ref": "200ca8a2-ad9e-4e93-b677-a5c97b013c6f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45160fc4-77d8-4d5c-9be3-343c50c6c26b"
        },
        "item": {
          "id": "f202da94-51a1-40e7-b738-69036a2cf7f4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ac36d049-e5de-4f62-a2a8-fc88cd5e3326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45c6181-11d3-4dd2-8213-023a57e60265",
        "cursor": {
          "ref": "40a27c83-4860-4aaa-a06f-9f305cb89c23",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "df74966a-f124-4d56-ae46-c8ccbf14bb07"
        },
        "item": {
          "id": "f45c6181-11d3-4dd2-8213-023a57e60265",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a55b54ef-3476-4fc4-86ec-3912e4f2a981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31632566-311b-4173-a3d3-1fa11d21ffe6",
        "cursor": {
          "ref": "821af216-7817-4ab5-8e36-4c3756beee0d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "72d4b559-8670-41cd-a83c-6a5642f0ea64"
        },
        "item": {
          "id": "31632566-311b-4173-a3d3-1fa11d21ffe6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af3dc6e3-4d07-47b9-80ac-4d4644e3abf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d265a03-5a47-4964-8450-530cc0fe1802",
        "cursor": {
          "ref": "6bdefaae-0517-4ffa-8cf0-5bccf0f2c86f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60a8083f-8386-4fc5-9cbb-e26c0a058c67"
        },
        "item": {
          "id": "1d265a03-5a47-4964-8450-530cc0fe1802",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2b031933-64c8-4b33-a69f-51509667f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4ef04-713b-4cbf-adfa-dd7d29d8e961",
        "cursor": {
          "ref": "7e4f55d0-113b-4708-a1a7-a68c23ecdd7a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b92bdbe6-a859-44cc-a845-d5b10abab911"
        },
        "item": {
          "id": "62f4ef04-713b-4cbf-adfa-dd7d29d8e961",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75d92e03-758e-48dc-bc72-9891280762aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f184f807-e3bb-4d6a-9cd3-9ecae0dc77db",
        "cursor": {
          "ref": "cdff4680-77aa-40a8-89d9-74c23c9d7f56",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "41143e57-1429-4113-aae9-fa206127031c"
        },
        "item": {
          "id": "f184f807-e3bb-4d6a-9cd3-9ecae0dc77db",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0cdd8994-357f-4160-afd1-1b083c154546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5542964f-f9ab-433e-a312-dcbcf5c01834",
        "cursor": {
          "ref": "202276f7-7322-4041-8fb2-8f264d6f2b19",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96055bf1-acd6-4ec8-80c6-7e92f601a34e"
        },
        "item": {
          "id": "5542964f-f9ab-433e-a312-dcbcf5c01834",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0d11184c-6990-4a9d-a34b-895e9240a1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2593b10-c149-417b-af4a-bd71c56dc6f5",
        "cursor": {
          "ref": "ab7878b9-213e-4664-b801-f60919e4668d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d6828f05-e550-461b-885e-a995625c177c"
        },
        "item": {
          "id": "d2593b10-c149-417b-af4a-bd71c56dc6f5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "af284ee0-f2ce-4523-9b74-20d67f58798d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5800ba-03ab-4d73-a481-77913534a438",
        "cursor": {
          "ref": "e21650fd-cac6-4497-9f0b-2f0c9cc1e854",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6f83f1fd-1fe6-4064-ae79-51135b8d2ffb"
        },
        "item": {
          "id": "2c5800ba-03ab-4d73-a481-77913534a438",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eef45c55-05c9-49b6-85bb-dd63261a69b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8885ee96-387b-4d24-90ab-511a0f7bf1c9",
        "cursor": {
          "ref": "8a1f57ab-bd5d-4278-950e-c414fa33853d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a7844efa-7e28-4641-bfdf-0a94d92f09e1"
        },
        "item": {
          "id": "8885ee96-387b-4d24-90ab-511a0f7bf1c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6b81cb36-94f4-4099-aafd-7c485fb2f77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca51c1ca-abd6-453d-8fc1-ca4d34625339",
        "cursor": {
          "ref": "bba45614-a719-475e-b560-389acb3a5271",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "df967c52-e476-400e-a4b3-e5b7d0199012"
        },
        "item": {
          "id": "ca51c1ca-abd6-453d-8fc1-ca4d34625339",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e560f82e-1f1a-42eb-a679-31270d530f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b967271f-3b97-42d1-bfca-e6b48ce64d6a",
        "cursor": {
          "ref": "eb55a050-eec3-4b2a-a300-ae97c6adbbc7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3683c326-8b07-4e53-a891-ec2874bcec9f"
        },
        "item": {
          "id": "b967271f-3b97-42d1-bfca-e6b48ce64d6a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "896e044a-6091-4f01-a7b1-bc54a45f7de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ab87da-67bf-478b-b439-09b1b4961ce2",
        "cursor": {
          "ref": "a7545306-4161-4ec0-be49-ce6abbefc293",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e0deafd-d97a-4b41-9f7d-91ab10875341"
        },
        "item": {
          "id": "24ab87da-67bf-478b-b439-09b1b4961ce2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5daf8933-f72e-425f-9ee7-70b3bdf1d1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd00620-d1c2-4020-a35e-728ce3c17e07",
        "cursor": {
          "ref": "c7af134b-7ce5-40ac-9da8-9fe183720793",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90cedbe3-ff66-488f-9755-7ebdf15f3def"
        },
        "item": {
          "id": "fdd00620-d1c2-4020-a35e-728ce3c17e07",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "afa49402-f2de-4cbb-89a4-b3fd6d48ce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a05933-846c-408a-84e7-3c162c337ecb",
        "cursor": {
          "ref": "e9cc8002-71ba-4dd4-b5fb-ba3dc790668c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a7db286-7a82-4b2c-b95d-a256dc4b76e2"
        },
        "item": {
          "id": "c8a05933-846c-408a-84e7-3c162c337ecb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "242dd3e0-eed6-4883-930f-ae297289314e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db751a-42f7-46f8-be18-5caca20e8acb",
        "cursor": {
          "ref": "10700f48-b59d-4b2f-bb9d-c72579468750",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9919f387-b010-4585-9ef8-6aef31ac8b07"
        },
        "item": {
          "id": "d4db751a-42f7-46f8-be18-5caca20e8acb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d170c944-c124-4742-b4b4-bd7c00b278be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe23d3-beff-4654-9040-35d5ccfdb519",
        "cursor": {
          "ref": "9078e471-593e-49d6-a341-b5d0edba77c1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "447a2d63-858e-4bd1-8d40-e89336f8274c"
        },
        "item": {
          "id": "84fe23d3-beff-4654-9040-35d5ccfdb519",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4c36cc9d-3d5e-4df1-a321-73dabe01a44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4af094-58f2-4e3c-ad41-7595d5c25864",
        "cursor": {
          "ref": "6b0a0add-3e52-4aca-beaf-62b025db3fca",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2f2dc408-ce9d-4ad3-877e-6c70004f9f47"
        },
        "item": {
          "id": "9c4af094-58f2-4e3c-ad41-7595d5c25864",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d47b7a70-4628-43cc-a661-accb4c92b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6eaf50-8b51-446f-8124-78ac0889f57f",
        "cursor": {
          "ref": "2ee55234-13f6-44b6-bf86-792a04db1bdb",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7869a51b-fbe3-48cc-895b-fe92b3190a6c"
        },
        "item": {
          "id": "da6eaf50-8b51-446f-8124-78ac0889f57f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "274c95ac-a3ac-4a81-8f61-64426d950f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827545a2-937e-4c33-a4c8-d814b7621da1",
        "cursor": {
          "ref": "07381320-9c0d-4c4c-aab6-1edc408fa9fc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aacdc364-03a2-43e1-bece-9571518e9821"
        },
        "item": {
          "id": "827545a2-937e-4c33-a4c8-d814b7621da1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aa0b97b3-5c10-42dd-9197-9501f4cba47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568cacba-3732-42de-a3e6-871573928d8c",
        "cursor": {
          "ref": "bf82bf5c-c9a9-405f-b235-e2559d362b98",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "83f6b830-4c21-49ce-8d78-4956423b9537"
        },
        "item": {
          "id": "568cacba-3732-42de-a3e6-871573928d8c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c38f72df-aa1b-41d4-ab16-ba177df0f4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9b6fd7-f609-4fae-8dd5-6514a2d0a53b",
        "cursor": {
          "ref": "180a2508-fbc4-434f-894e-95edc19a4108",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9d980cd-4f4f-47b3-80bb-fef63edff6fe"
        },
        "item": {
          "id": "7d9b6fd7-f609-4fae-8dd5-6514a2d0a53b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "72887f33-4dff-42ca-a031-8c9d5d22d249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ef8061-7738-4373-b548-7c9c3c65b2aa",
        "cursor": {
          "ref": "3f29a1e5-0e54-48dc-bd2b-00ed75127054",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dd3143eb-9f4f-4197-8400-9e45a59b7585"
        },
        "item": {
          "id": "95ef8061-7738-4373-b548-7c9c3c65b2aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c1778a5f-b762-429b-b8a0-887b89014121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58db8d92-0bed-406b-ac49-e6cb184512d6",
        "cursor": {
          "ref": "624a5776-12ac-4e41-8533-ac92fd317ea5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "47437609-5893-4fe4-862c-2ced68e17fba"
        },
        "item": {
          "id": "58db8d92-0bed-406b-ac49-e6cb184512d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "afd5fc60-30c8-4f07-9203-bb9768b4151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555d4a3-756a-4aca-acd8-47dcbee0950c",
        "cursor": {
          "ref": "d782189b-d020-4c3b-bfde-394f39774714",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8164fbe-4f03-45a1-a437-88aeef598875"
        },
        "item": {
          "id": "a555d4a3-756a-4aca-acd8-47dcbee0950c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9688bd6f-a63d-47f9-9ca9-6ab13344e8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63979668-58b4-4682-b0f5-66cd332c0ae9",
        "cursor": {
          "ref": "09b10fe6-5ccb-4fd4-8598-e3f0f29259de",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d0aa97b6-cb63-4d34-9482-cd3af4904421"
        },
        "item": {
          "id": "63979668-58b4-4682-b0f5-66cd332c0ae9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ae26a18a-ab0f-4329-9e35-d5efb5e8ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0920dc26-7c35-4474-b760-180a85b65b1d",
        "cursor": {
          "ref": "dca2cff9-4734-481a-a896-fe3b01ac339f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1269911f-e488-420b-8521-097899b617e4"
        },
        "item": {
          "id": "0920dc26-7c35-4474-b760-180a85b65b1d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4bd2affb-94ff-4e54-a2df-8ccc111c2b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7d8954-4ddc-477c-a316-0da307e41113",
        "cursor": {
          "ref": "232b7f08-4ba6-4218-ae78-586ff7eea41c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e6498fef-9d71-4f8e-9afa-80d321d0b265"
        },
        "item": {
          "id": "cb7d8954-4ddc-477c-a316-0da307e41113",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "58ded29d-50fc-4132-bfa5-3989fee6acd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97633911-b036-414b-af29-262229a4f9d4",
        "cursor": {
          "ref": "74635e27-2466-4d36-bef3-5889a3e63d85",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c90f023e-b14e-4633-a073-0ee1dda369d4"
        },
        "item": {
          "id": "97633911-b036-414b-af29-262229a4f9d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc6345ce-fd71-4128-bbb2-60e558555b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b0d90d-6e0d-4c32-b0e7-efdd7bf9c23e",
        "cursor": {
          "ref": "e4c54ee5-3478-444e-aa5b-7d1f36573697",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da45cd03-4b4d-4d55-9569-65106203a565"
        },
        "item": {
          "id": "15b0d90d-6e0d-4c32-b0e7-efdd7bf9c23e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "26c0bcbb-48b3-42a5-8f72-5a8a7862f748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c641f-7c9e-4a2f-badb-0bb75f99c2bb",
        "cursor": {
          "ref": "83157d56-f837-4abc-a44a-96a508cb12dd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d5ceb626-9f8c-42da-a3ac-57ab1f81e4c5"
        },
        "item": {
          "id": "d16c641f-7c9e-4a2f-badb-0bb75f99c2bb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "963bdf48-edd0-49dd-87ef-00f41b1230df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb476cf-4107-44d4-9f2a-ccd35c366f41",
        "cursor": {
          "ref": "52c749e1-08af-4a17-93fe-0542c129d956",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "673a6da4-6fab-4958-b7e1-4f4f6424c688"
        },
        "item": {
          "id": "afb476cf-4107-44d4-9f2a-ccd35c366f41",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b280644-dea1-4c46-a1b7-974ee31f1621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c36ca5-cb03-47d1-9f71-6db40be52e54",
        "cursor": {
          "ref": "01af5e9a-afe4-4929-956e-9e190632187d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64999cde-2753-4966-94bb-a6f811d46c7c"
        },
        "item": {
          "id": "93c36ca5-cb03-47d1-9f71-6db40be52e54",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ea4bcb59-3777-4a5d-97db-5a6c7be21a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de018305-2337-4968-a6a0-2d59ea4562ca",
        "cursor": {
          "ref": "f82d1ff1-351c-46c0-893d-58dc188047ff",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72bb1ede-f472-4d2d-894e-d3f3de2bd347"
        },
        "item": {
          "id": "de018305-2337-4968-a6a0-2d59ea4562ca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "814d9519-392b-4fca-9c45-cc79d27e2fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaeda59-db06-486d-bd89-e13c2f0d3980",
        "cursor": {
          "ref": "ba46fce0-763a-4e36-ab7b-945c776247e9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f87eb8f7-82fb-43bb-a39b-e68478fbbfdc"
        },
        "item": {
          "id": "8aaeda59-db06-486d-bd89-e13c2f0d3980",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ecc2614c-d262-4428-86a9-12e62a9f029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2677b2-48da-453c-b77a-8774a6c61cda",
        "cursor": {
          "ref": "ff4a1f67-f160-4807-8078-9c26f4d730bc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "33a79a96-5c1e-4080-a795-b4bbbf1e9526"
        },
        "item": {
          "id": "9d2677b2-48da-453c-b77a-8774a6c61cda",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f8860c75-4180-400a-bcef-ea85f3a0edcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c3fed-9158-4d10-8027-ea1975ce0fa1",
        "cursor": {
          "ref": "8b547a24-a965-488e-9c30-063d6adb166a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "09b19714-dcd0-4509-a45a-09d1912b10ce"
        },
        "item": {
          "id": "fe6c3fed-9158-4d10-8027-ea1975ce0fa1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9895e4ea-477a-41a9-928a-5713e1360a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08768e6-50af-4004-b505-c40e8f480f02",
        "cursor": {
          "ref": "38470a73-59fc-4a48-8ce2-8e9c269a6846",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bd5ba7e4-0685-4e06-9a1c-f837222eb396"
        },
        "item": {
          "id": "a08768e6-50af-4004-b505-c40e8f480f02",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2b8a96b4-6852-4ef6-9c74-391e82841a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88492b7-d429-42c6-a5cd-fbcded1b28e1",
        "cursor": {
          "ref": "511be804-d497-40fb-a227-738e805339ce",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ef6ca4ab-432c-4a72-9611-c2fc73df1fb6"
        },
        "item": {
          "id": "b88492b7-d429-42c6-a5cd-fbcded1b28e1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dca2057c-bf24-41b6-9699-1cdd247089a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a804c81-6c39-4aff-a9b5-a9eb795fce77",
        "cursor": {
          "ref": "cd128d84-8c7f-4323-8ac1-c0c308e54c5f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4a665df3-468a-4460-bc2c-98d22dd801fa"
        },
        "item": {
          "id": "5a804c81-6c39-4aff-a9b5-a9eb795fce77",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9e7f1df3-cb6b-486f-b4da-2d6763934997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692c99ae-c4c0-4292-995c-7b6a41a75503",
        "cursor": {
          "ref": "1a1a72fd-9b25-42e7-9f31-88cab1a0e3f6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "499c7c93-bba2-4ac0-841d-624f68433935"
        },
        "item": {
          "id": "692c99ae-c4c0-4292-995c-7b6a41a75503",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0024267-0da1-4c6e-85f9-83f8abb515d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfff722-cd22-46e5-84ea-b0240c39808e",
        "cursor": {
          "ref": "9556ef1a-b0e6-47f4-974e-e11b4375d1f0",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5a633461-7ae4-4406-b0e4-c467e110591f"
        },
        "item": {
          "id": "3cfff722-cd22-46e5-84ea-b0240c39808e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2ab5eb99-ba0c-4ad4-9cb8-c8091d7e9d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f726adbe-a7b7-4f1b-8da4-c1d80c17ff55",
        "cursor": {
          "ref": "2c595ac4-78a3-4d46-b244-5886cd868c48",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70554adb-a642-4a5d-b332-855e67e94410"
        },
        "item": {
          "id": "f726adbe-a7b7-4f1b-8da4-c1d80c17ff55",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dd093a1b-5eb4-4c61-b795-6d9e713bdb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8307fc-5d03-4875-8b2f-abe0b3d4917a",
        "cursor": {
          "ref": "7466ff8c-faf4-4204-91e0-258e6ae19e63",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f84d5e69-2ca0-4698-9be8-79c8f87d5980"
        },
        "item": {
          "id": "5e8307fc-5d03-4875-8b2f-abe0b3d4917a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "850f3edc-dcee-48bb-af2a-8aed7b036968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93872e19-4d96-441f-8c08-f475ee92e1e2",
        "cursor": {
          "ref": "e5d73755-79d9-4050-8d80-dc985442b7ce",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a29ce02-8846-427f-a35e-0a86c54db546"
        },
        "item": {
          "id": "93872e19-4d96-441f-8c08-f475ee92e1e2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a1c6f584-9926-41cf-a125-6cfae80ed6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ee76ee-8aa5-430c-8a01-36689a04952c",
        "cursor": {
          "ref": "ed8eb00d-d9ef-4a48-a962-000aec10bd65",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1ccf179a-2cd3-48b9-aea5-99207d8e7455"
        },
        "item": {
          "id": "44ee76ee-8aa5-430c-8a01-36689a04952c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d21df4e4-b279-44e2-a244-3b639ce42a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec19a1-9ad1-4a8d-8869-82941577191f",
        "cursor": {
          "ref": "4b51ddd0-e21b-42b5-90d0-bc368bc71503",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ba0a5513-b422-40bb-8b60-c82ef9749054"
        },
        "item": {
          "id": "ffec19a1-9ad1-4a8d-8869-82941577191f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49abc73d-45ee-4053-b96d-e8262ec83942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ba5b5-7e15-451a-b712-684d8526086e",
        "cursor": {
          "ref": "5fd5af07-7712-4752-8e9a-531f6889326a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e608539-b036-4b85-b08a-759681893bf4"
        },
        "item": {
          "id": "b10ba5b5-7e15-451a-b712-684d8526086e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9d2b9f53-32dd-4760-ac9d-3ded9c21528c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9427a73-8917-4828-8a6d-dbb7c655e779",
        "cursor": {
          "ref": "aec66f06-1709-4651-beb3-a5705cecd445",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9283b36f-4ad4-4539-95a7-37b95919a74f"
        },
        "item": {
          "id": "d9427a73-8917-4828-8a6d-dbb7c655e779",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ef74ed8b-038b-465e-a1dc-63ecfb7197ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a05bffa-58e5-4472-a7ec-2fbe6b98ca84",
        "cursor": {
          "ref": "f87fe8aa-796d-4515-9a94-3eb81a2f2d05",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72e600ee-7c11-413b-8d30-1894add7c098"
        },
        "item": {
          "id": "9a05bffa-58e5-4472-a7ec-2fbe6b98ca84",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8f0229a0-69e5-49de-9949-ef95098faf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4631fae2-de2e-45de-9717-b490369ba67c",
        "cursor": {
          "ref": "4a53e83c-a491-4127-88b1-3f9f9780ce92",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "57825671-09c5-4cb9-8ed7-c8fb4118be3b"
        },
        "item": {
          "id": "4631fae2-de2e-45de-9717-b490369ba67c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad4ae32b-872a-419c-af07-436ccaba84d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ea4d1c-5e1b-40ee-9806-78846bc0b17c",
        "cursor": {
          "ref": "f14c5a14-e88f-43e7-92dd-a5b5cf765c22",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "785a6d96-fd41-445a-b5bd-44d1aeb1d53b"
        },
        "item": {
          "id": "12ea4d1c-5e1b-40ee-9806-78846bc0b17c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "018d0bad-bd76-4531-8dbf-4ffba0799d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1aeb4b-423b-4db2-a636-13a6c755d73c",
        "cursor": {
          "ref": "1acf6a50-d61f-4210-a402-aa6475382bd8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a5af4c59-5c15-46c9-8f80-fcae21845026"
        },
        "item": {
          "id": "7a1aeb4b-423b-4db2-a636-13a6c755d73c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "74bc2937-ed13-49a0-aa05-23af969877c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7ef757-1e70-455c-8427-9273d6135ca6",
        "cursor": {
          "ref": "2bf80584-58c0-4382-bc31-9c7a26b24e12",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0f80869d-241c-419d-8e3a-c90057750726"
        },
        "item": {
          "id": "3a7ef757-1e70-455c-8427-9273d6135ca6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eeba03e7-5658-431b-a002-d8b867d541d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e4e6c1-1c06-415c-9681-0e3d1518cb7b",
        "cursor": {
          "ref": "43fbd10f-4816-45df-a6e8-a5171ffab7ad",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e88a854e-ef24-48d3-958e-d7636136330d"
        },
        "item": {
          "id": "11e4e6c1-1c06-415c-9681-0e3d1518cb7b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b51ac16-c581-4560-9874-267d6e4cf328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ebc573-b8c1-48ea-a528-093f8bde17db",
        "cursor": {
          "ref": "d10fc248-d769-45b7-b890-12d9f125278a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8abe8ba5-5df6-44ad-b8af-12c099d16eed"
        },
        "item": {
          "id": "73ebc573-b8c1-48ea-a528-093f8bde17db",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fe39d615-f1a3-440a-a65e-f649e00773e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845e81ed-c4d3-45d6-b411-27a9cea4f2ea",
        "cursor": {
          "ref": "d6051474-13e1-4222-8fde-718f9eede19b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1c0d2302-b3dd-4cf1-a2e8-cd31bb7c5a0b"
        },
        "item": {
          "id": "845e81ed-c4d3-45d6-b411-27a9cea4f2ea",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "de68f93d-20e9-437d-be5e-18cebc909226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a253979a-4bbc-47b1-b833-8e9e45e1dd59",
        "cursor": {
          "ref": "eb1785d7-4b4e-48cb-9603-1b897aaaae98",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1e3b032d-2d2a-4c28-b9ca-c67af052da2c"
        },
        "item": {
          "id": "a253979a-4bbc-47b1-b833-8e9e45e1dd59",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1eb2e5e-474a-41d7-80ba-6be9f6b0ce05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eca2d15-b0ef-421e-9d04-c3f90914b78c",
        "cursor": {
          "ref": "613339bb-3bc4-4d13-b0cd-4508dacbe7b1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "69df8f43-0961-46ce-bd9e-c7eff759409a"
        },
        "item": {
          "id": "3eca2d15-b0ef-421e-9d04-c3f90914b78c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ca7f2719-48a8-480b-9979-d9e594aeb53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe07c8d-a878-443f-9dbc-9749222967f6",
        "cursor": {
          "ref": "8807a5c3-e095-4955-a33f-08cd230d6c1b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cef9008b-173c-4c96-aa39-38da36b6c7e4"
        },
        "item": {
          "id": "dbe07c8d-a878-443f-9dbc-9749222967f6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5400269a-ea7c-44fc-bbb5-1d3fe9059dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a393c6-a20d-4962-9625-d5e48509c148",
        "cursor": {
          "ref": "996a5597-4a06-4641-8698-0431e3af6603",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a5aff4c9-6c41-4389-894e-9926270bdb32"
        },
        "item": {
          "id": "87a393c6-a20d-4962-9625-d5e48509c148",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66d9178f-5d5d-4d11-88d8-9319b3dda41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2763fd3-668f-4294-94bb-2fa077a0f35e",
        "cursor": {
          "ref": "cc57e780-03d0-4b01-b964-25cb841f1d76",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2da7e350-7d5b-4581-9baf-54555a3b5706"
        },
        "item": {
          "id": "c2763fd3-668f-4294-94bb-2fa077a0f35e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7c3c11a5-6203-4ed7-b310-d0adf74893c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41e4d5d-aecc-46d2-880d-e0777fe68d95",
        "cursor": {
          "ref": "d598ac64-4102-48a0-92cd-ceaaef390c2f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d262b955-ca0e-46da-ab92-f26a187dcb9b"
        },
        "item": {
          "id": "a41e4d5d-aecc-46d2-880d-e0777fe68d95",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "de8e3613-5b1c-41e1-bc1d-8b8ff9ddb3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8c80a3-4f98-4e0f-b506-81ae4d8681e7",
        "cursor": {
          "ref": "b3128d6b-4897-491d-bcaf-99a408a62cfb",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1bfc5f1d-feb3-4734-bb4e-eb396add27b5"
        },
        "item": {
          "id": "6f8c80a3-4f98-4e0f-b506-81ae4d8681e7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ad060b58-eb27-4588-b94d-b2421c61c2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d49c90-9cd0-4970-9121-c1da269cc7a8",
        "cursor": {
          "ref": "4e339927-ac4c-4d4f-a574-7be10478c6a7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "53b6ece2-af14-4038-b475-a80825d5781f"
        },
        "item": {
          "id": "58d49c90-9cd0-4970-9121-c1da269cc7a8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "96ccaf99-d49a-484b-8bf6-e77a42c260ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b7b3e-a34b-4d3d-8674-09b5d97e8f36",
        "cursor": {
          "ref": "c842c354-ecbc-49fc-abcd-2f9bd349cf29",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d25f9538-3461-4181-bb5e-78ba900835bc"
        },
        "item": {
          "id": "f28b7b3e-a34b-4d3d-8674-09b5d97e8f36",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed94c09a-2e40-431c-90a7-7ec9f1d3bebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d211bc-54d7-43c1-a03f-9e11ac3aafb2",
        "cursor": {
          "ref": "ef14e9eb-d407-4310-8557-0f4f165f30f5",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3c7bd52a-758d-452c-b98a-dedca038dcb6"
        },
        "item": {
          "id": "88d211bc-54d7-43c1-a03f-9e11ac3aafb2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0d50ed74-ca3a-4fc6-8a53-3d4782010367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d4d94a-960a-488c-8ae0-9cc2a11bd618",
        "cursor": {
          "ref": "f90d04ec-8d83-43f7-b0d5-9ab699ccaa4c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05cc8016-c4f1-48db-b1a0-69348979bf80"
        },
        "item": {
          "id": "c0d4d94a-960a-488c-8ae0-9cc2a11bd618",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b86974a3-657e-418e-b00c-724a988748d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e57e0d-786b-423e-8bbf-03a93f5cc053",
        "cursor": {
          "ref": "a345283a-1e7e-402b-be00-113edb482a6b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "10dfb89e-7ea6-43d0-a157-22b439dcd3dc"
        },
        "item": {
          "id": "a1e57e0d-786b-423e-8bbf-03a93f5cc053",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d59df62b-6322-44b6-ad27-83156606c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376ee69-51bf-4602-8539-8c285f09b786",
        "cursor": {
          "ref": "b6a58fdc-9508-4a49-ab55-f7e627b6d88a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "191701ab-2a0b-491f-b21d-92ef4775e96d"
        },
        "item": {
          "id": "e376ee69-51bf-4602-8539-8c285f09b786",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "24e71fa1-8591-4f7b-aedc-f143386b1b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c572eb-9a6c-463f-8c7f-fad40afcd443",
        "cursor": {
          "ref": "8d372427-7d7b-48c3-85d2-ced677ec2adb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5690720e-e961-47ab-963a-44b2cd76d1b3"
        },
        "item": {
          "id": "03c572eb-9a6c-463f-8c7f-fad40afcd443",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d0d22464-b43a-4033-b6d9-ce1227e0766a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b95430-16bf-4e99-9f35-d32cc18c223a",
        "cursor": {
          "ref": "df843917-67fc-43ec-ac44-81e33376fbc3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ae0d387b-3d86-4eda-a783-56833d4e8391"
        },
        "item": {
          "id": "97b95430-16bf-4e99-9f35-d32cc18c223a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fbc2e46c-79fc-4d8c-8074-f2303c1764bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42247a24-d9ee-41b7-9898-93b2a219c50a",
        "cursor": {
          "ref": "a8659d69-1337-4689-9573-6c308391cb4c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0915cc2d-95ab-4f5a-9ba2-f6ef901bca64"
        },
        "item": {
          "id": "42247a24-d9ee-41b7-9898-93b2a219c50a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d68b863b-c9c4-4891-bce5-3a8a40b5a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d902834f-4d62-4f63-9aa4-8c911060bf7a",
        "cursor": {
          "ref": "afee5b33-58e9-4e5f-b689-743b0324cc7d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e411c943-472c-4f4e-9bef-652826946cc6"
        },
        "item": {
          "id": "d902834f-4d62-4f63-9aa4-8c911060bf7a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3792b885-933d-45c2-819b-1322d7053d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4582805c-417d-4272-ab38-0286ed4478ba",
        "cursor": {
          "ref": "80ba47d0-1672-4119-b6a6-2535851f5a6c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f95ef097-0c4e-4ae3-a4fc-0532bc9f3f1f"
        },
        "item": {
          "id": "4582805c-417d-4272-ab38-0286ed4478ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "27d7a5c8-3de2-4367-b824-9888332012cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb21fc4a-78f9-400f-9049-1ebea4ebc1e4",
        "cursor": {
          "ref": "9854f34d-5bea-4d63-9530-cd15dbf3f70f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "09143605-2de7-49d2-a895-80c2675de7f3"
        },
        "item": {
          "id": "bb21fc4a-78f9-400f-9049-1ebea4ebc1e4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2571c134-deae-4e49-ad12-af81ab5558c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd2a381-3d79-4d0e-b481-f75c67ad4a3c",
        "cursor": {
          "ref": "b25c739e-2150-4ace-b914-fca3b110a7ec",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a87cc9fa-693c-44d7-8ab3-fd2824ff7470"
        },
        "item": {
          "id": "9cd2a381-3d79-4d0e-b481-f75c67ad4a3c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b5501264-b055-4682-90ca-cfa56b692260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39880ac9-e62a-4061-ba08-22371da7f351",
        "cursor": {
          "ref": "533712d6-d6b4-463a-9624-ee37d532fc68",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98b6360e-0c53-4349-86fb-04aba35f6eff"
        },
        "item": {
          "id": "39880ac9-e62a-4061-ba08-22371da7f351",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83781a9d-a9f7-43fa-8e3a-2b0fe57f0d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3db0f-e48c-4054-b5ea-eee70e048aa1",
        "cursor": {
          "ref": "7fd351e6-6b90-46bc-8e6a-f71b68c7c2d3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5fe6724e-9dc9-4515-b19f-4cf1361e4fac"
        },
        "item": {
          "id": "7ef3db0f-e48c-4054-b5ea-eee70e048aa1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "23db51a0-c5e1-4156-bec9-dc26f426068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3151e3f3-84e6-403e-9bf1-660c915cd869",
        "cursor": {
          "ref": "b2081ff3-b307-40be-99f9-8365717523c8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "55f1ad56-d6ed-4f6c-a812-048622e0edf9"
        },
        "item": {
          "id": "3151e3f3-84e6-403e-9bf1-660c915cd869",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d0d97b80-59d9-44a6-8c8a-37ed46334e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ce9a65-2ee2-4cbd-9c4c-bee577e43cb3",
        "cursor": {
          "ref": "ebbfdcd4-70f0-44e4-adcb-2b242ec87b33",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4188b739-dcea-48ae-b557-0e14eda11566"
        },
        "item": {
          "id": "d8ce9a65-2ee2-4cbd-9c4c-bee577e43cb3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa362a04-58f6-4601-b164-ffb86e781182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8fa350-03ff-490a-9a40-07a55f89c05c",
        "cursor": {
          "ref": "13e532db-9010-4f1a-9f14-67ea82212111",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e3b95cd5-938b-43ca-89ad-bdd1b25c3161"
        },
        "item": {
          "id": "2d8fa350-03ff-490a-9a40-07a55f89c05c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab033ec8-6544-4433-8f6a-92b51e7a6e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb446f26-f577-48cf-a146-5c8a69f2e69d",
        "cursor": {
          "ref": "d3602313-ebc3-48a5-9251-94b3a9a69c16",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "441ab9f6-a087-4cbf-bf42-746327056bca"
        },
        "item": {
          "id": "fb446f26-f577-48cf-a146-5c8a69f2e69d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "82a3996e-f145-453c-8909-a80e6941a2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01cb0b7-90bb-4ed1-b9c8-03ad0a2ff54e",
        "cursor": {
          "ref": "699ccc30-f696-4de0-9f76-840f67866b58",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9b826848-b77c-49be-9e83-1e88d03af365"
        },
        "item": {
          "id": "d01cb0b7-90bb-4ed1-b9c8-03ad0a2ff54e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "db784a7f-f619-4a37-b54f-d976926f1af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b694a8f-6a3c-4a3a-9a8f-65fecb37567c",
        "cursor": {
          "ref": "417c6a08-7403-4b5a-99f8-ae828e069f34",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b5921e37-de63-4cce-bedd-248163377fc1"
        },
        "item": {
          "id": "3b694a8f-6a3c-4a3a-9a8f-65fecb37567c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "759239c2-1cce-4757-b385-2945abf6545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae287e7-e6db-4cd9-8e80-d456173b24c4",
        "cursor": {
          "ref": "dc518ca5-67e9-47a3-809f-0874d3ddb055",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "05aa6bab-370b-4540-b330-a9325be72176"
        },
        "item": {
          "id": "aae287e7-e6db-4cd9-8e80-d456173b24c4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cabd2146-5246-48cf-a6c4-e45f172149d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b031e453-ac57-4d86-bede-7cb69b5b585c",
        "cursor": {
          "ref": "aac0d624-e30b-40b3-a0a7-504978b08649",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "31b71b40-3f7e-4b70-afbe-64dc2382c605"
        },
        "item": {
          "id": "b031e453-ac57-4d86-bede-7cb69b5b585c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b011dbe4-cbcd-4216-8237-732a0a6fac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81859e3-4c91-430c-8def-abae7e6dd88c",
        "cursor": {
          "ref": "1b5cff7d-2b32-4d1f-b32b-19ed99ff7aeb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1f0ea04b-aaa3-42f1-950f-13e80798ad3c"
        },
        "item": {
          "id": "d81859e3-4c91-430c-8def-abae7e6dd88c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9adb8952-81c4-4ce5-b785-2fb3788005f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c69b8d-58e8-4913-95b3-f5b687ccc56e",
        "cursor": {
          "ref": "08208181-5eb1-41e8-859b-b7776491c744",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "60c129cd-2677-42b2-a405-174cf9908f72"
        },
        "item": {
          "id": "75c69b8d-58e8-4913-95b3-f5b687ccc56e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5ba003f-1810-464f-bef8-24876d34edf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fab765-8764-4302-983b-dcfd924ecda9",
        "cursor": {
          "ref": "702c5d40-75b0-40c0-8666-3d58a6bb3571",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7091de25-3c8f-4d0e-8f34-49e0412d8112"
        },
        "item": {
          "id": "98fab765-8764-4302-983b-dcfd924ecda9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8259bc4-7943-47e7-987c-569ebe09a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dfc311-d7ee-4738-882f-51ae1a6ce3b1",
        "cursor": {
          "ref": "2df391a8-440d-4bbd-9bab-130fd38888b5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "262fb893-effa-48cd-aa3d-b4d1ef896d26"
        },
        "item": {
          "id": "d0dfc311-d7ee-4738-882f-51ae1a6ce3b1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22668389-35b2-4348-96b2-fb62257e4d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784e51c-986b-45b6-a2ec-32983007294a",
        "cursor": {
          "ref": "b608c626-8f70-41d6-8731-09c1795bd45f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f3d6832-08dc-4b5e-85f7-1a18899f2894"
        },
        "item": {
          "id": "b784e51c-986b-45b6-a2ec-32983007294a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "15ac1788-b16e-45fb-9229-442fff7bf06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e9051-45c3-4ceb-904e-b62e786802c6",
        "cursor": {
          "ref": "4ce9ae01-f61e-48ae-8be4-8376b3cb482a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cd619714-207f-4f31-ae99-7bcfcc3ca661"
        },
        "item": {
          "id": "da6e9051-45c3-4ceb-904e-b62e786802c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1296772e-307f-4759-9d83-ba8b57938636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864c2a53-eafc-4430-89c7-2819f7924ba0",
        "cursor": {
          "ref": "72f3f98d-d81c-454b-9b2d-ae7266f1f454",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e507fe0f-c71e-4a1d-9e8b-e8d0a344db80"
        },
        "item": {
          "id": "864c2a53-eafc-4430-89c7-2819f7924ba0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5448dd8-949e-4e63-b202-a9fd30bb5375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef297b9f-fdbc-446a-baa5-428c41e5bf5e",
        "cursor": {
          "ref": "6db6f893-a377-4eba-8415-fedce7c1ad3e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "82484783-809e-4b6c-aca6-7ac26cafe80f"
        },
        "item": {
          "id": "ef297b9f-fdbc-446a-baa5-428c41e5bf5e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "098db6ef-bec7-4706-969c-97e019fbe4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0395a-02d3-4db8-bce4-799240eddd0e",
        "cursor": {
          "ref": "3ebd0c3e-26a8-470a-b5cd-75ebdd766c34",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e61d4ee7-1f36-49ae-be2c-b8e9119c8e3e"
        },
        "item": {
          "id": "efa0395a-02d3-4db8-bce4-799240eddd0e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e08b2cf7-1e6f-416e-84b9-d9f4c85f3440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b656faad-469f-4824-ad38-73a7154da20c",
        "cursor": {
          "ref": "a0fcf928-0afb-4ce8-a43a-939ab6229bdf",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e4ed1a3b-1ec7-4e73-92e1-f847a303fd47"
        },
        "item": {
          "id": "b656faad-469f-4824-ad38-73a7154da20c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4eacd7dc-decc-47b2-9740-d481bc8be5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45136b5-5979-4682-8216-121826d0259d",
        "cursor": {
          "ref": "f6129044-e3a7-47a9-b6ce-c7ce85bb1f4c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "df4b1c84-e515-4685-9803-b3b5742b563e"
        },
        "item": {
          "id": "e45136b5-5979-4682-8216-121826d0259d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fe9c0397-3ef2-4fd6-892e-5ac6d11e49c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d3ac10-7af1-475c-95e7-ae6f80a9611c",
        "cursor": {
          "ref": "3d0b5066-8677-445b-890d-29eec1fdfdd6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "53c88085-b827-4e35-9d1c-0d8724cab74e"
        },
        "item": {
          "id": "d0d3ac10-7af1-475c-95e7-ae6f80a9611c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52b97e02-020a-422b-8488-23f9949f5e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f18802f-96f8-4940-b672-668ae68a6fb8",
        "cursor": {
          "ref": "6a1dd470-cb63-45c6-87d9-18c2276da241",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f197fc00-b777-4077-bc84-d8817f06e78d"
        },
        "item": {
          "id": "9f18802f-96f8-4940-b672-668ae68a6fb8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3dc0dada-13f5-420e-9449-e3ad63020b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92883118-cf00-4e4c-84c2-04822f063c21",
        "cursor": {
          "ref": "cfd5376c-0bf1-4ec6-90cb-40d289c84be6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6078f0b6-7beb-490e-88be-c3550af84c4f"
        },
        "item": {
          "id": "92883118-cf00-4e4c-84c2-04822f063c21",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "26ce6c9f-91bb-47a5-b563-42188b67261b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52146d-d6e3-4bea-ab30-836e012b1367",
        "cursor": {
          "ref": "9707a14e-a665-41ee-9c7c-5d0c50676558",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a5c70057-a2b8-4942-829c-51a552669dfe"
        },
        "item": {
          "id": "1e52146d-d6e3-4bea-ab30-836e012b1367",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b394e67e-359e-41c0-b2aa-e0c00cd0c44a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15028350-4236-4fcc-9e0e-5b49f60233e4",
        "cursor": {
          "ref": "879a6da9-a8e8-444f-81d0-c97320d60c46",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ccb9454-9992-476e-a82f-93503efa7a0c"
        },
        "item": {
          "id": "15028350-4236-4fcc-9e0e-5b49f60233e4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0e4f7896-928a-4ad7-b07e-55d4b13b62cc",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c931efd-f244-40b6-9860-fc330ca8b0ef",
        "cursor": {
          "ref": "35b3dabe-a052-4ffd-b958-90ac4bfa9f10",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "31c8f546-401f-4cad-a640-8ff5305a06ab"
        },
        "item": {
          "id": "2c931efd-f244-40b6-9860-fc330ca8b0ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "42fbc2be-0032-4cd7-871b-e8e4b5d74776",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa48b94-455a-4911-b925-c5f9d773b55a",
        "cursor": {
          "ref": "c62d2558-340c-4559-89c1-64463d99fbb1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2c8d6fac-86d6-4201-b247-3b172e94b6b2"
        },
        "item": {
          "id": "2aa48b94-455a-4911-b925-c5f9d773b55a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4130f95d-0a69-4cc3-94a5-8f7f1da45a37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa48b94-455a-4911-b925-c5f9d773b55a",
        "cursor": {
          "ref": "c62d2558-340c-4559-89c1-64463d99fbb1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2c8d6fac-86d6-4201-b247-3b172e94b6b2"
        },
        "item": {
          "id": "2aa48b94-455a-4911-b925-c5f9d773b55a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4130f95d-0a69-4cc3-94a5-8f7f1da45a37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c65727-f1db-4e94-9288-15811aeb9c73",
        "cursor": {
          "ref": "fdf454c7-f30e-49a1-91a2-8ec905ea161c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ede1fe3a-d571-4072-a18f-7e82eb928e2b"
        },
        "item": {
          "id": "06c65727-f1db-4e94-9288-15811aeb9c73",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2c9d9b3d-45e5-4aa8-bbe1-356608ccd8b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee89de2-9ee7-43ef-b751-df6bb46cf0e2",
        "cursor": {
          "ref": "16efcaf4-3c3b-401a-9588-22ee9252838f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "efad30c4-0b64-4f5a-aed2-e1577eb9c3fe"
        },
        "item": {
          "id": "fee89de2-9ee7-43ef-b751-df6bb46cf0e2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca2bb82d-6e54-4a6c-96c3-12aa56b766e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}